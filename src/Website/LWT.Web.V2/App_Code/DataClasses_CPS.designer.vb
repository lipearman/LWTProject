'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CPS")>  _
Partial Public Class DataClasses_CPSDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertRegister_Unwriter(instance As Register_Unwriter)
    End Sub
  Partial Private Sub UpdateRegister_Unwriter(instance As Register_Unwriter)
    End Sub
  Partial Private Sub DeleteRegister_Unwriter(instance As Register_Unwriter)
    End Sub
  Partial Private Sub InsertRegister_AccountExecutive(instance As Register_AccountExecutive)
    End Sub
  Partial Private Sub UpdateRegister_AccountExecutive(instance As Register_AccountExecutive)
    End Sub
  Partial Private Sub DeleteRegister_AccountExecutive(instance As Register_AccountExecutive)
    End Sub
  Partial Private Sub InsertRegister_Agent(instance As Register_Agent)
    End Sub
  Partial Private Sub UpdateRegister_Agent(instance As Register_Agent)
    End Sub
  Partial Private Sub DeleteRegister_Agent(instance As Register_Agent)
    End Sub
  Partial Private Sub InsertRegister_AgentRiskComm(instance As Register_AgentRiskComm)
    End Sub
  Partial Private Sub UpdateRegister_AgentRiskComm(instance As Register_AgentRiskComm)
    End Sub
  Partial Private Sub DeleteRegister_AgentRiskComm(instance As Register_AgentRiskComm)
    End Sub
  Partial Private Sub InsertRegister_ClassOfRisk(instance As Register_ClassOfRisk)
    End Sub
  Partial Private Sub UpdateRegister_ClassOfRisk(instance As Register_ClassOfRisk)
    End Sub
  Partial Private Sub DeleteRegister_ClassOfRisk(instance As Register_ClassOfRisk)
    End Sub
  Partial Private Sub InsertRegister_RiskUwriter(instance As Register_RiskUwriter)
    End Sub
  Partial Private Sub UpdateRegister_RiskUwriter(instance As Register_RiskUwriter)
    End Sub
  Partial Private Sub DeleteRegister_RiskUwriter(instance As Register_RiskUwriter)
    End Sub
  Partial Private Sub InserttblCampaign(instance As tblCampaign)
    End Sub
  Partial Private Sub UpdatetblCampaign(instance As tblCampaign)
    End Sub
  Partial Private Sub DeletetblCampaign(instance As tblCampaign)
    End Sub
  Partial Private Sub InserttblCarBrandModel(instance As tblCarBrandModel)
    End Sub
  Partial Private Sub UpdatetblCarBrandModel(instance As tblCarBrandModel)
    End Sub
  Partial Private Sub DeletetblCarBrandModel(instance As tblCarBrandModel)
    End Sub
  Partial Private Sub InserttblCarPremium(instance As tblCarPremium)
    End Sub
  Partial Private Sub UpdatetblCarPremium(instance As tblCarPremium)
    End Sub
  Partial Private Sub DeletetblCarPremium(instance As tblCarPremium)
    End Sub
  Partial Private Sub InserttblClassOfRisk(instance As tblClassOfRisk)
    End Sub
  Partial Private Sub UpdatetblClassOfRisk(instance As tblClassOfRisk)
    End Sub
  Partial Private Sub DeletetblClassOfRisk(instance As tblClassOfRisk)
    End Sub
  Partial Private Sub InserttblCoverage(instance As tblCoverage)
    End Sub
  Partial Private Sub UpdatetblCoverage(instance As tblCoverage)
    End Sub
  Partial Private Sub DeletetblCoverage(instance As tblCoverage)
    End Sub
  Partial Private Sub InserttblDiscussionGroup(instance As tblDiscussionGroup)
    End Sub
  Partial Private Sub UpdatetblDiscussionGroup(instance As tblDiscussionGroup)
    End Sub
  Partial Private Sub DeletetblDiscussionGroup(instance As tblDiscussionGroup)
    End Sub
  Partial Private Sub InserttblDiscussionTran(instance As tblDiscussionTran)
    End Sub
  Partial Private Sub UpdatetblDiscussionTran(instance As tblDiscussionTran)
    End Sub
  Partial Private Sub DeletetblDiscussionTran(instance As tblDiscussionTran)
    End Sub
  Partial Private Sub InserttblLeasing(instance As tblLeasing)
    End Sub
  Partial Private Sub UpdatetblLeasing(instance As tblLeasing)
    End Sub
  Partial Private Sub DeletetblLeasing(instance As tblLeasing)
    End Sub
  Partial Private Sub InserttblProject(instance As tblProject)
    End Sub
  Partial Private Sub UpdatetblProject(instance As tblProject)
    End Sub
  Partial Private Sub DeletetblProject(instance As tblProject)
    End Sub
  Partial Private Sub InserttblProjectCampaign(instance As tblProjectCampaign)
    End Sub
  Partial Private Sub UpdatetblProjectCampaign(instance As tblProjectCampaign)
    End Sub
  Partial Private Sub DeletetblProjectCampaign(instance As tblProjectCampaign)
    End Sub
  Partial Private Sub InserttblProjectRisk(instance As tblProjectRisk)
    End Sub
  Partial Private Sub UpdatetblProjectRisk(instance As tblProjectRisk)
    End Sub
  Partial Private Sub DeletetblProjectRisk(instance As tblProjectRisk)
    End Sub
  Partial Private Sub InserttblProjectUserAssignment(instance As tblProjectUserAssignment)
    End Sub
  Partial Private Sub UpdatetblProjectUserAssignment(instance As tblProjectUserAssignment)
    End Sub
  Partial Private Sub DeletetblProjectUserAssignment(instance As tblProjectUserAssignment)
    End Sub
  Partial Private Sub InserttblRiskGroup(instance As tblRiskGroup)
    End Sub
  Partial Private Sub UpdatetblRiskGroup(instance As tblRiskGroup)
    End Sub
  Partial Private Sub DeletetblRiskGroup(instance As tblRiskGroup)
    End Sub
  Partial Private Sub InserttblMotorQuotation(instance As tblMotorQuotation)
    End Sub
  Partial Private Sub UpdatetblMotorQuotation(instance As tblMotorQuotation)
    End Sub
  Partial Private Sub DeletetblMotorQuotation(instance As tblMotorQuotation)
    End Sub
  Partial Private Sub InserttblMotorQuotationDetail(instance As tblMotorQuotationDetail)
    End Sub
  Partial Private Sub UpdatetblMotorQuotationDetail(instance As tblMotorQuotationDetail)
    End Sub
  Partial Private Sub DeletetblMotorQuotationDetail(instance As tblMotorQuotationDetail)
    End Sub
  Partial Private Sub InserttblMotorQuotationRemark(instance As tblMotorQuotationRemark)
    End Sub
  Partial Private Sub UpdatetblMotorQuotationRemark(instance As tblMotorQuotationRemark)
    End Sub
  Partial Private Sub DeletetblMotorQuotationRemark(instance As tblMotorQuotationRemark)
    End Sub
  Partial Private Sub InserttblCampaign_CommIn(instance As tblCampaign_CommIn)
    End Sub
  Partial Private Sub UpdatetblCampaign_CommIn(instance As tblCampaign_CommIn)
    End Sub
  Partial Private Sub DeletetblCampaign_CommIn(instance As tblCampaign_CommIn)
    End Sub
  Partial Private Sub InserttblCampaign_CommOut(instance As tblCampaign_CommOut)
    End Sub
  Partial Private Sub UpdatetblCampaign_CommOut(instance As tblCampaign_CommOut)
    End Sub
  Partial Private Sub DeletetblCampaign_CommOut(instance As tblCampaign_CommOut)
    End Sub
  Partial Private Sub InserttblCampaign_CommInLog(instance As tblCampaign_CommInLog)
    End Sub
  Partial Private Sub UpdatetblCampaign_CommInLog(instance As tblCampaign_CommInLog)
    End Sub
  Partial Private Sub DeletetblCampaign_CommInLog(instance As tblCampaign_CommInLog)
    End Sub
  Partial Private Sub InserttblCampaign_CommOutLog(instance As tblCampaign_CommOutLog)
    End Sub
  Partial Private Sub UpdatetblCampaign_CommOutLog(instance As tblCampaign_CommOutLog)
    End Sub
  Partial Private Sub DeletetblCampaign_CommOutLog(instance As tblCampaign_CommOutLog)
    End Sub
  Partial Private Sub InsertV_MotorQuotation(instance As V_MotorQuotation)
    End Sub
  Partial Private Sub UpdateV_MotorQuotation(instance As V_MotorQuotation)
    End Sub
  Partial Private Sub DeleteV_MotorQuotation(instance As V_MotorQuotation)
    End Sub
  Partial Private Sub InsertRegister_AgentRiskComm_Amend(instance As Register_AgentRiskComm_Amend)
    End Sub
  Partial Private Sub UpdateRegister_AgentRiskComm_Amend(instance As Register_AgentRiskComm_Amend)
    End Sub
  Partial Private Sub DeleteRegister_AgentRiskComm_Amend(instance As Register_AgentRiskComm_Amend)
    End Sub
  Partial Private Sub InsertRegister_ClassOfRisk_Amend(instance As Register_ClassOfRisk_Amend)
    End Sub
  Partial Private Sub UpdateRegister_ClassOfRisk_Amend(instance As Register_ClassOfRisk_Amend)
    End Sub
  Partial Private Sub DeleteRegister_ClassOfRisk_Amend(instance As Register_ClassOfRisk_Amend)
    End Sub
  Partial Private Sub InsertRegister_RiskUwriter_Amend(instance As Register_RiskUwriter_Amend)
    End Sub
  Partial Private Sub UpdateRegister_RiskUwriter_Amend(instance As Register_RiskUwriter_Amend)
    End Sub
  Partial Private Sub DeleteRegister_RiskUwriter_Amend(instance As Register_RiskUwriter_Amend)
    End Sub
  Partial Private Sub InsertRegister_AgentRiskComm_Log(instance As Register_AgentRiskComm_Log)
    End Sub
  Partial Private Sub UpdateRegister_AgentRiskComm_Log(instance As Register_AgentRiskComm_Log)
    End Sub
  Partial Private Sub DeleteRegister_AgentRiskComm_Log(instance As Register_AgentRiskComm_Log)
    End Sub
  Partial Private Sub InsertRegister_ClassOfRisk_Log(instance As Register_ClassOfRisk_Log)
    End Sub
  Partial Private Sub UpdateRegister_ClassOfRisk_Log(instance As Register_ClassOfRisk_Log)
    End Sub
  Partial Private Sub DeleteRegister_ClassOfRisk_Log(instance As Register_ClassOfRisk_Log)
    End Sub
  Partial Private Sub InsertRegister_RiskUwriter_Log(instance As Register_RiskUwriter_Log)
    End Sub
  Partial Private Sub UpdateRegister_RiskUwriter_Log(instance As Register_RiskUwriter_Log)
    End Sub
  Partial Private Sub DeleteRegister_RiskUwriter_Log(instance As Register_RiskUwriter_Log)
    End Sub
  Partial Private Sub InserttblNoticeDetail(instance As tblNoticeDetail)
    End Sub
  Partial Private Sub UpdatetblNoticeDetail(instance As tblNoticeDetail)
    End Sub
  Partial Private Sub DeletetblNoticeDetail(instance As tblNoticeDetail)
    End Sub
  Partial Private Sub InserttblNoticeHeader(instance As tblNoticeHeader)
    End Sub
  Partial Private Sub UpdatetblNoticeHeader(instance As tblNoticeHeader)
    End Sub
  Partial Private Sub DeletetblNoticeHeader(instance As tblNoticeHeader)
    End Sub
  Partial Private Sub InserttblNoticeMailContact(instance As tblNoticeMailContact)
    End Sub
  Partial Private Sub UpdatetblNoticeMailContact(instance As tblNoticeMailContact)
    End Sub
  Partial Private Sub DeletetblNoticeMailContact(instance As tblNoticeMailContact)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("CPSConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Register_Unwriters() As System.Data.Linq.Table(Of Register_Unwriter)
		Get
			Return Me.GetTable(Of Register_Unwriter)
		End Get
	End Property
	
	Public ReadOnly Property Register_AccountExecutives() As System.Data.Linq.Table(Of Register_AccountExecutive)
		Get
			Return Me.GetTable(Of Register_AccountExecutive)
		End Get
	End Property
	
	Public ReadOnly Property Register_Agents() As System.Data.Linq.Table(Of Register_Agent)
		Get
			Return Me.GetTable(Of Register_Agent)
		End Get
	End Property
	
	Public ReadOnly Property Register_AgentRiskComms() As System.Data.Linq.Table(Of Register_AgentRiskComm)
		Get
			Return Me.GetTable(Of Register_AgentRiskComm)
		End Get
	End Property
	
	Public ReadOnly Property Register_ClassOfRisks() As System.Data.Linq.Table(Of Register_ClassOfRisk)
		Get
			Return Me.GetTable(Of Register_ClassOfRisk)
		End Get
	End Property
	
	Public ReadOnly Property Register_RiskUwriters() As System.Data.Linq.Table(Of Register_RiskUwriter)
		Get
			Return Me.GetTable(Of Register_RiskUwriter)
		End Get
	End Property
	
	Public ReadOnly Property tblCampaigns() As System.Data.Linq.Table(Of tblCampaign)
		Get
			Return Me.GetTable(Of tblCampaign)
		End Get
	End Property
	
	Public ReadOnly Property tblCarBrandModels() As System.Data.Linq.Table(Of tblCarBrandModel)
		Get
			Return Me.GetTable(Of tblCarBrandModel)
		End Get
	End Property
	
	Public ReadOnly Property tblCarPremiums() As System.Data.Linq.Table(Of tblCarPremium)
		Get
			Return Me.GetTable(Of tblCarPremium)
		End Get
	End Property
	
	Public ReadOnly Property tblCarProps() As System.Data.Linq.Table(Of tblCarProp)
		Get
			Return Me.GetTable(Of tblCarProp)
		End Get
	End Property
	
	Public ReadOnly Property tblCarTypes() As System.Data.Linq.Table(Of tblCarType)
		Get
			Return Me.GetTable(Of tblCarType)
		End Get
	End Property
	
	Public ReadOnly Property tblCarUses() As System.Data.Linq.Table(Of tblCarUse)
		Get
			Return Me.GetTable(Of tblCarUse)
		End Get
	End Property
	
	Public ReadOnly Property tblClassOfRisks() As System.Data.Linq.Table(Of tblClassOfRisk)
		Get
			Return Me.GetTable(Of tblClassOfRisk)
		End Get
	End Property
	
	Public ReadOnly Property tblCMIPremiums() As System.Data.Linq.Table(Of tblCMIPremium)
		Get
			Return Me.GetTable(Of tblCMIPremium)
		End Get
	End Property
	
	Public ReadOnly Property tblCoverages() As System.Data.Linq.Table(Of tblCoverage)
		Get
			Return Me.GetTable(Of tblCoverage)
		End Get
	End Property
	
	Public ReadOnly Property tblCoverListMasters() As System.Data.Linq.Table(Of tblCoverListMaster)
		Get
			Return Me.GetTable(Of tblCoverListMaster)
		End Get
	End Property
	
	Public ReadOnly Property tblDiscussionGroups() As System.Data.Linq.Table(Of tblDiscussionGroup)
		Get
			Return Me.GetTable(Of tblDiscussionGroup)
		End Get
	End Property
	
	Public ReadOnly Property tblDiscussionTrans() As System.Data.Linq.Table(Of tblDiscussionTran)
		Get
			Return Me.GetTable(Of tblDiscussionTran)
		End Get
	End Property
	
	Public ReadOnly Property tblGarageTypes() As System.Data.Linq.Table(Of tblGarageType)
		Get
			Return Me.GetTable(Of tblGarageType)
		End Get
	End Property
	
	Public ReadOnly Property tblLeasings() As System.Data.Linq.Table(Of tblLeasing)
		Get
			Return Me.GetTable(Of tblLeasing)
		End Get
	End Property
	
	Public ReadOnly Property tblProjects() As System.Data.Linq.Table(Of tblProject)
		Get
			Return Me.GetTable(Of tblProject)
		End Get
	End Property
	
	Public ReadOnly Property tblProjectCampaigns() As System.Data.Linq.Table(Of tblProjectCampaign)
		Get
			Return Me.GetTable(Of tblProjectCampaign)
		End Get
	End Property
	
	Public ReadOnly Property tblProjectRisks() As System.Data.Linq.Table(Of tblProjectRisk)
		Get
			Return Me.GetTable(Of tblProjectRisk)
		End Get
	End Property
	
	Public ReadOnly Property tblProjectUserAssignments() As System.Data.Linq.Table(Of tblProjectUserAssignment)
		Get
			Return Me.GetTable(Of tblProjectUserAssignment)
		End Get
	End Property
	
	Public ReadOnly Property tblRiskGroups() As System.Data.Linq.Table(Of tblRiskGroup)
		Get
			Return Me.GetTable(Of tblRiskGroup)
		End Get
	End Property
	
	Public ReadOnly Property V_ClassOfRisk_Approveds() As System.Data.Linq.Table(Of V_ClassOfRisk_Approved)
		Get
			Return Me.GetTable(Of V_ClassOfRisk_Approved)
		End Get
	End Property
	
	Public ReadOnly Property V_ClassOfRisk_Publishes() As System.Data.Linq.Table(Of V_ClassOfRisk_Publish)
		Get
			Return Me.GetTable(Of V_ClassOfRisk_Publish)
		End Get
	End Property
	
	Public ReadOnly Property V_ClassOfRisk_Requests() As System.Data.Linq.Table(Of V_ClassOfRisk_Request)
		Get
			Return Me.GetTable(Of V_ClassOfRisk_Request)
		End Get
	End Property
	
	Public ReadOnly Property V_Register_Unwriters() As System.Data.Linq.Table(Of V_Register_Unwriter)
		Get
			Return Me.GetTable(Of V_Register_Unwriter)
		End Get
	End Property
	
	Public ReadOnly Property tblMotorQuotations() As System.Data.Linq.Table(Of tblMotorQuotation)
		Get
			Return Me.GetTable(Of tblMotorQuotation)
		End Get
	End Property
	
	Public ReadOnly Property tblMotorQuotationDetails() As System.Data.Linq.Table(Of tblMotorQuotationDetail)
		Get
			Return Me.GetTable(Of tblMotorQuotationDetail)
		End Get
	End Property
	
	Public ReadOnly Property V_UserProjects() As System.Data.Linq.Table(Of V_UserProject)
		Get
			Return Me.GetTable(Of V_UserProject)
		End Get
	End Property
	
	Public ReadOnly Property tblMotorQuotationRemarks() As System.Data.Linq.Table(Of tblMotorQuotationRemark)
		Get
			Return Me.GetTable(Of tblMotorQuotationRemark)
		End Get
	End Property
	
	Public ReadOnly Property V_MotorCampaignPublishes() As System.Data.Linq.Table(Of V_MotorCampaignPublish)
		Get
			Return Me.GetTable(Of V_MotorCampaignPublish)
		End Get
	End Property
	
	Public ReadOnly Property V_InsuredCodes() As System.Data.Linq.Table(Of V_InsuredCode)
		Get
			Return Me.GetTable(Of V_InsuredCode)
		End Get
	End Property
	
	Public ReadOnly Property V_ClassOfRisks() As System.Data.Linq.Table(Of V_ClassOfRisk)
		Get
			Return Me.GetTable(Of V_ClassOfRisk)
		End Get
	End Property
	
	Public ReadOnly Property V_RiskUwriters() As System.Data.Linq.Table(Of V_RiskUwriter)
		Get
			Return Me.GetTable(Of V_RiskUwriter)
		End Get
	End Property
	
	Public ReadOnly Property tblCampaign_CommIns() As System.Data.Linq.Table(Of tblCampaign_CommIn)
		Get
			Return Me.GetTable(Of tblCampaign_CommIn)
		End Get
	End Property
	
	Public ReadOnly Property tblCampaign_CommOuts() As System.Data.Linq.Table(Of tblCampaign_CommOut)
		Get
			Return Me.GetTable(Of tblCampaign_CommOut)
		End Get
	End Property
	
	Public ReadOnly Property V_ClassOfRisk_NonPublishes() As System.Data.Linq.Table(Of V_ClassOfRisk_NonPublish)
		Get
			Return Me.GetTable(Of V_ClassOfRisk_NonPublish)
		End Get
	End Property
	
	Public ReadOnly Property V_CarBrandModels() As System.Data.Linq.Table(Of V_CarBrandModel)
		Get
			Return Me.GetTable(Of V_CarBrandModel)
		End Get
	End Property
	
	Public ReadOnly Property tblCampaign_CommInLogs() As System.Data.Linq.Table(Of tblCampaign_CommInLog)
		Get
			Return Me.GetTable(Of tblCampaign_CommInLog)
		End Get
	End Property
	
	Public ReadOnly Property tblCampaign_CommOutLogs() As System.Data.Linq.Table(Of tblCampaign_CommOutLog)
		Get
			Return Me.GetTable(Of tblCampaign_CommOutLog)
		End Get
	End Property
	
	Public ReadOnly Property V_Campaign_CommissionLogs() As System.Data.Linq.Table(Of V_Campaign_CommissionLog)
		Get
			Return Me.GetTable(Of V_Campaign_CommissionLog)
		End Get
	End Property
	
	Public ReadOnly Property V_MotorPremiums() As System.Data.Linq.Table(Of V_MotorPremium)
		Get
			Return Me.GetTable(Of V_MotorPremium)
		End Get
	End Property
	
	Public ReadOnly Property V_MotorQuotations() As System.Data.Linq.Table(Of V_MotorQuotation)
		Get
			Return Me.GetTable(Of V_MotorQuotation)
		End Get
	End Property
	
	Public ReadOnly Property Register_AgentRiskComm_Amends() As System.Data.Linq.Table(Of Register_AgentRiskComm_Amend)
		Get
			Return Me.GetTable(Of Register_AgentRiskComm_Amend)
		End Get
	End Property
	
	Public ReadOnly Property Register_ClassOfRisk_Amends() As System.Data.Linq.Table(Of Register_ClassOfRisk_Amend)
		Get
			Return Me.GetTable(Of Register_ClassOfRisk_Amend)
		End Get
	End Property
	
	Public ReadOnly Property Register_RiskUwriter_Amends() As System.Data.Linq.Table(Of Register_RiskUwriter_Amend)
		Get
			Return Me.GetTable(Of Register_RiskUwriter_Amend)
		End Get
	End Property
	
	Public ReadOnly Property V_AgentRiskComms() As System.Data.Linq.Table(Of V_AgentRiskComm)
		Get
			Return Me.GetTable(Of V_AgentRiskComm)
		End Get
	End Property
	
	Public ReadOnly Property V_RiskUwriter_Amends() As System.Data.Linq.Table(Of V_RiskUwriter_Amend)
		Get
			Return Me.GetTable(Of V_RiskUwriter_Amend)
		End Get
	End Property
	
	Public ReadOnly Property V_ClassOfRisk_Amends() As System.Data.Linq.Table(Of V_ClassOfRisk_Amend)
		Get
			Return Me.GetTable(Of V_ClassOfRisk_Amend)
		End Get
	End Property
	
	Public ReadOnly Property Register_AgentRiskComm_Logs() As System.Data.Linq.Table(Of Register_AgentRiskComm_Log)
		Get
			Return Me.GetTable(Of Register_AgentRiskComm_Log)
		End Get
	End Property
	
	Public ReadOnly Property Register_ClassOfRisk_Logs() As System.Data.Linq.Table(Of Register_ClassOfRisk_Log)
		Get
			Return Me.GetTable(Of Register_ClassOfRisk_Log)
		End Get
	End Property
	
	Public ReadOnly Property Register_RiskUwriter_Logs() As System.Data.Linq.Table(Of Register_RiskUwriter_Log)
		Get
			Return Me.GetTable(Of Register_RiskUwriter_Log)
		End Get
	End Property
	
	Public ReadOnly Property V_AgentRiskComm_Logs() As System.Data.Linq.Table(Of V_AgentRiskComm_Log)
		Get
			Return Me.GetTable(Of V_AgentRiskComm_Log)
		End Get
	End Property
	
	Public ReadOnly Property V_ClassOfRisk_Logs() As System.Data.Linq.Table(Of V_ClassOfRisk_Log)
		Get
			Return Me.GetTable(Of V_ClassOfRisk_Log)
		End Get
	End Property
	
	Public ReadOnly Property V_RiskUwriter_Logs() As System.Data.Linq.Table(Of V_RiskUwriter_Log)
		Get
			Return Me.GetTable(Of V_RiskUwriter_Log)
		End Get
	End Property
	
	Public ReadOnly Property V_AgentRiskComm_Amends() As System.Data.Linq.Table(Of V_AgentRiskComm_Amend)
		Get
			Return Me.GetTable(Of V_AgentRiskComm_Amend)
		End Get
	End Property
	
	Public ReadOnly Property tblNoticeDetails() As System.Data.Linq.Table(Of tblNoticeDetail)
		Get
			Return Me.GetTable(Of tblNoticeDetail)
		End Get
	End Property
	
	Public ReadOnly Property tblNoticeHeaders() As System.Data.Linq.Table(Of tblNoticeHeader)
		Get
			Return Me.GetTable(Of tblNoticeHeader)
		End Get
	End Property
	
	Public ReadOnly Property V_NoticeDetails() As System.Data.Linq.Table(Of V_NoticeDetail)
		Get
			Return Me.GetTable(Of V_NoticeDetail)
		End Get
	End Property
	
	Public ReadOnly Property V_Campaign_CommIns() As System.Data.Linq.Table(Of V_Campaign_CommIn)
		Get
			Return Me.GetTable(Of V_Campaign_CommIn)
		End Get
	End Property
	
	Public ReadOnly Property V_Campaign_CommOuts() As System.Data.Linq.Table(Of V_Campaign_CommOut)
		Get
			Return Me.GetTable(Of V_Campaign_CommOut)
		End Get
	End Property
	
	Public ReadOnly Property V_Campaign_Commissions() As System.Data.Linq.Table(Of V_Campaign_Commission)
		Get
			Return Me.GetTable(Of V_Campaign_Commission)
		End Get
	End Property
	
	Public ReadOnly Property V_BillingD500Notifications() As System.Data.Linq.Table(Of V_BillingD500Notification)
		Get
			Return Me.GetTable(Of V_BillingD500Notification)
		End Get
	End Property
	
	Public ReadOnly Property V_BillingNMTNotifications() As System.Data.Linq.Table(Of V_BillingNMTNotification)
		Get
			Return Me.GetTable(Of V_BillingNMTNotification)
		End Get
	End Property
	
	Public ReadOnly Property tblNoticeMailContacts() As System.Data.Linq.Table(Of tblNoticeMailContact)
		Get
			Return Me.GetTable(Of tblNoticeMailContact)
		End Get
	End Property
	
	Public ReadOnly Property V_WeeklyClaimDealerNotifications() As System.Data.Linq.Table(Of V_WeeklyClaimDealerNotification)
		Get
			Return Me.GetTable(Of V_WeeklyClaimDealerNotification)
		End Get
	End Property
	
	Public ReadOnly Property V_BillingDealerNotifications() As System.Data.Linq.Table(Of V_BillingDealerNotification)
		Get
			Return Me.GetTable(Of V_BillingDealerNotification)
		End Get
	End Property
	
	Public ReadOnly Property V_BillingCBCNotifications() As System.Data.Linq.Table(Of V_BillingCBCNotification)
		Get
			Return Me.GetTable(Of V_BillingCBCNotification)
		End Get
	End Property
	
	Public ReadOnly Property V_BillingCBCNotification2s() As System.Data.Linq.Table(Of V_BillingCBCNotification2)
		Get
			Return Me.GetTable(Of V_BillingCBCNotification2)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_CompareQuote")>  _
	Public Function SP_CompareQuote(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="QuotationNo", DbType:="VarChar(50)")> ByVal quotationNo As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), quotationNo)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.Unwriter]")>  _
Partial Public Class Register_Unwriter
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Underwriter As String
	
	Private _CrossReference As String
	
	Private _Name As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _PostCode As String
	
	Private _City As String
	
	Private _PhoneBusiness As String
	
	Private _PhoneHome As String
	
	Private _Facsimile As String
	
	Private _AccountContact As String
	
	Private _Addressee As String
	
	Private _Salutation As String
	
	Private _DaysCredit As System.Nullable(Of Short)
	
	Private _TrueUnderwriter As System.Nullable(Of Boolean)
	
	Private _EntryBy As String
	
	Private _EntryDate As System.Nullable(Of Date)
	
	Private _FinanceContact As String
	
	Private _GeneralClaimContact As String
	
	Private _Type As String
	
	Private _InsuranceLine As String
	
	Private _VATPayType As String
	
	Private _PhoneFinance As String
	
	Private _PhoneClaims As String
	
	Private _FaxFinance As String
	
	Private _FaxClaims As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _InsurerCode As String
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveBy As String
	
	Private _UserName As String
	
	Private _Password As String
	
	Private _Email As String
	
	Private _ShortName As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _Register_RiskUwriters As EntitySet(Of Register_RiskUwriter)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnUnderwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUnderwriterChanged()
    End Sub
    Partial Private Sub OnCrossReferenceChanging(value As String)
    End Sub
    Partial Private Sub OnCrossReferenceChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnAddress3Changed()
    End Sub
    Partial Private Sub OnPostCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostCodeChanged()
    End Sub
    Partial Private Sub OnCityChanging(value As String)
    End Sub
    Partial Private Sub OnCityChanged()
    End Sub
    Partial Private Sub OnPhoneBusinessChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneBusinessChanged()
    End Sub
    Partial Private Sub OnPhoneHomeChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneHomeChanged()
    End Sub
    Partial Private Sub OnFacsimileChanging(value As String)
    End Sub
    Partial Private Sub OnFacsimileChanged()
    End Sub
    Partial Private Sub OnAccountContactChanging(value As String)
    End Sub
    Partial Private Sub OnAccountContactChanged()
    End Sub
    Partial Private Sub OnAddresseeChanging(value As String)
    End Sub
    Partial Private Sub OnAddresseeChanged()
    End Sub
    Partial Private Sub OnSalutationChanging(value As String)
    End Sub
    Partial Private Sub OnSalutationChanged()
    End Sub
    Partial Private Sub OnDaysCreditChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDaysCreditChanged()
    End Sub
    Partial Private Sub OnTrueUnderwriterChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTrueUnderwriterChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnFinanceContactChanging(value As String)
    End Sub
    Partial Private Sub OnFinanceContactChanged()
    End Sub
    Partial Private Sub OnGeneralClaimContactChanging(value As String)
    End Sub
    Partial Private Sub OnGeneralClaimContactChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnInsuranceLineChanging(value As String)
    End Sub
    Partial Private Sub OnInsuranceLineChanged()
    End Sub
    Partial Private Sub OnVATPayTypeChanging(value As String)
    End Sub
    Partial Private Sub OnVATPayTypeChanged()
    End Sub
    Partial Private Sub OnPhoneFinanceChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneFinanceChanged()
    End Sub
    Partial Private Sub OnPhoneClaimsChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneClaimsChanged()
    End Sub
    Partial Private Sub OnFaxFinanceChanging(value As String)
    End Sub
    Partial Private Sub OnFaxFinanceChanged()
    End Sub
    Partial Private Sub OnFaxClaimsChanging(value As String)
    End Sub
    Partial Private Sub OnFaxClaimsChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnInsurerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerCodeChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnShortNameChanging(value As String)
    End Sub
    Partial Private Sub OnShortNameChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Register_RiskUwriters = New EntitySet(Of Register_RiskUwriter)(AddressOf Me.attach_Register_RiskUwriters, AddressOf Me.detach_Register_RiskUwriters)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me.OnUnderwriterChanging(value)
				Me.SendPropertyChanging
				Me._Underwriter = value
				Me.SendPropertyChanged("Underwriter")
				Me.OnUnderwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CrossReference", DbType:="NVarChar(50)")>  _
	Public Property CrossReference() As String
		Get
			Return Me._CrossReference
		End Get
		Set
			If (String.Equals(Me._CrossReference, value) = false) Then
				Me.OnCrossReferenceChanging(value)
				Me.SendPropertyChanging
				Me._CrossReference = value
				Me.SendPropertyChanged("CrossReference")
				Me.OnCrossReferenceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="NVarChar(50)")>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="NVarChar(50)")>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="NVarChar(50)")>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me.OnAddress3Changing(value)
				Me.SendPropertyChanging
				Me._Address3 = value
				Me.SendPropertyChanged("Address3")
				Me.OnAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostCode", DbType:="NVarChar(50)")>  _
	Public Property PostCode() As String
		Get
			Return Me._PostCode
		End Get
		Set
			If (String.Equals(Me._PostCode, value) = false) Then
				Me.OnPostCodeChanging(value)
				Me.SendPropertyChanging
				Me._PostCode = value
				Me.SendPropertyChanged("PostCode")
				Me.OnPostCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="NVarChar(50)")>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me.OnCityChanging(value)
				Me.SendPropertyChanging
				Me._City = value
				Me.SendPropertyChanged("City")
				Me.OnCityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneBusiness", DbType:="NVarChar(50)")>  _
	Public Property PhoneBusiness() As String
		Get
			Return Me._PhoneBusiness
		End Get
		Set
			If (String.Equals(Me._PhoneBusiness, value) = false) Then
				Me.OnPhoneBusinessChanging(value)
				Me.SendPropertyChanging
				Me._PhoneBusiness = value
				Me.SendPropertyChanged("PhoneBusiness")
				Me.OnPhoneBusinessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="NVarChar(50)")>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me.OnPhoneHomeChanging(value)
				Me.SendPropertyChanging
				Me._PhoneHome = value
				Me.SendPropertyChanged("PhoneHome")
				Me.OnPhoneHomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facsimile", DbType:="NVarChar(50)")>  _
	Public Property Facsimile() As String
		Get
			Return Me._Facsimile
		End Get
		Set
			If (String.Equals(Me._Facsimile, value) = false) Then
				Me.OnFacsimileChanging(value)
				Me.SendPropertyChanging
				Me._Facsimile = value
				Me.SendPropertyChanged("Facsimile")
				Me.OnFacsimileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountContact", DbType:="NVarChar(70)")>  _
	Public Property AccountContact() As String
		Get
			Return Me._AccountContact
		End Get
		Set
			If (String.Equals(Me._AccountContact, value) = false) Then
				Me.OnAccountContactChanging(value)
				Me.SendPropertyChanging
				Me._AccountContact = value
				Me.SendPropertyChanged("AccountContact")
				Me.OnAccountContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Addressee", DbType:="NVarChar(70)")>  _
	Public Property Addressee() As String
		Get
			Return Me._Addressee
		End Get
		Set
			If (String.Equals(Me._Addressee, value) = false) Then
				Me.OnAddresseeChanging(value)
				Me.SendPropertyChanging
				Me._Addressee = value
				Me.SendPropertyChanged("Addressee")
				Me.OnAddresseeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salutation", DbType:="NVarChar(70)")>  _
	Public Property Salutation() As String
		Get
			Return Me._Salutation
		End Get
		Set
			If (String.Equals(Me._Salutation, value) = false) Then
				Me.OnSalutationChanging(value)
				Me.SendPropertyChanging
				Me._Salutation = value
				Me.SendPropertyChanged("Salutation")
				Me.OnSalutationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DaysCredit", DbType:="SmallInt")>  _
	Public Property DaysCredit() As System.Nullable(Of Short)
		Get
			Return Me._DaysCredit
		End Get
		Set
			If (Me._DaysCredit.Equals(value) = false) Then
				Me.OnDaysCreditChanging(value)
				Me.SendPropertyChanging
				Me._DaysCredit = value
				Me.SendPropertyChanged("DaysCredit")
				Me.OnDaysCreditChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrueUnderwriter", DbType:="Bit")>  _
	Public Property TrueUnderwriter() As System.Nullable(Of Boolean)
		Get
			Return Me._TrueUnderwriter
		End Get
		Set
			If (Me._TrueUnderwriter.Equals(value) = false) Then
				Me.OnTrueUnderwriterChanging(value)
				Me.SendPropertyChanging
				Me._TrueUnderwriter = value
				Me.SendPropertyChanged("TrueUnderwriter")
				Me.OnTrueUnderwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="NVarChar(50)")>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime")>  _
	Public Property EntryDate() As System.Nullable(Of Date)
		Get
			Return Me._EntryDate
		End Get
		Set
			If (Me._EntryDate.Equals(value) = false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinanceContact", DbType:="NVarChar(70)")>  _
	Public Property FinanceContact() As String
		Get
			Return Me._FinanceContact
		End Get
		Set
			If (String.Equals(Me._FinanceContact, value) = false) Then
				Me.OnFinanceContactChanging(value)
				Me.SendPropertyChanging
				Me._FinanceContact = value
				Me.SendPropertyChanged("FinanceContact")
				Me.OnFinanceContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GeneralClaimContact", DbType:="NVarChar(50)")>  _
	Public Property GeneralClaimContact() As String
		Get
			Return Me._GeneralClaimContact
		End Get
		Set
			If (String.Equals(Me._GeneralClaimContact, value) = false) Then
				Me.OnGeneralClaimContactChanging(value)
				Me.SendPropertyChanging
				Me._GeneralClaimContact = value
				Me.SendPropertyChanged("GeneralClaimContact")
				Me.OnGeneralClaimContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="NVarChar(50)")>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="NVarChar(50)")>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me.OnInsuranceLineChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceLine = value
				Me.SendPropertyChanged("InsuranceLine")
				Me.OnInsuranceLineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATPayType", DbType:="NVarChar(50)")>  _
	Public Property VATPayType() As String
		Get
			Return Me._VATPayType
		End Get
		Set
			If (String.Equals(Me._VATPayType, value) = false) Then
				Me.OnVATPayTypeChanging(value)
				Me.SendPropertyChanging
				Me._VATPayType = value
				Me.SendPropertyChanged("VATPayType")
				Me.OnVATPayTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneFinance", DbType:="NVarChar(50)")>  _
	Public Property PhoneFinance() As String
		Get
			Return Me._PhoneFinance
		End Get
		Set
			If (String.Equals(Me._PhoneFinance, value) = false) Then
				Me.OnPhoneFinanceChanging(value)
				Me.SendPropertyChanging
				Me._PhoneFinance = value
				Me.SendPropertyChanged("PhoneFinance")
				Me.OnPhoneFinanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneClaims", DbType:="NVarChar(50)")>  _
	Public Property PhoneClaims() As String
		Get
			Return Me._PhoneClaims
		End Get
		Set
			If (String.Equals(Me._PhoneClaims, value) = false) Then
				Me.OnPhoneClaimsChanging(value)
				Me.SendPropertyChanging
				Me._PhoneClaims = value
				Me.SendPropertyChanged("PhoneClaims")
				Me.OnPhoneClaimsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxFinance", DbType:="NVarChar(50)")>  _
	Public Property FaxFinance() As String
		Get
			Return Me._FaxFinance
		End Get
		Set
			If (String.Equals(Me._FaxFinance, value) = false) Then
				Me.OnFaxFinanceChanging(value)
				Me.SendPropertyChanging
				Me._FaxFinance = value
				Me.SendPropertyChanged("FaxFinance")
				Me.OnFaxFinanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxClaims", DbType:="NVarChar(50)")>  _
	Public Property FaxClaims() As String
		Get
			Return Me._FaxClaims
		End Get
		Set
			If (String.Equals(Me._FaxClaims, value) = false) Then
				Me.OnFaxClaimsChanging(value)
				Me.SendPropertyChanging
				Me._FaxClaims = value
				Me.SendPropertyChanged("FaxClaims")
				Me.OnFaxClaimsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="NVarChar(50)")>  _
	Public Property InsurerCode() As String
		Get
			Return Me._InsurerCode
		End Get
		Set
			If (String.Equals(Me._InsurerCode, value) = false) Then
				Me.OnInsurerCodeChanging(value)
				Me.SendPropertyChanging
				Me._InsurerCode = value
				Me.SendPropertyChanged("InsurerCode")
				Me.OnInsurerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="NVarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="NVarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="NVarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(128)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="NVarChar(128)")>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(128)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShortName", DbType:="NVarChar(50)")>  _
	Public Property ShortName() As String
		Get
			Return Me._ShortName
		End Get
		Set
			If (String.Equals(Me._ShortName, value) = false) Then
				Me.OnShortNameChanging(value)
				Me.SendPropertyChanging
				Me._ShortName = value
				Me.SendPropertyChanged("ShortName")
				Me.OnShortNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_Unwriter_Register_RiskUwriter", Storage:="_Register_RiskUwriters", ThisKey:="Underwriter", OtherKey:="Uwriter")>  _
	Public Property Register_RiskUwriters() As EntitySet(Of Register_RiskUwriter)
		Get
			Return Me._Register_RiskUwriters
		End Get
		Set
			Me._Register_RiskUwriters.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Register_RiskUwriters(ByVal entity As Register_RiskUwriter)
		Me.SendPropertyChanging
		entity.Register_Unwriter = Me
	End Sub
	
	Private Sub detach_Register_RiskUwriters(ByVal entity As Register_RiskUwriter)
		Me.SendPropertyChanging
		entity.Register_Unwriter = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.AccountExecutive]")>  _
Partial Public Class Register_AccountExecutive
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AccountExecutive As String
	
	Private _Name As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _PostCode As String
	
	Private _City As String
	
	Private _PhoneBusiness As String
	
	Private _PhoneHome As String
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
	Private _Unit As String
	
	Private _Title As String
	
	Private _Internet_Address As String
	
	Private _tblProjects As EntitySet(Of tblProject)
	
	Private _tblProjectUserAssignments As EntitySet(Of tblProjectUserAssignment)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAccountExecutiveChanging(value As String)
    End Sub
    Partial Private Sub OnAccountExecutiveChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnAddress3Changed()
    End Sub
    Partial Private Sub OnPostCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostCodeChanged()
    End Sub
    Partial Private Sub OnCityChanging(value As String)
    End Sub
    Partial Private Sub OnCityChanged()
    End Sub
    Partial Private Sub OnPhoneBusinessChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneBusinessChanged()
    End Sub
    Partial Private Sub OnPhoneHomeChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneHomeChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnUnitChanging(value As String)
    End Sub
    Partial Private Sub OnUnitChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnInternet_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnInternet_AddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblProjects = New EntitySet(Of tblProject)(AddressOf Me.attach_tblProjects, AddressOf Me.detach_tblProjects)
		Me._tblProjectUserAssignments = New EntitySet(Of tblProjectUserAssignment)(AddressOf Me.attach_tblProjectUserAssignments, AddressOf Me.detach_tblProjectUserAssignments)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountExecutive", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property AccountExecutive() As String
		Get
			Return Me._AccountExecutive
		End Get
		Set
			If (String.Equals(Me._AccountExecutive, value) = false) Then
				Me.OnAccountExecutiveChanging(value)
				Me.SendPropertyChanging
				Me._AccountExecutive = value
				Me.SendPropertyChanged("AccountExecutive")
				Me.OnAccountExecutiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me.OnAddress3Changing(value)
				Me.SendPropertyChanging
				Me._Address3 = value
				Me.SendPropertyChanged("Address3")
				Me.OnAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostCode", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PostCode() As String
		Get
			Return Me._PostCode
		End Get
		Set
			If (String.Equals(Me._PostCode, value) = false) Then
				Me.OnPostCodeChanging(value)
				Me.SendPropertyChanging
				Me._PostCode = value
				Me.SendPropertyChanged("PostCode")
				Me.OnPostCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me.OnCityChanging(value)
				Me.SendPropertyChanging
				Me._City = value
				Me.SendPropertyChanged("City")
				Me.OnCityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneBusiness", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneBusiness() As String
		Get
			Return Me._PhoneBusiness
		End Get
		Set
			If (String.Equals(Me._PhoneBusiness, value) = false) Then
				Me.OnPhoneBusinessChanging(value)
				Me.SendPropertyChanging
				Me._PhoneBusiness = value
				Me.SendPropertyChanged("PhoneBusiness")
				Me.OnPhoneBusinessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me.OnPhoneHomeChanging(value)
				Me.SendPropertyChanging
				Me._PhoneHome = value
				Me.SendPropertyChanged("PhoneHome")
				Me.OnPhoneHomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unit", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Unit() As String
		Get
			Return Me._Unit
		End Get
		Set
			If (String.Equals(Me._Unit, value) = false) Then
				Me.OnUnitChanging(value)
				Me.SendPropertyChanging
				Me._Unit = value
				Me.SendPropertyChanged("Unit")
				Me.OnUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Internet_Address", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Internet_Address() As String
		Get
			Return Me._Internet_Address
		End Get
		Set
			If (String.Equals(Me._Internet_Address, value) = false) Then
				Me.OnInternet_AddressChanging(value)
				Me.SendPropertyChanging
				Me._Internet_Address = value
				Me.SendPropertyChanged("Internet_Address")
				Me.OnInternet_AddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_AccountExecutive_tblProject", Storage:="_tblProjects", ThisKey:="AccountExecutive", OtherKey:="AECode")>  _
	Public Property tblProjects() As EntitySet(Of tblProject)
		Get
			Return Me._tblProjects
		End Get
		Set
			Me._tblProjects.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_AccountExecutive_tblProjectUserAssignment", Storage:="_tblProjectUserAssignments", ThisKey:="AccountExecutive", OtherKey:="AECode")>  _
	Public Property tblProjectUserAssignments() As EntitySet(Of tblProjectUserAssignment)
		Get
			Return Me._tblProjectUserAssignments
		End Get
		Set
			Me._tblProjectUserAssignments.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblProjects(ByVal entity As tblProject)
		Me.SendPropertyChanging
		entity.Register_AccountExecutive = Me
	End Sub
	
	Private Sub detach_tblProjects(ByVal entity As tblProject)
		Me.SendPropertyChanging
		entity.Register_AccountExecutive = Nothing
	End Sub
	
	Private Sub attach_tblProjectUserAssignments(ByVal entity As tblProjectUserAssignment)
		Me.SendPropertyChanging
		entity.Register_AccountExecutive = Me
	End Sub
	
	Private Sub detach_tblProjectUserAssignments(ByVal entity As tblProjectUserAssignment)
		Me.SendPropertyChanging
		entity.Register_AccountExecutive = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.Agent]")>  _
Partial Public Class Register_Agent
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Agent As String
	
	Private _Name As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _PostCode As String
	
	Private _City As String
	
	Private _PhoneBusiness As String
	
	Private _PhoneHome As String
	
	Private _ContactPerson As String
	
	Private _Addressee As String
	
	Private _Salutation As String
	
	Private _Occupation As String
	
	Private _EntryBy As String
	
	Private _EntryDate As System.Nullable(Of Date)
	
	Private _IsSubAgent As System.Nullable(Of Boolean)
	
	Private _InternetAddress As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _UserName As String
	
	Private _Password As String
	
	Private _Email As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _BPShop As String
	
	Private _BillingName As String
	
	Private _BillingAddress As String
	
	Private _Register_AgentRiskComms As EntitySet(Of Register_AgentRiskComm)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnAgentChanging(value As String)
    End Sub
    Partial Private Sub OnAgentChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnAddress3Changed()
    End Sub
    Partial Private Sub OnPostCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostCodeChanged()
    End Sub
    Partial Private Sub OnCityChanging(value As String)
    End Sub
    Partial Private Sub OnCityChanged()
    End Sub
    Partial Private Sub OnPhoneBusinessChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneBusinessChanged()
    End Sub
    Partial Private Sub OnPhoneHomeChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneHomeChanged()
    End Sub
    Partial Private Sub OnContactPersonChanging(value As String)
    End Sub
    Partial Private Sub OnContactPersonChanged()
    End Sub
    Partial Private Sub OnAddresseeChanging(value As String)
    End Sub
    Partial Private Sub OnAddresseeChanged()
    End Sub
    Partial Private Sub OnSalutationChanging(value As String)
    End Sub
    Partial Private Sub OnSalutationChanged()
    End Sub
    Partial Private Sub OnOccupationChanging(value As String)
    End Sub
    Partial Private Sub OnOccupationChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnIsSubAgentChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsSubAgentChanged()
    End Sub
    Partial Private Sub OnInternetAddressChanging(value As String)
    End Sub
    Partial Private Sub OnInternetAddressChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnBPShopChanging(value As String)
    End Sub
    Partial Private Sub OnBPShopChanged()
    End Sub
    Partial Private Sub OnBillingNameChanging(value As String)
    End Sub
    Partial Private Sub OnBillingNameChanged()
    End Sub
    Partial Private Sub OnBillingAddressChanging(value As String)
    End Sub
    Partial Private Sub OnBillingAddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Register_AgentRiskComms = New EntitySet(Of Register_AgentRiskComm)(AddressOf Me.attach_Register_AgentRiskComms, AddressOf Me.detach_Register_AgentRiskComms)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me.OnAgentChanging(value)
				Me.SendPropertyChanging
				Me._Agent = value
				Me.SendPropertyChanged("Agent")
				Me.OnAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="NVarChar(50)")>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="NVarChar(50)")>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="NVarChar(50)")>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me.OnAddress3Changing(value)
				Me.SendPropertyChanging
				Me._Address3 = value
				Me.SendPropertyChanged("Address3")
				Me.OnAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostCode", DbType:="NVarChar(50)")>  _
	Public Property PostCode() As String
		Get
			Return Me._PostCode
		End Get
		Set
			If (String.Equals(Me._PostCode, value) = false) Then
				Me.OnPostCodeChanging(value)
				Me.SendPropertyChanging
				Me._PostCode = value
				Me.SendPropertyChanged("PostCode")
				Me.OnPostCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="NVarChar(50)")>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me.OnCityChanging(value)
				Me.SendPropertyChanging
				Me._City = value
				Me.SendPropertyChanged("City")
				Me.OnCityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneBusiness", DbType:="NVarChar(50)")>  _
	Public Property PhoneBusiness() As String
		Get
			Return Me._PhoneBusiness
		End Get
		Set
			If (String.Equals(Me._PhoneBusiness, value) = false) Then
				Me.OnPhoneBusinessChanging(value)
				Me.SendPropertyChanging
				Me._PhoneBusiness = value
				Me.SendPropertyChanged("PhoneBusiness")
				Me.OnPhoneBusinessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="NVarChar(50)")>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me.OnPhoneHomeChanging(value)
				Me.SendPropertyChanging
				Me._PhoneHome = value
				Me.SendPropertyChanged("PhoneHome")
				Me.OnPhoneHomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPerson", DbType:="NVarChar(50)")>  _
	Public Property ContactPerson() As String
		Get
			Return Me._ContactPerson
		End Get
		Set
			If (String.Equals(Me._ContactPerson, value) = false) Then
				Me.OnContactPersonChanging(value)
				Me.SendPropertyChanging
				Me._ContactPerson = value
				Me.SendPropertyChanged("ContactPerson")
				Me.OnContactPersonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Addressee", DbType:="NVarChar(50)")>  _
	Public Property Addressee() As String
		Get
			Return Me._Addressee
		End Get
		Set
			If (String.Equals(Me._Addressee, value) = false) Then
				Me.OnAddresseeChanging(value)
				Me.SendPropertyChanging
				Me._Addressee = value
				Me.SendPropertyChanged("Addressee")
				Me.OnAddresseeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salutation", DbType:="NVarChar(50)")>  _
	Public Property Salutation() As String
		Get
			Return Me._Salutation
		End Get
		Set
			If (String.Equals(Me._Salutation, value) = false) Then
				Me.OnSalutationChanging(value)
				Me.SendPropertyChanging
				Me._Salutation = value
				Me.SendPropertyChanged("Salutation")
				Me.OnSalutationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Occupation", DbType:="NVarChar(50)")>  _
	Public Property Occupation() As String
		Get
			Return Me._Occupation
		End Get
		Set
			If (String.Equals(Me._Occupation, value) = false) Then
				Me.OnOccupationChanging(value)
				Me.SendPropertyChanging
				Me._Occupation = value
				Me.SendPropertyChanged("Occupation")
				Me.OnOccupationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="NVarChar(50)")>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime")>  _
	Public Property EntryDate() As System.Nullable(Of Date)
		Get
			Return Me._EntryDate
		End Get
		Set
			If (Me._EntryDate.Equals(value) = false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSubAgent", DbType:="Bit")>  _
	Public Property IsSubAgent() As System.Nullable(Of Boolean)
		Get
			Return Me._IsSubAgent
		End Get
		Set
			If (Me._IsSubAgent.Equals(value) = false) Then
				Me.OnIsSubAgentChanging(value)
				Me.SendPropertyChanging
				Me._IsSubAgent = value
				Me.SendPropertyChanged("IsSubAgent")
				Me.OnIsSubAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternetAddress", DbType:="NVarChar(50)")>  _
	Public Property InternetAddress() As String
		Get
			Return Me._InternetAddress
		End Get
		Set
			If (String.Equals(Me._InternetAddress, value) = false) Then
				Me.OnInternetAddressChanging(value)
				Me.SendPropertyChanging
				Me._InternetAddress = value
				Me.SendPropertyChanged("InternetAddress")
				Me.OnInternetAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="NVarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="NVarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="NVarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(128)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="NVarChar(128)")>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(128)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BPShop", DbType:="NVarChar(50)")>  _
	Public Property BPShop() As String
		Get
			Return Me._BPShop
		End Get
		Set
			If (String.Equals(Me._BPShop, value) = false) Then
				Me.OnBPShopChanging(value)
				Me.SendPropertyChanging
				Me._BPShop = value
				Me.SendPropertyChanged("BPShop")
				Me.OnBPShopChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingName", DbType:="NVarChar(250)")>  _
	Public Property BillingName() As String
		Get
			Return Me._BillingName
		End Get
		Set
			If (String.Equals(Me._BillingName, value) = false) Then
				Me.OnBillingNameChanging(value)
				Me.SendPropertyChanging
				Me._BillingName = value
				Me.SendPropertyChanged("BillingName")
				Me.OnBillingNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingAddress", DbType:="NVarChar(255)")>  _
	Public Property BillingAddress() As String
		Get
			Return Me._BillingAddress
		End Get
		Set
			If (String.Equals(Me._BillingAddress, value) = false) Then
				Me.OnBillingAddressChanging(value)
				Me.SendPropertyChanging
				Me._BillingAddress = value
				Me.SendPropertyChanged("BillingAddress")
				Me.OnBillingAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_Agent_Register_AgentRiskComm", Storage:="_Register_AgentRiskComms", ThisKey:="Agent", OtherKey:="Agent")>  _
	Public Property Register_AgentRiskComms() As EntitySet(Of Register_AgentRiskComm)
		Get
			Return Me._Register_AgentRiskComms
		End Get
		Set
			Me._Register_AgentRiskComms.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Register_AgentRiskComms(ByVal entity As Register_AgentRiskComm)
		Me.SendPropertyChanging
		entity.Register_Agent = Me
	End Sub
	
	Private Sub detach_Register_AgentRiskComms(ByVal entity As Register_AgentRiskComm)
		Me.SendPropertyChanging
		entity.Register_Agent = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.AgentRiskComm]")>  _
Partial Public Class Register_AgentRiskComm
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Agent As String
	
	Private _Risk As String
	
	Private _CommissionOut As Double
	
	Private _OROut As Double
	
	Private _OROutCalFrom As String
	
	Private _AdminOut1 As Double
	
	Private _AdminOut1Cal As String
	
	Private _AdminOut2 As Double
	
	Private _AdminOut2Cal As String
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
	Private _CommOutCal As String
	
	Private _OROutCal As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _Register_Agent As EntityRef(Of Register_Agent)
	
	Private _Register_ClassOfRisk As EntityRef(Of Register_ClassOfRisk)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnAgentChanging(value As String)
    End Sub
    Partial Private Sub OnAgentChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnCommissionOutChanging(value As Double)
    End Sub
    Partial Private Sub OnCommissionOutChanged()
    End Sub
    Partial Private Sub OnOROutChanging(value As Double)
    End Sub
    Partial Private Sub OnOROutChanged()
    End Sub
    Partial Private Sub OnOROutCalFromChanging(value As String)
    End Sub
    Partial Private Sub OnOROutCalFromChanged()
    End Sub
    Partial Private Sub OnAdminOut1Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminOut1Changed()
    End Sub
    Partial Private Sub OnAdminOut1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminOut1CalChanged()
    End Sub
    Partial Private Sub OnAdminOut2Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminOut2Changed()
    End Sub
    Partial Private Sub OnAdminOut2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminOut2CalChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnCommOutCalChanging(value As String)
    End Sub
    Partial Private Sub OnCommOutCalChanged()
    End Sub
    Partial Private Sub OnOROutCalChanging(value As String)
    End Sub
    Partial Private Sub OnOROutCalChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Register_Agent = CType(Nothing, EntityRef(Of Register_Agent))
		Me._Register_ClassOfRisk = CType(Nothing, EntityRef(Of Register_ClassOfRisk))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				If Me._Register_Agent.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAgentChanging(value)
				Me.SendPropertyChanging
				Me._Agent = value
				Me.SendPropertyChanged("Agent")
				Me.OnAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				If Me._Register_ClassOfRisk.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut", DbType:="Float NOT NULL")>  _
	Public Property CommissionOut() As Double
		Get
			Return Me._CommissionOut
		End Get
		Set
			If ((Me._CommissionOut = value)  _
						= false) Then
				Me.OnCommissionOutChanging(value)
				Me.SendPropertyChanging
				Me._CommissionOut = value
				Me.SendPropertyChanged("CommissionOut")
				Me.OnCommissionOutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut", DbType:="Float NOT NULL")>  _
	Public Property OROut() As Double
		Get
			Return Me._OROut
		End Get
		Set
			If ((Me._OROut = value)  _
						= false) Then
				Me.OnOROutChanging(value)
				Me.SendPropertyChanging
				Me._OROut = value
				Me.SendPropertyChanged("OROut")
				Me.OnOROutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCalFrom", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property OROutCalFrom() As String
		Get
			Return Me._OROutCalFrom
		End Get
		Set
			If (String.Equals(Me._OROutCalFrom, value) = false) Then
				Me.OnOROutCalFromChanging(value)
				Me.SendPropertyChanging
				Me._OROutCalFrom = value
				Me.SendPropertyChanged("OROutCalFrom")
				Me.OnOROutCalFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1", DbType:="Float NOT NULL")>  _
	Public Property AdminOut1() As Double
		Get
			Return Me._AdminOut1
		End Get
		Set
			If ((Me._AdminOut1 = value)  _
						= false) Then
				Me.OnAdminOut1Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut1 = value
				Me.SendPropertyChanged("AdminOut1")
				Me.OnAdminOut1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1Cal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property AdminOut1Cal() As String
		Get
			Return Me._AdminOut1Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut1Cal, value) = false) Then
				Me.OnAdminOut1CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminOut1Cal = value
				Me.SendPropertyChanged("AdminOut1Cal")
				Me.OnAdminOut1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2", DbType:="Float NOT NULL")>  _
	Public Property AdminOut2() As Double
		Get
			Return Me._AdminOut2
		End Get
		Set
			If ((Me._AdminOut2 = value)  _
						= false) Then
				Me.OnAdminOut2Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut2 = value
				Me.SendPropertyChanged("AdminOut2")
				Me.OnAdminOut2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2Cal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property AdminOut2Cal() As String
		Get
			Return Me._AdminOut2Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut2Cal, value) = false) Then
				Me.OnAdminOut2CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminOut2Cal = value
				Me.SendPropertyChanged("AdminOut2Cal")
				Me.OnAdminOut2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutCal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property CommOutCal() As String
		Get
			Return Me._CommOutCal
		End Get
		Set
			If (String.Equals(Me._CommOutCal, value) = false) Then
				Me.OnCommOutCalChanging(value)
				Me.SendPropertyChanging
				Me._CommOutCal = value
				Me.SendPropertyChanged("CommOutCal")
				Me.OnCommOutCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property OROutCal() As String
		Get
			Return Me._OROutCal
		End Get
		Set
			If (String.Equals(Me._OROutCal, value) = false) Then
				Me.OnOROutCalChanging(value)
				Me.SendPropertyChanging
				Me._OROutCal = value
				Me.SendPropertyChanged("OROutCal")
				Me.OnOROutCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_Agent_Register_AgentRiskComm", Storage:="_Register_Agent", ThisKey:="Agent", OtherKey:="Agent", IsForeignKey:=true)>  _
	Public Property Register_Agent() As Register_Agent
		Get
			Return Me._Register_Agent.Entity
		End Get
		Set
			Dim previousValue As Register_Agent = Me._Register_Agent.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Register_Agent.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Register_Agent.Entity = Nothing
					previousValue.Register_AgentRiskComms.Remove(Me)
				End If
				Me._Register_Agent.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Register_AgentRiskComms.Add(Me)
					Me._Agent = value.Agent
				Else
					Me._Agent = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Register_Agent")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_Register_AgentRiskComm", Storage:="_Register_ClassOfRisk", ThisKey:="Risk", OtherKey:="Risk", IsForeignKey:=true)>  _
	Public Property Register_ClassOfRisk() As Register_ClassOfRisk
		Get
			Return Me._Register_ClassOfRisk.Entity
		End Get
		Set
			Dim previousValue As Register_ClassOfRisk = Me._Register_ClassOfRisk.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Register_ClassOfRisk.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Register_ClassOfRisk.Entity = Nothing
					previousValue.Register_AgentRiskComms.Remove(Me)
				End If
				Me._Register_ClassOfRisk.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Register_AgentRiskComms.Add(Me)
					Me._Risk = value.Risk
				Else
					Me._Risk = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Register_ClassOfRisk")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.ClassOfRisk]")>  _
Partial Public Class Register_ClassOfRisk
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _RiskGovernment As String
	
	Private _Department As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _RiskYear As System.Nullable(Of Integer)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _Remark As String
	
	Private _IsGeneralCode As System.Nullable(Of Boolean)
	
	Private _InsuranceLine As System.Nullable(Of Integer)
	
	Private _Prefix As String
	
	Private _Register_AgentRiskComms As EntitySet(Of Register_AgentRiskComm)
	
	Private _Register_RiskUwriters As EntitySet(Of Register_RiskUwriter)
	
	Private _tblClassOfRisk As EntityRef(Of tblClassOfRisk)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnRiskGroupIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIChanged()
    End Sub
    Partial Private Sub OnRiskGroupIIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIIChanged()
    End Sub
    Partial Private Sub OnRiskShortDescChanging(value As String)
    End Sub
    Partial Private Sub OnRiskShortDescChanged()
    End Sub
    Partial Private Sub OnRiskGovernmentChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGovernmentChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnRiskGroupIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRiskGroupIDChanged()
    End Sub
    Partial Private Sub OnRiskYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRiskYearChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnIsGeneralCodeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsGeneralCodeChanged()
    End Sub
    Partial Private Sub OnInsuranceLineChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInsuranceLineChanged()
    End Sub
    Partial Private Sub OnPrefixChanging(value As String)
    End Sub
    Partial Private Sub OnPrefixChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Register_AgentRiskComms = New EntitySet(Of Register_AgentRiskComm)(AddressOf Me.attach_Register_AgentRiskComms, AddressOf Me.detach_Register_AgentRiskComms)
		Me._Register_RiskUwriters = New EntitySet(Of Register_RiskUwriter)(AddressOf Me.attach_Register_RiskUwriters, AddressOf Me.detach_Register_RiskUwriters)
		Me._tblClassOfRisk = CType(Nothing, EntityRef(Of tblClassOfRisk))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="VarChar(50)")>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me.OnRiskGroupIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupI = value
				Me.SendPropertyChanged("RiskGroupI")
				Me.OnRiskGroupIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="VarChar(50)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me.OnRiskGroupIIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupII = value
				Me.SendPropertyChanged("RiskGroupII")
				Me.OnRiskGroupIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="VarChar(50)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me.OnRiskShortDescChanging(value)
				Me.SendPropertyChanging
				Me._RiskShortDesc = value
				Me.SendPropertyChanged("RiskShortDesc")
				Me.OnRiskShortDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me.OnRiskGovernmentChanging(value)
				Me.SendPropertyChanging
				Me._RiskGovernment = value
				Me.SendPropertyChanged("RiskGovernment")
				Me.OnRiskGovernmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me.OnRiskGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupID = value
				Me.SendPropertyChanged("RiskGroupID")
				Me.OnRiskGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskYear", DbType:="Int")>  _
	Public Property RiskYear() As System.Nullable(Of Integer)
		Get
			Return Me._RiskYear
		End Get
		Set
			If (Me._RiskYear.Equals(value) = false) Then
				Me.OnRiskYearChanging(value)
				Me.SendPropertyChanging
				Me._RiskYear = value
				Me.SendPropertyChanged("RiskYear")
				Me.OnRiskYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsGeneralCode", DbType:="Bit")>  _
	Public Property IsGeneralCode() As System.Nullable(Of Boolean)
		Get
			Return Me._IsGeneralCode
		End Get
		Set
			If (Me._IsGeneralCode.Equals(value) = false) Then
				Me.OnIsGeneralCodeChanging(value)
				Me.SendPropertyChanging
				Me._IsGeneralCode = value
				Me.SendPropertyChanged("IsGeneralCode")
				Me.OnIsGeneralCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="Int")>  _
	Public Property InsuranceLine() As System.Nullable(Of Integer)
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (Me._InsuranceLine.Equals(value) = false) Then
				Me.OnInsuranceLineChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceLine = value
				Me.SendPropertyChanged("InsuranceLine")
				Me.OnInsuranceLineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefix", DbType:="VarChar(8)")>  _
	Public Property Prefix() As String
		Get
			Return Me._Prefix
		End Get
		Set
			If (String.Equals(Me._Prefix, value) = false) Then
				Me.OnPrefixChanging(value)
				Me.SendPropertyChanging
				Me._Prefix = value
				Me.SendPropertyChanged("Prefix")
				Me.OnPrefixChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_Register_AgentRiskComm", Storage:="_Register_AgentRiskComms", ThisKey:="Risk", OtherKey:="Risk")>  _
	Public Property Register_AgentRiskComms() As EntitySet(Of Register_AgentRiskComm)
		Get
			Return Me._Register_AgentRiskComms
		End Get
		Set
			Me._Register_AgentRiskComms.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_Register_RiskUwriter", Storage:="_Register_RiskUwriters", ThisKey:="Risk", OtherKey:="Risk")>  _
	Public Property Register_RiskUwriters() As EntitySet(Of Register_RiskUwriter)
		Get
			Return Me._Register_RiskUwriters
		End Get
		Set
			Me._Register_RiskUwriters.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_tblClassOfRisk", Storage:="_tblClassOfRisk", ThisKey:="Risk", OtherKey:="Risk", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property tblClassOfRisk() As tblClassOfRisk
		Get
			Return Me._tblClassOfRisk.Entity
		End Get
		Set
			Dim previousValue As tblClassOfRisk = Me._tblClassOfRisk.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblClassOfRisk.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblClassOfRisk.Entity = Nothing
					previousValue.Register_ClassOfRisk = Nothing
				End If
				Me._tblClassOfRisk.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.Register_ClassOfRisk = Me
				End If
				Me.SendPropertyChanged("tblClassOfRisk")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Register_AgentRiskComms(ByVal entity As Register_AgentRiskComm)
		Me.SendPropertyChanging
		entity.Register_ClassOfRisk = Me
	End Sub
	
	Private Sub detach_Register_AgentRiskComms(ByVal entity As Register_AgentRiskComm)
		Me.SendPropertyChanging
		entity.Register_ClassOfRisk = Nothing
	End Sub
	
	Private Sub attach_Register_RiskUwriters(ByVal entity As Register_RiskUwriter)
		Me.SendPropertyChanging
		entity.Register_ClassOfRisk = Me
	End Sub
	
	Private Sub detach_Register_RiskUwriters(ByVal entity As Register_RiskUwriter)
		Me.SendPropertyChanging
		entity.Register_ClassOfRisk = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.RiskUwriter]")>  _
Partial Public Class Register_RiskUwriter
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _Uwriter As String
	
	Private _Description As String
	
	Private _Brokerage As Single
	
	Private _AgentCommission As System.Nullable(Of Single)
	
	Private _PremiumWarantydays As System.Nullable(Of Short)
	
	Private _NewRenewaldays As System.Nullable(Of Short)
	
	Private _NewNewBusdays As System.Nullable(Of Short)
	
	Private _RenRenewaldays As System.Nullable(Of Short)
	
	Private _RenNewBusdays As System.Nullable(Of Short)
	
	Private _AutoCalculation As Boolean
	
	Private _ORCommissionPercent As Double
	
	Private _OROutRate As System.Nullable(Of Double)
	
	Private _AdminFeeIn1 As Double
	
	Private _AdminFeeIn1Cal As String
	
	Private _AdminFeeIn2 As Double
	
	Private _AdminFeeIn2Cal As String
	
	Private _ORCalFrom As String
	
	Private _OffsetORFlag As Boolean
	
	Private _OffsetAdm1Flag As Boolean
	
	Private _OffsetAdm2Flag As Boolean
	
	Private _BrokerageCal As String
	
	Private _ORInCal As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _Remark As String
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _Register_ClassOfRisk As EntityRef(Of Register_ClassOfRisk)
	
	Private _Register_Unwriter As EntityRef(Of Register_Unwriter)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnUwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUwriterChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnBrokerageChanging(value As Single)
    End Sub
    Partial Private Sub OnBrokerageChanged()
    End Sub
    Partial Private Sub OnAgentCommissionChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAgentCommissionChanged()
    End Sub
    Partial Private Sub OnPremiumWarantydaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPremiumWarantydaysChanged()
    End Sub
    Partial Private Sub OnNewRenewaldaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnNewRenewaldaysChanged()
    End Sub
    Partial Private Sub OnNewNewBusdaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnNewNewBusdaysChanged()
    End Sub
    Partial Private Sub OnRenRenewaldaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRenRenewaldaysChanged()
    End Sub
    Partial Private Sub OnRenNewBusdaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRenNewBusdaysChanged()
    End Sub
    Partial Private Sub OnAutoCalculationChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAutoCalculationChanged()
    End Sub
    Partial Private Sub OnORCommissionPercentChanging(value As Double)
    End Sub
    Partial Private Sub OnORCommissionPercentChanged()
    End Sub
    Partial Private Sub OnOROutRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOROutRateChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn1Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminFeeIn1Changed()
    End Sub
    Partial Private Sub OnAdminFeeIn1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminFeeIn1CalChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn2Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminFeeIn2Changed()
    End Sub
    Partial Private Sub OnAdminFeeIn2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminFeeIn2CalChanged()
    End Sub
    Partial Private Sub OnORCalFromChanging(value As String)
    End Sub
    Partial Private Sub OnORCalFromChanged()
    End Sub
    Partial Private Sub OnOffsetORFlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOffsetORFlagChanged()
    End Sub
    Partial Private Sub OnOffsetAdm1FlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOffsetAdm1FlagChanged()
    End Sub
    Partial Private Sub OnOffsetAdm2FlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOffsetAdm2FlagChanged()
    End Sub
    Partial Private Sub OnBrokerageCalChanging(value As String)
    End Sub
    Partial Private Sub OnBrokerageCalChanged()
    End Sub
    Partial Private Sub OnORInCalChanging(value As String)
    End Sub
    Partial Private Sub OnORInCalChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Register_ClassOfRisk = CType(Nothing, EntityRef(Of Register_ClassOfRisk))
		Me._Register_Unwriter = CType(Nothing, EntityRef(Of Register_Unwriter))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				If Me._Register_ClassOfRisk.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Uwriter", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Uwriter() As String
		Get
			Return Me._Uwriter
		End Get
		Set
			If (String.Equals(Me._Uwriter, value) = false) Then
				If Me._Register_Unwriter.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnUwriterChanging(value)
				Me.SendPropertyChanging
				Me._Uwriter = value
				Me.SendPropertyChanged("Uwriter")
				Me.OnUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage", DbType:="Real NOT NULL")>  _
	Public Property Brokerage() As Single
		Get
			Return Me._Brokerage
		End Get
		Set
			If ((Me._Brokerage = value)  _
						= false) Then
				Me.OnBrokerageChanging(value)
				Me.SendPropertyChanging
				Me._Brokerage = value
				Me.SendPropertyChanged("Brokerage")
				Me.OnBrokerageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCommission", DbType:="Real")>  _
	Public Property AgentCommission() As System.Nullable(Of Single)
		Get
			Return Me._AgentCommission
		End Get
		Set
			If (Me._AgentCommission.Equals(value) = false) Then
				Me.OnAgentCommissionChanging(value)
				Me.SendPropertyChanging
				Me._AgentCommission = value
				Me.SendPropertyChanged("AgentCommission")
				Me.OnAgentCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumWarantydays", DbType:="SmallInt")>  _
	Public Property PremiumWarantydays() As System.Nullable(Of Short)
		Get
			Return Me._PremiumWarantydays
		End Get
		Set
			If (Me._PremiumWarantydays.Equals(value) = false) Then
				Me.OnPremiumWarantydaysChanging(value)
				Me.SendPropertyChanging
				Me._PremiumWarantydays = value
				Me.SendPropertyChanged("PremiumWarantydays")
				Me.OnPremiumWarantydaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewRenewaldays", DbType:="SmallInt")>  _
	Public Property NewRenewaldays() As System.Nullable(Of Short)
		Get
			Return Me._NewRenewaldays
		End Get
		Set
			If (Me._NewRenewaldays.Equals(value) = false) Then
				Me.OnNewRenewaldaysChanging(value)
				Me.SendPropertyChanging
				Me._NewRenewaldays = value
				Me.SendPropertyChanged("NewRenewaldays")
				Me.OnNewRenewaldaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewNewBusdays", DbType:="SmallInt")>  _
	Public Property NewNewBusdays() As System.Nullable(Of Short)
		Get
			Return Me._NewNewBusdays
		End Get
		Set
			If (Me._NewNewBusdays.Equals(value) = false) Then
				Me.OnNewNewBusdaysChanging(value)
				Me.SendPropertyChanging
				Me._NewNewBusdays = value
				Me.SendPropertyChanged("NewNewBusdays")
				Me.OnNewNewBusdaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenRenewaldays", DbType:="SmallInt")>  _
	Public Property RenRenewaldays() As System.Nullable(Of Short)
		Get
			Return Me._RenRenewaldays
		End Get
		Set
			If (Me._RenRenewaldays.Equals(value) = false) Then
				Me.OnRenRenewaldaysChanging(value)
				Me.SendPropertyChanging
				Me._RenRenewaldays = value
				Me.SendPropertyChanged("RenRenewaldays")
				Me.OnRenRenewaldaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenNewBusdays", DbType:="SmallInt")>  _
	Public Property RenNewBusdays() As System.Nullable(Of Short)
		Get
			Return Me._RenNewBusdays
		End Get
		Set
			If (Me._RenNewBusdays.Equals(value) = false) Then
				Me.OnRenNewBusdaysChanging(value)
				Me.SendPropertyChanging
				Me._RenNewBusdays = value
				Me.SendPropertyChanged("RenNewBusdays")
				Me.OnRenNewBusdaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AutoCalculation", DbType:="Bit NOT NULL")>  _
	Public Property AutoCalculation() As Boolean
		Get
			Return Me._AutoCalculation
		End Get
		Set
			If ((Me._AutoCalculation = value)  _
						= false) Then
				Me.OnAutoCalculationChanging(value)
				Me.SendPropertyChanging
				Me._AutoCalculation = value
				Me.SendPropertyChanged("AutoCalculation")
				Me.OnAutoCalculationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent", DbType:="Float NOT NULL")>  _
	Public Property ORCommissionPercent() As Double
		Get
			Return Me._ORCommissionPercent
		End Get
		Set
			If ((Me._ORCommissionPercent = value)  _
						= false) Then
				Me.OnORCommissionPercentChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionPercent = value
				Me.SendPropertyChanged("ORCommissionPercent")
				Me.OnORCommissionPercentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutRate", DbType:="Float")>  _
	Public Property OROutRate() As System.Nullable(Of Double)
		Get
			Return Me._OROutRate
		End Get
		Set
			If (Me._OROutRate.Equals(value) = false) Then
				Me.OnOROutRateChanging(value)
				Me.SendPropertyChanging
				Me._OROutRate = value
				Me.SendPropertyChanged("OROutRate")
				Me.OnOROutRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeIn1() As Double
		Get
			Return Me._AdminFeeIn1
		End Get
		Set
			If ((Me._AdminFeeIn1 = value)  _
						= false) Then
				Me.OnAdminFeeIn1Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1 = value
				Me.SendPropertyChanged("AdminFeeIn1")
				Me.OnAdminFeeIn1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1Cal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property AdminFeeIn1Cal() As String
		Get
			Return Me._AdminFeeIn1Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn1Cal, value) = false) Then
				Me.OnAdminFeeIn1CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1Cal = value
				Me.SendPropertyChanged("AdminFeeIn1Cal")
				Me.OnAdminFeeIn1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeIn2() As Double
		Get
			Return Me._AdminFeeIn2
		End Get
		Set
			If ((Me._AdminFeeIn2 = value)  _
						= false) Then
				Me.OnAdminFeeIn2Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2 = value
				Me.SendPropertyChanged("AdminFeeIn2")
				Me.OnAdminFeeIn2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2Cal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property AdminFeeIn2Cal() As String
		Get
			Return Me._AdminFeeIn2Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn2Cal, value) = false) Then
				Me.OnAdminFeeIn2CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2Cal = value
				Me.SendPropertyChanged("AdminFeeIn2Cal")
				Me.OnAdminFeeIn2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCalFrom", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property ORCalFrom() As String
		Get
			Return Me._ORCalFrom
		End Get
		Set
			If (String.Equals(Me._ORCalFrom, value) = false) Then
				Me.OnORCalFromChanging(value)
				Me.SendPropertyChanging
				Me._ORCalFrom = value
				Me.SendPropertyChanged("ORCalFrom")
				Me.OnORCalFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetORFlag", DbType:="Bit NOT NULL")>  _
	Public Property OffsetORFlag() As Boolean
		Get
			Return Me._OffsetORFlag
		End Get
		Set
			If ((Me._OffsetORFlag = value)  _
						= false) Then
				Me.OnOffsetORFlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetORFlag = value
				Me.SendPropertyChanged("OffsetORFlag")
				Me.OnOffsetORFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm1Flag", DbType:="Bit NOT NULL")>  _
	Public Property OffsetAdm1Flag() As Boolean
		Get
			Return Me._OffsetAdm1Flag
		End Get
		Set
			If ((Me._OffsetAdm1Flag = value)  _
						= false) Then
				Me.OnOffsetAdm1FlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetAdm1Flag = value
				Me.SendPropertyChanged("OffsetAdm1Flag")
				Me.OnOffsetAdm1FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm2Flag", DbType:="Bit NOT NULL")>  _
	Public Property OffsetAdm2Flag() As Boolean
		Get
			Return Me._OffsetAdm2Flag
		End Get
		Set
			If ((Me._OffsetAdm2Flag = value)  _
						= false) Then
				Me.OnOffsetAdm2FlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetAdm2Flag = value
				Me.SendPropertyChanged("OffsetAdm2Flag")
				Me.OnOffsetAdm2FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrokerageCal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property BrokerageCal() As String
		Get
			Return Me._BrokerageCal
		End Get
		Set
			If (String.Equals(Me._BrokerageCal, value) = false) Then
				Me.OnBrokerageCalChanging(value)
				Me.SendPropertyChanging
				Me._BrokerageCal = value
				Me.SendPropertyChanged("BrokerageCal")
				Me.OnBrokerageCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORInCal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property ORInCal() As String
		Get
			Return Me._ORInCal
		End Get
		Set
			If (String.Equals(Me._ORInCal, value) = false) Then
				Me.OnORInCalChanging(value)
				Me.SendPropertyChanging
				Me._ORInCal = value
				Me.SendPropertyChanged("ORInCal")
				Me.OnORInCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_Register_RiskUwriter", Storage:="_Register_ClassOfRisk", ThisKey:="Risk", OtherKey:="Risk", IsForeignKey:=true)>  _
	Public Property Register_ClassOfRisk() As Register_ClassOfRisk
		Get
			Return Me._Register_ClassOfRisk.Entity
		End Get
		Set
			Dim previousValue As Register_ClassOfRisk = Me._Register_ClassOfRisk.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Register_ClassOfRisk.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Register_ClassOfRisk.Entity = Nothing
					previousValue.Register_RiskUwriters.Remove(Me)
				End If
				Me._Register_ClassOfRisk.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Register_RiskUwriters.Add(Me)
					Me._Risk = value.Risk
				Else
					Me._Risk = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Register_ClassOfRisk")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_Unwriter_Register_RiskUwriter", Storage:="_Register_Unwriter", ThisKey:="Uwriter", OtherKey:="Underwriter", IsForeignKey:=true)>  _
	Public Property Register_Unwriter() As Register_Unwriter
		Get
			Return Me._Register_Unwriter.Entity
		End Get
		Set
			Dim previousValue As Register_Unwriter = Me._Register_Unwriter.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Register_Unwriter.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Register_Unwriter.Entity = Nothing
					previousValue.Register_RiskUwriters.Remove(Me)
				End If
				Me._Register_Unwriter.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Register_RiskUwriters.Add(Me)
					Me._Uwriter = value.Underwriter
				Else
					Me._Uwriter = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Register_Unwriter")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCampaign")>  _
Partial Public Class tblCampaign
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CampaignID As Integer
	
	Private _CampaignName As String
	
	Private _CampaignCode As String
	
	Private _CampaignType As String
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _HasPremium As System.Nullable(Of Boolean)
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreateBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifyBy As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _PrefixClientCode As String
	
	Private _CampaignDescription As String
	
	Private _tblCarPremiums As EntitySet(Of tblCarPremium)
	
	Private _tblProjectCampaigns As EntitySet(Of tblProjectCampaign)
	
	Private _tblCampaign_CommIns As EntitySet(Of tblCampaign_CommIn)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCampaignIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCampaignIDChanged()
    End Sub
    Partial Private Sub OnCampaignNameChanging(value As String)
    End Sub
    Partial Private Sub OnCampaignNameChanged()
    End Sub
    Partial Private Sub OnCampaignCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCampaignCodeChanged()
    End Sub
    Partial Private Sub OnCampaignTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCampaignTypeChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnHasPremiumChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnHasPremiumChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnCreateByChanging(value As String)
    End Sub
    Partial Private Sub OnCreateByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnRiskGroupIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRiskGroupIDChanged()
    End Sub
    Partial Private Sub OnPrefixClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPrefixClientCodeChanged()
    End Sub
    Partial Private Sub OnCampaignDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnCampaignDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblCarPremiums = New EntitySet(Of tblCarPremium)(AddressOf Me.attach_tblCarPremiums, AddressOf Me.detach_tblCarPremiums)
		Me._tblProjectCampaigns = New EntitySet(Of tblProjectCampaign)(AddressOf Me.attach_tblProjectCampaigns, AddressOf Me.detach_tblProjectCampaigns)
		Me._tblCampaign_CommIns = New EntitySet(Of tblCampaign_CommIn)(AddressOf Me.attach_tblCampaign_CommIns, AddressOf Me.detach_tblCampaign_CommIns)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CampaignID() As Integer
		Get
			Return Me._CampaignID
		End Get
		Set
			If ((Me._CampaignID = value)  _
						= false) Then
				Me.OnCampaignIDChanging(value)
				Me.SendPropertyChanging
				Me._CampaignID = value
				Me.SendPropertyChanged("CampaignID")
				Me.OnCampaignIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignName", DbType:="VarChar(100)")>  _
	Public Property CampaignName() As String
		Get
			Return Me._CampaignName
		End Get
		Set
			If (String.Equals(Me._CampaignName, value) = false) Then
				Me.OnCampaignNameChanging(value)
				Me.SendPropertyChanging
				Me._CampaignName = value
				Me.SendPropertyChanged("CampaignName")
				Me.OnCampaignNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignCode", DbType:="VarChar(50)")>  _
	Public Property CampaignCode() As String
		Get
			Return Me._CampaignCode
		End Get
		Set
			If (String.Equals(Me._CampaignCode, value) = false) Then
				Me.OnCampaignCodeChanging(value)
				Me.SendPropertyChanging
				Me._CampaignCode = value
				Me.SendPropertyChanged("CampaignCode")
				Me.OnCampaignCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignType", DbType:="VarChar(50)")>  _
	Public Property CampaignType() As String
		Get
			Return Me._CampaignType
		End Get
		Set
			If (String.Equals(Me._CampaignType, value) = false) Then
				Me.OnCampaignTypeChanging(value)
				Me.SendPropertyChanging
				Me._CampaignType = value
				Me.SendPropertyChanged("CampaignType")
				Me.OnCampaignTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasPremium", DbType:="Bit")>  _
	Public Property HasPremium() As System.Nullable(Of Boolean)
		Get
			Return Me._HasPremium
		End Get
		Set
			If (Me._HasPremium.Equals(value) = false) Then
				Me.OnHasPremiumChanging(value)
				Me.SendPropertyChanging
				Me._HasPremium = value
				Me.SendPropertyChanged("HasPremium")
				Me.OnHasPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateBy", DbType:="VarChar(50)")>  _
	Public Property CreateBy() As String
		Get
			Return Me._CreateBy
		End Get
		Set
			If (String.Equals(Me._CreateBy, value) = false) Then
				Me.OnCreateByChanging(value)
				Me.SendPropertyChanging
				Me._CreateBy = value
				Me.SendPropertyChanged("CreateBy")
				Me.OnCreateByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me.OnRiskGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupID = value
				Me.SendPropertyChanged("RiskGroupID")
				Me.OnRiskGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrefixClientCode", DbType:="VarChar(2)")>  _
	Public Property PrefixClientCode() As String
		Get
			Return Me._PrefixClientCode
		End Get
		Set
			If (String.Equals(Me._PrefixClientCode, value) = false) Then
				Me.OnPrefixClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._PrefixClientCode = value
				Me.SendPropertyChanged("PrefixClientCode")
				Me.OnPrefixClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignDescription", DbType:="VarChar(255)")>  _
	Public Property CampaignDescription() As String
		Get
			Return Me._CampaignDescription
		End Get
		Set
			If (String.Equals(Me._CampaignDescription, value) = false) Then
				Me.OnCampaignDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._CampaignDescription = value
				Me.SendPropertyChanged("CampaignDescription")
				Me.OnCampaignDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCampaign_tblCarPremium", Storage:="_tblCarPremiums", ThisKey:="CampaignID", OtherKey:="CampaignID")>  _
	Public Property tblCarPremiums() As EntitySet(Of tblCarPremium)
		Get
			Return Me._tblCarPremiums
		End Get
		Set
			Me._tblCarPremiums.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCampaign_tblProjectCampaign", Storage:="_tblProjectCampaigns", ThisKey:="CampaignID", OtherKey:="CampaignID")>  _
	Public Property tblProjectCampaigns() As EntitySet(Of tblProjectCampaign)
		Get
			Return Me._tblProjectCampaigns
		End Get
		Set
			Me._tblProjectCampaigns.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCampaign_tblCampaign_CommIn", Storage:="_tblCampaign_CommIns", ThisKey:="CampaignID", OtherKey:="CampaignID")>  _
	Public Property tblCampaign_CommIns() As EntitySet(Of tblCampaign_CommIn)
		Get
			Return Me._tblCampaign_CommIns
		End Get
		Set
			Me._tblCampaign_CommIns.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblCarPremiums(ByVal entity As tblCarPremium)
		Me.SendPropertyChanging
		entity.tblCampaign = Me
	End Sub
	
	Private Sub detach_tblCarPremiums(ByVal entity As tblCarPremium)
		Me.SendPropertyChanging
		entity.tblCampaign = Nothing
	End Sub
	
	Private Sub attach_tblProjectCampaigns(ByVal entity As tblProjectCampaign)
		Me.SendPropertyChanging
		entity.tblCampaign = Me
	End Sub
	
	Private Sub detach_tblProjectCampaigns(ByVal entity As tblProjectCampaign)
		Me.SendPropertyChanging
		entity.tblCampaign = Nothing
	End Sub
	
	Private Sub attach_tblCampaign_CommIns(ByVal entity As tblCampaign_CommIn)
		Me.SendPropertyChanging
		entity.tblCampaign = Me
	End Sub
	
	Private Sub detach_tblCampaign_CommIns(ByVal entity As tblCampaign_CommIn)
		Me.SendPropertyChanging
		entity.tblCampaign = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCarBrandModel")>  _
Partial Public Class tblCarBrandModel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Name As String
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _CarGroup As System.Nullable(Of Integer)
	
	Private _CarBodyType As String
	
	Private _CarType As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnParentIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParentIDChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCarGroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarGroupChanged()
    End Sub
    Partial Private Sub OnCarBodyTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCarBodyTypeChanged()
    End Sub
    Partial Private Sub OnCarTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me.OnParentIDChanging(value)
				Me.SendPropertyChanging
				Me._ParentID = value
				Me.SendPropertyChanged("ParentID")
				Me.OnParentIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarGroup", DbType:="Int")>  _
	Public Property CarGroup() As System.Nullable(Of Integer)
		Get
			Return Me._CarGroup
		End Get
		Set
			If (Me._CarGroup.Equals(value) = false) Then
				Me.OnCarGroupChanging(value)
				Me.SendPropertyChanging
				Me._CarGroup = value
				Me.SendPropertyChanged("CarGroup")
				Me.OnCarGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBodyType", DbType:="VarChar(50)")>  _
	Public Property CarBodyType() As String
		Get
			Return Me._CarBodyType
		End Get
		Set
			If (String.Equals(Me._CarBodyType, value) = false) Then
				Me.OnCarBodyTypeChanging(value)
				Me.SendPropertyChanging
				Me._CarBodyType = value
				Me.SendPropertyChanged("CarBodyType")
				Me.OnCarBodyTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarType", DbType:="Int")>  _
	Public Property CarType() As System.Nullable(Of Integer)
		Get
			Return Me._CarType
		End Get
		Set
			If (Me._CarType.Equals(value) = false) Then
				Me.OnCarTypeChanging(value)
				Me.SendPropertyChanging
				Me._CarType = value
				Me.SendPropertyChanged("CarType")
				Me.OnCarTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCarPremium")>  _
Partial Public Class tblCarPremium
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PremiumID As Integer
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Private _Underwriter As String
	
	Private _Name As String
	
	Private _Brand As String
	
	Private _Model As String
	
	Private _ModelCode As String
	
	Private _CarPrice As System.Nullable(Of Decimal)
	
	Private _SumInsuredFrom As System.Nullable(Of Decimal)
	
	Private _SumInsuredTo As System.Nullable(Of Decimal)
	
	Private _NetPremium As System.Nullable(Of Decimal)
	
	Private _Stamp As System.Nullable(Of Decimal)
	
	Private _Vat As System.Nullable(Of Decimal)
	
	Private _GrossPremium As System.Nullable(Of Decimal)
	
	Private _Discount As System.Nullable(Of Decimal)
	
	Private _TotalPremium As System.Nullable(Of Decimal)
	
	Private _WHT_Rate1 As String
	
	Private _WHT_Rate2 As String
	
	Private _WHT_Rate3 As String
	
	Private _SinglePrice As System.Nullable(Of Decimal)
	
	Private _CarAge As System.Nullable(Of Integer)
	
	Private _CoverageID As System.Nullable(Of Integer)
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _CreateBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifyBy As String
	
	Private _tblCampaign As EntityRef(Of tblCampaign)
	
	Private _tblCoverage As EntityRef(Of tblCoverage)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPremiumIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPremiumIDChanged()
    End Sub
    Partial Private Sub OnCampaignIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCampaignIDChanged()
    End Sub
    Partial Private Sub OnUnderwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUnderwriterChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnBrandChanging(value As String)
    End Sub
    Partial Private Sub OnBrandChanged()
    End Sub
    Partial Private Sub OnModelChanging(value As String)
    End Sub
    Partial Private Sub OnModelChanged()
    End Sub
    Partial Private Sub OnModelCodeChanging(value As String)
    End Sub
    Partial Private Sub OnModelCodeChanged()
    End Sub
    Partial Private Sub OnCarPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCarPriceChanged()
    End Sub
    Partial Private Sub OnSumInsuredFromChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSumInsuredFromChanged()
    End Sub
    Partial Private Sub OnSumInsuredToChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSumInsuredToChanged()
    End Sub
    Partial Private Sub OnNetPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNetPremiumChanged()
    End Sub
    Partial Private Sub OnStampChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnStampChanged()
    End Sub
    Partial Private Sub OnVatChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVatChanged()
    End Sub
    Partial Private Sub OnGrossPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGrossPremiumChanged()
    End Sub
    Partial Private Sub OnDiscountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountChanged()
    End Sub
    Partial Private Sub OnTotalPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalPremiumChanged()
    End Sub
    Partial Private Sub OnWHT_Rate1Changing(value As String)
    End Sub
    Partial Private Sub OnWHT_Rate1Changed()
    End Sub
    Partial Private Sub OnWHT_Rate2Changing(value As String)
    End Sub
    Partial Private Sub OnWHT_Rate2Changed()
    End Sub
    Partial Private Sub OnWHT_Rate3Changing(value As String)
    End Sub
    Partial Private Sub OnWHT_Rate3Changed()
    End Sub
    Partial Private Sub OnSinglePriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSinglePriceChanged()
    End Sub
    Partial Private Sub OnCarAgeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarAgeChanged()
    End Sub
    Partial Private Sub OnCoverageIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCoverageIDChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnCreateByChanging(value As String)
    End Sub
    Partial Private Sub OnCreateByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblCampaign = CType(Nothing, EntityRef(Of tblCampaign))
		Me._tblCoverage = CType(Nothing, EntityRef(Of tblCoverage))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PremiumID() As Integer
		Get
			Return Me._PremiumID
		End Get
		Set
			If ((Me._PremiumID = value)  _
						= false) Then
				Me.OnPremiumIDChanging(value)
				Me.SendPropertyChanging
				Me._PremiumID = value
				Me.SendPropertyChanged("PremiumID")
				Me.OnPremiumIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				If Me._tblCampaign.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCampaignIDChanging(value)
				Me.SendPropertyChanging
				Me._CampaignID = value
				Me.SendPropertyChanged("CampaignID")
				Me.OnCampaignIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8)")>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me.OnUnderwriterChanging(value)
				Me.SendPropertyChanging
				Me._Underwriter = value
				Me.SendPropertyChanged("Underwriter")
				Me.OnUnderwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brand", DbType:="VarChar(100)")>  _
	Public Property Brand() As String
		Get
			Return Me._Brand
		End Get
		Set
			If (String.Equals(Me._Brand, value) = false) Then
				Me.OnBrandChanging(value)
				Me.SendPropertyChanging
				Me._Brand = value
				Me.SendPropertyChanged("Brand")
				Me.OnBrandChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="VarChar(100)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me.OnModelChanging(value)
				Me.SendPropertyChanging
				Me._Model = value
				Me.SendPropertyChanged("Model")
				Me.OnModelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelCode", DbType:="VarChar(100)")>  _
	Public Property ModelCode() As String
		Get
			Return Me._ModelCode
		End Get
		Set
			If (String.Equals(Me._ModelCode, value) = false) Then
				Me.OnModelCodeChanging(value)
				Me.SendPropertyChanging
				Me._ModelCode = value
				Me.SendPropertyChanged("ModelCode")
				Me.OnModelCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarPrice", DbType:="Decimal(18,2)")>  _
	Public Property CarPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._CarPrice
		End Get
		Set
			If (Me._CarPrice.Equals(value) = false) Then
				Me.OnCarPriceChanging(value)
				Me.SendPropertyChanging
				Me._CarPrice = value
				Me.SendPropertyChanged("CarPrice")
				Me.OnCarPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsuredFrom", DbType:="Decimal(18,2)")>  _
	Public Property SumInsuredFrom() As System.Nullable(Of Decimal)
		Get
			Return Me._SumInsuredFrom
		End Get
		Set
			If (Me._SumInsuredFrom.Equals(value) = false) Then
				Me.OnSumInsuredFromChanging(value)
				Me.SendPropertyChanging
				Me._SumInsuredFrom = value
				Me.SendPropertyChanged("SumInsuredFrom")
				Me.OnSumInsuredFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsuredTo", DbType:="Decimal(18,2)")>  _
	Public Property SumInsuredTo() As System.Nullable(Of Decimal)
		Get
			Return Me._SumInsuredTo
		End Get
		Set
			If (Me._SumInsuredTo.Equals(value) = false) Then
				Me.OnSumInsuredToChanging(value)
				Me.SendPropertyChanging
				Me._SumInsuredTo = value
				Me.SendPropertyChanged("SumInsuredTo")
				Me.OnSumInsuredToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetPremium", DbType:="Decimal(18,2)")>  _
	Public Property NetPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._NetPremium
		End Get
		Set
			If (Me._NetPremium.Equals(value) = false) Then
				Me.OnNetPremiumChanging(value)
				Me.SendPropertyChanging
				Me._NetPremium = value
				Me.SendPropertyChanged("NetPremium")
				Me.OnNetPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stamp", DbType:="Decimal(18,2)")>  _
	Public Property Stamp() As System.Nullable(Of Decimal)
		Get
			Return Me._Stamp
		End Get
		Set
			If (Me._Stamp.Equals(value) = false) Then
				Me.OnStampChanging(value)
				Me.SendPropertyChanging
				Me._Stamp = value
				Me.SendPropertyChanged("Stamp")
				Me.OnStampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vat", DbType:="Decimal(18,2)")>  _
	Public Property Vat() As System.Nullable(Of Decimal)
		Get
			Return Me._Vat
		End Get
		Set
			If (Me._Vat.Equals(value) = false) Then
				Me.OnVatChanging(value)
				Me.SendPropertyChanging
				Me._Vat = value
				Me.SendPropertyChanged("Vat")
				Me.OnVatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossPremium", DbType:="Decimal(18,2)")>  _
	Public Property GrossPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._GrossPremium
		End Get
		Set
			If (Me._GrossPremium.Equals(value) = false) Then
				Me.OnGrossPremiumChanging(value)
				Me.SendPropertyChanging
				Me._GrossPremium = value
				Me.SendPropertyChanged("GrossPremium")
				Me.OnGrossPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discount", DbType:="Decimal(18,2)")>  _
	Public Property Discount() As System.Nullable(Of Decimal)
		Get
			Return Me._Discount
		End Get
		Set
			If (Me._Discount.Equals(value) = false) Then
				Me.OnDiscountChanging(value)
				Me.SendPropertyChanging
				Me._Discount = value
				Me.SendPropertyChanged("Discount")
				Me.OnDiscountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPremium", DbType:="Decimal(18,2)")>  _
	Public Property TotalPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalPremium
		End Get
		Set
			If (Me._TotalPremium.Equals(value) = false) Then
				Me.OnTotalPremiumChanging(value)
				Me.SendPropertyChanging
				Me._TotalPremium = value
				Me.SendPropertyChanged("TotalPremium")
				Me.OnTotalPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHT_Rate1", DbType:="VarChar(50)")>  _
	Public Property WHT_Rate1() As String
		Get
			Return Me._WHT_Rate1
		End Get
		Set
			If (String.Equals(Me._WHT_Rate1, value) = false) Then
				Me.OnWHT_Rate1Changing(value)
				Me.SendPropertyChanging
				Me._WHT_Rate1 = value
				Me.SendPropertyChanged("WHT_Rate1")
				Me.OnWHT_Rate1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHT_Rate2", DbType:="VarChar(50)")>  _
	Public Property WHT_Rate2() As String
		Get
			Return Me._WHT_Rate2
		End Get
		Set
			If (String.Equals(Me._WHT_Rate2, value) = false) Then
				Me.OnWHT_Rate2Changing(value)
				Me.SendPropertyChanging
				Me._WHT_Rate2 = value
				Me.SendPropertyChanged("WHT_Rate2")
				Me.OnWHT_Rate2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHT_Rate3", DbType:="VarChar(50)")>  _
	Public Property WHT_Rate3() As String
		Get
			Return Me._WHT_Rate3
		End Get
		Set
			If (String.Equals(Me._WHT_Rate3, value) = false) Then
				Me.OnWHT_Rate3Changing(value)
				Me.SendPropertyChanging
				Me._WHT_Rate3 = value
				Me.SendPropertyChanged("WHT_Rate3")
				Me.OnWHT_Rate3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SinglePrice", DbType:="Decimal(18,2)")>  _
	Public Property SinglePrice() As System.Nullable(Of Decimal)
		Get
			Return Me._SinglePrice
		End Get
		Set
			If (Me._SinglePrice.Equals(value) = false) Then
				Me.OnSinglePriceChanging(value)
				Me.SendPropertyChanging
				Me._SinglePrice = value
				Me.SendPropertyChanged("SinglePrice")
				Me.OnSinglePriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarAge", DbType:="Int")>  _
	Public Property CarAge() As System.Nullable(Of Integer)
		Get
			Return Me._CarAge
		End Get
		Set
			If (Me._CarAge.Equals(value) = false) Then
				Me.OnCarAgeChanging(value)
				Me.SendPropertyChanging
				Me._CarAge = value
				Me.SendPropertyChanged("CarAge")
				Me.OnCarAgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoverageID", DbType:="Int")>  _
	Public Property CoverageID() As System.Nullable(Of Integer)
		Get
			Return Me._CoverageID
		End Get
		Set
			If (Me._CoverageID.Equals(value) = false) Then
				If Me._tblCoverage.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCoverageIDChanging(value)
				Me.SendPropertyChanging
				Me._CoverageID = value
				Me.SendPropertyChanged("CoverageID")
				Me.OnCoverageIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateBy", DbType:="VarChar(50)")>  _
	Public Property CreateBy() As String
		Get
			Return Me._CreateBy
		End Get
		Set
			If (String.Equals(Me._CreateBy, value) = false) Then
				Me.OnCreateByChanging(value)
				Me.SendPropertyChanging
				Me._CreateBy = value
				Me.SendPropertyChanged("CreateBy")
				Me.OnCreateByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCampaign_tblCarPremium", Storage:="_tblCampaign", ThisKey:="CampaignID", OtherKey:="CampaignID", IsForeignKey:=true)>  _
	Public Property tblCampaign() As tblCampaign
		Get
			Return Me._tblCampaign.Entity
		End Get
		Set
			Dim previousValue As tblCampaign = Me._tblCampaign.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblCampaign.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblCampaign.Entity = Nothing
					previousValue.tblCarPremiums.Remove(Me)
				End If
				Me._tblCampaign.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblCarPremiums.Add(Me)
					Me._CampaignID = value.CampaignID
				Else
					Me._CampaignID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblCampaign")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCoverage_tblCarPremium", Storage:="_tblCoverage", ThisKey:="CoverageID", OtherKey:="CoverageID", IsForeignKey:=true)>  _
	Public Property tblCoverage() As tblCoverage
		Get
			Return Me._tblCoverage.Entity
		End Get
		Set
			Dim previousValue As tblCoverage = Me._tblCoverage.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblCoverage.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblCoverage.Entity = Nothing
					previousValue.tblCarPremiums.Remove(Me)
				End If
				Me._tblCoverage.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblCarPremiums.Add(Me)
					Me._CoverageID = value.CoverageID
				Else
					Me._CoverageID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblCoverage")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCarProp")>  _
Partial Public Class tblCarProp
	
	Private _CarProp As Integer
	
	Private _txtCarProp As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarProp", DbType:="Int NOT NULL")>  _
	Public Property CarProp() As Integer
		Get
			Return Me._CarProp
		End Get
		Set
			If ((Me._CarProp = value)  _
						= false) Then
				Me._CarProp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtCarProp", DbType:="NVarChar(255)")>  _
	Public Property txtCarProp() As String
		Get
			Return Me._txtCarProp
		End Get
		Set
			If (String.Equals(Me._txtCarProp, value) = false) Then
				Me._txtCarProp = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCarType")>  _
Partial Public Class tblCarType
	
	Private _CarType As Integer
	
	Private _CarTypeName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarType", DbType:="Int NOT NULL")>  _
	Public Property CarType() As Integer
		Get
			Return Me._CarType
		End Get
		Set
			If ((Me._CarType = value)  _
						= false) Then
				Me._CarType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarTypeName", DbType:="VarChar(50)")>  _
	Public Property CarTypeName() As String
		Get
			Return Me._CarTypeName
		End Get
		Set
			If (String.Equals(Me._CarTypeName, value) = false) Then
				Me._CarTypeName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCarUse")>  _
Partial Public Class tblCarUse
	
	Private _CarUse As String
	
	Private _txtCarUse As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarUse", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CarUse() As String
		Get
			Return Me._CarUse
		End Get
		Set
			If (String.Equals(Me._CarUse, value) = false) Then
				Me._CarUse = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtCarUse", DbType:="NVarChar(50)")>  _
	Public Property txtCarUse() As String
		Get
			Return Me._txtCarUse
		End Get
		Set
			If (String.Equals(Me._txtCarUse, value) = false) Then
				Me._txtCarUse = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClassOfRisk")>  _
Partial Public Class tblClassOfRisk
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _RiskGroupID As Integer
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpireDate As System.Nullable(Of Date)
	
	Private _tblCampaign_CommIns As EntitySet(Of tblCampaign_CommIn)
	
	Private _Register_ClassOfRisk As EntityRef(Of Register_ClassOfRisk)
	
	Private _tblRiskGroup As EntityRef(Of tblRiskGroup)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnRiskGroupIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRiskGroupIDChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpireDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpireDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblCampaign_CommIns = New EntitySet(Of tblCampaign_CommIn)(AddressOf Me.attach_tblCampaign_CommIns, AddressOf Me.detach_tblCampaign_CommIns)
		Me._Register_ClassOfRisk = CType(Nothing, EntityRef(Of Register_ClassOfRisk))
		Me._tblRiskGroup = CType(Nothing, EntityRef(Of tblRiskGroup))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				If Me._Register_ClassOfRisk.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int NOT NULL")>  _
	Public Property RiskGroupID() As Integer
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If ((Me._RiskGroupID = value)  _
						= false) Then
				If Me._tblRiskGroup.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRiskGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupID = value
				Me.SendPropertyChanged("RiskGroupID")
				Me.OnRiskGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpireDate", DbType:="DateTime")>  _
	Public Property ExpireDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpireDate
		End Get
		Set
			If (Me._ExpireDate.Equals(value) = false) Then
				Me.OnExpireDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpireDate = value
				Me.SendPropertyChanged("ExpireDate")
				Me.OnExpireDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblClassOfRisk_tblCampaign_CommIn", Storage:="_tblCampaign_CommIns", ThisKey:="Risk", OtherKey:="Risk")>  _
	Public Property tblCampaign_CommIns() As EntitySet(Of tblCampaign_CommIn)
		Get
			Return Me._tblCampaign_CommIns
		End Get
		Set
			Me._tblCampaign_CommIns.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_tblClassOfRisk", Storage:="_Register_ClassOfRisk", ThisKey:="Risk", OtherKey:="Risk", IsForeignKey:=true)>  _
	Public Property Register_ClassOfRisk() As Register_ClassOfRisk
		Get
			Return Me._Register_ClassOfRisk.Entity
		End Get
		Set
			Dim previousValue As Register_ClassOfRisk = Me._Register_ClassOfRisk.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Register_ClassOfRisk.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Register_ClassOfRisk.Entity = Nothing
					previousValue.tblClassOfRisk = Nothing
				End If
				Me._Register_ClassOfRisk.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblClassOfRisk = Me
					Me._Risk = value.Risk
				Else
					Me._Risk = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Register_ClassOfRisk")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblRiskGroup_tblClassOfRisk", Storage:="_tblRiskGroup", ThisKey:="RiskGroupID", OtherKey:="RiskGroupID", IsForeignKey:=true)>  _
	Public Property tblRiskGroup() As tblRiskGroup
		Get
			Return Me._tblRiskGroup.Entity
		End Get
		Set
			Dim previousValue As tblRiskGroup = Me._tblRiskGroup.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblRiskGroup.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblRiskGroup.Entity = Nothing
					previousValue.tblClassOfRisks.Remove(Me)
				End If
				Me._tblRiskGroup.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblClassOfRisks.Add(Me)
					Me._RiskGroupID = value.RiskGroupID
				Else
					Me._RiskGroupID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("tblRiskGroup")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblCampaign_CommIns(ByVal entity As tblCampaign_CommIn)
		Me.SendPropertyChanging
		entity.tblClassOfRisk = Me
	End Sub
	
	Private Sub detach_tblCampaign_CommIns(ByVal entity As tblCampaign_CommIn)
		Me.SendPropertyChanging
		entity.tblClassOfRisk = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCMIPremium")>  _
Partial Public Class tblCMIPremium
	
	Private _CarUse As String
	
	Private _CMI_PremiumCode As String
	
	Private _CMI_Description As String
	
	Private _StickCarType As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _InOrder As System.Nullable(Of Integer)
	
	Private _CMINetPremium As System.Nullable(Of Decimal)
	
	Private _CMIVat As System.Nullable(Of Decimal)
	
	Private _CMIStamp As System.Nullable(Of Decimal)
	
	Private _CMIGrossPremium As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarUse", DbType:="VarChar(8)")>  _
	Public Property CarUse() As String
		Get
			Return Me._CarUse
		End Get
		Set
			If (String.Equals(Me._CarUse, value) = false) Then
				Me._CarUse = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_PremiumCode", DbType:="VarChar(8)")>  _
	Public Property CMI_PremiumCode() As String
		Get
			Return Me._CMI_PremiumCode
		End Get
		Set
			If (String.Equals(Me._CMI_PremiumCode, value) = false) Then
				Me._CMI_PremiumCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_Description", DbType:="VarChar(100)")>  _
	Public Property CMI_Description() As String
		Get
			Return Me._CMI_Description
		End Get
		Set
			If (String.Equals(Me._CMI_Description, value) = false) Then
				Me._CMI_Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StickCarType", DbType:="VarChar(50)")>  _
	Public Property StickCarType() As String
		Get
			Return Me._StickCarType
		End Get
		Set
			If (String.Equals(Me._StickCarType, value) = false) Then
				Me._StickCarType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InOrder", DbType:="Int")>  _
	Public Property InOrder() As System.Nullable(Of Integer)
		Get
			Return Me._InOrder
		End Get
		Set
			If (Me._InOrder.Equals(value) = false) Then
				Me._InOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMINetPremium", DbType:="Decimal(18,2)")>  _
	Public Property CMINetPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._CMINetPremium
		End Get
		Set
			If (Me._CMINetPremium.Equals(value) = false) Then
				Me._CMINetPremium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIVat", DbType:="Decimal(18,2)")>  _
	Public Property CMIVat() As System.Nullable(Of Decimal)
		Get
			Return Me._CMIVat
		End Get
		Set
			If (Me._CMIVat.Equals(value) = false) Then
				Me._CMIVat = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIStamp", DbType:="Decimal(18,2)")>  _
	Public Property CMIStamp() As System.Nullable(Of Decimal)
		Get
			Return Me._CMIStamp
		End Get
		Set
			If (Me._CMIStamp.Equals(value) = false) Then
				Me._CMIStamp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIGrossPremium", DbType:="Decimal(18,2)")>  _
	Public Property CMIGrossPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._CMIGrossPremium
		End Get
		Set
			If (Me._CMIGrossPremium.Equals(value) = false) Then
				Me._CMIGrossPremium = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCoverage")>  _
Partial Public Class tblCoverage
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CoverageID As Integer
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _Coverage1 As String
	
	Private _Coverage2 As String
	
	Private _Coverage3 As String
	
	Private _Coverage4 As String
	
	Private _Coverage5 As String
	
	Private _Coverage6 As String
	
	Private _Coverage7 As String
	
	Private _Coverage8 As String
	
	Private _Coverage9 As String
	
	Private _Coverage10 As String
	
	Private _Coverage11 As String
	
	Private _Coverage12 As String
	
	Private _Coverage13 As String
	
	Private _Coverage14 As String
	
	Private _Coverage15 As String
	
	Private _Coverage16 As String
	
	Private _Coverage17 As String
	
	Private _Coverage18 As String
	
	Private _Coverage19 As String
	
	Private _Coverage20 As String
	
	Private _Coverage21 As String
	
	Private _Coverage22 As String
	
	Private _Coverage23 As String
	
	Private _Coverage24 As String
	
	Private _Coverage25 As String
	
	Private _Coverage26 As String
	
	Private _Coverage27 As String
	
	Private _Coverage28 As String
	
	Private _Coverage29 As String
	
	Private _Coverage30 As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _tblCarPremiums As EntitySet(Of tblCarPremium)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCoverageIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCoverageIDChanged()
    End Sub
    Partial Private Sub OnRiskGroupIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRiskGroupIDChanged()
    End Sub
    Partial Private Sub OnCoverage1Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage1Changed()
    End Sub
    Partial Private Sub OnCoverage2Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage2Changed()
    End Sub
    Partial Private Sub OnCoverage3Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage3Changed()
    End Sub
    Partial Private Sub OnCoverage4Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage4Changed()
    End Sub
    Partial Private Sub OnCoverage5Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage5Changed()
    End Sub
    Partial Private Sub OnCoverage6Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage6Changed()
    End Sub
    Partial Private Sub OnCoverage7Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage7Changed()
    End Sub
    Partial Private Sub OnCoverage8Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage8Changed()
    End Sub
    Partial Private Sub OnCoverage9Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage9Changed()
    End Sub
    Partial Private Sub OnCoverage10Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage10Changed()
    End Sub
    Partial Private Sub OnCoverage11Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage11Changed()
    End Sub
    Partial Private Sub OnCoverage12Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage12Changed()
    End Sub
    Partial Private Sub OnCoverage13Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage13Changed()
    End Sub
    Partial Private Sub OnCoverage14Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage14Changed()
    End Sub
    Partial Private Sub OnCoverage15Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage15Changed()
    End Sub
    Partial Private Sub OnCoverage16Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage16Changed()
    End Sub
    Partial Private Sub OnCoverage17Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage17Changed()
    End Sub
    Partial Private Sub OnCoverage18Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage18Changed()
    End Sub
    Partial Private Sub OnCoverage19Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage19Changed()
    End Sub
    Partial Private Sub OnCoverage20Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage20Changed()
    End Sub
    Partial Private Sub OnCoverage21Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage21Changed()
    End Sub
    Partial Private Sub OnCoverage22Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage22Changed()
    End Sub
    Partial Private Sub OnCoverage23Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage23Changed()
    End Sub
    Partial Private Sub OnCoverage24Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage24Changed()
    End Sub
    Partial Private Sub OnCoverage25Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage25Changed()
    End Sub
    Partial Private Sub OnCoverage26Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage26Changed()
    End Sub
    Partial Private Sub OnCoverage27Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage27Changed()
    End Sub
    Partial Private Sub OnCoverage28Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage28Changed()
    End Sub
    Partial Private Sub OnCoverage29Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage29Changed()
    End Sub
    Partial Private Sub OnCoverage30Changing(value As String)
    End Sub
    Partial Private Sub OnCoverage30Changed()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblCarPremiums = New EntitySet(Of tblCarPremium)(AddressOf Me.attach_tblCarPremiums, AddressOf Me.detach_tblCarPremiums)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoverageID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CoverageID() As Integer
		Get
			Return Me._CoverageID
		End Get
		Set
			If ((Me._CoverageID = value)  _
						= false) Then
				Me.OnCoverageIDChanging(value)
				Me.SendPropertyChanging
				Me._CoverageID = value
				Me.SendPropertyChanged("CoverageID")
				Me.OnCoverageIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me.OnRiskGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupID = value
				Me.SendPropertyChanged("RiskGroupID")
				Me.OnRiskGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage1", DbType:="VarChar(50)")>  _
	Public Property Coverage1() As String
		Get
			Return Me._Coverage1
		End Get
		Set
			If (String.Equals(Me._Coverage1, value) = false) Then
				Me.OnCoverage1Changing(value)
				Me.SendPropertyChanging
				Me._Coverage1 = value
				Me.SendPropertyChanged("Coverage1")
				Me.OnCoverage1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage2", DbType:="VarChar(50)")>  _
	Public Property Coverage2() As String
		Get
			Return Me._Coverage2
		End Get
		Set
			If (String.Equals(Me._Coverage2, value) = false) Then
				Me.OnCoverage2Changing(value)
				Me.SendPropertyChanging
				Me._Coverage2 = value
				Me.SendPropertyChanged("Coverage2")
				Me.OnCoverage2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage3", DbType:="VarChar(50)")>  _
	Public Property Coverage3() As String
		Get
			Return Me._Coverage3
		End Get
		Set
			If (String.Equals(Me._Coverage3, value) = false) Then
				Me.OnCoverage3Changing(value)
				Me.SendPropertyChanging
				Me._Coverage3 = value
				Me.SendPropertyChanged("Coverage3")
				Me.OnCoverage3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage4", DbType:="VarChar(50)")>  _
	Public Property Coverage4() As String
		Get
			Return Me._Coverage4
		End Get
		Set
			If (String.Equals(Me._Coverage4, value) = false) Then
				Me.OnCoverage4Changing(value)
				Me.SendPropertyChanging
				Me._Coverage4 = value
				Me.SendPropertyChanged("Coverage4")
				Me.OnCoverage4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage5", DbType:="VarChar(50)")>  _
	Public Property Coverage5() As String
		Get
			Return Me._Coverage5
		End Get
		Set
			If (String.Equals(Me._Coverage5, value) = false) Then
				Me.OnCoverage5Changing(value)
				Me.SendPropertyChanging
				Me._Coverage5 = value
				Me.SendPropertyChanged("Coverage5")
				Me.OnCoverage5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage6", DbType:="VarChar(50)")>  _
	Public Property Coverage6() As String
		Get
			Return Me._Coverage6
		End Get
		Set
			If (String.Equals(Me._Coverage6, value) = false) Then
				Me.OnCoverage6Changing(value)
				Me.SendPropertyChanging
				Me._Coverage6 = value
				Me.SendPropertyChanged("Coverage6")
				Me.OnCoverage6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage7", DbType:="VarChar(50)")>  _
	Public Property Coverage7() As String
		Get
			Return Me._Coverage7
		End Get
		Set
			If (String.Equals(Me._Coverage7, value) = false) Then
				Me.OnCoverage7Changing(value)
				Me.SendPropertyChanging
				Me._Coverage7 = value
				Me.SendPropertyChanged("Coverage7")
				Me.OnCoverage7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage8", DbType:="VarChar(50)")>  _
	Public Property Coverage8() As String
		Get
			Return Me._Coverage8
		End Get
		Set
			If (String.Equals(Me._Coverage8, value) = false) Then
				Me.OnCoverage8Changing(value)
				Me.SendPropertyChanging
				Me._Coverage8 = value
				Me.SendPropertyChanged("Coverage8")
				Me.OnCoverage8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage9", DbType:="VarChar(50)")>  _
	Public Property Coverage9() As String
		Get
			Return Me._Coverage9
		End Get
		Set
			If (String.Equals(Me._Coverage9, value) = false) Then
				Me.OnCoverage9Changing(value)
				Me.SendPropertyChanging
				Me._Coverage9 = value
				Me.SendPropertyChanged("Coverage9")
				Me.OnCoverage9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage10", DbType:="VarChar(50)")>  _
	Public Property Coverage10() As String
		Get
			Return Me._Coverage10
		End Get
		Set
			If (String.Equals(Me._Coverage10, value) = false) Then
				Me.OnCoverage10Changing(value)
				Me.SendPropertyChanging
				Me._Coverage10 = value
				Me.SendPropertyChanged("Coverage10")
				Me.OnCoverage10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage11", DbType:="VarChar(50)")>  _
	Public Property Coverage11() As String
		Get
			Return Me._Coverage11
		End Get
		Set
			If (String.Equals(Me._Coverage11, value) = false) Then
				Me.OnCoverage11Changing(value)
				Me.SendPropertyChanging
				Me._Coverage11 = value
				Me.SendPropertyChanged("Coverage11")
				Me.OnCoverage11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage12", DbType:="VarChar(50)")>  _
	Public Property Coverage12() As String
		Get
			Return Me._Coverage12
		End Get
		Set
			If (String.Equals(Me._Coverage12, value) = false) Then
				Me.OnCoverage12Changing(value)
				Me.SendPropertyChanging
				Me._Coverage12 = value
				Me.SendPropertyChanged("Coverage12")
				Me.OnCoverage12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage13", DbType:="VarChar(50)")>  _
	Public Property Coverage13() As String
		Get
			Return Me._Coverage13
		End Get
		Set
			If (String.Equals(Me._Coverage13, value) = false) Then
				Me.OnCoverage13Changing(value)
				Me.SendPropertyChanging
				Me._Coverage13 = value
				Me.SendPropertyChanged("Coverage13")
				Me.OnCoverage13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage14", DbType:="VarChar(50)")>  _
	Public Property Coverage14() As String
		Get
			Return Me._Coverage14
		End Get
		Set
			If (String.Equals(Me._Coverage14, value) = false) Then
				Me.OnCoverage14Changing(value)
				Me.SendPropertyChanging
				Me._Coverage14 = value
				Me.SendPropertyChanged("Coverage14")
				Me.OnCoverage14Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage15", DbType:="VarChar(50)")>  _
	Public Property Coverage15() As String
		Get
			Return Me._Coverage15
		End Get
		Set
			If (String.Equals(Me._Coverage15, value) = false) Then
				Me.OnCoverage15Changing(value)
				Me.SendPropertyChanging
				Me._Coverage15 = value
				Me.SendPropertyChanged("Coverage15")
				Me.OnCoverage15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage16", DbType:="VarChar(50)")>  _
	Public Property Coverage16() As String
		Get
			Return Me._Coverage16
		End Get
		Set
			If (String.Equals(Me._Coverage16, value) = false) Then
				Me.OnCoverage16Changing(value)
				Me.SendPropertyChanging
				Me._Coverage16 = value
				Me.SendPropertyChanged("Coverage16")
				Me.OnCoverage16Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage17", DbType:="VarChar(50)")>  _
	Public Property Coverage17() As String
		Get
			Return Me._Coverage17
		End Get
		Set
			If (String.Equals(Me._Coverage17, value) = false) Then
				Me.OnCoverage17Changing(value)
				Me.SendPropertyChanging
				Me._Coverage17 = value
				Me.SendPropertyChanged("Coverage17")
				Me.OnCoverage17Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage18", DbType:="VarChar(50)")>  _
	Public Property Coverage18() As String
		Get
			Return Me._Coverage18
		End Get
		Set
			If (String.Equals(Me._Coverage18, value) = false) Then
				Me.OnCoverage18Changing(value)
				Me.SendPropertyChanging
				Me._Coverage18 = value
				Me.SendPropertyChanged("Coverage18")
				Me.OnCoverage18Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage19", DbType:="VarChar(50)")>  _
	Public Property Coverage19() As String
		Get
			Return Me._Coverage19
		End Get
		Set
			If (String.Equals(Me._Coverage19, value) = false) Then
				Me.OnCoverage19Changing(value)
				Me.SendPropertyChanging
				Me._Coverage19 = value
				Me.SendPropertyChanged("Coverage19")
				Me.OnCoverage19Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage20", DbType:="VarChar(50)")>  _
	Public Property Coverage20() As String
		Get
			Return Me._Coverage20
		End Get
		Set
			If (String.Equals(Me._Coverage20, value) = false) Then
				Me.OnCoverage20Changing(value)
				Me.SendPropertyChanging
				Me._Coverage20 = value
				Me.SendPropertyChanged("Coverage20")
				Me.OnCoverage20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage21", DbType:="VarChar(50)")>  _
	Public Property Coverage21() As String
		Get
			Return Me._Coverage21
		End Get
		Set
			If (String.Equals(Me._Coverage21, value) = false) Then
				Me.OnCoverage21Changing(value)
				Me.SendPropertyChanging
				Me._Coverage21 = value
				Me.SendPropertyChanged("Coverage21")
				Me.OnCoverage21Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage22", DbType:="VarChar(50)")>  _
	Public Property Coverage22() As String
		Get
			Return Me._Coverage22
		End Get
		Set
			If (String.Equals(Me._Coverage22, value) = false) Then
				Me.OnCoverage22Changing(value)
				Me.SendPropertyChanging
				Me._Coverage22 = value
				Me.SendPropertyChanged("Coverage22")
				Me.OnCoverage22Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage23", DbType:="VarChar(50)")>  _
	Public Property Coverage23() As String
		Get
			Return Me._Coverage23
		End Get
		Set
			If (String.Equals(Me._Coverage23, value) = false) Then
				Me.OnCoverage23Changing(value)
				Me.SendPropertyChanging
				Me._Coverage23 = value
				Me.SendPropertyChanged("Coverage23")
				Me.OnCoverage23Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage24", DbType:="VarChar(50)")>  _
	Public Property Coverage24() As String
		Get
			Return Me._Coverage24
		End Get
		Set
			If (String.Equals(Me._Coverage24, value) = false) Then
				Me.OnCoverage24Changing(value)
				Me.SendPropertyChanging
				Me._Coverage24 = value
				Me.SendPropertyChanged("Coverage24")
				Me.OnCoverage24Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage25", DbType:="VarChar(50)")>  _
	Public Property Coverage25() As String
		Get
			Return Me._Coverage25
		End Get
		Set
			If (String.Equals(Me._Coverage25, value) = false) Then
				Me.OnCoverage25Changing(value)
				Me.SendPropertyChanging
				Me._Coverage25 = value
				Me.SendPropertyChanged("Coverage25")
				Me.OnCoverage25Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage26", DbType:="VarChar(50)")>  _
	Public Property Coverage26() As String
		Get
			Return Me._Coverage26
		End Get
		Set
			If (String.Equals(Me._Coverage26, value) = false) Then
				Me.OnCoverage26Changing(value)
				Me.SendPropertyChanging
				Me._Coverage26 = value
				Me.SendPropertyChanged("Coverage26")
				Me.OnCoverage26Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage27", DbType:="VarChar(50)")>  _
	Public Property Coverage27() As String
		Get
			Return Me._Coverage27
		End Get
		Set
			If (String.Equals(Me._Coverage27, value) = false) Then
				Me.OnCoverage27Changing(value)
				Me.SendPropertyChanging
				Me._Coverage27 = value
				Me.SendPropertyChanged("Coverage27")
				Me.OnCoverage27Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage28", DbType:="VarChar(50)")>  _
	Public Property Coverage28() As String
		Get
			Return Me._Coverage28
		End Get
		Set
			If (String.Equals(Me._Coverage28, value) = false) Then
				Me.OnCoverage28Changing(value)
				Me.SendPropertyChanging
				Me._Coverage28 = value
				Me.SendPropertyChanged("Coverage28")
				Me.OnCoverage28Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage29", DbType:="VarChar(50)")>  _
	Public Property Coverage29() As String
		Get
			Return Me._Coverage29
		End Get
		Set
			If (String.Equals(Me._Coverage29, value) = false) Then
				Me.OnCoverage29Changing(value)
				Me.SendPropertyChanging
				Me._Coverage29 = value
				Me.SendPropertyChanged("Coverage29")
				Me.OnCoverage29Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage30", DbType:="VarChar(50)")>  _
	Public Property Coverage30() As String
		Get
			Return Me._Coverage30
		End Get
		Set
			If (String.Equals(Me._Coverage30, value) = false) Then
				Me.OnCoverage30Changing(value)
				Me.SendPropertyChanging
				Me._Coverage30 = value
				Me.SendPropertyChanged("Coverage30")
				Me.OnCoverage30Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCoverage_tblCarPremium", Storage:="_tblCarPremiums", ThisKey:="CoverageID", OtherKey:="CoverageID")>  _
	Public Property tblCarPremiums() As EntitySet(Of tblCarPremium)
		Get
			Return Me._tblCarPremiums
		End Get
		Set
			Me._tblCarPremiums.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblCarPremiums(ByVal entity As tblCarPremium)
		Me.SendPropertyChanging
		entity.tblCoverage = Me
	End Sub
	
	Private Sub detach_tblCarPremiums(ByVal entity As tblCarPremium)
		Me.SendPropertyChanging
		entity.tblCoverage = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblCoverListMaster")>  _
Partial Public Class tblCoverListMaster
	
	Private _Id As Integer
	
	Private _CoverType As String
	
	Private _Coverage As System.Nullable(Of Decimal)
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me._Id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoverType", DbType:="VarChar(10)")>  _
	Public Property CoverType() As String
		Get
			Return Me._CoverType
		End Get
		Set
			If (String.Equals(Me._CoverType, value) = false) Then
				Me._CoverType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage", DbType:="Decimal(18,0)")>  _
	Public Property Coverage() As System.Nullable(Of Decimal)
		Get
			Return Me._Coverage
		End Get
		Set
			If (Me._Coverage.Equals(value) = false) Then
				Me._Coverage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDiscussionGroup")>  _
Partial Public Class tblDiscussionGroup
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DiscGroupID As String
	
	Private _SourceFrom As String
	
	Private _UserRec As String
	
	Private _DateRec As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDiscGroupIDChanging(value As String)
    End Sub
    Partial Private Sub OnDiscGroupIDChanged()
    End Sub
    Partial Private Sub OnSourceFromChanging(value As String)
    End Sub
    Partial Private Sub OnSourceFromChanged()
    End Sub
    Partial Private Sub OnUserRecChanging(value As String)
    End Sub
    Partial Private Sub OnUserRecChanged()
    End Sub
    Partial Private Sub OnDateRecChanging(value As String)
    End Sub
    Partial Private Sub OnDateRecChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscGroupID", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property DiscGroupID() As String
		Get
			Return Me._DiscGroupID
		End Get
		Set
			If (String.Equals(Me._DiscGroupID, value) = false) Then
				Me.OnDiscGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._DiscGroupID = value
				Me.SendPropertyChanged("DiscGroupID")
				Me.OnDiscGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SourceFrom", DbType:="VarChar(50)")>  _
	Public Property SourceFrom() As String
		Get
			Return Me._SourceFrom
		End Get
		Set
			If (String.Equals(Me._SourceFrom, value) = false) Then
				Me.OnSourceFromChanging(value)
				Me.SendPropertyChanging
				Me._SourceFrom = value
				Me.SendPropertyChanged("SourceFrom")
				Me.OnSourceFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserRec", DbType:="VarChar(50)")>  _
	Public Property UserRec() As String
		Get
			Return Me._UserRec
		End Get
		Set
			If (String.Equals(Me._UserRec, value) = false) Then
				Me.OnUserRecChanging(value)
				Me.SendPropertyChanging
				Me._UserRec = value
				Me.SendPropertyChanged("UserRec")
				Me.OnUserRecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateRec", DbType:="VarChar(50)")>  _
	Public Property DateRec() As String
		Get
			Return Me._DateRec
		End Get
		Set
			If (String.Equals(Me._DateRec, value) = false) Then
				Me.OnDateRecChanging(value)
				Me.SendPropertyChanging
				Me._DateRec = value
				Me.SendPropertyChanged("DateRec")
				Me.OnDateRecChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDiscussionTrans")>  _
Partial Public Class tblDiscussionTran
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TransID As Integer
	
	Private _DiscGroupID As String
	
	Private _IDCodeData As String
	
	Private _DiscNote As String
	
	Private _UserRec As String
	
	Private _DateRec As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTransIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTransIDChanged()
    End Sub
    Partial Private Sub OnDiscGroupIDChanging(value As String)
    End Sub
    Partial Private Sub OnDiscGroupIDChanged()
    End Sub
    Partial Private Sub OnIDCodeDataChanging(value As String)
    End Sub
    Partial Private Sub OnIDCodeDataChanged()
    End Sub
    Partial Private Sub OnDiscNoteChanging(value As String)
    End Sub
    Partial Private Sub OnDiscNoteChanged()
    End Sub
    Partial Private Sub OnUserRecChanging(value As String)
    End Sub
    Partial Private Sub OnUserRecChanged()
    End Sub
    Partial Private Sub OnDateRecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateRecChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TransID() As Integer
		Get
			Return Me._TransID
		End Get
		Set
			If ((Me._TransID = value)  _
						= false) Then
				Me.OnTransIDChanging(value)
				Me.SendPropertyChanging
				Me._TransID = value
				Me.SendPropertyChanged("TransID")
				Me.OnTransIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscGroupID", DbType:="VarChar(50)")>  _
	Public Property DiscGroupID() As String
		Get
			Return Me._DiscGroupID
		End Get
		Set
			If (String.Equals(Me._DiscGroupID, value) = false) Then
				Me.OnDiscGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._DiscGroupID = value
				Me.SendPropertyChanged("DiscGroupID")
				Me.OnDiscGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCodeData", DbType:="VarChar(15)")>  _
	Public Property IDCodeData() As String
		Get
			Return Me._IDCodeData
		End Get
		Set
			If (String.Equals(Me._IDCodeData, value) = false) Then
				Me.OnIDCodeDataChanging(value)
				Me.SendPropertyChanging
				Me._IDCodeData = value
				Me.SendPropertyChanged("IDCodeData")
				Me.OnIDCodeDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscNote", DbType:="VarChar(255)")>  _
	Public Property DiscNote() As String
		Get
			Return Me._DiscNote
		End Get
		Set
			If (String.Equals(Me._DiscNote, value) = false) Then
				Me.OnDiscNoteChanging(value)
				Me.SendPropertyChanging
				Me._DiscNote = value
				Me.SendPropertyChanged("DiscNote")
				Me.OnDiscNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserRec", DbType:="VarChar(50)")>  _
	Public Property UserRec() As String
		Get
			Return Me._UserRec
		End Get
		Set
			If (String.Equals(Me._UserRec, value) = false) Then
				Me.OnUserRecChanging(value)
				Me.SendPropertyChanging
				Me._UserRec = value
				Me.SendPropertyChanged("UserRec")
				Me.OnUserRecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateRec", DbType:="DateTime")>  _
	Public Property DateRec() As System.Nullable(Of Date)
		Get
			Return Me._DateRec
		End Get
		Set
			If (Me._DateRec.Equals(value) = false) Then
				Me.OnDateRecChanging(value)
				Me.SendPropertyChanging
				Me._DateRec = value
				Me.SendPropertyChanged("DateRec")
				Me.OnDateRecChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblGarageType")>  _
Partial Public Class tblGarageType
	
	Private _GarageID As String
	
	Private _GarageName As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ShowID As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageID", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property GarageID() As String
		Get
			Return Me._GarageID
		End Get
		Set
			If (String.Equals(Me._GarageID, value) = false) Then
				Me._GarageID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageName", DbType:="VarChar(50)")>  _
	Public Property GarageName() As String
		Get
			Return Me._GarageName
		End Get
		Set
			If (String.Equals(Me._GarageName, value) = false) Then
				Me._GarageName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowID", DbType:="VarChar(1)")>  _
	Public Property ShowID() As String
		Get
			Return Me._ShowID
		End Get
		Set
			If (String.Equals(Me._ShowID, value) = false) Then
				Me._ShowID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblLeasing")>  _
Partial Public Class tblLeasing
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CompanyName As String
	
	Private _Address As String
	
	Private _Phone As String
	
	Private _Email As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _BillingName As String
	
	Private _BillingAddress As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCompanyNameChanging(value As String)
    End Sub
    Partial Private Sub OnCompanyNameChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnBillingNameChanging(value As String)
    End Sub
    Partial Private Sub OnBillingNameChanged()
    End Sub
    Partial Private Sub OnBillingAddressChanging(value As String)
    End Sub
    Partial Private Sub OnBillingAddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompanyName", DbType:="VarChar(100)")>  _
	Public Property CompanyName() As String
		Get
			Return Me._CompanyName
		End Get
		Set
			If (String.Equals(Me._CompanyName, value) = false) Then
				Me.OnCompanyNameChanging(value)
				Me.SendPropertyChanging
				Me._CompanyName = value
				Me.SendPropertyChanged("CompanyName")
				Me.OnCompanyNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(255)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="VarChar(255)")>  _
	Public Property Phone() As String
		Get
			Return Me._Phone
		End Get
		Set
			If (String.Equals(Me._Phone, value) = false) Then
				Me.OnPhoneChanging(value)
				Me.SendPropertyChanging
				Me._Phone = value
				Me.SendPropertyChanged("Phone")
				Me.OnPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(50)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingName", DbType:="VarChar(128)")>  _
	Public Property BillingName() As String
		Get
			Return Me._BillingName
		End Get
		Set
			If (String.Equals(Me._BillingName, value) = false) Then
				Me.OnBillingNameChanging(value)
				Me.SendPropertyChanging
				Me._BillingName = value
				Me.SendPropertyChanged("BillingName")
				Me.OnBillingNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingAddress", DbType:="VarChar(255)")>  _
	Public Property BillingAddress() As String
		Get
			Return Me._BillingAddress
		End Get
		Set
			If (String.Equals(Me._BillingAddress, value) = false) Then
				Me.OnBillingAddressChanging(value)
				Me.SendPropertyChanging
				Me._BillingAddress = value
				Me.SendPropertyChanged("BillingAddress")
				Me.OnBillingAddressChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblProject")>  _
Partial Public Class tblProject
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ProjectID As Integer
	
	Private _ProjectCode As String
	
	Private _ProjectName As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _ModifyBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _AECode As String
	
	Private _CLIENTCODE As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _tblProjectCampaigns As EntitySet(Of tblProjectCampaign)
	
	Private _Register_AccountExecutive As EntityRef(Of Register_AccountExecutive)
	
	Private _tblRiskGroup As EntityRef(Of tblRiskGroup)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProjectIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProjectIDChanged()
    End Sub
    Partial Private Sub OnProjectCodeChanging(value As String)
    End Sub
    Partial Private Sub OnProjectCodeChanged()
    End Sub
    Partial Private Sub OnProjectNameChanging(value As String)
    End Sub
    Partial Private Sub OnProjectNameChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnAECodeChanging(value As String)
    End Sub
    Partial Private Sub OnAECodeChanged()
    End Sub
    Partial Private Sub OnCLIENTCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCLIENTCODEChanged()
    End Sub
    Partial Private Sub OnRiskGroupIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRiskGroupIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblProjectCampaigns = New EntitySet(Of tblProjectCampaign)(AddressOf Me.attach_tblProjectCampaigns, AddressOf Me.detach_tblProjectCampaigns)
		Me._Register_AccountExecutive = CType(Nothing, EntityRef(Of Register_AccountExecutive))
		Me._tblRiskGroup = CType(Nothing, EntityRef(Of tblRiskGroup))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ProjectID() As Integer
		Get
			Return Me._ProjectID
		End Get
		Set
			If ((Me._ProjectID = value)  _
						= false) Then
				Me.OnProjectIDChanging(value)
				Me.SendPropertyChanging
				Me._ProjectID = value
				Me.SendPropertyChanged("ProjectID")
				Me.OnProjectIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectCode", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ProjectCode() As String
		Get
			Return Me._ProjectCode
		End Get
		Set
			If (String.Equals(Me._ProjectCode, value) = false) Then
				Me.OnProjectCodeChanging(value)
				Me.SendPropertyChanging
				Me._ProjectCode = value
				Me.SendPropertyChanged("ProjectCode")
				Me.OnProjectCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectName", DbType:="VarChar(255)")>  _
	Public Property ProjectName() As String
		Get
			Return Me._ProjectName
		End Get
		Set
			If (String.Equals(Me._ProjectName, value) = false) Then
				Me.OnProjectNameChanging(value)
				Me.SendPropertyChanging
				Me._ProjectName = value
				Me.SendPropertyChanged("ProjectName")
				Me.OnProjectNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AECode", DbType:="VarChar(8)")>  _
	Public Property AECode() As String
		Get
			Return Me._AECode
		End Get
		Set
			If (String.Equals(Me._AECode, value) = false) Then
				If Me._Register_AccountExecutive.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAECodeChanging(value)
				Me.SendPropertyChanging
				Me._AECode = value
				Me.SendPropertyChanged("AECode")
				Me.OnAECodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLIENTCODE", DbType:="VarChar(8)")>  _
	Public Property CLIENTCODE() As String
		Get
			Return Me._CLIENTCODE
		End Get
		Set
			If (String.Equals(Me._CLIENTCODE, value) = false) Then
				Me.OnCLIENTCODEChanging(value)
				Me.SendPropertyChanging
				Me._CLIENTCODE = value
				Me.SendPropertyChanged("CLIENTCODE")
				Me.OnCLIENTCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				If Me._tblRiskGroup.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRiskGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupID = value
				Me.SendPropertyChanged("RiskGroupID")
				Me.OnRiskGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblProject_tblProjectCampaign", Storage:="_tblProjectCampaigns", ThisKey:="ProjectID", OtherKey:="ProjectID")>  _
	Public Property tblProjectCampaigns() As EntitySet(Of tblProjectCampaign)
		Get
			Return Me._tblProjectCampaigns
		End Get
		Set
			Me._tblProjectCampaigns.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_AccountExecutive_tblProject", Storage:="_Register_AccountExecutive", ThisKey:="AECode", OtherKey:="AccountExecutive", IsForeignKey:=true)>  _
	Public Property Register_AccountExecutive() As Register_AccountExecutive
		Get
			Return Me._Register_AccountExecutive.Entity
		End Get
		Set
			Dim previousValue As Register_AccountExecutive = Me._Register_AccountExecutive.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Register_AccountExecutive.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Register_AccountExecutive.Entity = Nothing
					previousValue.tblProjects.Remove(Me)
				End If
				Me._Register_AccountExecutive.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblProjects.Add(Me)
					Me._AECode = value.AccountExecutive
				Else
					Me._AECode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Register_AccountExecutive")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblRiskGroup_tblProject", Storage:="_tblRiskGroup", ThisKey:="RiskGroupID", OtherKey:="RiskGroupID", IsForeignKey:=true)>  _
	Public Property tblRiskGroup() As tblRiskGroup
		Get
			Return Me._tblRiskGroup.Entity
		End Get
		Set
			Dim previousValue As tblRiskGroup = Me._tblRiskGroup.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblRiskGroup.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblRiskGroup.Entity = Nothing
					previousValue.tblProjects.Remove(Me)
				End If
				Me._tblRiskGroup.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblProjects.Add(Me)
					Me._RiskGroupID = value.RiskGroupID
				Else
					Me._RiskGroupID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblRiskGroup")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblProjectCampaigns(ByVal entity As tblProjectCampaign)
		Me.SendPropertyChanging
		entity.tblProject = Me
	End Sub
	
	Private Sub detach_tblProjectCampaigns(ByVal entity As tblProjectCampaign)
		Me.SendPropertyChanging
		entity.tblProject = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblProjectCampaign")>  _
Partial Public Class tblProjectCampaign
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CampaignID As Integer
	
	Private _ProjectID As Integer
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _tblCampaign As EntityRef(Of tblCampaign)
	
	Private _tblProject As EntityRef(Of tblProject)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCampaignIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCampaignIDChanged()
    End Sub
    Partial Private Sub OnProjectIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProjectIDChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblCampaign = CType(Nothing, EntityRef(Of tblCampaign))
		Me._tblProject = CType(Nothing, EntityRef(Of tblProject))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property CampaignID() As Integer
		Get
			Return Me._CampaignID
		End Get
		Set
			If ((Me._CampaignID = value)  _
						= false) Then
				If Me._tblCampaign.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCampaignIDChanging(value)
				Me.SendPropertyChanging
				Me._CampaignID = value
				Me.SendPropertyChanged("CampaignID")
				Me.OnCampaignIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ProjectID() As Integer
		Get
			Return Me._ProjectID
		End Get
		Set
			If ((Me._ProjectID = value)  _
						= false) Then
				If Me._tblProject.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnProjectIDChanging(value)
				Me.SendPropertyChanging
				Me._ProjectID = value
				Me.SendPropertyChanged("ProjectID")
				Me.OnProjectIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCampaign_tblProjectCampaign", Storage:="_tblCampaign", ThisKey:="CampaignID", OtherKey:="CampaignID", IsForeignKey:=true)>  _
	Public Property tblCampaign() As tblCampaign
		Get
			Return Me._tblCampaign.Entity
		End Get
		Set
			Dim previousValue As tblCampaign = Me._tblCampaign.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblCampaign.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblCampaign.Entity = Nothing
					previousValue.tblProjectCampaigns.Remove(Me)
				End If
				Me._tblCampaign.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblProjectCampaigns.Add(Me)
					Me._CampaignID = value.CampaignID
				Else
					Me._CampaignID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("tblCampaign")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblProject_tblProjectCampaign", Storage:="_tblProject", ThisKey:="ProjectID", OtherKey:="ProjectID", IsForeignKey:=true)>  _
	Public Property tblProject() As tblProject
		Get
			Return Me._tblProject.Entity
		End Get
		Set
			Dim previousValue As tblProject = Me._tblProject.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblProject.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblProject.Entity = Nothing
					previousValue.tblProjectCampaigns.Remove(Me)
				End If
				Me._tblProject.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblProjectCampaigns.Add(Me)
					Me._ProjectID = value.ProjectID
				Else
					Me._ProjectID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("tblProject")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblProjectRisk")>  _
Partial Public Class tblProjectRisk
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _ProjectID As Integer
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _RenewalYear As Integer
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpireDate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnProjectIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProjectIDChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnRenewalYearChanging(value As Integer)
    End Sub
    Partial Private Sub OnRenewalYearChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpireDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpireDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ProjectID() As Integer
		Get
			Return Me._ProjectID
		End Get
		Set
			If ((Me._ProjectID = value)  _
						= false) Then
				Me.OnProjectIDChanging(value)
				Me.SendPropertyChanging
				Me._ProjectID = value
				Me.SendPropertyChanged("ProjectID")
				Me.OnProjectIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenewalYear", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property RenewalYear() As Integer
		Get
			Return Me._RenewalYear
		End Get
		Set
			If ((Me._RenewalYear = value)  _
						= false) Then
				Me.OnRenewalYearChanging(value)
				Me.SendPropertyChanging
				Me._RenewalYear = value
				Me.SendPropertyChanged("RenewalYear")
				Me.OnRenewalYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpireDate", DbType:="DateTime")>  _
	Public Property ExpireDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpireDate
		End Get
		Set
			If (Me._ExpireDate.Equals(value) = false) Then
				Me.OnExpireDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpireDate = value
				Me.SendPropertyChanged("ExpireDate")
				Me.OnExpireDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblProjectUserAssignment")>  _
Partial Public Class tblProjectUserAssignment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _UserName As String
	
	Private _AECode As String
	
	Private _Name As String
	
	Private _Department As String
	
	Private _Register_AccountExecutive As EntityRef(Of Register_AccountExecutive)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnAECodeChanging(value As String)
    End Sub
    Partial Private Sub OnAECodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Register_AccountExecutive = CType(Nothing, EntityRef(Of Register_AccountExecutive))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AECode", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property AECode() As String
		Get
			Return Me._AECode
		End Get
		Set
			If (String.Equals(Me._AECode, value) = false) Then
				If Me._Register_AccountExecutive.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAECodeChanging(value)
				Me.SendPropertyChanging
				Me._AECode = value
				Me.SendPropertyChanged("AECode")
				Me.OnAECodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(255)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_AccountExecutive_tblProjectUserAssignment", Storage:="_Register_AccountExecutive", ThisKey:="AECode", OtherKey:="AccountExecutive", IsForeignKey:=true)>  _
	Public Property Register_AccountExecutive() As Register_AccountExecutive
		Get
			Return Me._Register_AccountExecutive.Entity
		End Get
		Set
			Dim previousValue As Register_AccountExecutive = Me._Register_AccountExecutive.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Register_AccountExecutive.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Register_AccountExecutive.Entity = Nothing
					previousValue.tblProjectUserAssignments.Remove(Me)
				End If
				Me._Register_AccountExecutive.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblProjectUserAssignments.Add(Me)
					Me._AECode = value.AccountExecutive
				Else
					Me._AECode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Register_AccountExecutive")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblRiskGroup")>  _
Partial Public Class tblRiskGroup
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RiskGroupID As Integer
	
	Private _RiskGroupCode As String
	
	Private _RiskGroupName As String
	
	Private _Description As String
	
	Private _InsuranceLine As System.Nullable(Of Integer)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _tblClassOfRisks As EntitySet(Of tblClassOfRisk)
	
	Private _tblProjects As EntitySet(Of tblProject)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRiskGroupIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRiskGroupIDChanged()
    End Sub
    Partial Private Sub OnRiskGroupCodeChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupCodeChanged()
    End Sub
    Partial Private Sub OnRiskGroupNameChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnInsuranceLineChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInsuranceLineChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblClassOfRisks = New EntitySet(Of tblClassOfRisk)(AddressOf Me.attach_tblClassOfRisks, AddressOf Me.detach_tblClassOfRisks)
		Me._tblProjects = New EntitySet(Of tblProject)(AddressOf Me.attach_tblProjects, AddressOf Me.detach_tblProjects)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RiskGroupID() As Integer
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If ((Me._RiskGroupID = value)  _
						= false) Then
				Me.OnRiskGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupID = value
				Me.SendPropertyChanged("RiskGroupID")
				Me.OnRiskGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupCode", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property RiskGroupCode() As String
		Get
			Return Me._RiskGroupCode
		End Get
		Set
			If (String.Equals(Me._RiskGroupCode, value) = false) Then
				Me.OnRiskGroupCodeChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupCode = value
				Me.SendPropertyChanged("RiskGroupCode")
				Me.OnRiskGroupCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupName", DbType:="VarChar(50)")>  _
	Public Property RiskGroupName() As String
		Get
			Return Me._RiskGroupName
		End Get
		Set
			If (String.Equals(Me._RiskGroupName, value) = false) Then
				Me.OnRiskGroupNameChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupName = value
				Me.SendPropertyChanged("RiskGroupName")
				Me.OnRiskGroupNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(255)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="Int")>  _
	Public Property InsuranceLine() As System.Nullable(Of Integer)
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (Me._InsuranceLine.Equals(value) = false) Then
				Me.OnInsuranceLineChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceLine = value
				Me.SendPropertyChanged("InsuranceLine")
				Me.OnInsuranceLineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblRiskGroup_tblClassOfRisk", Storage:="_tblClassOfRisks", ThisKey:="RiskGroupID", OtherKey:="RiskGroupID")>  _
	Public Property tblClassOfRisks() As EntitySet(Of tblClassOfRisk)
		Get
			Return Me._tblClassOfRisks
		End Get
		Set
			Me._tblClassOfRisks.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblRiskGroup_tblProject", Storage:="_tblProjects", ThisKey:="RiskGroupID", OtherKey:="RiskGroupID")>  _
	Public Property tblProjects() As EntitySet(Of tblProject)
		Get
			Return Me._tblProjects
		End Get
		Set
			Me._tblProjects.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblClassOfRisks(ByVal entity As tblClassOfRisk)
		Me.SendPropertyChanging
		entity.tblRiskGroup = Me
	End Sub
	
	Private Sub detach_tblClassOfRisks(ByVal entity As tblClassOfRisk)
		Me.SendPropertyChanging
		entity.tblRiskGroup = Nothing
	End Sub
	
	Private Sub attach_tblProjects(ByVal entity As tblProject)
		Me.SendPropertyChanging
		entity.tblRiskGroup = Me
	End Sub
	
	Private Sub detach_tblProjects(ByVal entity As tblProject)
		Me.SendPropertyChanging
		entity.tblRiskGroup = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClassOfRisk_Approved")>  _
Partial Public Class V_ClassOfRisk_Approved
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _RiskGovernment As String
	
	Private _Department As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _Prefix As String
	
	Private _InsuranceLine As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _Owner As String
	
	Private _Underwriter As String
	
	Private _Underwriter_Name As String
	
	Private _CommIn_Display As String
	
	Private _Agent As String
	
	Private _AgentName As String
	
	Private _CommissionOut_Display As String
	
	Private _OROut_Display As String
	
	Private _AdminOut1_Display As String
	
	Private _AdminOut2_Display As String
	
	Private _Remark As String
	
	Private _AgentGroup As String
	
	Private _HasOverComm As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="VarChar(50)")>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me._RiskGroupI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="VarChar(50)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me._RiskGroupII = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="VarChar(50)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me._RiskShortDesc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me._RiskGovernment = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me._Department = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me._RiskGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefix", DbType:="VarChar(8)")>  _
	Public Property Prefix() As String
		Get
			Return Me._Prefix
		End Get
		Set
			If (String.Equals(Me._Prefix, value) = false) Then
				Me._Prefix = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8)")>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter_Name", DbType:="NVarChar(70)")>  _
	Public Property Underwriter_Name() As String
		Get
			Return Me._Underwriter_Name
		End Get
		Set
			If (String.Equals(Me._Underwriter_Name, value) = false) Then
				Me._Underwriter_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn_Display", DbType:="VarChar(160)")>  _
	Public Property CommIn_Display() As String
		Get
			Return Me._CommIn_Display
		End Get
		Set
			If (String.Equals(Me._CommIn_Display, value) = false) Then
				Me._CommIn_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8)")>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me._Agent = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentName", DbType:="NVarChar(50)")>  _
	Public Property AgentName() As String
		Get
			Return Me._AgentName
		End Get
		Set
			If (String.Equals(Me._AgentName, value) = false) Then
				Me._AgentName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut_Display", DbType:="VarChar(31)")>  _
	Public Property CommissionOut_Display() As String
		Get
			Return Me._CommissionOut_Display
		End Get
		Set
			If (String.Equals(Me._CommissionOut_Display, value) = false) Then
				Me._CommissionOut_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut_Display", DbType:="VarChar(31)")>  _
	Public Property OROut_Display() As String
		Get
			Return Me._OROut_Display
		End Get
		Set
			If (String.Equals(Me._OROut_Display, value) = false) Then
				Me._OROut_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1_Display", DbType:="VarChar(31)")>  _
	Public Property AdminOut1_Display() As String
		Get
			Return Me._AdminOut1_Display
		End Get
		Set
			If (String.Equals(Me._AdminOut1_Display, value) = false) Then
				Me._AdminOut1_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2_Display", DbType:="VarChar(31)")>  _
	Public Property AdminOut2_Display() As String
		Get
			Return Me._AdminOut2_Display
		End Get
		Set
			If (String.Equals(Me._AdminOut2_Display, value) = false) Then
				Me._AdminOut2_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(50)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentGroup", DbType:="NVarChar(50)")>  _
	Public Property AgentGroup() As String
		Get
			Return Me._AgentGroup
		End Get
		Set
			If (String.Equals(Me._AgentGroup, value) = false) Then
				Me._AgentGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasOverComm", DbType:="Bit")>  _
	Public Property HasOverComm() As System.Nullable(Of Boolean)
		Get
			Return Me._HasOverComm
		End Get
		Set
			If (Me._HasOverComm.Equals(value) = false) Then
				Me._HasOverComm = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClassOfRisk_Publish")>  _
Partial Public Class V_ClassOfRisk_Publish
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _RiskGroupID As Integer
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpireDate As System.Nullable(Of Date)
	
	Private _Description As String
	
	Private _Department As String
	
	Private _InsuranceLine As String
	
	Private _Owner As String
	
	Private _CommOut As System.Nullable(Of Integer)
	
	Private _Uwriter As String
	
	Private _UWName As String
	
	Private _CommIn_Display As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int NOT NULL")>  _
	Public Property RiskGroupID() As Integer
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If ((Me._RiskGroupID = value)  _
						= false) Then
				Me._RiskGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpireDate", DbType:="DateTime")>  _
	Public Property ExpireDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpireDate
		End Get
		Set
			If (Me._ExpireDate.Equals(value) = false) Then
				Me._ExpireDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me._Department = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOut", DbType:="Int")>  _
	Public Property CommOut() As System.Nullable(Of Integer)
		Get
			Return Me._CommOut
		End Get
		Set
			If (Me._CommOut.Equals(value) = false) Then
				Me._CommOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Uwriter", DbType:="VarChar(8)")>  _
	Public Property Uwriter() As String
		Get
			Return Me._Uwriter
		End Get
		Set
			If (String.Equals(Me._Uwriter, value) = false) Then
				Me._Uwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWName", DbType:="NVarChar(100)")>  _
	Public Property UWName() As String
		Get
			Return Me._UWName
		End Get
		Set
			If (String.Equals(Me._UWName, value) = false) Then
				Me._UWName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn_Display", DbType:="VarChar(158)")>  _
	Public Property CommIn_Display() As String
		Get
			Return Me._CommIn_Display
		End Get
		Set
			If (String.Equals(Me._CommIn_Display, value) = false) Then
				Me._CommIn_Display = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClassOfRisk_Request")>  _
Partial Public Class V_ClassOfRisk_Request
	
	Private _ProjectCode As String
	
	Private _ProjectName As String
	
	Private _Risk As String
	
	Private _AECode As String
	
	Private _ID As Integer
	
	Private _ClassOfRisk As String
	
	Private _Code As String
	
	Private _Name As String
	
	Private _Description As String
	
	Private _Commission As String
	
	Private _OverComm As Integer
	
	Private _CommissionCal As String
	
	Private _ORCommission As String
	
	Private _OverOR As Integer
	
	Private _ORCommissionCal As String
	
	Private _Admin1 As String
	
	Private _OverAdmin1 As Integer
	
	Private _Admin1Cal As String
	
	Private _Admin2 As String
	
	Private _OverAdmin2 As Integer
	
	Private _Admin2Cal As String
	
	Private _CalFrom As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _ProjectMasterCode As System.Nullable(Of Integer)
	
	Private _UACode As String
	
	Private _RiskID As System.Nullable(Of Integer)
	
	Private _Editable As Integer
	
	Private _Mastercode As String
	
	Private _EffectiveDate As String
	
	Private _ExpiryDate As String
	
	Private _OffsetORFlag As String
	
	Private _OffsetAdm1Flag As String
	
	Private _OffsetAdm2Flag As String
	
	Private _Remark As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectCode", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ProjectCode() As String
		Get
			Return Me._ProjectCode
		End Get
		Set
			If (String.Equals(Me._ProjectCode, value) = false) Then
				Me._ProjectCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectName", DbType:="VarChar(255)")>  _
	Public Property ProjectName() As String
		Get
			Return Me._ProjectName
		End Get
		Set
			If (String.Equals(Me._ProjectName, value) = false) Then
				Me._ProjectName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AECode", DbType:="VarChar(8)")>  _
	Public Property AECode() As String
		Get
			Return Me._AECode
		End Get
		Set
			If (String.Equals(Me._AECode, value) = false) Then
				Me._AECode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassOfRisk", DbType:="VarChar(8)")>  _
	Public Property ClassOfRisk() As String
		Get
			Return Me._ClassOfRisk
		End Get
		Set
			If (String.Equals(Me._ClassOfRisk, value) = false) Then
				Me._ClassOfRisk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(40)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission", DbType:="VarChar(34)")>  _
	Public Property Commission() As String
		Get
			Return Me._Commission
		End Get
		Set
			If (String.Equals(Me._Commission, value) = false) Then
				Me._Commission = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverComm", DbType:="Int NOT NULL")>  _
	Public Property OverComm() As Integer
		Get
			Return Me._OverComm
		End Get
		Set
			If ((Me._OverComm = value)  _
						= false) Then
				Me._OverComm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionCal", DbType:="VarChar(2)")>  _
	Public Property CommissionCal() As String
		Get
			Return Me._CommissionCal
		End Get
		Set
			If (String.Equals(Me._CommissionCal, value) = false) Then
				Me._CommissionCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission", DbType:="VarChar(34)")>  _
	Public Property ORCommission() As String
		Get
			Return Me._ORCommission
		End Get
		Set
			If (String.Equals(Me._ORCommission, value) = false) Then
				Me._ORCommission = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverOR", DbType:="Int NOT NULL")>  _
	Public Property OverOR() As Integer
		Get
			Return Me._OverOR
		End Get
		Set
			If ((Me._OverOR = value)  _
						= false) Then
				Me._OverOR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionCal", DbType:="VarChar(2)")>  _
	Public Property ORCommissionCal() As String
		Get
			Return Me._ORCommissionCal
		End Get
		Set
			If (String.Equals(Me._ORCommissionCal, value) = false) Then
				Me._ORCommissionCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1", DbType:="VarChar(34)")>  _
	Public Property Admin1() As String
		Get
			Return Me._Admin1
		End Get
		Set
			If (String.Equals(Me._Admin1, value) = false) Then
				Me._Admin1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverAdmin1", DbType:="Int NOT NULL")>  _
	Public Property OverAdmin1() As Integer
		Get
			Return Me._OverAdmin1
		End Get
		Set
			If ((Me._OverAdmin1 = value)  _
						= false) Then
				Me._OverAdmin1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1Cal", DbType:="VarChar(2)")>  _
	Public Property Admin1Cal() As String
		Get
			Return Me._Admin1Cal
		End Get
		Set
			If (String.Equals(Me._Admin1Cal, value) = false) Then
				Me._Admin1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2", DbType:="VarChar(34)")>  _
	Public Property Admin2() As String
		Get
			Return Me._Admin2
		End Get
		Set
			If (String.Equals(Me._Admin2, value) = false) Then
				Me._Admin2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverAdmin2", DbType:="Int NOT NULL")>  _
	Public Property OverAdmin2() As Integer
		Get
			Return Me._OverAdmin2
		End Get
		Set
			If ((Me._OverAdmin2 = value)  _
						= false) Then
				Me._OverAdmin2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2Cal", DbType:="VarChar(2)")>  _
	Public Property Admin2Cal() As String
		Get
			Return Me._Admin2Cal
		End Get
		Set
			If (String.Equals(Me._Admin2Cal, value) = false) Then
				Me._Admin2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalFrom", DbType:="VarChar(2)")>  _
	Public Property CalFrom() As String
		Get
			Return Me._CalFrom
		End Get
		Set
			If (String.Equals(Me._CalFrom, value) = false) Then
				Me._CalFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me._ParentID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectMasterCode", DbType:="Int")>  _
	Public Property ProjectMasterCode() As System.Nullable(Of Integer)
		Get
			Return Me._ProjectMasterCode
		End Get
		Set
			If (Me._ProjectMasterCode.Equals(value) = false) Then
				Me._ProjectMasterCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UACode", DbType:="VarChar(50)")>  _
	Public Property UACode() As String
		Get
			Return Me._UACode
		End Get
		Set
			If (String.Equals(Me._UACode, value) = false) Then
				Me._UACode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskID", DbType:="Int")>  _
	Public Property RiskID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskID
		End Get
		Set
			If (Me._RiskID.Equals(value) = false) Then
				Me._RiskID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Editable", DbType:="Int NOT NULL")>  _
	Public Property Editable() As Integer
		Get
			Return Me._Editable
		End Get
		Set
			If ((Me._Editable = value)  _
						= false) Then
				Me._Editable = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mastercode", DbType:="VarChar(14)")>  _
	Public Property Mastercode() As String
		Get
			Return Me._Mastercode
		End Get
		Set
			If (String.Equals(Me._Mastercode, value) = false) Then
				Me._Mastercode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="VarChar(30)")>  _
	Public Property EffectiveDate() As String
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (String.Equals(Me._EffectiveDate, value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="VarChar(30)")>  _
	Public Property ExpiryDate() As String
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (String.Equals(Me._ExpiryDate, value) = false) Then
				Me._ExpiryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetORFlag", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property OffsetORFlag() As String
		Get
			Return Me._OffsetORFlag
		End Get
		Set
			If (String.Equals(Me._OffsetORFlag, value) = false) Then
				Me._OffsetORFlag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm1Flag", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property OffsetAdm1Flag() As String
		Get
			Return Me._OffsetAdm1Flag
		End Get
		Set
			If (String.Equals(Me._OffsetAdm1Flag, value) = false) Then
				Me._OffsetAdm1Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm2Flag", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property OffsetAdm2Flag() As String
		Get
			Return Me._OffsetAdm2Flag
		End Get
		Set
			If (String.Equals(Me._OffsetAdm2Flag, value) = false) Then
				Me._OffsetAdm2Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Register_Unwriter")>  _
Partial Public Class V_Register_Unwriter
	
	Private _ID As Integer
	
	Private _Underwriter As String
	
	Private _CrossReference As String
	
	Private _Name As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _PostCode As String
	
	Private _City As String
	
	Private _PhoneBusiness As String
	
	Private _PhoneHome As String
	
	Private _Facsimile As String
	
	Private _AccountContact As String
	
	Private _Addressee As String
	
	Private _Salutation As String
	
	Private _DaysCredit As System.Nullable(Of Short)
	
	Private _TrueUnderwriter As System.Nullable(Of Boolean)
	
	Private _EntryBy As String
	
	Private _EntryDate As System.Nullable(Of Date)
	
	Private _FinanceContact As String
	
	Private _GeneralClaimContact As String
	
	Private _Type As String
	
	Private _InsuranceLine As String
	
	Private _VATPayType As String
	
	Private _PhoneFinance As String
	
	Private _PhoneClaims As String
	
	Private _FaxFinance As String
	
	Private _FaxClaims As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _InsurerCode As String
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveBy As String
	
	Private _UserName As String
	
	Private _Password As String
	
	Private _Email As String
	
	Private _ShortName As String
	
	Private _Editable As Integer
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CrossReference", DbType:="Char(8)")>  _
	Public Property CrossReference() As String
		Get
			Return Me._CrossReference
		End Get
		Set
			If (String.Equals(Me._CrossReference, value) = false) Then
				Me._CrossReference = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="Char(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="Char(35)")>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me._Address1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="Char(35)")>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me._Address2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="Char(35)")>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me._Address3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostCode", DbType:="Char(6)")>  _
	Public Property PostCode() As String
		Get
			Return Me._PostCode
		End Get
		Set
			If (String.Equals(Me._PostCode, value) = false) Then
				Me._PostCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="Char(30)")>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me._City = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneBusiness", DbType:="Char(15)")>  _
	Public Property PhoneBusiness() As String
		Get
			Return Me._PhoneBusiness
		End Get
		Set
			If (String.Equals(Me._PhoneBusiness, value) = false) Then
				Me._PhoneBusiness = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="Char(15)")>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me._PhoneHome = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facsimile", DbType:="Char(30)")>  _
	Public Property Facsimile() As String
		Get
			Return Me._Facsimile
		End Get
		Set
			If (String.Equals(Me._Facsimile, value) = false) Then
				Me._Facsimile = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountContact", DbType:="VarChar(70)")>  _
	Public Property AccountContact() As String
		Get
			Return Me._AccountContact
		End Get
		Set
			If (String.Equals(Me._AccountContact, value) = false) Then
				Me._AccountContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Addressee", DbType:="Char(70)")>  _
	Public Property Addressee() As String
		Get
			Return Me._Addressee
		End Get
		Set
			If (String.Equals(Me._Addressee, value) = false) Then
				Me._Addressee = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salutation", DbType:="Char(70)")>  _
	Public Property Salutation() As String
		Get
			Return Me._Salutation
		End Get
		Set
			If (String.Equals(Me._Salutation, value) = false) Then
				Me._Salutation = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DaysCredit", DbType:="SmallInt")>  _
	Public Property DaysCredit() As System.Nullable(Of Short)
		Get
			Return Me._DaysCredit
		End Get
		Set
			If (Me._DaysCredit.Equals(value) = false) Then
				Me._DaysCredit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrueUnderwriter", DbType:="Bit")>  _
	Public Property TrueUnderwriter() As System.Nullable(Of Boolean)
		Get
			Return Me._TrueUnderwriter
		End Get
		Set
			If (Me._TrueUnderwriter.Equals(value) = false) Then
				Me._TrueUnderwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="Char(10)")>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me._EntryBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime")>  _
	Public Property EntryDate() As System.Nullable(Of Date)
		Get
			Return Me._EntryDate
		End Get
		Set
			If (Me._EntryDate.Equals(value) = false) Then
				Me._EntryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinanceContact", DbType:="Char(70)")>  _
	Public Property FinanceContact() As String
		Get
			Return Me._FinanceContact
		End Get
		Set
			If (String.Equals(Me._FinanceContact, value) = false) Then
				Me._FinanceContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GeneralClaimContact", DbType:="Char(30)")>  _
	Public Property GeneralClaimContact() As String
		Get
			Return Me._GeneralClaimContact
		End Get
		Set
			If (String.Equals(Me._GeneralClaimContact, value) = false) Then
				Me._GeneralClaimContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="VarChar(7) NOT NULL", CanBeNull:=false)>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me._Type = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATPayType", DbType:="VarChar(7) NOT NULL", CanBeNull:=false)>  _
	Public Property VATPayType() As String
		Get
			Return Me._VATPayType
		End Get
		Set
			If (String.Equals(Me._VATPayType, value) = false) Then
				Me._VATPayType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneFinance", DbType:="Char(15)")>  _
	Public Property PhoneFinance() As String
		Get
			Return Me._PhoneFinance
		End Get
		Set
			If (String.Equals(Me._PhoneFinance, value) = false) Then
				Me._PhoneFinance = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneClaims", DbType:="Char(15)")>  _
	Public Property PhoneClaims() As String
		Get
			Return Me._PhoneClaims
		End Get
		Set
			If (String.Equals(Me._PhoneClaims, value) = false) Then
				Me._PhoneClaims = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxFinance", DbType:="Char(30)")>  _
	Public Property FaxFinance() As String
		Get
			Return Me._FaxFinance
		End Get
		Set
			If (String.Equals(Me._FaxFinance, value) = false) Then
				Me._FaxFinance = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxClaims", DbType:="Char(30)")>  _
	Public Property FaxClaims() As String
		Get
			Return Me._FaxClaims
		End Get
		Set
			If (String.Equals(Me._FaxClaims, value) = false) Then
				Me._FaxClaims = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="VarChar(2)")>  _
	Public Property InsurerCode() As String
		Get
			Return Me._InsurerCode
		End Get
		Set
			If (String.Equals(Me._InsurerCode, value) = false) Then
				Me._InsurerCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="VarChar(128)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="VarChar(128)")>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me._Password = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(128)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShortName", DbType:="VarChar(50)")>  _
	Public Property ShortName() As String
		Get
			Return Me._ShortName
		End Get
		Set
			If (String.Equals(Me._ShortName, value) = false) Then
				Me._ShortName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Editable", DbType:="Int NOT NULL")>  _
	Public Property Editable() As Integer
		Get
			Return Me._Editable
		End Get
		Set
			If ((Me._Editable = value)  _
						= false) Then
				Me._Editable = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMotorQuotation")>  _
Partial Public Class tblMotorQuotation
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QID As Integer
	
	Private _QuotationNo As String
	
	Private _QuotationStatus As String
	
	Private _QDID_Selected As System.Nullable(Of Integer)
	
	Private _CustomerID As String
	
	Private _CustTitleName As String
	
	Private _CustName As String
	
	Private _CustIDCardType As System.Nullable(Of Integer)
	
	Private _CustIDCards As String
	
	Private _CustAddress As String
	
	Private _CustLocationName As String
	
	Private _CustLocationCode As String
	
	Private _CustTelNo As String
	
	Private _CustEmail As String
	
	Private _CustFaxNo As String
	
	Private _CarSize As String
	
	Private _CarSuminsured As System.Nullable(Of Integer)
	
	Private _CarRegis As String
	
	Private _CarId As String
	
	Private _CarChassisNo As String
	
	Private _CarEngineNo As String
	
	Private _ClientCode As String
	
	Private _InsuredTitleName As String
	
	Private _InsuredName As String
	
	Private _ReferenceNo As String
	
	Private _DataFrom As String
	
	Private _TypeOfClient As String
	
	Private _AddressTemp As String
	
	Private _ContactName As String
	
	Private _ContactTelExt As String
	
	Private _UserRec As String
	
	Private _DateRec As System.Nullable(Of Date)
	
	Private _UserUpdate As String
	
	Private _DateUpdate As System.Nullable(Of Date)
	
	Private _UserConfirm As String
	
	Private _DateConFirm As System.Nullable(Of Date)
	
	Private _ConfirmCode As String
	
	Private _CarBrandlID As System.Nullable(Of Integer)
	
	Private _CarBrandName As String
	
	Private _CarModelID As System.Nullable(Of Integer)
	
	Private _CarModelName As String
	
	Private _CarSubModelName As String
	
	Private _DiscGroupId As String
	
	Private _txtOther As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQIDChanged()
    End Sub
    Partial Private Sub OnQuotationNoChanging(value As String)
    End Sub
    Partial Private Sub OnQuotationNoChanged()
    End Sub
    Partial Private Sub OnQuotationStatusChanging(value As String)
    End Sub
    Partial Private Sub OnQuotationStatusChanged()
    End Sub
    Partial Private Sub OnQDID_SelectedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQDID_SelectedChanged()
    End Sub
    Partial Private Sub OnCustomerIDChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerIDChanged()
    End Sub
    Partial Private Sub OnCustTitleNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustTitleNameChanged()
    End Sub
    Partial Private Sub OnCustNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustNameChanged()
    End Sub
    Partial Private Sub OnCustIDCardTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCustIDCardTypeChanged()
    End Sub
    Partial Private Sub OnCustIDCardsChanging(value As String)
    End Sub
    Partial Private Sub OnCustIDCardsChanged()
    End Sub
    Partial Private Sub OnCustAddressChanging(value As String)
    End Sub
    Partial Private Sub OnCustAddressChanged()
    End Sub
    Partial Private Sub OnCustLocationNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustLocationNameChanged()
    End Sub
    Partial Private Sub OnCustLocationCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCustLocationCodeChanged()
    End Sub
    Partial Private Sub OnCustTelNoChanging(value As String)
    End Sub
    Partial Private Sub OnCustTelNoChanged()
    End Sub
    Partial Private Sub OnCustEmailChanging(value As String)
    End Sub
    Partial Private Sub OnCustEmailChanged()
    End Sub
    Partial Private Sub OnCustFaxNoChanging(value As String)
    End Sub
    Partial Private Sub OnCustFaxNoChanged()
    End Sub
    Partial Private Sub OnCarSizeChanging(value As String)
    End Sub
    Partial Private Sub OnCarSizeChanged()
    End Sub
    Partial Private Sub OnCarSuminsuredChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarSuminsuredChanged()
    End Sub
    Partial Private Sub OnCarRegisChanging(value As String)
    End Sub
    Partial Private Sub OnCarRegisChanged()
    End Sub
    Partial Private Sub OnCarIdChanging(value As String)
    End Sub
    Partial Private Sub OnCarIdChanged()
    End Sub
    Partial Private Sub OnCarChassisNoChanging(value As String)
    End Sub
    Partial Private Sub OnCarChassisNoChanged()
    End Sub
    Partial Private Sub OnCarEngineNoChanging(value As String)
    End Sub
    Partial Private Sub OnCarEngineNoChanged()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnInsuredTitleNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsuredTitleNameChanged()
    End Sub
    Partial Private Sub OnInsuredNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsuredNameChanged()
    End Sub
    Partial Private Sub OnReferenceNoChanging(value As String)
    End Sub
    Partial Private Sub OnReferenceNoChanged()
    End Sub
    Partial Private Sub OnDataFromChanging(value As String)
    End Sub
    Partial Private Sub OnDataFromChanged()
    End Sub
    Partial Private Sub OnTypeOfClientChanging(value As String)
    End Sub
    Partial Private Sub OnTypeOfClientChanged()
    End Sub
    Partial Private Sub OnAddressTempChanging(value As String)
    End Sub
    Partial Private Sub OnAddressTempChanged()
    End Sub
    Partial Private Sub OnContactNameChanging(value As String)
    End Sub
    Partial Private Sub OnContactNameChanged()
    End Sub
    Partial Private Sub OnContactTelExtChanging(value As String)
    End Sub
    Partial Private Sub OnContactTelExtChanged()
    End Sub
    Partial Private Sub OnUserRecChanging(value As String)
    End Sub
    Partial Private Sub OnUserRecChanged()
    End Sub
    Partial Private Sub OnDateRecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateRecChanged()
    End Sub
    Partial Private Sub OnUserUpdateChanging(value As String)
    End Sub
    Partial Private Sub OnUserUpdateChanged()
    End Sub
    Partial Private Sub OnDateUpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateUpdateChanged()
    End Sub
    Partial Private Sub OnUserConfirmChanging(value As String)
    End Sub
    Partial Private Sub OnUserConfirmChanged()
    End Sub
    Partial Private Sub OnDateConFirmChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateConFirmChanged()
    End Sub
    Partial Private Sub OnConfirmCodeChanging(value As String)
    End Sub
    Partial Private Sub OnConfirmCodeChanged()
    End Sub
    Partial Private Sub OnCarBrandlIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarBrandlIDChanged()
    End Sub
    Partial Private Sub OnCarBrandNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarBrandNameChanged()
    End Sub
    Partial Private Sub OnCarModelIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarModelIDChanged()
    End Sub
    Partial Private Sub OnCarModelNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarModelNameChanged()
    End Sub
    Partial Private Sub OnCarSubModelNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarSubModelNameChanged()
    End Sub
    Partial Private Sub OnDiscGroupIdChanging(value As String)
    End Sub
    Partial Private Sub OnDiscGroupIdChanged()
    End Sub
    Partial Private Sub OntxtOtherChanging(value As String)
    End Sub
    Partial Private Sub OntxtOtherChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property QID() As Integer
		Get
			Return Me._QID
		End Get
		Set
			If ((Me._QID = value)  _
						= false) Then
				Me.OnQIDChanging(value)
				Me.SendPropertyChanging
				Me._QID = value
				Me.SendPropertyChanged("QID")
				Me.OnQIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationNo", DbType:="VarChar(30) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property QuotationNo() As String
		Get
			Return Me._QuotationNo
		End Get
		Set
			If (String.Equals(Me._QuotationNo, value) = false) Then
				Me.OnQuotationNoChanging(value)
				Me.SendPropertyChanging
				Me._QuotationNo = value
				Me.SendPropertyChanged("QuotationNo")
				Me.OnQuotationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationStatus", DbType:="VarChar(50)")>  _
	Public Property QuotationStatus() As String
		Get
			Return Me._QuotationStatus
		End Get
		Set
			If (String.Equals(Me._QuotationStatus, value) = false) Then
				Me.OnQuotationStatusChanging(value)
				Me.SendPropertyChanging
				Me._QuotationStatus = value
				Me.SendPropertyChanged("QuotationStatus")
				Me.OnQuotationStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDID_Selected", DbType:="Int")>  _
	Public Property QDID_Selected() As System.Nullable(Of Integer)
		Get
			Return Me._QDID_Selected
		End Get
		Set
			If (Me._QDID_Selected.Equals(value) = false) Then
				Me.OnQDID_SelectedChanging(value)
				Me.SendPropertyChanging
				Me._QDID_Selected = value
				Me.SendPropertyChanged("QDID_Selected")
				Me.OnQDID_SelectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerID", DbType:="VarChar(255)")>  _
	Public Property CustomerID() As String
		Get
			Return Me._CustomerID
		End Get
		Set
			If (String.Equals(Me._CustomerID, value) = false) Then
				Me.OnCustomerIDChanging(value)
				Me.SendPropertyChanging
				Me._CustomerID = value
				Me.SendPropertyChanged("CustomerID")
				Me.OnCustomerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustTitleName", DbType:="VarChar(100)")>  _
	Public Property CustTitleName() As String
		Get
			Return Me._CustTitleName
		End Get
		Set
			If (String.Equals(Me._CustTitleName, value) = false) Then
				Me.OnCustTitleNameChanging(value)
				Me.SendPropertyChanging
				Me._CustTitleName = value
				Me.SendPropertyChanged("CustTitleName")
				Me.OnCustTitleNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustName", DbType:="VarChar(255)")>  _
	Public Property CustName() As String
		Get
			Return Me._CustName
		End Get
		Set
			If (String.Equals(Me._CustName, value) = false) Then
				Me.OnCustNameChanging(value)
				Me.SendPropertyChanging
				Me._CustName = value
				Me.SendPropertyChanged("CustName")
				Me.OnCustNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustIDCardType", DbType:="Int")>  _
	Public Property CustIDCardType() As System.Nullable(Of Integer)
		Get
			Return Me._CustIDCardType
		End Get
		Set
			If (Me._CustIDCardType.Equals(value) = false) Then
				Me.OnCustIDCardTypeChanging(value)
				Me.SendPropertyChanging
				Me._CustIDCardType = value
				Me.SendPropertyChanged("CustIDCardType")
				Me.OnCustIDCardTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustIDCards", DbType:="VarChar(50)")>  _
	Public Property CustIDCards() As String
		Get
			Return Me._CustIDCards
		End Get
		Set
			If (String.Equals(Me._CustIDCards, value) = false) Then
				Me.OnCustIDCardsChanging(value)
				Me.SendPropertyChanging
				Me._CustIDCards = value
				Me.SendPropertyChanged("CustIDCards")
				Me.OnCustIDCardsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustAddress", DbType:="VarChar(255)")>  _
	Public Property CustAddress() As String
		Get
			Return Me._CustAddress
		End Get
		Set
			If (String.Equals(Me._CustAddress, value) = false) Then
				Me.OnCustAddressChanging(value)
				Me.SendPropertyChanging
				Me._CustAddress = value
				Me.SendPropertyChanged("CustAddress")
				Me.OnCustAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustLocationName", DbType:="VarChar(255)")>  _
	Public Property CustLocationName() As String
		Get
			Return Me._CustLocationName
		End Get
		Set
			If (String.Equals(Me._CustLocationName, value) = false) Then
				Me.OnCustLocationNameChanging(value)
				Me.SendPropertyChanging
				Me._CustLocationName = value
				Me.SendPropertyChanged("CustLocationName")
				Me.OnCustLocationNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustLocationCode", DbType:="VarChar(6)")>  _
	Public Property CustLocationCode() As String
		Get
			Return Me._CustLocationCode
		End Get
		Set
			If (String.Equals(Me._CustLocationCode, value) = false) Then
				Me.OnCustLocationCodeChanging(value)
				Me.SendPropertyChanging
				Me._CustLocationCode = value
				Me.SendPropertyChanged("CustLocationCode")
				Me.OnCustLocationCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustTelNo", DbType:="VarChar(255)")>  _
	Public Property CustTelNo() As String
		Get
			Return Me._CustTelNo
		End Get
		Set
			If (String.Equals(Me._CustTelNo, value) = false) Then
				Me.OnCustTelNoChanging(value)
				Me.SendPropertyChanging
				Me._CustTelNo = value
				Me.SendPropertyChanged("CustTelNo")
				Me.OnCustTelNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustEmail", DbType:="VarChar(255)")>  _
	Public Property CustEmail() As String
		Get
			Return Me._CustEmail
		End Get
		Set
			If (String.Equals(Me._CustEmail, value) = false) Then
				Me.OnCustEmailChanging(value)
				Me.SendPropertyChanging
				Me._CustEmail = value
				Me.SendPropertyChanged("CustEmail")
				Me.OnCustEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustFaxNo", DbType:="VarChar(50)")>  _
	Public Property CustFaxNo() As String
		Get
			Return Me._CustFaxNo
		End Get
		Set
			If (String.Equals(Me._CustFaxNo, value) = false) Then
				Me.OnCustFaxNoChanging(value)
				Me.SendPropertyChanging
				Me._CustFaxNo = value
				Me.SendPropertyChanged("CustFaxNo")
				Me.OnCustFaxNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarSize", DbType:="VarChar(50)")>  _
	Public Property CarSize() As String
		Get
			Return Me._CarSize
		End Get
		Set
			If (String.Equals(Me._CarSize, value) = false) Then
				Me.OnCarSizeChanging(value)
				Me.SendPropertyChanging
				Me._CarSize = value
				Me.SendPropertyChanged("CarSize")
				Me.OnCarSizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarSuminsured", DbType:="Int")>  _
	Public Property CarSuminsured() As System.Nullable(Of Integer)
		Get
			Return Me._CarSuminsured
		End Get
		Set
			If (Me._CarSuminsured.Equals(value) = false) Then
				Me.OnCarSuminsuredChanging(value)
				Me.SendPropertyChanging
				Me._CarSuminsured = value
				Me.SendPropertyChanged("CarSuminsured")
				Me.OnCarSuminsuredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarRegis", DbType:="VarChar(255)")>  _
	Public Property CarRegis() As String
		Get
			Return Me._CarRegis
		End Get
		Set
			If (String.Equals(Me._CarRegis, value) = false) Then
				Me.OnCarRegisChanging(value)
				Me.SendPropertyChanging
				Me._CarRegis = value
				Me.SendPropertyChanged("CarRegis")
				Me.OnCarRegisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarId", DbType:="VarChar(50)")>  _
	Public Property CarId() As String
		Get
			Return Me._CarId
		End Get
		Set
			If (String.Equals(Me._CarId, value) = false) Then
				Me.OnCarIdChanging(value)
				Me.SendPropertyChanging
				Me._CarId = value
				Me.SendPropertyChanged("CarId")
				Me.OnCarIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarChassisNo", DbType:="VarChar(50)")>  _
	Public Property CarChassisNo() As String
		Get
			Return Me._CarChassisNo
		End Get
		Set
			If (String.Equals(Me._CarChassisNo, value) = false) Then
				Me.OnCarChassisNoChanging(value)
				Me.SendPropertyChanging
				Me._CarChassisNo = value
				Me.SendPropertyChanged("CarChassisNo")
				Me.OnCarChassisNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarEngineNo", DbType:="VarChar(255)")>  _
	Public Property CarEngineNo() As String
		Get
			Return Me._CarEngineNo
		End Get
		Set
			If (String.Equals(Me._CarEngineNo, value) = false) Then
				Me.OnCarEngineNoChanging(value)
				Me.SendPropertyChanging
				Me._CarEngineNo = value
				Me.SendPropertyChanged("CarEngineNo")
				Me.OnCarEngineNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="VarChar(50)")>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuredTitleName", DbType:="VarChar(100)")>  _
	Public Property InsuredTitleName() As String
		Get
			Return Me._InsuredTitleName
		End Get
		Set
			If (String.Equals(Me._InsuredTitleName, value) = false) Then
				Me.OnInsuredTitleNameChanging(value)
				Me.SendPropertyChanging
				Me._InsuredTitleName = value
				Me.SendPropertyChanged("InsuredTitleName")
				Me.OnInsuredTitleNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuredName", DbType:="VarChar(255)")>  _
	Public Property InsuredName() As String
		Get
			Return Me._InsuredName
		End Get
		Set
			If (String.Equals(Me._InsuredName, value) = false) Then
				Me.OnInsuredNameChanging(value)
				Me.SendPropertyChanging
				Me._InsuredName = value
				Me.SendPropertyChanged("InsuredName")
				Me.OnInsuredNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReferenceNo", DbType:="VarChar(50)")>  _
	Public Property ReferenceNo() As String
		Get
			Return Me._ReferenceNo
		End Get
		Set
			If (String.Equals(Me._ReferenceNo, value) = false) Then
				Me.OnReferenceNoChanging(value)
				Me.SendPropertyChanging
				Me._ReferenceNo = value
				Me.SendPropertyChanged("ReferenceNo")
				Me.OnReferenceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataFrom", DbType:="VarChar(255)")>  _
	Public Property DataFrom() As String
		Get
			Return Me._DataFrom
		End Get
		Set
			If (String.Equals(Me._DataFrom, value) = false) Then
				Me.OnDataFromChanging(value)
				Me.SendPropertyChanging
				Me._DataFrom = value
				Me.SendPropertyChanged("DataFrom")
				Me.OnDataFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeOfClient", DbType:="VarChar(20)")>  _
	Public Property TypeOfClient() As String
		Get
			Return Me._TypeOfClient
		End Get
		Set
			If (String.Equals(Me._TypeOfClient, value) = false) Then
				Me.OnTypeOfClientChanging(value)
				Me.SendPropertyChanging
				Me._TypeOfClient = value
				Me.SendPropertyChanged("TypeOfClient")
				Me.OnTypeOfClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddressTemp", DbType:="VarChar(MAX)")>  _
	Public Property AddressTemp() As String
		Get
			Return Me._AddressTemp
		End Get
		Set
			If (String.Equals(Me._AddressTemp, value) = false) Then
				Me.OnAddressTempChanging(value)
				Me.SendPropertyChanging
				Me._AddressTemp = value
				Me.SendPropertyChanged("AddressTemp")
				Me.OnAddressTempChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactName", DbType:="VarChar(50)")>  _
	Public Property ContactName() As String
		Get
			Return Me._ContactName
		End Get
		Set
			If (String.Equals(Me._ContactName, value) = false) Then
				Me.OnContactNameChanging(value)
				Me.SendPropertyChanging
				Me._ContactName = value
				Me.SendPropertyChanged("ContactName")
				Me.OnContactNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactTelExt", DbType:="VarChar(50)")>  _
	Public Property ContactTelExt() As String
		Get
			Return Me._ContactTelExt
		End Get
		Set
			If (String.Equals(Me._ContactTelExt, value) = false) Then
				Me.OnContactTelExtChanging(value)
				Me.SendPropertyChanging
				Me._ContactTelExt = value
				Me.SendPropertyChanged("ContactTelExt")
				Me.OnContactTelExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserRec", DbType:="VarChar(255)")>  _
	Public Property UserRec() As String
		Get
			Return Me._UserRec
		End Get
		Set
			If (String.Equals(Me._UserRec, value) = false) Then
				Me.OnUserRecChanging(value)
				Me.SendPropertyChanging
				Me._UserRec = value
				Me.SendPropertyChanged("UserRec")
				Me.OnUserRecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateRec", DbType:="DateTime")>  _
	Public Property DateRec() As System.Nullable(Of Date)
		Get
			Return Me._DateRec
		End Get
		Set
			If (Me._DateRec.Equals(value) = false) Then
				Me.OnDateRecChanging(value)
				Me.SendPropertyChanging
				Me._DateRec = value
				Me.SendPropertyChanged("DateRec")
				Me.OnDateRecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserUpdate", DbType:="VarChar(50)")>  _
	Public Property UserUpdate() As String
		Get
			Return Me._UserUpdate
		End Get
		Set
			If (String.Equals(Me._UserUpdate, value) = false) Then
				Me.OnUserUpdateChanging(value)
				Me.SendPropertyChanging
				Me._UserUpdate = value
				Me.SendPropertyChanged("UserUpdate")
				Me.OnUserUpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateUpdate", DbType:="DateTime")>  _
	Public Property DateUpdate() As System.Nullable(Of Date)
		Get
			Return Me._DateUpdate
		End Get
		Set
			If (Me._DateUpdate.Equals(value) = false) Then
				Me.OnDateUpdateChanging(value)
				Me.SendPropertyChanging
				Me._DateUpdate = value
				Me.SendPropertyChanged("DateUpdate")
				Me.OnDateUpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserConfirm", DbType:="VarChar(50)")>  _
	Public Property UserConfirm() As String
		Get
			Return Me._UserConfirm
		End Get
		Set
			If (String.Equals(Me._UserConfirm, value) = false) Then
				Me.OnUserConfirmChanging(value)
				Me.SendPropertyChanging
				Me._UserConfirm = value
				Me.SendPropertyChanged("UserConfirm")
				Me.OnUserConfirmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateConFirm", DbType:="DateTime")>  _
	Public Property DateConFirm() As System.Nullable(Of Date)
		Get
			Return Me._DateConFirm
		End Get
		Set
			If (Me._DateConFirm.Equals(value) = false) Then
				Me.OnDateConFirmChanging(value)
				Me.SendPropertyChanging
				Me._DateConFirm = value
				Me.SendPropertyChanged("DateConFirm")
				Me.OnDateConFirmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConfirmCode", DbType:="VarChar(50)")>  _
	Public Property ConfirmCode() As String
		Get
			Return Me._ConfirmCode
		End Get
		Set
			If (String.Equals(Me._ConfirmCode, value) = false) Then
				Me.OnConfirmCodeChanging(value)
				Me.SendPropertyChanging
				Me._ConfirmCode = value
				Me.SendPropertyChanged("ConfirmCode")
				Me.OnConfirmCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrandlID", DbType:="Int")>  _
	Public Property CarBrandlID() As System.Nullable(Of Integer)
		Get
			Return Me._CarBrandlID
		End Get
		Set
			If (Me._CarBrandlID.Equals(value) = false) Then
				Me.OnCarBrandlIDChanging(value)
				Me.SendPropertyChanging
				Me._CarBrandlID = value
				Me.SendPropertyChanged("CarBrandlID")
				Me.OnCarBrandlIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrandName", DbType:="VarChar(100)")>  _
	Public Property CarBrandName() As String
		Get
			Return Me._CarBrandName
		End Get
		Set
			If (String.Equals(Me._CarBrandName, value) = false) Then
				Me.OnCarBrandNameChanging(value)
				Me.SendPropertyChanging
				Me._CarBrandName = value
				Me.SendPropertyChanged("CarBrandName")
				Me.OnCarBrandNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModelID", DbType:="Int")>  _
	Public Property CarModelID() As System.Nullable(Of Integer)
		Get
			Return Me._CarModelID
		End Get
		Set
			If (Me._CarModelID.Equals(value) = false) Then
				Me.OnCarModelIDChanging(value)
				Me.SendPropertyChanging
				Me._CarModelID = value
				Me.SendPropertyChanged("CarModelID")
				Me.OnCarModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModelName", DbType:="VarChar(100)")>  _
	Public Property CarModelName() As String
		Get
			Return Me._CarModelName
		End Get
		Set
			If (String.Equals(Me._CarModelName, value) = false) Then
				Me.OnCarModelNameChanging(value)
				Me.SendPropertyChanging
				Me._CarModelName = value
				Me.SendPropertyChanged("CarModelName")
				Me.OnCarModelNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarSubModelName", DbType:="VarChar(255)")>  _
	Public Property CarSubModelName() As String
		Get
			Return Me._CarSubModelName
		End Get
		Set
			If (String.Equals(Me._CarSubModelName, value) = false) Then
				Me.OnCarSubModelNameChanging(value)
				Me.SendPropertyChanging
				Me._CarSubModelName = value
				Me.SendPropertyChanged("CarSubModelName")
				Me.OnCarSubModelNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscGroupId", DbType:="VarChar(15)")>  _
	Public Property DiscGroupId() As String
		Get
			Return Me._DiscGroupId
		End Get
		Set
			If (String.Equals(Me._DiscGroupId, value) = false) Then
				Me.OnDiscGroupIdChanging(value)
				Me.SendPropertyChanging
				Me._DiscGroupId = value
				Me.SendPropertyChanged("DiscGroupId")
				Me.OnDiscGroupIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtOther", DbType:="VarChar(255)")>  _
	Public Property txtOther() As String
		Get
			Return Me._txtOther
		End Get
		Set
			If (String.Equals(Me._txtOther, value) = false) Then
				Me.OntxtOtherChanging(value)
				Me.SendPropertyChanging
				Me._txtOther = value
				Me.SendPropertyChanged("txtOther")
				Me.OntxtOtherChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMotorQuotationDetails")>  _
Partial Public Class tblMotorQuotationDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QDID As Integer
	
	Private _QuotationNo As String
	
	Private _CarNo As System.Nullable(Of Integer)
	
	Private _UWriter As String
	
	Private _PlanCode As String
	
	Private _GarageType As String
	
	Private _PolicyType As String
	
	Private _ValueFirst1 As System.Nullable(Of Integer)
	
	Private _cboTPBIPerson As System.Nullable(Of Integer)
	
	Private _cboTPBITime As System.Nullable(Of Integer)
	
	Private _cboTPPD As System.Nullable(Of Integer)
	
	Private _txtODFund As System.Nullable(Of Integer)
	
	Private _txtFnTFund As System.Nullable(Of Integer)
	
	Private _txtFnTFund1 As System.Nullable(Of Integer)
	
	Private _ValueInSure As System.Nullable(Of Integer)
	
	Private _BpremiumS As System.Nullable(Of Integer)
	
	Private _ValueDriver1 As System.Nullable(Of Integer)
	
	Private _NumHuman1 As System.Nullable(Of Integer)
	
	Private _ValueSumHuman1 As System.Nullable(Of Integer)
	
	Private _NumSumHuman As System.Nullable(Of Integer)
	
	Private _ValueSumHuman As System.Nullable(Of Integer)
	
	Private _Accessory As System.Nullable(Of Integer)
	
	Private _ValueFirst2 As System.Nullable(Of Integer)
	
	Private _ValueDriver2 As System.Nullable(Of Integer)
	
	Private _NumHuman2 As System.Nullable(Of Integer)
	
	Private _ValueSumHuman2 As System.Nullable(Of Integer)
	
	Private _DiscountGroup As System.Nullable(Of Decimal)
	
	Private _DiscountGroupFlag As String
	
	Private _DiscountHistory As System.Nullable(Of Decimal)
	
	Private _DiscountHistoryFlag As String
	
	Private _DiscountOther As System.Nullable(Of Decimal)
	
	Private _DiscountOtherFlag As String
	
	Private _AddHistory As System.Nullable(Of Decimal)
	
	Private _AddHistoryFlag As String
	
	Private _Discountspacial As System.Nullable(Of Decimal)
	
	Private _DiscountspacialFlag As String
	
	Private _DiscountPre As System.Nullable(Of Decimal)
	
	Private _VMIClassOfRisk As String
	
	Private _NetPremium As System.Nullable(Of Decimal)
	
	Private _Vat As System.Nullable(Of Decimal)
	
	Private _Stamp As System.Nullable(Of Decimal)
	
	Private _GrossPremium As System.Nullable(Of Decimal)
	
	Private _CMIClassOfRisk As String
	
	Private _stickCarType As String
	
	Private _CMINetPremium As System.Nullable(Of Decimal)
	
	Private _CMIVat As System.Nullable(Of Decimal)
	
	Private _CMIStamp As System.Nullable(Of Decimal)
	
	Private _CMIGrossPremium As System.Nullable(Of Decimal)
	
	Private _TotalPremium As System.Nullable(Of Decimal)
	
	Private _Flood As System.Nullable(Of Integer)
	
	Private _Driver As System.Nullable(Of Integer)
	
	Private _DriverName1 As String
	
	Private _txtOldDriver1 As String
	
	Private _DriverName2 As String
	
	Private _txtOldDriver2 As String
	
	Private _CMIPremiumCode As String
	
	Private _CarType As String
	
	Private _CarUse As String
	
	Private _DiscountCMI As System.Nullable(Of Decimal)
	
	Private _DiscountCMI_P As System.Nullable(Of Decimal)
	
	Private _Discountspacial_P As System.Nullable(Of Decimal)
	
	Private _CoverageID As System.Nullable(Of Integer)
	
	Private _PremiumID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQDIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQDIDChanged()
    End Sub
    Partial Private Sub OnQuotationNoChanging(value As String)
    End Sub
    Partial Private Sub OnQuotationNoChanged()
    End Sub
    Partial Private Sub OnCarNoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarNoChanged()
    End Sub
    Partial Private Sub OnUWriterChanging(value As String)
    End Sub
    Partial Private Sub OnUWriterChanged()
    End Sub
    Partial Private Sub OnPlanCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPlanCodeChanged()
    End Sub
    Partial Private Sub OnGarageTypeChanging(value As String)
    End Sub
    Partial Private Sub OnGarageTypeChanged()
    End Sub
    Partial Private Sub OnPolicyTypeChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyTypeChanged()
    End Sub
    Partial Private Sub OnValueFirst1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnValueFirst1Changed()
    End Sub
    Partial Private Sub OncboTPBIPersonChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncboTPBIPersonChanged()
    End Sub
    Partial Private Sub OncboTPBITimeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncboTPBITimeChanged()
    End Sub
    Partial Private Sub OncboTPPDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncboTPPDChanged()
    End Sub
    Partial Private Sub OntxtODFundChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntxtODFundChanged()
    End Sub
    Partial Private Sub OntxtFnTFundChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntxtFnTFundChanged()
    End Sub
    Partial Private Sub OntxtFnTFund1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntxtFnTFund1Changed()
    End Sub
    Partial Private Sub OnValueInSureChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnValueInSureChanged()
    End Sub
    Partial Private Sub OnBpremiumSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBpremiumSChanged()
    End Sub
    Partial Private Sub OnValueDriver1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnValueDriver1Changed()
    End Sub
    Partial Private Sub OnNumHuman1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumHuman1Changed()
    End Sub
    Partial Private Sub OnValueSumHuman1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnValueSumHuman1Changed()
    End Sub
    Partial Private Sub OnNumSumHumanChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumSumHumanChanged()
    End Sub
    Partial Private Sub OnValueSumHumanChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnValueSumHumanChanged()
    End Sub
    Partial Private Sub OnAccessoryChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAccessoryChanged()
    End Sub
    Partial Private Sub OnValueFirst2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnValueFirst2Changed()
    End Sub
    Partial Private Sub OnValueDriver2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnValueDriver2Changed()
    End Sub
    Partial Private Sub OnNumHuman2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumHuman2Changed()
    End Sub
    Partial Private Sub OnValueSumHuman2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnValueSumHuman2Changed()
    End Sub
    Partial Private Sub OnDiscountGroupChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountGroupChanged()
    End Sub
    Partial Private Sub OnDiscountGroupFlagChanging(value As String)
    End Sub
    Partial Private Sub OnDiscountGroupFlagChanged()
    End Sub
    Partial Private Sub OnDiscountHistoryChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountHistoryChanged()
    End Sub
    Partial Private Sub OnDiscountHistoryFlagChanging(value As String)
    End Sub
    Partial Private Sub OnDiscountHistoryFlagChanged()
    End Sub
    Partial Private Sub OnDiscountOtherChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountOtherChanged()
    End Sub
    Partial Private Sub OnDiscountOtherFlagChanging(value As String)
    End Sub
    Partial Private Sub OnDiscountOtherFlagChanged()
    End Sub
    Partial Private Sub OnAddHistoryChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAddHistoryChanged()
    End Sub
    Partial Private Sub OnAddHistoryFlagChanging(value As String)
    End Sub
    Partial Private Sub OnAddHistoryFlagChanged()
    End Sub
    Partial Private Sub OnDiscountspacialChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountspacialChanged()
    End Sub
    Partial Private Sub OnDiscountspacialFlagChanging(value As String)
    End Sub
    Partial Private Sub OnDiscountspacialFlagChanged()
    End Sub
    Partial Private Sub OnDiscountPreChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountPreChanged()
    End Sub
    Partial Private Sub OnVMIClassOfRiskChanging(value As String)
    End Sub
    Partial Private Sub OnVMIClassOfRiskChanged()
    End Sub
    Partial Private Sub OnNetPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNetPremiumChanged()
    End Sub
    Partial Private Sub OnVatChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVatChanged()
    End Sub
    Partial Private Sub OnStampChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnStampChanged()
    End Sub
    Partial Private Sub OnGrossPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGrossPremiumChanged()
    End Sub
    Partial Private Sub OnCMIClassOfRiskChanging(value As String)
    End Sub
    Partial Private Sub OnCMIClassOfRiskChanged()
    End Sub
    Partial Private Sub OnstickCarTypeChanging(value As String)
    End Sub
    Partial Private Sub OnstickCarTypeChanged()
    End Sub
    Partial Private Sub OnCMINetPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCMINetPremiumChanged()
    End Sub
    Partial Private Sub OnCMIVatChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCMIVatChanged()
    End Sub
    Partial Private Sub OnCMIStampChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCMIStampChanged()
    End Sub
    Partial Private Sub OnCMIGrossPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCMIGrossPremiumChanged()
    End Sub
    Partial Private Sub OnTotalPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalPremiumChanged()
    End Sub
    Partial Private Sub OnFloodChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFloodChanged()
    End Sub
    Partial Private Sub OnDriverChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDriverChanged()
    End Sub
    Partial Private Sub OnDriverName1Changing(value As String)
    End Sub
    Partial Private Sub OnDriverName1Changed()
    End Sub
    Partial Private Sub OntxtOldDriver1Changing(value As String)
    End Sub
    Partial Private Sub OntxtOldDriver1Changed()
    End Sub
    Partial Private Sub OnDriverName2Changing(value As String)
    End Sub
    Partial Private Sub OnDriverName2Changed()
    End Sub
    Partial Private Sub OntxtOldDriver2Changing(value As String)
    End Sub
    Partial Private Sub OntxtOldDriver2Changed()
    End Sub
    Partial Private Sub OnCMIPremiumCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCMIPremiumCodeChanged()
    End Sub
    Partial Private Sub OnCarTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCarTypeChanged()
    End Sub
    Partial Private Sub OnCarUseChanging(value As String)
    End Sub
    Partial Private Sub OnCarUseChanged()
    End Sub
    Partial Private Sub OnDiscountCMIChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountCMIChanged()
    End Sub
    Partial Private Sub OnDiscountCMI_PChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountCMI_PChanged()
    End Sub
    Partial Private Sub OnDiscountspacial_PChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountspacial_PChanged()
    End Sub
    Partial Private Sub OnCoverageIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCoverageIDChanged()
    End Sub
    Partial Private Sub OnPremiumIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPremiumIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property QDID() As Integer
		Get
			Return Me._QDID
		End Get
		Set
			If ((Me._QDID = value)  _
						= false) Then
				Me.OnQDIDChanging(value)
				Me.SendPropertyChanging
				Me._QDID = value
				Me.SendPropertyChanged("QDID")
				Me.OnQDIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationNo", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property QuotationNo() As String
		Get
			Return Me._QuotationNo
		End Get
		Set
			If (String.Equals(Me._QuotationNo, value) = false) Then
				Me.OnQuotationNoChanging(value)
				Me.SendPropertyChanging
				Me._QuotationNo = value
				Me.SendPropertyChanged("QuotationNo")
				Me.OnQuotationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarNo", DbType:="Int")>  _
	Public Property CarNo() As System.Nullable(Of Integer)
		Get
			Return Me._CarNo
		End Get
		Set
			If (Me._CarNo.Equals(value) = false) Then
				Me.OnCarNoChanging(value)
				Me.SendPropertyChanging
				Me._CarNo = value
				Me.SendPropertyChanged("CarNo")
				Me.OnCarNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWriter", DbType:="VarChar(50)")>  _
	Public Property UWriter() As String
		Get
			Return Me._UWriter
		End Get
		Set
			If (String.Equals(Me._UWriter, value) = false) Then
				Me.OnUWriterChanging(value)
				Me.SendPropertyChanging
				Me._UWriter = value
				Me.SendPropertyChanged("UWriter")
				Me.OnUWriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlanCode", DbType:="VarChar(50)")>  _
	Public Property PlanCode() As String
		Get
			Return Me._PlanCode
		End Get
		Set
			If (String.Equals(Me._PlanCode, value) = false) Then
				Me.OnPlanCodeChanging(value)
				Me.SendPropertyChanging
				Me._PlanCode = value
				Me.SendPropertyChanged("PlanCode")
				Me.OnPlanCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType", DbType:="VarChar(2)")>  _
	Public Property GarageType() As String
		Get
			Return Me._GarageType
		End Get
		Set
			If (String.Equals(Me._GarageType, value) = false) Then
				Me.OnGarageTypeChanging(value)
				Me.SendPropertyChanging
				Me._GarageType = value
				Me.SendPropertyChanged("GarageType")
				Me.OnGarageTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyType", DbType:="VarChar(2)")>  _
	Public Property PolicyType() As String
		Get
			Return Me._PolicyType
		End Get
		Set
			If (String.Equals(Me._PolicyType, value) = false) Then
				Me.OnPolicyTypeChanging(value)
				Me.SendPropertyChanging
				Me._PolicyType = value
				Me.SendPropertyChanged("PolicyType")
				Me.OnPolicyTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueFirst1", DbType:="Int")>  _
	Public Property ValueFirst1() As System.Nullable(Of Integer)
		Get
			Return Me._ValueFirst1
		End Get
		Set
			If (Me._ValueFirst1.Equals(value) = false) Then
				Me.OnValueFirst1Changing(value)
				Me.SendPropertyChanging
				Me._ValueFirst1 = value
				Me.SendPropertyChanged("ValueFirst1")
				Me.OnValueFirst1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cboTPBIPerson", DbType:="Int")>  _
	Public Property cboTPBIPerson() As System.Nullable(Of Integer)
		Get
			Return Me._cboTPBIPerson
		End Get
		Set
			If (Me._cboTPBIPerson.Equals(value) = false) Then
				Me.OncboTPBIPersonChanging(value)
				Me.SendPropertyChanging
				Me._cboTPBIPerson = value
				Me.SendPropertyChanged("cboTPBIPerson")
				Me.OncboTPBIPersonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cboTPBITime", DbType:="Int")>  _
	Public Property cboTPBITime() As System.Nullable(Of Integer)
		Get
			Return Me._cboTPBITime
		End Get
		Set
			If (Me._cboTPBITime.Equals(value) = false) Then
				Me.OncboTPBITimeChanging(value)
				Me.SendPropertyChanging
				Me._cboTPBITime = value
				Me.SendPropertyChanged("cboTPBITime")
				Me.OncboTPBITimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cboTPPD", DbType:="Int")>  _
	Public Property cboTPPD() As System.Nullable(Of Integer)
		Get
			Return Me._cboTPPD
		End Get
		Set
			If (Me._cboTPPD.Equals(value) = false) Then
				Me.OncboTPPDChanging(value)
				Me.SendPropertyChanging
				Me._cboTPPD = value
				Me.SendPropertyChanged("cboTPPD")
				Me.OncboTPPDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtODFund", DbType:="Int")>  _
	Public Property txtODFund() As System.Nullable(Of Integer)
		Get
			Return Me._txtODFund
		End Get
		Set
			If (Me._txtODFund.Equals(value) = false) Then
				Me.OntxtODFundChanging(value)
				Me.SendPropertyChanging
				Me._txtODFund = value
				Me.SendPropertyChanged("txtODFund")
				Me.OntxtODFundChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtFnTFund", DbType:="Int")>  _
	Public Property txtFnTFund() As System.Nullable(Of Integer)
		Get
			Return Me._txtFnTFund
		End Get
		Set
			If (Me._txtFnTFund.Equals(value) = false) Then
				Me.OntxtFnTFundChanging(value)
				Me.SendPropertyChanging
				Me._txtFnTFund = value
				Me.SendPropertyChanged("txtFnTFund")
				Me.OntxtFnTFundChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtFnTFund1", DbType:="Int")>  _
	Public Property txtFnTFund1() As System.Nullable(Of Integer)
		Get
			Return Me._txtFnTFund1
		End Get
		Set
			If (Me._txtFnTFund1.Equals(value) = false) Then
				Me.OntxtFnTFund1Changing(value)
				Me.SendPropertyChanging
				Me._txtFnTFund1 = value
				Me.SendPropertyChanged("txtFnTFund1")
				Me.OntxtFnTFund1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueInSure", DbType:="Int")>  _
	Public Property ValueInSure() As System.Nullable(Of Integer)
		Get
			Return Me._ValueInSure
		End Get
		Set
			If (Me._ValueInSure.Equals(value) = false) Then
				Me.OnValueInSureChanging(value)
				Me.SendPropertyChanging
				Me._ValueInSure = value
				Me.SendPropertyChanged("ValueInSure")
				Me.OnValueInSureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BpremiumS", DbType:="Int")>  _
	Public Property BpremiumS() As System.Nullable(Of Integer)
		Get
			Return Me._BpremiumS
		End Get
		Set
			If (Me._BpremiumS.Equals(value) = false) Then
				Me.OnBpremiumSChanging(value)
				Me.SendPropertyChanging
				Me._BpremiumS = value
				Me.SendPropertyChanged("BpremiumS")
				Me.OnBpremiumSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueDriver1", DbType:="Int")>  _
	Public Property ValueDriver1() As System.Nullable(Of Integer)
		Get
			Return Me._ValueDriver1
		End Get
		Set
			If (Me._ValueDriver1.Equals(value) = false) Then
				Me.OnValueDriver1Changing(value)
				Me.SendPropertyChanging
				Me._ValueDriver1 = value
				Me.SendPropertyChanged("ValueDriver1")
				Me.OnValueDriver1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumHuman1", DbType:="Int")>  _
	Public Property NumHuman1() As System.Nullable(Of Integer)
		Get
			Return Me._NumHuman1
		End Get
		Set
			If (Me._NumHuman1.Equals(value) = false) Then
				Me.OnNumHuman1Changing(value)
				Me.SendPropertyChanging
				Me._NumHuman1 = value
				Me.SendPropertyChanged("NumHuman1")
				Me.OnNumHuman1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueSumHuman1", DbType:="Int")>  _
	Public Property ValueSumHuman1() As System.Nullable(Of Integer)
		Get
			Return Me._ValueSumHuman1
		End Get
		Set
			If (Me._ValueSumHuman1.Equals(value) = false) Then
				Me.OnValueSumHuman1Changing(value)
				Me.SendPropertyChanging
				Me._ValueSumHuman1 = value
				Me.SendPropertyChanged("ValueSumHuman1")
				Me.OnValueSumHuman1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumSumHuman", DbType:="Int")>  _
	Public Property NumSumHuman() As System.Nullable(Of Integer)
		Get
			Return Me._NumSumHuman
		End Get
		Set
			If (Me._NumSumHuman.Equals(value) = false) Then
				Me.OnNumSumHumanChanging(value)
				Me.SendPropertyChanging
				Me._NumSumHuman = value
				Me.SendPropertyChanged("NumSumHuman")
				Me.OnNumSumHumanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueSumHuman", DbType:="Int")>  _
	Public Property ValueSumHuman() As System.Nullable(Of Integer)
		Get
			Return Me._ValueSumHuman
		End Get
		Set
			If (Me._ValueSumHuman.Equals(value) = false) Then
				Me.OnValueSumHumanChanging(value)
				Me.SendPropertyChanging
				Me._ValueSumHuman = value
				Me.SendPropertyChanged("ValueSumHuman")
				Me.OnValueSumHumanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accessory", DbType:="Int")>  _
	Public Property Accessory() As System.Nullable(Of Integer)
		Get
			Return Me._Accessory
		End Get
		Set
			If (Me._Accessory.Equals(value) = false) Then
				Me.OnAccessoryChanging(value)
				Me.SendPropertyChanging
				Me._Accessory = value
				Me.SendPropertyChanged("Accessory")
				Me.OnAccessoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueFirst2", DbType:="Int")>  _
	Public Property ValueFirst2() As System.Nullable(Of Integer)
		Get
			Return Me._ValueFirst2
		End Get
		Set
			If (Me._ValueFirst2.Equals(value) = false) Then
				Me.OnValueFirst2Changing(value)
				Me.SendPropertyChanging
				Me._ValueFirst2 = value
				Me.SendPropertyChanged("ValueFirst2")
				Me.OnValueFirst2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueDriver2", DbType:="Int")>  _
	Public Property ValueDriver2() As System.Nullable(Of Integer)
		Get
			Return Me._ValueDriver2
		End Get
		Set
			If (Me._ValueDriver2.Equals(value) = false) Then
				Me.OnValueDriver2Changing(value)
				Me.SendPropertyChanging
				Me._ValueDriver2 = value
				Me.SendPropertyChanged("ValueDriver2")
				Me.OnValueDriver2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumHuman2", DbType:="Int")>  _
	Public Property NumHuman2() As System.Nullable(Of Integer)
		Get
			Return Me._NumHuman2
		End Get
		Set
			If (Me._NumHuman2.Equals(value) = false) Then
				Me.OnNumHuman2Changing(value)
				Me.SendPropertyChanging
				Me._NumHuman2 = value
				Me.SendPropertyChanged("NumHuman2")
				Me.OnNumHuman2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueSumHuman2", DbType:="Int")>  _
	Public Property ValueSumHuman2() As System.Nullable(Of Integer)
		Get
			Return Me._ValueSumHuman2
		End Get
		Set
			If (Me._ValueSumHuman2.Equals(value) = false) Then
				Me.OnValueSumHuman2Changing(value)
				Me.SendPropertyChanging
				Me._ValueSumHuman2 = value
				Me.SendPropertyChanged("ValueSumHuman2")
				Me.OnValueSumHuman2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountGroup", DbType:="Decimal(18,2)")>  _
	Public Property DiscountGroup() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountGroup
		End Get
		Set
			If (Me._DiscountGroup.Equals(value) = false) Then
				Me.OnDiscountGroupChanging(value)
				Me.SendPropertyChanging
				Me._DiscountGroup = value
				Me.SendPropertyChanged("DiscountGroup")
				Me.OnDiscountGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountGroupFlag", DbType:="VarChar(2)")>  _
	Public Property DiscountGroupFlag() As String
		Get
			Return Me._DiscountGroupFlag
		End Get
		Set
			If (String.Equals(Me._DiscountGroupFlag, value) = false) Then
				Me.OnDiscountGroupFlagChanging(value)
				Me.SendPropertyChanging
				Me._DiscountGroupFlag = value
				Me.SendPropertyChanged("DiscountGroupFlag")
				Me.OnDiscountGroupFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountHistory", DbType:="Decimal(18,2)")>  _
	Public Property DiscountHistory() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountHistory
		End Get
		Set
			If (Me._DiscountHistory.Equals(value) = false) Then
				Me.OnDiscountHistoryChanging(value)
				Me.SendPropertyChanging
				Me._DiscountHistory = value
				Me.SendPropertyChanged("DiscountHistory")
				Me.OnDiscountHistoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountHistoryFlag", DbType:="VarChar(2)")>  _
	Public Property DiscountHistoryFlag() As String
		Get
			Return Me._DiscountHistoryFlag
		End Get
		Set
			If (String.Equals(Me._DiscountHistoryFlag, value) = false) Then
				Me.OnDiscountHistoryFlagChanging(value)
				Me.SendPropertyChanging
				Me._DiscountHistoryFlag = value
				Me.SendPropertyChanged("DiscountHistoryFlag")
				Me.OnDiscountHistoryFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountOther", DbType:="Decimal(18,2)")>  _
	Public Property DiscountOther() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountOther
		End Get
		Set
			If (Me._DiscountOther.Equals(value) = false) Then
				Me.OnDiscountOtherChanging(value)
				Me.SendPropertyChanging
				Me._DiscountOther = value
				Me.SendPropertyChanged("DiscountOther")
				Me.OnDiscountOtherChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountOtherFlag", DbType:="VarChar(2)")>  _
	Public Property DiscountOtherFlag() As String
		Get
			Return Me._DiscountOtherFlag
		End Get
		Set
			If (String.Equals(Me._DiscountOtherFlag, value) = false) Then
				Me.OnDiscountOtherFlagChanging(value)
				Me.SendPropertyChanging
				Me._DiscountOtherFlag = value
				Me.SendPropertyChanged("DiscountOtherFlag")
				Me.OnDiscountOtherFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddHistory", DbType:="Decimal(18,2)")>  _
	Public Property AddHistory() As System.Nullable(Of Decimal)
		Get
			Return Me._AddHistory
		End Get
		Set
			If (Me._AddHistory.Equals(value) = false) Then
				Me.OnAddHistoryChanging(value)
				Me.SendPropertyChanging
				Me._AddHistory = value
				Me.SendPropertyChanged("AddHistory")
				Me.OnAddHistoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddHistoryFlag", DbType:="VarChar(2)")>  _
	Public Property AddHistoryFlag() As String
		Get
			Return Me._AddHistoryFlag
		End Get
		Set
			If (String.Equals(Me._AddHistoryFlag, value) = false) Then
				Me.OnAddHistoryFlagChanging(value)
				Me.SendPropertyChanging
				Me._AddHistoryFlag = value
				Me.SendPropertyChanged("AddHistoryFlag")
				Me.OnAddHistoryFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discountspacial", DbType:="Decimal(18,2)")>  _
	Public Property Discountspacial() As System.Nullable(Of Decimal)
		Get
			Return Me._Discountspacial
		End Get
		Set
			If (Me._Discountspacial.Equals(value) = false) Then
				Me.OnDiscountspacialChanging(value)
				Me.SendPropertyChanging
				Me._Discountspacial = value
				Me.SendPropertyChanged("Discountspacial")
				Me.OnDiscountspacialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountspacialFlag", DbType:="VarChar(2)")>  _
	Public Property DiscountspacialFlag() As String
		Get
			Return Me._DiscountspacialFlag
		End Get
		Set
			If (String.Equals(Me._DiscountspacialFlag, value) = false) Then
				Me.OnDiscountspacialFlagChanging(value)
				Me.SendPropertyChanging
				Me._DiscountspacialFlag = value
				Me.SendPropertyChanged("DiscountspacialFlag")
				Me.OnDiscountspacialFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountPre", DbType:="Decimal(18,2)")>  _
	Public Property DiscountPre() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountPre
		End Get
		Set
			If (Me._DiscountPre.Equals(value) = false) Then
				Me.OnDiscountPreChanging(value)
				Me.SendPropertyChanging
				Me._DiscountPre = value
				Me.SendPropertyChanged("DiscountPre")
				Me.OnDiscountPreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VMIClassOfRisk", DbType:="VarChar(50)")>  _
	Public Property VMIClassOfRisk() As String
		Get
			Return Me._VMIClassOfRisk
		End Get
		Set
			If (String.Equals(Me._VMIClassOfRisk, value) = false) Then
				Me.OnVMIClassOfRiskChanging(value)
				Me.SendPropertyChanging
				Me._VMIClassOfRisk = value
				Me.SendPropertyChanged("VMIClassOfRisk")
				Me.OnVMIClassOfRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetPremium", DbType:="Decimal(18,2)")>  _
	Public Property NetPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._NetPremium
		End Get
		Set
			If (Me._NetPremium.Equals(value) = false) Then
				Me.OnNetPremiumChanging(value)
				Me.SendPropertyChanging
				Me._NetPremium = value
				Me.SendPropertyChanged("NetPremium")
				Me.OnNetPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vat", DbType:="Decimal(18,2)")>  _
	Public Property Vat() As System.Nullable(Of Decimal)
		Get
			Return Me._Vat
		End Get
		Set
			If (Me._Vat.Equals(value) = false) Then
				Me.OnVatChanging(value)
				Me.SendPropertyChanging
				Me._Vat = value
				Me.SendPropertyChanged("Vat")
				Me.OnVatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stamp", DbType:="Decimal(18,2)")>  _
	Public Property Stamp() As System.Nullable(Of Decimal)
		Get
			Return Me._Stamp
		End Get
		Set
			If (Me._Stamp.Equals(value) = false) Then
				Me.OnStampChanging(value)
				Me.SendPropertyChanging
				Me._Stamp = value
				Me.SendPropertyChanged("Stamp")
				Me.OnStampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossPremium", DbType:="Decimal(18,2)")>  _
	Public Property GrossPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._GrossPremium
		End Get
		Set
			If (Me._GrossPremium.Equals(value) = false) Then
				Me.OnGrossPremiumChanging(value)
				Me.SendPropertyChanging
				Me._GrossPremium = value
				Me.SendPropertyChanged("GrossPremium")
				Me.OnGrossPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIClassOfRisk", DbType:="VarChar(50)")>  _
	Public Property CMIClassOfRisk() As String
		Get
			Return Me._CMIClassOfRisk
		End Get
		Set
			If (String.Equals(Me._CMIClassOfRisk, value) = false) Then
				Me.OnCMIClassOfRiskChanging(value)
				Me.SendPropertyChanging
				Me._CMIClassOfRisk = value
				Me.SendPropertyChanged("CMIClassOfRisk")
				Me.OnCMIClassOfRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stickCarType", DbType:="VarChar(255)")>  _
	Public Property stickCarType() As String
		Get
			Return Me._stickCarType
		End Get
		Set
			If (String.Equals(Me._stickCarType, value) = false) Then
				Me.OnstickCarTypeChanging(value)
				Me.SendPropertyChanging
				Me._stickCarType = value
				Me.SendPropertyChanged("stickCarType")
				Me.OnstickCarTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMINetPremium", DbType:="Decimal(18,2)")>  _
	Public Property CMINetPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._CMINetPremium
		End Get
		Set
			If (Me._CMINetPremium.Equals(value) = false) Then
				Me.OnCMINetPremiumChanging(value)
				Me.SendPropertyChanging
				Me._CMINetPremium = value
				Me.SendPropertyChanged("CMINetPremium")
				Me.OnCMINetPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIVat", DbType:="Decimal(18,2)")>  _
	Public Property CMIVat() As System.Nullable(Of Decimal)
		Get
			Return Me._CMIVat
		End Get
		Set
			If (Me._CMIVat.Equals(value) = false) Then
				Me.OnCMIVatChanging(value)
				Me.SendPropertyChanging
				Me._CMIVat = value
				Me.SendPropertyChanged("CMIVat")
				Me.OnCMIVatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIStamp", DbType:="Decimal(18,2)")>  _
	Public Property CMIStamp() As System.Nullable(Of Decimal)
		Get
			Return Me._CMIStamp
		End Get
		Set
			If (Me._CMIStamp.Equals(value) = false) Then
				Me.OnCMIStampChanging(value)
				Me.SendPropertyChanging
				Me._CMIStamp = value
				Me.SendPropertyChanged("CMIStamp")
				Me.OnCMIStampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIGrossPremium", DbType:="Decimal(18,2)")>  _
	Public Property CMIGrossPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._CMIGrossPremium
		End Get
		Set
			If (Me._CMIGrossPremium.Equals(value) = false) Then
				Me.OnCMIGrossPremiumChanging(value)
				Me.SendPropertyChanging
				Me._CMIGrossPremium = value
				Me.SendPropertyChanged("CMIGrossPremium")
				Me.OnCMIGrossPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPremium", DbType:="Decimal(18,2)")>  _
	Public Property TotalPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalPremium
		End Get
		Set
			If (Me._TotalPremium.Equals(value) = false) Then
				Me.OnTotalPremiumChanging(value)
				Me.SendPropertyChanging
				Me._TotalPremium = value
				Me.SendPropertyChanged("TotalPremium")
				Me.OnTotalPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Flood", DbType:="Int")>  _
	Public Property Flood() As System.Nullable(Of Integer)
		Get
			Return Me._Flood
		End Get
		Set
			If (Me._Flood.Equals(value) = false) Then
				Me.OnFloodChanging(value)
				Me.SendPropertyChanging
				Me._Flood = value
				Me.SendPropertyChanged("Flood")
				Me.OnFloodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Driver", DbType:="Int")>  _
	Public Property Driver() As System.Nullable(Of Integer)
		Get
			Return Me._Driver
		End Get
		Set
			If (Me._Driver.Equals(value) = false) Then
				Me.OnDriverChanging(value)
				Me.SendPropertyChanging
				Me._Driver = value
				Me.SendPropertyChanged("Driver")
				Me.OnDriverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverName1", DbType:="VarChar(255)")>  _
	Public Property DriverName1() As String
		Get
			Return Me._DriverName1
		End Get
		Set
			If (String.Equals(Me._DriverName1, value) = false) Then
				Me.OnDriverName1Changing(value)
				Me.SendPropertyChanging
				Me._DriverName1 = value
				Me.SendPropertyChanged("DriverName1")
				Me.OnDriverName1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtOldDriver1", DbType:="VarChar(255)")>  _
	Public Property txtOldDriver1() As String
		Get
			Return Me._txtOldDriver1
		End Get
		Set
			If (String.Equals(Me._txtOldDriver1, value) = false) Then
				Me.OntxtOldDriver1Changing(value)
				Me.SendPropertyChanging
				Me._txtOldDriver1 = value
				Me.SendPropertyChanged("txtOldDriver1")
				Me.OntxtOldDriver1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverName2", DbType:="VarChar(255)")>  _
	Public Property DriverName2() As String
		Get
			Return Me._DriverName2
		End Get
		Set
			If (String.Equals(Me._DriverName2, value) = false) Then
				Me.OnDriverName2Changing(value)
				Me.SendPropertyChanging
				Me._DriverName2 = value
				Me.SendPropertyChanged("DriverName2")
				Me.OnDriverName2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtOldDriver2", DbType:="VarChar(255)")>  _
	Public Property txtOldDriver2() As String
		Get
			Return Me._txtOldDriver2
		End Get
		Set
			If (String.Equals(Me._txtOldDriver2, value) = false) Then
				Me.OntxtOldDriver2Changing(value)
				Me.SendPropertyChanging
				Me._txtOldDriver2 = value
				Me.SendPropertyChanged("txtOldDriver2")
				Me.OntxtOldDriver2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIPremiumCode", DbType:="VarChar(50)")>  _
	Public Property CMIPremiumCode() As String
		Get
			Return Me._CMIPremiumCode
		End Get
		Set
			If (String.Equals(Me._CMIPremiumCode, value) = false) Then
				Me.OnCMIPremiumCodeChanging(value)
				Me.SendPropertyChanging
				Me._CMIPremiumCode = value
				Me.SendPropertyChanged("CMIPremiumCode")
				Me.OnCMIPremiumCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarType", DbType:="VarChar(50)")>  _
	Public Property CarType() As String
		Get
			Return Me._CarType
		End Get
		Set
			If (String.Equals(Me._CarType, value) = false) Then
				Me.OnCarTypeChanging(value)
				Me.SendPropertyChanging
				Me._CarType = value
				Me.SendPropertyChanged("CarType")
				Me.OnCarTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarUse", DbType:="VarChar(50)")>  _
	Public Property CarUse() As String
		Get
			Return Me._CarUse
		End Get
		Set
			If (String.Equals(Me._CarUse, value) = false) Then
				Me.OnCarUseChanging(value)
				Me.SendPropertyChanging
				Me._CarUse = value
				Me.SendPropertyChanged("CarUse")
				Me.OnCarUseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountCMI", DbType:="Decimal(18,2)")>  _
	Public Property DiscountCMI() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountCMI
		End Get
		Set
			If (Me._DiscountCMI.Equals(value) = false) Then
				Me.OnDiscountCMIChanging(value)
				Me.SendPropertyChanging
				Me._DiscountCMI = value
				Me.SendPropertyChanged("DiscountCMI")
				Me.OnDiscountCMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountCMI_P", DbType:="Decimal(18,3)")>  _
	Public Property DiscountCMI_P() As System.Nullable(Of Decimal)
		Get
			Return Me._DiscountCMI_P
		End Get
		Set
			If (Me._DiscountCMI_P.Equals(value) = false) Then
				Me.OnDiscountCMI_PChanging(value)
				Me.SendPropertyChanging
				Me._DiscountCMI_P = value
				Me.SendPropertyChanged("DiscountCMI_P")
				Me.OnDiscountCMI_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discountspacial_P", DbType:="Decimal(18,3)")>  _
	Public Property Discountspacial_P() As System.Nullable(Of Decimal)
		Get
			Return Me._Discountspacial_P
		End Get
		Set
			If (Me._Discountspacial_P.Equals(value) = false) Then
				Me.OnDiscountspacial_PChanging(value)
				Me.SendPropertyChanging
				Me._Discountspacial_P = value
				Me.SendPropertyChanged("Discountspacial_P")
				Me.OnDiscountspacial_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoverageID", DbType:="Int")>  _
	Public Property CoverageID() As System.Nullable(Of Integer)
		Get
			Return Me._CoverageID
		End Get
		Set
			If (Me._CoverageID.Equals(value) = false) Then
				Me.OnCoverageIDChanging(value)
				Me.SendPropertyChanging
				Me._CoverageID = value
				Me.SendPropertyChanged("CoverageID")
				Me.OnCoverageIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumID", DbType:="Int")>  _
	Public Property PremiumID() As System.Nullable(Of Integer)
		Get
			Return Me._PremiumID
		End Get
		Set
			If (Me._PremiumID.Equals(value) = false) Then
				Me.OnPremiumIDChanging(value)
				Me.SendPropertyChanging
				Me._PremiumID = value
				Me.SendPropertyChanged("PremiumID")
				Me.OnPremiumIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_UserProject")>  _
Partial Public Class V_UserProject
	
	Private _ProjectID As Integer
	
	Private _ProjectCode As String
	
	Private _ProjectName As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _ModifyBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _CLIENTCODE As String
	
	Private _AECode As String
	
	Private _UserName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectID", DbType:="Int NOT NULL")>  _
	Public Property ProjectID() As Integer
		Get
			Return Me._ProjectID
		End Get
		Set
			If ((Me._ProjectID = value)  _
						= false) Then
				Me._ProjectID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectCode", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ProjectCode() As String
		Get
			Return Me._ProjectCode
		End Get
		Set
			If (String.Equals(Me._ProjectCode, value) = false) Then
				Me._ProjectCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectName", DbType:="VarChar(255)")>  _
	Public Property ProjectName() As String
		Get
			Return Me._ProjectName
		End Get
		Set
			If (String.Equals(Me._ProjectName, value) = false) Then
				Me._ProjectName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me._ExpiryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me._ModifyBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLIENTCODE", DbType:="VarChar(8)")>  _
	Public Property CLIENTCODE() As String
		Get
			Return Me._CLIENTCODE
		End Get
		Set
			If (String.Equals(Me._CLIENTCODE, value) = false) Then
				Me._CLIENTCODE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AECode", DbType:="VarChar(8)")>  _
	Public Property AECode() As String
		Get
			Return Me._AECode
		End Get
		Set
			If (String.Equals(Me._AECode, value) = false) Then
				Me._AECode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMotorQuotationRemark")>  _
Partial Public Class tblMotorQuotationRemark
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _QuotationNo As String
	
	Private _Remark As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnQuotationNoChanging(value As String)
    End Sub
    Partial Private Sub OnQuotationNoChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationNo", DbType:="VarChar(50)")>  _
	Public Property QuotationNo() As String
		Get
			Return Me._QuotationNo
		End Get
		Set
			If (String.Equals(Me._QuotationNo, value) = false) Then
				Me.OnQuotationNoChanging(value)
				Me.SendPropertyChanging
				Me._QuotationNo = value
				Me.SendPropertyChanged("QuotationNo")
				Me.OnQuotationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_MotorCampaignPublish")>  _
Partial Public Class V_MotorCampaignPublish
	
	Private _ID As Integer
	
	Private _ProjectID As Integer
	
	Private _ProjectCode As String
	
	Private _ProjectName As String
	
	Private _AECode As String
	
	Private _UserName As String
	
	Private _CampaignID As Integer
	
	Private _CampaignName As String
	
	Private _Underwriter As String
	
	Private _Name As String
	
	Private _Brand As String
	
	Private _Model As String
	
	Private _ModelCode As String
	
	Private _CarPrice As System.Nullable(Of Decimal)
	
	Private _SumInsuredFrom As System.Nullable(Of Decimal)
	
	Private _SumInsuredTo As System.Nullable(Of Decimal)
	
	Private _NetPremium As System.Nullable(Of Decimal)
	
	Private _Stamp As System.Nullable(Of Decimal)
	
	Private _Vat As System.Nullable(Of Decimal)
	
	Private _GrossPremium As System.Nullable(Of Decimal)
	
	Private _Discount As System.Nullable(Of Decimal)
	
	Private _TotalPremium As System.Nullable(Of Decimal)
	
	Private _SinglePrice As System.Nullable(Of Decimal)
	
	Private _CarAge As System.Nullable(Of Integer)
	
	Private _CoverageID As System.Nullable(Of Integer)
	
	Private _Coverage1 As String
	
	Private _Coverage2 As String
	
	Private _Coverage3 As String
	
	Private _Coverage4 As String
	
	Private _Coverage5 As String
	
	Private _Coverage6 As String
	
	Private _Coverage7 As String
	
	Private _Coverage8 As String
	
	Private _Coverage9 As String
	
	Private _Coverage10 As String
	
	Private _Coverage11 As String
	
	Private _Coverage12 As String
	
	Private _Coverage13 As String
	
	Private _Coverage14 As String
	
	Private _Coverage15 As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _PremiumID As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectID", DbType:="Int NOT NULL")>  _
	Public Property ProjectID() As Integer
		Get
			Return Me._ProjectID
		End Get
		Set
			If ((Me._ProjectID = value)  _
						= false) Then
				Me._ProjectID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectCode", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ProjectCode() As String
		Get
			Return Me._ProjectCode
		End Get
		Set
			If (String.Equals(Me._ProjectCode, value) = false) Then
				Me._ProjectCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectName", DbType:="VarChar(255)")>  _
	Public Property ProjectName() As String
		Get
			Return Me._ProjectName
		End Get
		Set
			If (String.Equals(Me._ProjectName, value) = false) Then
				Me._ProjectName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AECode", DbType:="VarChar(8)")>  _
	Public Property AECode() As String
		Get
			Return Me._AECode
		End Get
		Set
			If (String.Equals(Me._AECode, value) = false) Then
				Me._AECode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int NOT NULL")>  _
	Public Property CampaignID() As Integer
		Get
			Return Me._CampaignID
		End Get
		Set
			If ((Me._CampaignID = value)  _
						= false) Then
				Me._CampaignID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignName", DbType:="VarChar(100)")>  _
	Public Property CampaignName() As String
		Get
			Return Me._CampaignName
		End Get
		Set
			If (String.Equals(Me._CampaignName, value) = false) Then
				Me._CampaignName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8)")>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brand", DbType:="VarChar(100)")>  _
	Public Property Brand() As String
		Get
			Return Me._Brand
		End Get
		Set
			If (String.Equals(Me._Brand, value) = false) Then
				Me._Brand = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="VarChar(100)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me._Model = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelCode", DbType:="VarChar(100)")>  _
	Public Property ModelCode() As String
		Get
			Return Me._ModelCode
		End Get
		Set
			If (String.Equals(Me._ModelCode, value) = false) Then
				Me._ModelCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarPrice", DbType:="Decimal(18,2)")>  _
	Public Property CarPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._CarPrice
		End Get
		Set
			If (Me._CarPrice.Equals(value) = false) Then
				Me._CarPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsuredFrom", DbType:="Decimal(18,2)")>  _
	Public Property SumInsuredFrom() As System.Nullable(Of Decimal)
		Get
			Return Me._SumInsuredFrom
		End Get
		Set
			If (Me._SumInsuredFrom.Equals(value) = false) Then
				Me._SumInsuredFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsuredTo", DbType:="Decimal(18,2)")>  _
	Public Property SumInsuredTo() As System.Nullable(Of Decimal)
		Get
			Return Me._SumInsuredTo
		End Get
		Set
			If (Me._SumInsuredTo.Equals(value) = false) Then
				Me._SumInsuredTo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetPremium", DbType:="Decimal(18,2)")>  _
	Public Property NetPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._NetPremium
		End Get
		Set
			If (Me._NetPremium.Equals(value) = false) Then
				Me._NetPremium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stamp", DbType:="Decimal(18,2)")>  _
	Public Property Stamp() As System.Nullable(Of Decimal)
		Get
			Return Me._Stamp
		End Get
		Set
			If (Me._Stamp.Equals(value) = false) Then
				Me._Stamp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vat", DbType:="Decimal(18,2)")>  _
	Public Property Vat() As System.Nullable(Of Decimal)
		Get
			Return Me._Vat
		End Get
		Set
			If (Me._Vat.Equals(value) = false) Then
				Me._Vat = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossPremium", DbType:="Decimal(18,2)")>  _
	Public Property GrossPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._GrossPremium
		End Get
		Set
			If (Me._GrossPremium.Equals(value) = false) Then
				Me._GrossPremium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discount", DbType:="Decimal(18,2)")>  _
	Public Property Discount() As System.Nullable(Of Decimal)
		Get
			Return Me._Discount
		End Get
		Set
			If (Me._Discount.Equals(value) = false) Then
				Me._Discount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPremium", DbType:="Decimal(18,2)")>  _
	Public Property TotalPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalPremium
		End Get
		Set
			If (Me._TotalPremium.Equals(value) = false) Then
				Me._TotalPremium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SinglePrice", DbType:="Decimal(18,2)")>  _
	Public Property SinglePrice() As System.Nullable(Of Decimal)
		Get
			Return Me._SinglePrice
		End Get
		Set
			If (Me._SinglePrice.Equals(value) = false) Then
				Me._SinglePrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarAge", DbType:="Int")>  _
	Public Property CarAge() As System.Nullable(Of Integer)
		Get
			Return Me._CarAge
		End Get
		Set
			If (Me._CarAge.Equals(value) = false) Then
				Me._CarAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoverageID", DbType:="Int")>  _
	Public Property CoverageID() As System.Nullable(Of Integer)
		Get
			Return Me._CoverageID
		End Get
		Set
			If (Me._CoverageID.Equals(value) = false) Then
				Me._CoverageID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage1", DbType:="VarChar(50)")>  _
	Public Property Coverage1() As String
		Get
			Return Me._Coverage1
		End Get
		Set
			If (String.Equals(Me._Coverage1, value) = false) Then
				Me._Coverage1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage2", DbType:="VarChar(50)")>  _
	Public Property Coverage2() As String
		Get
			Return Me._Coverage2
		End Get
		Set
			If (String.Equals(Me._Coverage2, value) = false) Then
				Me._Coverage2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage3", DbType:="VarChar(50)")>  _
	Public Property Coverage3() As String
		Get
			Return Me._Coverage3
		End Get
		Set
			If (String.Equals(Me._Coverage3, value) = false) Then
				Me._Coverage3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage4", DbType:="VarChar(50)")>  _
	Public Property Coverage4() As String
		Get
			Return Me._Coverage4
		End Get
		Set
			If (String.Equals(Me._Coverage4, value) = false) Then
				Me._Coverage4 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage5", DbType:="VarChar(50)")>  _
	Public Property Coverage5() As String
		Get
			Return Me._Coverage5
		End Get
		Set
			If (String.Equals(Me._Coverage5, value) = false) Then
				Me._Coverage5 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage6", DbType:="VarChar(50)")>  _
	Public Property Coverage6() As String
		Get
			Return Me._Coverage6
		End Get
		Set
			If (String.Equals(Me._Coverage6, value) = false) Then
				Me._Coverage6 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage7", DbType:="VarChar(50)")>  _
	Public Property Coverage7() As String
		Get
			Return Me._Coverage7
		End Get
		Set
			If (String.Equals(Me._Coverage7, value) = false) Then
				Me._Coverage7 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage8", DbType:="VarChar(50)")>  _
	Public Property Coverage8() As String
		Get
			Return Me._Coverage8
		End Get
		Set
			If (String.Equals(Me._Coverage8, value) = false) Then
				Me._Coverage8 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage9", DbType:="VarChar(50)")>  _
	Public Property Coverage9() As String
		Get
			Return Me._Coverage9
		End Get
		Set
			If (String.Equals(Me._Coverage9, value) = false) Then
				Me._Coverage9 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage10", DbType:="VarChar(50)")>  _
	Public Property Coverage10() As String
		Get
			Return Me._Coverage10
		End Get
		Set
			If (String.Equals(Me._Coverage10, value) = false) Then
				Me._Coverage10 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage11", DbType:="VarChar(50)")>  _
	Public Property Coverage11() As String
		Get
			Return Me._Coverage11
		End Get
		Set
			If (String.Equals(Me._Coverage11, value) = false) Then
				Me._Coverage11 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage12", DbType:="VarChar(50)")>  _
	Public Property Coverage12() As String
		Get
			Return Me._Coverage12
		End Get
		Set
			If (String.Equals(Me._Coverage12, value) = false) Then
				Me._Coverage12 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage13", DbType:="VarChar(50)")>  _
	Public Property Coverage13() As String
		Get
			Return Me._Coverage13
		End Get
		Set
			If (String.Equals(Me._Coverage13, value) = false) Then
				Me._Coverage13 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage14", DbType:="VarChar(50)")>  _
	Public Property Coverage14() As String
		Get
			Return Me._Coverage14
		End Get
		Set
			If (String.Equals(Me._Coverage14, value) = false) Then
				Me._Coverage14 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage15", DbType:="VarChar(50)")>  _
	Public Property Coverage15() As String
		Get
			Return Me._Coverage15
		End Get
		Set
			If (String.Equals(Me._Coverage15, value) = false) Then
				Me._Coverage15 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me._RiskGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumID", DbType:="Int NOT NULL")>  _
	Public Property PremiumID() As Integer
		Get
			Return Me._PremiumID
		End Get
		Set
			If ((Me._PremiumID = value)  _
						= false) Then
				Me._PremiumID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_InsuredCode")>  _
Partial Public Class V_InsuredCode
	
	Private _ID As Integer
	
	Private _InsurerCode As String
	
	Private _Underwriter As String
	
	Private _CrossReference As String
	
	Private _Name As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _PostCode As String
	
	Private _City As String
	
	Private _PhoneBusiness As String
	
	Private _PhoneHome As String
	
	Private _Facsimile As String
	
	Private _AccountContact As String
	
	Private _Addressee As String
	
	Private _Salutation As String
	
	Private _DaysCredit As Short
	
	Private _TrueUnderwriter As Boolean
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
	Private _FinanceContact As String
	
	Private _GeneralClaimContact As String
	
	Private _Type As Char
	
	Private _InsuranceLine As Char
	
	Private _VATPayType As Char
	
	Private _PhoneFinance As String
	
	Private _PhoneClaims As String
	
	Private _FaxFinance As String
	
	Private _FaxClaims As String
	
	Private _ShortName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="VarChar(2)")>  _
	Public Property InsurerCode() As String
		Get
			Return Me._InsurerCode
		End Get
		Set
			If (String.Equals(Me._InsurerCode, value) = false) Then
				Me._InsurerCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CrossReference", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property CrossReference() As String
		Get
			Return Me._CrossReference
		End Get
		Set
			If (String.Equals(Me._CrossReference, value) = false) Then
				Me._CrossReference = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="Char(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me._Address1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me._Address2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me._Address3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostCode", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property PostCode() As String
		Get
			Return Me._PostCode
		End Get
		Set
			If (String.Equals(Me._PostCode, value) = false) Then
				Me._PostCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me._City = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneBusiness", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneBusiness() As String
		Get
			Return Me._PhoneBusiness
		End Get
		Set
			If (String.Equals(Me._PhoneBusiness, value) = false) Then
				Me._PhoneBusiness = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me._PhoneHome = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facsimile", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Facsimile() As String
		Get
			Return Me._Facsimile
		End Get
		Set
			If (String.Equals(Me._Facsimile, value) = false) Then
				Me._Facsimile = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountContact", DbType:="Char(70) NOT NULL", CanBeNull:=false)>  _
	Public Property AccountContact() As String
		Get
			Return Me._AccountContact
		End Get
		Set
			If (String.Equals(Me._AccountContact, value) = false) Then
				Me._AccountContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Addressee", DbType:="Char(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Addressee() As String
		Get
			Return Me._Addressee
		End Get
		Set
			If (String.Equals(Me._Addressee, value) = false) Then
				Me._Addressee = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salutation", DbType:="Char(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Salutation() As String
		Get
			Return Me._Salutation
		End Get
		Set
			If (String.Equals(Me._Salutation, value) = false) Then
				Me._Salutation = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DaysCredit", DbType:="SmallInt NOT NULL")>  _
	Public Property DaysCredit() As Short
		Get
			Return Me._DaysCredit
		End Get
		Set
			If ((Me._DaysCredit = value)  _
						= false) Then
				Me._DaysCredit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrueUnderwriter", DbType:="Bit NOT NULL")>  _
	Public Property TrueUnderwriter() As Boolean
		Get
			Return Me._TrueUnderwriter
		End Get
		Set
			If ((Me._TrueUnderwriter = value)  _
						= false) Then
				Me._TrueUnderwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me._EntryBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me._EntryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinanceContact", DbType:="Char(70) NOT NULL", CanBeNull:=false)>  _
	Public Property FinanceContact() As String
		Get
			Return Me._FinanceContact
		End Get
		Set
			If (String.Equals(Me._FinanceContact, value) = false) Then
				Me._FinanceContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GeneralClaimContact", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property GeneralClaimContact() As String
		Get
			Return Me._GeneralClaimContact
		End Get
		Set
			If (String.Equals(Me._GeneralClaimContact, value) = false) Then
				Me._GeneralClaimContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="Char(1) NOT NULL")>  _
	Public Property Type() As Char
		Get
			Return Me._Type
		End Get
		Set
			If ((Me._Type = value)  _
						= false) Then
				Me._Type = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="Char(1) NOT NULL")>  _
	Public Property InsuranceLine() As Char
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If ((Me._InsuranceLine = value)  _
						= false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATPayType", DbType:="Char(1) NOT NULL")>  _
	Public Property VATPayType() As Char
		Get
			Return Me._VATPayType
		End Get
		Set
			If ((Me._VATPayType = value)  _
						= false) Then
				Me._VATPayType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneFinance", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneFinance() As String
		Get
			Return Me._PhoneFinance
		End Get
		Set
			If (String.Equals(Me._PhoneFinance, value) = false) Then
				Me._PhoneFinance = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneClaims", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneClaims() As String
		Get
			Return Me._PhoneClaims
		End Get
		Set
			If (String.Equals(Me._PhoneClaims, value) = false) Then
				Me._PhoneClaims = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxFinance", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property FaxFinance() As String
		Get
			Return Me._FaxFinance
		End Get
		Set
			If (String.Equals(Me._FaxFinance, value) = false) Then
				Me._FaxFinance = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxClaims", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property FaxClaims() As String
		Get
			Return Me._FaxClaims
		End Get
		Set
			If (String.Equals(Me._FaxClaims, value) = false) Then
				Me._FaxClaims = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShortName", DbType:="VarChar(50)")>  _
	Public Property ShortName() As String
		Get
			Return Me._ShortName
		End Get
		Set
			If (String.Equals(Me._ShortName, value) = false) Then
				Me._ShortName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClassOfRisk")>  _
Partial Public Class V_ClassOfRisk
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _RiskGovernment As String
	
	Private _Department As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _Prefix As String
	
	Private _InsuranceLine As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _IsGeneralCode As System.Nullable(Of Boolean)
	
	Private _CommIn As System.Nullable(Of Integer)
	
	Private _CommIn_Request As System.Nullable(Of Integer)
	
	Private _CommOut As System.Nullable(Of Integer)
	
	Private _CommOut_Request As System.Nullable(Of Integer)
	
	Private _status As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="VarChar(50)")>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me._RiskGroupI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="VarChar(50)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me._RiskGroupII = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="VarChar(50)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me._RiskShortDesc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me._RiskGovernment = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me._Department = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me._RiskGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefix", DbType:="VarChar(8)")>  _
	Public Property Prefix() As String
		Get
			Return Me._Prefix
		End Get
		Set
			If (String.Equals(Me._Prefix, value) = false) Then
				Me._Prefix = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me._ModifyBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsGeneralCode", DbType:="Bit")>  _
	Public Property IsGeneralCode() As System.Nullable(Of Boolean)
		Get
			Return Me._IsGeneralCode
		End Get
		Set
			If (Me._IsGeneralCode.Equals(value) = false) Then
				Me._IsGeneralCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn", DbType:="Int")>  _
	Public Property CommIn() As System.Nullable(Of Integer)
		Get
			Return Me._CommIn
		End Get
		Set
			If (Me._CommIn.Equals(value) = false) Then
				Me._CommIn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn_Request", DbType:="Int")>  _
	Public Property CommIn_Request() As System.Nullable(Of Integer)
		Get
			Return Me._CommIn_Request
		End Get
		Set
			If (Me._CommIn_Request.Equals(value) = false) Then
				Me._CommIn_Request = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOut", DbType:="Int")>  _
	Public Property CommOut() As System.Nullable(Of Integer)
		Get
			Return Me._CommOut
		End Get
		Set
			If (Me._CommOut.Equals(value) = false) Then
				Me._CommOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOut_Request", DbType:="Int")>  _
	Public Property CommOut_Request() As System.Nullable(Of Integer)
		Get
			Return Me._CommOut_Request
		End Get
		Set
			If (Me._CommOut_Request.Equals(value) = false) Then
				Me._CommOut_Request = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me._status = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RiskUwriter")>  _
Partial Public Class V_RiskUwriter
	
	Private _ID As Integer
	
	Private _Owner As String
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _Underwriter As String
	
	Private _AccountContact As String
	
	Private _Name As String
	
	Private _Brokerage As Single
	
	Private _BrokerageCal As String
	
	Private _ORCommissionPercent As Double
	
	Private _ORInCal As String
	
	Private _AdminFeeIn1 As Double
	
	Private _AdminFeeIn1Cal As String
	
	Private _AdminFeeIn2 As Double
	
	Private _AdminFeeIn2Cal As String
	
	Private _ORCalFrom As String
	
	Private _InsuranceLine As String
	
	Private _Brokerage_display As String
	
	Private _ORCommissionPercent_display As String
	
	Private _AdminFeeIn1_display As String
	
	Private _AdminFeeIn2_display As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _OffsetORFlag As Boolean
	
	Private _OffsetAdm1Flag As Boolean
	
	Private _OffsetAdm2Flag As Boolean
	
	Private _Remark As String
	
	Private _status As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountContact", DbType:="NVarChar(70)")>  _
	Public Property AccountContact() As String
		Get
			Return Me._AccountContact
		End Get
		Set
			If (String.Equals(Me._AccountContact, value) = false) Then
				Me._AccountContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage", DbType:="Real NOT NULL")>  _
	Public Property Brokerage() As Single
		Get
			Return Me._Brokerage
		End Get
		Set
			If ((Me._Brokerage = value)  _
						= false) Then
				Me._Brokerage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrokerageCal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property BrokerageCal() As String
		Get
			Return Me._BrokerageCal
		End Get
		Set
			If (String.Equals(Me._BrokerageCal, value) = false) Then
				Me._BrokerageCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent", DbType:="Float NOT NULL")>  _
	Public Property ORCommissionPercent() As Double
		Get
			Return Me._ORCommissionPercent
		End Get
		Set
			If ((Me._ORCommissionPercent = value)  _
						= false) Then
				Me._ORCommissionPercent = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORInCal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property ORInCal() As String
		Get
			Return Me._ORInCal
		End Get
		Set
			If (String.Equals(Me._ORInCal, value) = false) Then
				Me._ORInCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeIn1() As Double
		Get
			Return Me._AdminFeeIn1
		End Get
		Set
			If ((Me._AdminFeeIn1 = value)  _
						= false) Then
				Me._AdminFeeIn1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1Cal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property AdminFeeIn1Cal() As String
		Get
			Return Me._AdminFeeIn1Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn1Cal, value) = false) Then
				Me._AdminFeeIn1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeIn2() As Double
		Get
			Return Me._AdminFeeIn2
		End Get
		Set
			If ((Me._AdminFeeIn2 = value)  _
						= false) Then
				Me._AdminFeeIn2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2Cal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property AdminFeeIn2Cal() As String
		Get
			Return Me._AdminFeeIn2Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn2Cal, value) = false) Then
				Me._AdminFeeIn2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCalFrom", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property ORCalFrom() As String
		Get
			Return Me._ORCalFrom
		End Get
		Set
			If (String.Equals(Me._ORCalFrom, value) = false) Then
				Me._ORCalFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage_display", DbType:="VarChar(31)")>  _
	Public Property Brokerage_display() As String
		Get
			Return Me._Brokerage_display
		End Get
		Set
			If (String.Equals(Me._Brokerage_display, value) = false) Then
				Me._Brokerage_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent_display", DbType:="VarChar(31)")>  _
	Public Property ORCommissionPercent_display() As String
		Get
			Return Me._ORCommissionPercent_display
		End Get
		Set
			If (String.Equals(Me._ORCommissionPercent_display, value) = false) Then
				Me._ORCommissionPercent_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1_display", DbType:="VarChar(31)")>  _
	Public Property AdminFeeIn1_display() As String
		Get
			Return Me._AdminFeeIn1_display
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn1_display, value) = false) Then
				Me._AdminFeeIn1_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2_display", DbType:="VarChar(31)")>  _
	Public Property AdminFeeIn2_display() As String
		Get
			Return Me._AdminFeeIn2_display
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn2_display, value) = false) Then
				Me._AdminFeeIn2_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetORFlag", DbType:="Bit NOT NULL")>  _
	Public Property OffsetORFlag() As Boolean
		Get
			Return Me._OffsetORFlag
		End Get
		Set
			If ((Me._OffsetORFlag = value)  _
						= false) Then
				Me._OffsetORFlag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm1Flag", DbType:="Bit NOT NULL")>  _
	Public Property OffsetAdm1Flag() As Boolean
		Get
			Return Me._OffsetAdm1Flag
		End Get
		Set
			If ((Me._OffsetAdm1Flag = value)  _
						= false) Then
				Me._OffsetAdm1Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm2Flag", DbType:="Bit NOT NULL")>  _
	Public Property OffsetAdm2Flag() As Boolean
		Get
			Return Me._OffsetAdm2Flag
		End Get
		Set
			If ((Me._OffsetAdm2Flag = value)  _
						= false) Then
				Me._OffsetAdm2Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me._status = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[tblCampaign.CommIn]")>  _
Partial Public Class tblCampaign_CommIn
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CommInID As Integer
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Private _Risk As String
	
	Private _Uwriter As String
	
	Private _Commission As System.Nullable(Of Double)
	
	Private _CommissionCal As String
	
	Private _ORCommission As System.Nullable(Of Double)
	
	Private _ORCommissionCal As String
	
	Private _Admin1 As System.Nullable(Of Double)
	
	Private _Admin1Cal As String
	
	Private _Admin2 As System.Nullable(Of Double)
	
	Private _Admin2Cal As String
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _DupFromID As System.Nullable(Of Integer)
	
	Private _tblCampaign_CommOuts As EntitySet(Of tblCampaign_CommOut)
	
	Private _tblCampaign As EntityRef(Of tblCampaign)
	
	Private _tblClassOfRisk As EntityRef(Of tblClassOfRisk)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCommInIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCommInIDChanged()
    End Sub
    Partial Private Sub OnCampaignIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCampaignIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnUwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUwriterChanged()
    End Sub
    Partial Private Sub OnCommissionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCommissionChanged()
    End Sub
    Partial Private Sub OnCommissionCalChanging(value As String)
    End Sub
    Partial Private Sub OnCommissionCalChanged()
    End Sub
    Partial Private Sub OnORCommissionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORCommissionChanged()
    End Sub
    Partial Private Sub OnORCommissionCalChanging(value As String)
    End Sub
    Partial Private Sub OnORCommissionCalChanged()
    End Sub
    Partial Private Sub OnAdmin1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin1Changed()
    End Sub
    Partial Private Sub OnAdmin1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdmin1CalChanged()
    End Sub
    Partial Private Sub OnAdmin2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin2Changed()
    End Sub
    Partial Private Sub OnAdmin2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdmin2CalChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnDupFromIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDupFromIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblCampaign_CommOuts = New EntitySet(Of tblCampaign_CommOut)(AddressOf Me.attach_tblCampaign_CommOuts, AddressOf Me.detach_tblCampaign_CommOuts)
		Me._tblCampaign = CType(Nothing, EntityRef(Of tblCampaign))
		Me._tblClassOfRisk = CType(Nothing, EntityRef(Of tblClassOfRisk))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommInID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CommInID() As Integer
		Get
			Return Me._CommInID
		End Get
		Set
			If ((Me._CommInID = value)  _
						= false) Then
				Me.OnCommInIDChanging(value)
				Me.SendPropertyChanging
				Me._CommInID = value
				Me.SendPropertyChanged("CommInID")
				Me.OnCommInIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				If Me._tblCampaign.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCampaignIDChanging(value)
				Me.SendPropertyChanging
				Me._CampaignID = value
				Me.SendPropertyChanged("CampaignID")
				Me.OnCampaignIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				If Me._tblClassOfRisk.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Uwriter", DbType:="VarChar(8)")>  _
	Public Property Uwriter() As String
		Get
			Return Me._Uwriter
		End Get
		Set
			If (String.Equals(Me._Uwriter, value) = false) Then
				Me.OnUwriterChanging(value)
				Me.SendPropertyChanging
				Me._Uwriter = value
				Me.SendPropertyChanged("Uwriter")
				Me.OnUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission", DbType:="Float")>  _
	Public Property Commission() As System.Nullable(Of Double)
		Get
			Return Me._Commission
		End Get
		Set
			If (Me._Commission.Equals(value) = false) Then
				Me.OnCommissionChanging(value)
				Me.SendPropertyChanging
				Me._Commission = value
				Me.SendPropertyChanged("Commission")
				Me.OnCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionCal", DbType:="VarChar(2)")>  _
	Public Property CommissionCal() As String
		Get
			Return Me._CommissionCal
		End Get
		Set
			If (String.Equals(Me._CommissionCal, value) = false) Then
				Me.OnCommissionCalChanging(value)
				Me.SendPropertyChanging
				Me._CommissionCal = value
				Me.SendPropertyChanged("CommissionCal")
				Me.OnCommissionCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission", DbType:="Float")>  _
	Public Property ORCommission() As System.Nullable(Of Double)
		Get
			Return Me._ORCommission
		End Get
		Set
			If (Me._ORCommission.Equals(value) = false) Then
				Me.OnORCommissionChanging(value)
				Me.SendPropertyChanging
				Me._ORCommission = value
				Me.SendPropertyChanged("ORCommission")
				Me.OnORCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionCal", DbType:="VarChar(2)")>  _
	Public Property ORCommissionCal() As String
		Get
			Return Me._ORCommissionCal
		End Get
		Set
			If (String.Equals(Me._ORCommissionCal, value) = false) Then
				Me.OnORCommissionCalChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionCal = value
				Me.SendPropertyChanged("ORCommissionCal")
				Me.OnORCommissionCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1", DbType:="Float")>  _
	Public Property Admin1() As System.Nullable(Of Double)
		Get
			Return Me._Admin1
		End Get
		Set
			If (Me._Admin1.Equals(value) = false) Then
				Me.OnAdmin1Changing(value)
				Me.SendPropertyChanging
				Me._Admin1 = value
				Me.SendPropertyChanged("Admin1")
				Me.OnAdmin1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1Cal", DbType:="VarChar(2)")>  _
	Public Property Admin1Cal() As String
		Get
			Return Me._Admin1Cal
		End Get
		Set
			If (String.Equals(Me._Admin1Cal, value) = false) Then
				Me.OnAdmin1CalChanging(value)
				Me.SendPropertyChanging
				Me._Admin1Cal = value
				Me.SendPropertyChanged("Admin1Cal")
				Me.OnAdmin1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2", DbType:="Float")>  _
	Public Property Admin2() As System.Nullable(Of Double)
		Get
			Return Me._Admin2
		End Get
		Set
			If (Me._Admin2.Equals(value) = false) Then
				Me.OnAdmin2Changing(value)
				Me.SendPropertyChanging
				Me._Admin2 = value
				Me.SendPropertyChanged("Admin2")
				Me.OnAdmin2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2Cal", DbType:="VarChar(2)")>  _
	Public Property Admin2Cal() As String
		Get
			Return Me._Admin2Cal
		End Get
		Set
			If (String.Equals(Me._Admin2Cal, value) = false) Then
				Me.OnAdmin2CalChanging(value)
				Me.SendPropertyChanging
				Me._Admin2Cal = value
				Me.SendPropertyChanged("Admin2Cal")
				Me.OnAdmin2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DupFromID", DbType:="Int")>  _
	Public Property DupFromID() As System.Nullable(Of Integer)
		Get
			Return Me._DupFromID
		End Get
		Set
			If (Me._DupFromID.Equals(value) = false) Then
				Me.OnDupFromIDChanging(value)
				Me.SendPropertyChanging
				Me._DupFromID = value
				Me.SendPropertyChanged("DupFromID")
				Me.OnDupFromIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCampaign_CommIn_tblCampaign_CommOut", Storage:="_tblCampaign_CommOuts", ThisKey:="CommInID", OtherKey:="CommInID")>  _
	Public Property tblCampaign_CommOuts() As EntitySet(Of tblCampaign_CommOut)
		Get
			Return Me._tblCampaign_CommOuts
		End Get
		Set
			Me._tblCampaign_CommOuts.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCampaign_tblCampaign_CommIn", Storage:="_tblCampaign", ThisKey:="CampaignID", OtherKey:="CampaignID", IsForeignKey:=true)>  _
	Public Property tblCampaign() As tblCampaign
		Get
			Return Me._tblCampaign.Entity
		End Get
		Set
			Dim previousValue As tblCampaign = Me._tblCampaign.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblCampaign.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblCampaign.Entity = Nothing
					previousValue.tblCampaign_CommIns.Remove(Me)
				End If
				Me._tblCampaign.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblCampaign_CommIns.Add(Me)
					Me._CampaignID = value.CampaignID
				Else
					Me._CampaignID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblCampaign")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblClassOfRisk_tblCampaign_CommIn", Storage:="_tblClassOfRisk", ThisKey:="Risk", OtherKey:="Risk", IsForeignKey:=true)>  _
	Public Property tblClassOfRisk() As tblClassOfRisk
		Get
			Return Me._tblClassOfRisk.Entity
		End Get
		Set
			Dim previousValue As tblClassOfRisk = Me._tblClassOfRisk.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblClassOfRisk.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblClassOfRisk.Entity = Nothing
					previousValue.tblCampaign_CommIns.Remove(Me)
				End If
				Me._tblClassOfRisk.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblCampaign_CommIns.Add(Me)
					Me._Risk = value.Risk
				Else
					Me._Risk = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tblClassOfRisk")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblCampaign_CommOuts(ByVal entity As tblCampaign_CommOut)
		Me.SendPropertyChanging
		entity.tblCampaign_CommIn = Me
	End Sub
	
	Private Sub detach_tblCampaign_CommOuts(ByVal entity As tblCampaign_CommOut)
		Me.SendPropertyChanging
		entity.tblCampaign_CommIn = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[tblCampaign.CommOut]")>  _
Partial Public Class tblCampaign_CommOut
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CommOutID As Integer
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Private _CommInID As System.Nullable(Of Integer)
	
	Private _Risk As String
	
	Private _Uwriter As String
	
	Private _Agent As String
	
	Private _Commission As System.Nullable(Of Double)
	
	Private _CommissionCal As String
	
	Private _ORCommission As System.Nullable(Of Double)
	
	Private _ORCommissionCal As String
	
	Private _Admin1 As System.Nullable(Of Double)
	
	Private _Admin1Cal As String
	
	Private _Admin2 As System.Nullable(Of Double)
	
	Private _Admin2Cal As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _tblCampaign_CommIn As EntityRef(Of tblCampaign_CommIn)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCommOutIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCommOutIDChanged()
    End Sub
    Partial Private Sub OnCampaignIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCampaignIDChanged()
    End Sub
    Partial Private Sub OnCommInIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCommInIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnUwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUwriterChanged()
    End Sub
    Partial Private Sub OnAgentChanging(value As String)
    End Sub
    Partial Private Sub OnAgentChanged()
    End Sub
    Partial Private Sub OnCommissionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCommissionChanged()
    End Sub
    Partial Private Sub OnCommissionCalChanging(value As String)
    End Sub
    Partial Private Sub OnCommissionCalChanged()
    End Sub
    Partial Private Sub OnORCommissionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORCommissionChanged()
    End Sub
    Partial Private Sub OnORCommissionCalChanging(value As String)
    End Sub
    Partial Private Sub OnORCommissionCalChanged()
    End Sub
    Partial Private Sub OnAdmin1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin1Changed()
    End Sub
    Partial Private Sub OnAdmin1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdmin1CalChanged()
    End Sub
    Partial Private Sub OnAdmin2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin2Changed()
    End Sub
    Partial Private Sub OnAdmin2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdmin2CalChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblCampaign_CommIn = CType(Nothing, EntityRef(Of tblCampaign_CommIn))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CommOutID() As Integer
		Get
			Return Me._CommOutID
		End Get
		Set
			If ((Me._CommOutID = value)  _
						= false) Then
				Me.OnCommOutIDChanging(value)
				Me.SendPropertyChanging
				Me._CommOutID = value
				Me.SendPropertyChanged("CommOutID")
				Me.OnCommOutIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				Me.OnCampaignIDChanging(value)
				Me.SendPropertyChanging
				Me._CampaignID = value
				Me.SendPropertyChanged("CampaignID")
				Me.OnCampaignIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommInID", DbType:="Int")>  _
	Public Property CommInID() As System.Nullable(Of Integer)
		Get
			Return Me._CommInID
		End Get
		Set
			If (Me._CommInID.Equals(value) = false) Then
				If Me._tblCampaign_CommIn.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCommInIDChanging(value)
				Me.SendPropertyChanging
				Me._CommInID = value
				Me.SendPropertyChanged("CommInID")
				Me.OnCommInIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Uwriter", DbType:="VarChar(8)")>  _
	Public Property Uwriter() As String
		Get
			Return Me._Uwriter
		End Get
		Set
			If (String.Equals(Me._Uwriter, value) = false) Then
				Me.OnUwriterChanging(value)
				Me.SendPropertyChanging
				Me._Uwriter = value
				Me.SendPropertyChanged("Uwriter")
				Me.OnUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8)")>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me.OnAgentChanging(value)
				Me.SendPropertyChanging
				Me._Agent = value
				Me.SendPropertyChanged("Agent")
				Me.OnAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission", DbType:="Float")>  _
	Public Property Commission() As System.Nullable(Of Double)
		Get
			Return Me._Commission
		End Get
		Set
			If (Me._Commission.Equals(value) = false) Then
				Me.OnCommissionChanging(value)
				Me.SendPropertyChanging
				Me._Commission = value
				Me.SendPropertyChanged("Commission")
				Me.OnCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionCal", DbType:="VarChar(2)")>  _
	Public Property CommissionCal() As String
		Get
			Return Me._CommissionCal
		End Get
		Set
			If (String.Equals(Me._CommissionCal, value) = false) Then
				Me.OnCommissionCalChanging(value)
				Me.SendPropertyChanging
				Me._CommissionCal = value
				Me.SendPropertyChanged("CommissionCal")
				Me.OnCommissionCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission", DbType:="Float")>  _
	Public Property ORCommission() As System.Nullable(Of Double)
		Get
			Return Me._ORCommission
		End Get
		Set
			If (Me._ORCommission.Equals(value) = false) Then
				Me.OnORCommissionChanging(value)
				Me.SendPropertyChanging
				Me._ORCommission = value
				Me.SendPropertyChanged("ORCommission")
				Me.OnORCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionCal", DbType:="VarChar(2)")>  _
	Public Property ORCommissionCal() As String
		Get
			Return Me._ORCommissionCal
		End Get
		Set
			If (String.Equals(Me._ORCommissionCal, value) = false) Then
				Me.OnORCommissionCalChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionCal = value
				Me.SendPropertyChanged("ORCommissionCal")
				Me.OnORCommissionCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1", DbType:="Float")>  _
	Public Property Admin1() As System.Nullable(Of Double)
		Get
			Return Me._Admin1
		End Get
		Set
			If (Me._Admin1.Equals(value) = false) Then
				Me.OnAdmin1Changing(value)
				Me.SendPropertyChanging
				Me._Admin1 = value
				Me.SendPropertyChanged("Admin1")
				Me.OnAdmin1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1Cal", DbType:="VarChar(2)")>  _
	Public Property Admin1Cal() As String
		Get
			Return Me._Admin1Cal
		End Get
		Set
			If (String.Equals(Me._Admin1Cal, value) = false) Then
				Me.OnAdmin1CalChanging(value)
				Me.SendPropertyChanging
				Me._Admin1Cal = value
				Me.SendPropertyChanged("Admin1Cal")
				Me.OnAdmin1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2", DbType:="Float")>  _
	Public Property Admin2() As System.Nullable(Of Double)
		Get
			Return Me._Admin2
		End Get
		Set
			If (Me._Admin2.Equals(value) = false) Then
				Me.OnAdmin2Changing(value)
				Me.SendPropertyChanging
				Me._Admin2 = value
				Me.SendPropertyChanged("Admin2")
				Me.OnAdmin2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2Cal", DbType:="VarChar(2)")>  _
	Public Property Admin2Cal() As String
		Get
			Return Me._Admin2Cal
		End Get
		Set
			If (String.Equals(Me._Admin2Cal, value) = false) Then
				Me.OnAdmin2CalChanging(value)
				Me.SendPropertyChanging
				Me._Admin2Cal = value
				Me.SendPropertyChanged("Admin2Cal")
				Me.OnAdmin2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblCampaign_CommIn_tblCampaign_CommOut", Storage:="_tblCampaign_CommIn", ThisKey:="CommInID", OtherKey:="CommInID", IsForeignKey:=true)>  _
	Public Property tblCampaign_CommIn() As tblCampaign_CommIn
		Get
			Return Me._tblCampaign_CommIn.Entity
		End Get
		Set
			Dim previousValue As tblCampaign_CommIn = Me._tblCampaign_CommIn.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblCampaign_CommIn.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblCampaign_CommIn.Entity = Nothing
					previousValue.tblCampaign_CommOuts.Remove(Me)
				End If
				Me._tblCampaign_CommIn.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblCampaign_CommOuts.Add(Me)
					Me._CommInID = value.CommInID
				Else
					Me._CommInID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblCampaign_CommIn")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClassOfRisk_NonPublish")>  _
Partial Public Class V_ClassOfRisk_NonPublish
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _RiskGovernment As String
	
	Private _Department As String
	
	Private _InsuranceLine As String
	
	Private _Owner As String
	
	Private _CommIn As System.Nullable(Of Integer)
	
	Private _CommOut As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="VarChar(50)")>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me._RiskGroupI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="VarChar(50)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me._RiskGroupII = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="VarChar(50)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me._RiskShortDesc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me._RiskGovernment = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me._Department = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn", DbType:="Int")>  _
	Public Property CommIn() As System.Nullable(Of Integer)
		Get
			Return Me._CommIn
		End Get
		Set
			If (Me._CommIn.Equals(value) = false) Then
				Me._CommIn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOut", DbType:="Int")>  _
	Public Property CommOut() As System.Nullable(Of Integer)
		Get
			Return Me._CommOut
		End Get
		Set
			If (Me._CommOut.Equals(value) = false) Then
				Me._CommOut = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_CarBrandModel")>  _
Partial Public Class V_CarBrandModel
	
	Private _ID As Integer
	
	Private _ModelName As String
	
	Private _BrandName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelName", DbType:="VarChar(255)")>  _
	Public Property ModelName() As String
		Get
			Return Me._ModelName
		End Get
		Set
			If (String.Equals(Me._ModelName, value) = false) Then
				Me._ModelName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrandName", DbType:="VarChar(255)")>  _
	Public Property BrandName() As String
		Get
			Return Me._BrandName
		End Get
		Set
			If (String.Equals(Me._BrandName, value) = false) Then
				Me._BrandName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[tblCampaign.CommInLog]")>  _
Partial Public Class tblCampaign_CommInLog
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CommInID As System.Nullable(Of Integer)
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Private _Risk As String
	
	Private _Uwriter As String
	
	Private _Commission As System.Nullable(Of Double)
	
	Private _CommissionCal As String
	
	Private _ORCommission As System.Nullable(Of Double)
	
	Private _ORCommissionCal As String
	
	Private _Admin1 As System.Nullable(Of Double)
	
	Private _Admin1Cal As String
	
	Private _Admin2 As System.Nullable(Of Double)
	
	Private _Admin2Cal As String
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _DupFromID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCommInIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCommInIDChanged()
    End Sub
    Partial Private Sub OnCampaignIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCampaignIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnUwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUwriterChanged()
    End Sub
    Partial Private Sub OnCommissionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCommissionChanged()
    End Sub
    Partial Private Sub OnCommissionCalChanging(value As String)
    End Sub
    Partial Private Sub OnCommissionCalChanged()
    End Sub
    Partial Private Sub OnORCommissionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORCommissionChanged()
    End Sub
    Partial Private Sub OnORCommissionCalChanging(value As String)
    End Sub
    Partial Private Sub OnORCommissionCalChanged()
    End Sub
    Partial Private Sub OnAdmin1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin1Changed()
    End Sub
    Partial Private Sub OnAdmin1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdmin1CalChanged()
    End Sub
    Partial Private Sub OnAdmin2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin2Changed()
    End Sub
    Partial Private Sub OnAdmin2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdmin2CalChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnDupFromIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDupFromIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommInID", DbType:="Int")>  _
	Public Property CommInID() As System.Nullable(Of Integer)
		Get
			Return Me._CommInID
		End Get
		Set
			If (Me._CommInID.Equals(value) = false) Then
				Me.OnCommInIDChanging(value)
				Me.SendPropertyChanging
				Me._CommInID = value
				Me.SendPropertyChanged("CommInID")
				Me.OnCommInIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				Me.OnCampaignIDChanging(value)
				Me.SendPropertyChanging
				Me._CampaignID = value
				Me.SendPropertyChanged("CampaignID")
				Me.OnCampaignIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Uwriter", DbType:="VarChar(8)")>  _
	Public Property Uwriter() As String
		Get
			Return Me._Uwriter
		End Get
		Set
			If (String.Equals(Me._Uwriter, value) = false) Then
				Me.OnUwriterChanging(value)
				Me.SendPropertyChanging
				Me._Uwriter = value
				Me.SendPropertyChanged("Uwriter")
				Me.OnUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission", DbType:="Float")>  _
	Public Property Commission() As System.Nullable(Of Double)
		Get
			Return Me._Commission
		End Get
		Set
			If (Me._Commission.Equals(value) = false) Then
				Me.OnCommissionChanging(value)
				Me.SendPropertyChanging
				Me._Commission = value
				Me.SendPropertyChanged("Commission")
				Me.OnCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionCal", DbType:="VarChar(2)")>  _
	Public Property CommissionCal() As String
		Get
			Return Me._CommissionCal
		End Get
		Set
			If (String.Equals(Me._CommissionCal, value) = false) Then
				Me.OnCommissionCalChanging(value)
				Me.SendPropertyChanging
				Me._CommissionCal = value
				Me.SendPropertyChanged("CommissionCal")
				Me.OnCommissionCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission", DbType:="Float")>  _
	Public Property ORCommission() As System.Nullable(Of Double)
		Get
			Return Me._ORCommission
		End Get
		Set
			If (Me._ORCommission.Equals(value) = false) Then
				Me.OnORCommissionChanging(value)
				Me.SendPropertyChanging
				Me._ORCommission = value
				Me.SendPropertyChanged("ORCommission")
				Me.OnORCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionCal", DbType:="VarChar(2)")>  _
	Public Property ORCommissionCal() As String
		Get
			Return Me._ORCommissionCal
		End Get
		Set
			If (String.Equals(Me._ORCommissionCal, value) = false) Then
				Me.OnORCommissionCalChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionCal = value
				Me.SendPropertyChanged("ORCommissionCal")
				Me.OnORCommissionCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1", DbType:="Float")>  _
	Public Property Admin1() As System.Nullable(Of Double)
		Get
			Return Me._Admin1
		End Get
		Set
			If (Me._Admin1.Equals(value) = false) Then
				Me.OnAdmin1Changing(value)
				Me.SendPropertyChanging
				Me._Admin1 = value
				Me.SendPropertyChanged("Admin1")
				Me.OnAdmin1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1Cal", DbType:="VarChar(2)")>  _
	Public Property Admin1Cal() As String
		Get
			Return Me._Admin1Cal
		End Get
		Set
			If (String.Equals(Me._Admin1Cal, value) = false) Then
				Me.OnAdmin1CalChanging(value)
				Me.SendPropertyChanging
				Me._Admin1Cal = value
				Me.SendPropertyChanged("Admin1Cal")
				Me.OnAdmin1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2", DbType:="Float")>  _
	Public Property Admin2() As System.Nullable(Of Double)
		Get
			Return Me._Admin2
		End Get
		Set
			If (Me._Admin2.Equals(value) = false) Then
				Me.OnAdmin2Changing(value)
				Me.SendPropertyChanging
				Me._Admin2 = value
				Me.SendPropertyChanged("Admin2")
				Me.OnAdmin2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2Cal", DbType:="VarChar(2)")>  _
	Public Property Admin2Cal() As String
		Get
			Return Me._Admin2Cal
		End Get
		Set
			If (String.Equals(Me._Admin2Cal, value) = false) Then
				Me.OnAdmin2CalChanging(value)
				Me.SendPropertyChanging
				Me._Admin2Cal = value
				Me.SendPropertyChanged("Admin2Cal")
				Me.OnAdmin2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DupFromID", DbType:="Int")>  _
	Public Property DupFromID() As System.Nullable(Of Integer)
		Get
			Return Me._DupFromID
		End Get
		Set
			If (Me._DupFromID.Equals(value) = false) Then
				Me.OnDupFromIDChanging(value)
				Me.SendPropertyChanging
				Me._DupFromID = value
				Me.SendPropertyChanged("DupFromID")
				Me.OnDupFromIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[tblCampaign.CommOutLog]")>  _
Partial Public Class tblCampaign_CommOutLog
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CommOutID As System.Nullable(Of Integer)
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Private _CommInID As System.Nullable(Of Integer)
	
	Private _Risk As String
	
	Private _Uwriter As String
	
	Private _Agent As String
	
	Private _Commission As System.Nullable(Of Double)
	
	Private _CommissionCal As String
	
	Private _ORCommission As System.Nullable(Of Double)
	
	Private _ORCommissionCal As String
	
	Private _Admin1 As System.Nullable(Of Double)
	
	Private _Admin1Cal As String
	
	Private _Admin2 As System.Nullable(Of Double)
	
	Private _Admin2Cal As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCommOutIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCommOutIDChanged()
    End Sub
    Partial Private Sub OnCampaignIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCampaignIDChanged()
    End Sub
    Partial Private Sub OnCommInIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCommInIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnUwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUwriterChanged()
    End Sub
    Partial Private Sub OnAgentChanging(value As String)
    End Sub
    Partial Private Sub OnAgentChanged()
    End Sub
    Partial Private Sub OnCommissionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCommissionChanged()
    End Sub
    Partial Private Sub OnCommissionCalChanging(value As String)
    End Sub
    Partial Private Sub OnCommissionCalChanged()
    End Sub
    Partial Private Sub OnORCommissionChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORCommissionChanged()
    End Sub
    Partial Private Sub OnORCommissionCalChanging(value As String)
    End Sub
    Partial Private Sub OnORCommissionCalChanged()
    End Sub
    Partial Private Sub OnAdmin1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin1Changed()
    End Sub
    Partial Private Sub OnAdmin1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdmin1CalChanged()
    End Sub
    Partial Private Sub OnAdmin2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin2Changed()
    End Sub
    Partial Private Sub OnAdmin2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdmin2CalChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutID", DbType:="Int")>  _
	Public Property CommOutID() As System.Nullable(Of Integer)
		Get
			Return Me._CommOutID
		End Get
		Set
			If (Me._CommOutID.Equals(value) = false) Then
				Me.OnCommOutIDChanging(value)
				Me.SendPropertyChanging
				Me._CommOutID = value
				Me.SendPropertyChanged("CommOutID")
				Me.OnCommOutIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				Me.OnCampaignIDChanging(value)
				Me.SendPropertyChanging
				Me._CampaignID = value
				Me.SendPropertyChanged("CampaignID")
				Me.OnCampaignIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommInID", DbType:="Int")>  _
	Public Property CommInID() As System.Nullable(Of Integer)
		Get
			Return Me._CommInID
		End Get
		Set
			If (Me._CommInID.Equals(value) = false) Then
				Me.OnCommInIDChanging(value)
				Me.SendPropertyChanging
				Me._CommInID = value
				Me.SendPropertyChanged("CommInID")
				Me.OnCommInIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Uwriter", DbType:="VarChar(8)")>  _
	Public Property Uwriter() As String
		Get
			Return Me._Uwriter
		End Get
		Set
			If (String.Equals(Me._Uwriter, value) = false) Then
				Me.OnUwriterChanging(value)
				Me.SendPropertyChanging
				Me._Uwriter = value
				Me.SendPropertyChanged("Uwriter")
				Me.OnUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me.OnAgentChanging(value)
				Me.SendPropertyChanging
				Me._Agent = value
				Me.SendPropertyChanged("Agent")
				Me.OnAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission", DbType:="Float")>  _
	Public Property Commission() As System.Nullable(Of Double)
		Get
			Return Me._Commission
		End Get
		Set
			If (Me._Commission.Equals(value) = false) Then
				Me.OnCommissionChanging(value)
				Me.SendPropertyChanging
				Me._Commission = value
				Me.SendPropertyChanged("Commission")
				Me.OnCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionCal", DbType:="VarChar(2)")>  _
	Public Property CommissionCal() As String
		Get
			Return Me._CommissionCal
		End Get
		Set
			If (String.Equals(Me._CommissionCal, value) = false) Then
				Me.OnCommissionCalChanging(value)
				Me.SendPropertyChanging
				Me._CommissionCal = value
				Me.SendPropertyChanged("CommissionCal")
				Me.OnCommissionCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission", DbType:="Float")>  _
	Public Property ORCommission() As System.Nullable(Of Double)
		Get
			Return Me._ORCommission
		End Get
		Set
			If (Me._ORCommission.Equals(value) = false) Then
				Me.OnORCommissionChanging(value)
				Me.SendPropertyChanging
				Me._ORCommission = value
				Me.SendPropertyChanged("ORCommission")
				Me.OnORCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionCal", DbType:="VarChar(2)")>  _
	Public Property ORCommissionCal() As String
		Get
			Return Me._ORCommissionCal
		End Get
		Set
			If (String.Equals(Me._ORCommissionCal, value) = false) Then
				Me.OnORCommissionCalChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionCal = value
				Me.SendPropertyChanged("ORCommissionCal")
				Me.OnORCommissionCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1", DbType:="Float")>  _
	Public Property Admin1() As System.Nullable(Of Double)
		Get
			Return Me._Admin1
		End Get
		Set
			If (Me._Admin1.Equals(value) = false) Then
				Me.OnAdmin1Changing(value)
				Me.SendPropertyChanging
				Me._Admin1 = value
				Me.SendPropertyChanged("Admin1")
				Me.OnAdmin1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1Cal", DbType:="VarChar(2)")>  _
	Public Property Admin1Cal() As String
		Get
			Return Me._Admin1Cal
		End Get
		Set
			If (String.Equals(Me._Admin1Cal, value) = false) Then
				Me.OnAdmin1CalChanging(value)
				Me.SendPropertyChanging
				Me._Admin1Cal = value
				Me.SendPropertyChanged("Admin1Cal")
				Me.OnAdmin1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2", DbType:="Float")>  _
	Public Property Admin2() As System.Nullable(Of Double)
		Get
			Return Me._Admin2
		End Get
		Set
			If (Me._Admin2.Equals(value) = false) Then
				Me.OnAdmin2Changing(value)
				Me.SendPropertyChanging
				Me._Admin2 = value
				Me.SendPropertyChanged("Admin2")
				Me.OnAdmin2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2Cal", DbType:="VarChar(2)")>  _
	Public Property Admin2Cal() As String
		Get
			Return Me._Admin2Cal
		End Get
		Set
			If (String.Equals(Me._Admin2Cal, value) = false) Then
				Me.OnAdmin2CalChanging(value)
				Me.SendPropertyChanging
				Me._Admin2Cal = value
				Me.SendPropertyChanged("Admin2Cal")
				Me.OnAdmin2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Campaign_CommissionLog")>  _
Partial Public Class V_Campaign_CommissionLog
	
	Private _ID As System.Nullable(Of Integer)
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Private _Risk As String
	
	Private _Code As String
	
	Private _Commission As System.Nullable(Of Double)
	
	Private _CommissionCal As String
	
	Private _ORCommission As System.Nullable(Of Double)
	
	Private _ORCommissionCal As String
	
	Private _Admin1 As System.Nullable(Of Double)
	
	Private _Admin1Cal As String
	
	Private _Admin2 As System.Nullable(Of Double)
	
	Private _Admin2Cal As String
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int")>  _
	Public Property ID() As System.Nullable(Of Integer)
		Get
			Return Me._ID
		End Get
		Set
			If (Me._ID.Equals(value) = false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				Me._CampaignID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission", DbType:="Float")>  _
	Public Property Commission() As System.Nullable(Of Double)
		Get
			Return Me._Commission
		End Get
		Set
			If (Me._Commission.Equals(value) = false) Then
				Me._Commission = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionCal", DbType:="VarChar(2)")>  _
	Public Property CommissionCal() As String
		Get
			Return Me._CommissionCal
		End Get
		Set
			If (String.Equals(Me._CommissionCal, value) = false) Then
				Me._CommissionCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission", DbType:="Float")>  _
	Public Property ORCommission() As System.Nullable(Of Double)
		Get
			Return Me._ORCommission
		End Get
		Set
			If (Me._ORCommission.Equals(value) = false) Then
				Me._ORCommission = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionCal", DbType:="VarChar(2)")>  _
	Public Property ORCommissionCal() As String
		Get
			Return Me._ORCommissionCal
		End Get
		Set
			If (String.Equals(Me._ORCommissionCal, value) = false) Then
				Me._ORCommissionCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1", DbType:="Float")>  _
	Public Property Admin1() As System.Nullable(Of Double)
		Get
			Return Me._Admin1
		End Get
		Set
			If (Me._Admin1.Equals(value) = false) Then
				Me._Admin1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1Cal", DbType:="VarChar(2)")>  _
	Public Property Admin1Cal() As String
		Get
			Return Me._Admin1Cal
		End Get
		Set
			If (String.Equals(Me._Admin1Cal, value) = false) Then
				Me._Admin1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2", DbType:="Float")>  _
	Public Property Admin2() As System.Nullable(Of Double)
		Get
			Return Me._Admin2
		End Get
		Set
			If (Me._Admin2.Equals(value) = false) Then
				Me._Admin2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2Cal", DbType:="VarChar(2)")>  _
	Public Property Admin2Cal() As String
		Get
			Return Me._Admin2Cal
		End Get
		Set
			If (String.Equals(Me._Admin2Cal, value) = false) Then
				Me._Admin2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me._ExpiryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_MotorPremium")>  _
Partial Public Class V_MotorPremium
	
	Private _PremiumID As Integer
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Private _Underwriter As String
	
	Private _CoverageID As System.Nullable(Of Integer)
	
	Private _Brand As String
	
	Private _Model As String
	
	Private _Name As String
	
	Private _ModelCode As String
	
	Private _CarPrice As System.Nullable(Of Decimal)
	
	Private _SumInsuredFrom As System.Nullable(Of Decimal)
	
	Private _SumInsuredTo As System.Nullable(Of Decimal)
	
	Private _NetPremium As System.Nullable(Of Decimal)
	
	Private _Stamp As System.Nullable(Of Decimal)
	
	Private _Vat As System.Nullable(Of Decimal)
	
	Private _GrossPremium As System.Nullable(Of Decimal)
	
	Private _Discount As System.Nullable(Of Decimal)
	
	Private _TotalPremium As System.Nullable(Of Decimal)
	
	Private _WHT_Rate1 As String
	
	Private _WHT_Rate2 As String
	
	Private _WHT_Rate3 As String
	
	Private _SinglePrice As System.Nullable(Of Decimal)
	
	Private _CarAge As System.Nullable(Of Integer)
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _CampaignName As String
	
	Private _CampaignCode As String
	
	Private _CampaignType As String
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _HasPremium As System.Nullable(Of Boolean)
	
	Private _PrefixClientCode As String
	
	Private _coverage1 As String
	
	Private _coverage2 As String
	
	Private _coverage3 As String
	
	Private _coverage4 As String
	
	Private _coverage5 As String
	
	Private _coverage6 As String
	
	Private _coverage7 As String
	
	Private _coverage8 As String
	
	Private _coverage9 As String
	
	Private _coverage10 As String
	
	Private _coverage11 As String
	
	Private _coverage12 As String
	
	Private _coverage13 As String
	
	Private _coverage14 As String
	
	Private _coverage15 As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumID", DbType:="Int NOT NULL")>  _
	Public Property PremiumID() As Integer
		Get
			Return Me._PremiumID
		End Get
		Set
			If ((Me._PremiumID = value)  _
						= false) Then
				Me._PremiumID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				Me._CampaignID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8)")>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoverageID", DbType:="Int")>  _
	Public Property CoverageID() As System.Nullable(Of Integer)
		Get
			Return Me._CoverageID
		End Get
		Set
			If (Me._CoverageID.Equals(value) = false) Then
				Me._CoverageID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brand", DbType:="VarChar(100)")>  _
	Public Property Brand() As String
		Get
			Return Me._Brand
		End Get
		Set
			If (String.Equals(Me._Brand, value) = false) Then
				Me._Brand = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="VarChar(100)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me._Model = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelCode", DbType:="VarChar(100)")>  _
	Public Property ModelCode() As String
		Get
			Return Me._ModelCode
		End Get
		Set
			If (String.Equals(Me._ModelCode, value) = false) Then
				Me._ModelCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarPrice", DbType:="Decimal(18,2)")>  _
	Public Property CarPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._CarPrice
		End Get
		Set
			If (Me._CarPrice.Equals(value) = false) Then
				Me._CarPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsuredFrom", DbType:="Decimal(18,2)")>  _
	Public Property SumInsuredFrom() As System.Nullable(Of Decimal)
		Get
			Return Me._SumInsuredFrom
		End Get
		Set
			If (Me._SumInsuredFrom.Equals(value) = false) Then
				Me._SumInsuredFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsuredTo", DbType:="Decimal(18,2)")>  _
	Public Property SumInsuredTo() As System.Nullable(Of Decimal)
		Get
			Return Me._SumInsuredTo
		End Get
		Set
			If (Me._SumInsuredTo.Equals(value) = false) Then
				Me._SumInsuredTo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetPremium", DbType:="Decimal(18,2)")>  _
	Public Property NetPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._NetPremium
		End Get
		Set
			If (Me._NetPremium.Equals(value) = false) Then
				Me._NetPremium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stamp", DbType:="Decimal(18,2)")>  _
	Public Property Stamp() As System.Nullable(Of Decimal)
		Get
			Return Me._Stamp
		End Get
		Set
			If (Me._Stamp.Equals(value) = false) Then
				Me._Stamp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vat", DbType:="Decimal(18,2)")>  _
	Public Property Vat() As System.Nullable(Of Decimal)
		Get
			Return Me._Vat
		End Get
		Set
			If (Me._Vat.Equals(value) = false) Then
				Me._Vat = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossPremium", DbType:="Decimal(18,2)")>  _
	Public Property GrossPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._GrossPremium
		End Get
		Set
			If (Me._GrossPremium.Equals(value) = false) Then
				Me._GrossPremium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discount", DbType:="Decimal(18,2)")>  _
	Public Property Discount() As System.Nullable(Of Decimal)
		Get
			Return Me._Discount
		End Get
		Set
			If (Me._Discount.Equals(value) = false) Then
				Me._Discount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPremium", DbType:="Decimal(18,2)")>  _
	Public Property TotalPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalPremium
		End Get
		Set
			If (Me._TotalPremium.Equals(value) = false) Then
				Me._TotalPremium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHT_Rate1", DbType:="VarChar(50)")>  _
	Public Property WHT_Rate1() As String
		Get
			Return Me._WHT_Rate1
		End Get
		Set
			If (String.Equals(Me._WHT_Rate1, value) = false) Then
				Me._WHT_Rate1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHT_Rate2", DbType:="VarChar(50)")>  _
	Public Property WHT_Rate2() As String
		Get
			Return Me._WHT_Rate2
		End Get
		Set
			If (String.Equals(Me._WHT_Rate2, value) = false) Then
				Me._WHT_Rate2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHT_Rate3", DbType:="VarChar(50)")>  _
	Public Property WHT_Rate3() As String
		Get
			Return Me._WHT_Rate3
		End Get
		Set
			If (String.Equals(Me._WHT_Rate3, value) = false) Then
				Me._WHT_Rate3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SinglePrice", DbType:="Decimal(18,2)")>  _
	Public Property SinglePrice() As System.Nullable(Of Decimal)
		Get
			Return Me._SinglePrice
		End Get
		Set
			If (Me._SinglePrice.Equals(value) = false) Then
				Me._SinglePrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarAge", DbType:="Int")>  _
	Public Property CarAge() As System.Nullable(Of Integer)
		Get
			Return Me._CarAge
		End Get
		Set
			If (Me._CarAge.Equals(value) = false) Then
				Me._CarAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignName", DbType:="VarChar(100)")>  _
	Public Property CampaignName() As String
		Get
			Return Me._CampaignName
		End Get
		Set
			If (String.Equals(Me._CampaignName, value) = false) Then
				Me._CampaignName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignCode", DbType:="VarChar(50)")>  _
	Public Property CampaignCode() As String
		Get
			Return Me._CampaignCode
		End Get
		Set
			If (String.Equals(Me._CampaignCode, value) = false) Then
				Me._CampaignCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignType", DbType:="VarChar(50)")>  _
	Public Property CampaignType() As String
		Get
			Return Me._CampaignType
		End Get
		Set
			If (String.Equals(Me._CampaignType, value) = false) Then
				Me._CampaignType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me._ExpiryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasPremium", DbType:="Bit")>  _
	Public Property HasPremium() As System.Nullable(Of Boolean)
		Get
			Return Me._HasPremium
		End Get
		Set
			If (Me._HasPremium.Equals(value) = false) Then
				Me._HasPremium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrefixClientCode", DbType:="VarChar(2)")>  _
	Public Property PrefixClientCode() As String
		Get
			Return Me._PrefixClientCode
		End Get
		Set
			If (String.Equals(Me._PrefixClientCode, value) = false) Then
				Me._PrefixClientCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage1", DbType:="VarChar(50)")>  _
	Public Property coverage1() As String
		Get
			Return Me._coverage1
		End Get
		Set
			If (String.Equals(Me._coverage1, value) = false) Then
				Me._coverage1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage2", DbType:="VarChar(50)")>  _
	Public Property coverage2() As String
		Get
			Return Me._coverage2
		End Get
		Set
			If (String.Equals(Me._coverage2, value) = false) Then
				Me._coverage2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage3", DbType:="VarChar(50)")>  _
	Public Property coverage3() As String
		Get
			Return Me._coverage3
		End Get
		Set
			If (String.Equals(Me._coverage3, value) = false) Then
				Me._coverage3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage4", DbType:="VarChar(50)")>  _
	Public Property coverage4() As String
		Get
			Return Me._coverage4
		End Get
		Set
			If (String.Equals(Me._coverage4, value) = false) Then
				Me._coverage4 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage5", DbType:="VarChar(50)")>  _
	Public Property coverage5() As String
		Get
			Return Me._coverage5
		End Get
		Set
			If (String.Equals(Me._coverage5, value) = false) Then
				Me._coverage5 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage6", DbType:="VarChar(50)")>  _
	Public Property coverage6() As String
		Get
			Return Me._coverage6
		End Get
		Set
			If (String.Equals(Me._coverage6, value) = false) Then
				Me._coverage6 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage7", DbType:="VarChar(50)")>  _
	Public Property coverage7() As String
		Get
			Return Me._coverage7
		End Get
		Set
			If (String.Equals(Me._coverage7, value) = false) Then
				Me._coverage7 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage8", DbType:="VarChar(50)")>  _
	Public Property coverage8() As String
		Get
			Return Me._coverage8
		End Get
		Set
			If (String.Equals(Me._coverage8, value) = false) Then
				Me._coverage8 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage9", DbType:="VarChar(50)")>  _
	Public Property coverage9() As String
		Get
			Return Me._coverage9
		End Get
		Set
			If (String.Equals(Me._coverage9, value) = false) Then
				Me._coverage9 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage10", DbType:="VarChar(50)")>  _
	Public Property coverage10() As String
		Get
			Return Me._coverage10
		End Get
		Set
			If (String.Equals(Me._coverage10, value) = false) Then
				Me._coverage10 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage11", DbType:="VarChar(50)")>  _
	Public Property coverage11() As String
		Get
			Return Me._coverage11
		End Get
		Set
			If (String.Equals(Me._coverage11, value) = false) Then
				Me._coverage11 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage12", DbType:="VarChar(50)")>  _
	Public Property coverage12() As String
		Get
			Return Me._coverage12
		End Get
		Set
			If (String.Equals(Me._coverage12, value) = false) Then
				Me._coverage12 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage13", DbType:="VarChar(50)")>  _
	Public Property coverage13() As String
		Get
			Return Me._coverage13
		End Get
		Set
			If (String.Equals(Me._coverage13, value) = false) Then
				Me._coverage13 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage14", DbType:="VarChar(50)")>  _
	Public Property coverage14() As String
		Get
			Return Me._coverage14
		End Get
		Set
			If (String.Equals(Me._coverage14, value) = false) Then
				Me._coverage14 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coverage15", DbType:="VarChar(50)")>  _
	Public Property coverage15() As String
		Get
			Return Me._coverage15
		End Get
		Set
			If (String.Equals(Me._coverage15, value) = false) Then
				Me._coverage15 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_MotorQuotation")>  _
Partial Public Class V_MotorQuotation
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QID As Integer
	
	Private _QuotationNo As String
	
	Private _QuotationStatus As String
	
	Private _QDID_Selected As System.Nullable(Of Integer)
	
	Private _CustomerID As String
	
	Private _CustTitleName As String
	
	Private _CustName As String
	
	Private _CustIDCardType As System.Nullable(Of Integer)
	
	Private _CustIDCardTypeName As String
	
	Private _CustIDCards As String
	
	Private _CustAddress As String
	
	Private _CustLocationName As String
	
	Private _CustLocationCode As String
	
	Private _CustTelNo As String
	
	Private _CustEmail As String
	
	Private _CustFaxNo As String
	
	Private _CarSize As String
	
	Private _CarSuminsured As System.Nullable(Of Integer)
	
	Private _CarRegis As String
	
	Private _CarId As String
	
	Private _CarChassisNo As String
	
	Private _CarEngineNo As String
	
	Private _ClientCode As String
	
	Private _InsuredTitleName As String
	
	Private _InsuredName As String
	
	Private _ReferenceNo As String
	
	Private _DataFrom As String
	
	Private _TypeOfClient As String
	
	Private _AddressTemp As String
	
	Private _ContactName As String
	
	Private _ContactTelExt As String
	
	Private _UserRec As String
	
	Private _DateRec As System.Nullable(Of Date)
	
	Private _UserUpdate As String
	
	Private _DateUpdate As System.Nullable(Of Date)
	
	Private _UserConfirm As String
	
	Private _DateConFirm As System.Nullable(Of Date)
	
	Private _ConfirmCode As String
	
	Private _CarBrandlID As System.Nullable(Of Integer)
	
	Private _CarBrandName As String
	
	Private _CarModelID As System.Nullable(Of Integer)
	
	Private _CarModelName As String
	
	Private _DiscGroupId As String
	
	Private _txtOther As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQIDChanged()
    End Sub
    Partial Private Sub OnQuotationNoChanging(value As String)
    End Sub
    Partial Private Sub OnQuotationNoChanged()
    End Sub
    Partial Private Sub OnQuotationStatusChanging(value As String)
    End Sub
    Partial Private Sub OnQuotationStatusChanged()
    End Sub
    Partial Private Sub OnQDID_SelectedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQDID_SelectedChanged()
    End Sub
    Partial Private Sub OnCustomerIDChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerIDChanged()
    End Sub
    Partial Private Sub OnCustTitleNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustTitleNameChanged()
    End Sub
    Partial Private Sub OnCustNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustNameChanged()
    End Sub
    Partial Private Sub OnCustIDCardTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCustIDCardTypeChanged()
    End Sub
    Partial Private Sub OnCustIDCardTypeNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustIDCardTypeNameChanged()
    End Sub
    Partial Private Sub OnCustIDCardsChanging(value As String)
    End Sub
    Partial Private Sub OnCustIDCardsChanged()
    End Sub
    Partial Private Sub OnCustAddressChanging(value As String)
    End Sub
    Partial Private Sub OnCustAddressChanged()
    End Sub
    Partial Private Sub OnCustLocationNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustLocationNameChanged()
    End Sub
    Partial Private Sub OnCustLocationCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCustLocationCodeChanged()
    End Sub
    Partial Private Sub OnCustTelNoChanging(value As String)
    End Sub
    Partial Private Sub OnCustTelNoChanged()
    End Sub
    Partial Private Sub OnCustEmailChanging(value As String)
    End Sub
    Partial Private Sub OnCustEmailChanged()
    End Sub
    Partial Private Sub OnCustFaxNoChanging(value As String)
    End Sub
    Partial Private Sub OnCustFaxNoChanged()
    End Sub
    Partial Private Sub OnCarSizeChanging(value As String)
    End Sub
    Partial Private Sub OnCarSizeChanged()
    End Sub
    Partial Private Sub OnCarSuminsuredChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarSuminsuredChanged()
    End Sub
    Partial Private Sub OnCarRegisChanging(value As String)
    End Sub
    Partial Private Sub OnCarRegisChanged()
    End Sub
    Partial Private Sub OnCarIdChanging(value As String)
    End Sub
    Partial Private Sub OnCarIdChanged()
    End Sub
    Partial Private Sub OnCarChassisNoChanging(value As String)
    End Sub
    Partial Private Sub OnCarChassisNoChanged()
    End Sub
    Partial Private Sub OnCarEngineNoChanging(value As String)
    End Sub
    Partial Private Sub OnCarEngineNoChanged()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnInsuredTitleNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsuredTitleNameChanged()
    End Sub
    Partial Private Sub OnInsuredNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsuredNameChanged()
    End Sub
    Partial Private Sub OnReferenceNoChanging(value As String)
    End Sub
    Partial Private Sub OnReferenceNoChanged()
    End Sub
    Partial Private Sub OnDataFromChanging(value As String)
    End Sub
    Partial Private Sub OnDataFromChanged()
    End Sub
    Partial Private Sub OnTypeOfClientChanging(value As String)
    End Sub
    Partial Private Sub OnTypeOfClientChanged()
    End Sub
    Partial Private Sub OnAddressTempChanging(value As String)
    End Sub
    Partial Private Sub OnAddressTempChanged()
    End Sub
    Partial Private Sub OnContactNameChanging(value As String)
    End Sub
    Partial Private Sub OnContactNameChanged()
    End Sub
    Partial Private Sub OnContactTelExtChanging(value As String)
    End Sub
    Partial Private Sub OnContactTelExtChanged()
    End Sub
    Partial Private Sub OnUserRecChanging(value As String)
    End Sub
    Partial Private Sub OnUserRecChanged()
    End Sub
    Partial Private Sub OnDateRecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateRecChanged()
    End Sub
    Partial Private Sub OnUserUpdateChanging(value As String)
    End Sub
    Partial Private Sub OnUserUpdateChanged()
    End Sub
    Partial Private Sub OnDateUpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateUpdateChanged()
    End Sub
    Partial Private Sub OnUserConfirmChanging(value As String)
    End Sub
    Partial Private Sub OnUserConfirmChanged()
    End Sub
    Partial Private Sub OnDateConFirmChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateConFirmChanged()
    End Sub
    Partial Private Sub OnConfirmCodeChanging(value As String)
    End Sub
    Partial Private Sub OnConfirmCodeChanged()
    End Sub
    Partial Private Sub OnCarBrandlIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarBrandlIDChanged()
    End Sub
    Partial Private Sub OnCarBrandNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarBrandNameChanged()
    End Sub
    Partial Private Sub OnCarModelIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarModelIDChanged()
    End Sub
    Partial Private Sub OnCarModelNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarModelNameChanged()
    End Sub
    Partial Private Sub OnDiscGroupIdChanging(value As String)
    End Sub
    Partial Private Sub OnDiscGroupIdChanged()
    End Sub
    Partial Private Sub OntxtOtherChanging(value As String)
    End Sub
    Partial Private Sub OntxtOtherChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property QID() As Integer
		Get
			Return Me._QID
		End Get
		Set
			If ((Me._QID = value)  _
						= false) Then
				Me.OnQIDChanging(value)
				Me.SendPropertyChanging
				Me._QID = value
				Me.SendPropertyChanged("QID")
				Me.OnQIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationNo", DbType:="VarChar(30) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property QuotationNo() As String
		Get
			Return Me._QuotationNo
		End Get
		Set
			If (String.Equals(Me._QuotationNo, value) = false) Then
				Me.OnQuotationNoChanging(value)
				Me.SendPropertyChanging
				Me._QuotationNo = value
				Me.SendPropertyChanged("QuotationNo")
				Me.OnQuotationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationStatus", DbType:="VarChar(50)")>  _
	Public Property QuotationStatus() As String
		Get
			Return Me._QuotationStatus
		End Get
		Set
			If (String.Equals(Me._QuotationStatus, value) = false) Then
				Me.OnQuotationStatusChanging(value)
				Me.SendPropertyChanging
				Me._QuotationStatus = value
				Me.SendPropertyChanged("QuotationStatus")
				Me.OnQuotationStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDID_Selected", DbType:="Int")>  _
	Public Property QDID_Selected() As System.Nullable(Of Integer)
		Get
			Return Me._QDID_Selected
		End Get
		Set
			If (Me._QDID_Selected.Equals(value) = false) Then
				Me.OnQDID_SelectedChanging(value)
				Me.SendPropertyChanging
				Me._QDID_Selected = value
				Me.SendPropertyChanged("QDID_Selected")
				Me.OnQDID_SelectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerID", DbType:="VarChar(255)")>  _
	Public Property CustomerID() As String
		Get
			Return Me._CustomerID
		End Get
		Set
			If (String.Equals(Me._CustomerID, value) = false) Then
				Me.OnCustomerIDChanging(value)
				Me.SendPropertyChanging
				Me._CustomerID = value
				Me.SendPropertyChanged("CustomerID")
				Me.OnCustomerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustTitleName", DbType:="VarChar(100)")>  _
	Public Property CustTitleName() As String
		Get
			Return Me._CustTitleName
		End Get
		Set
			If (String.Equals(Me._CustTitleName, value) = false) Then
				Me.OnCustTitleNameChanging(value)
				Me.SendPropertyChanging
				Me._CustTitleName = value
				Me.SendPropertyChanged("CustTitleName")
				Me.OnCustTitleNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustName", DbType:="VarChar(255)")>  _
	Public Property CustName() As String
		Get
			Return Me._CustName
		End Get
		Set
			If (String.Equals(Me._CustName, value) = false) Then
				Me.OnCustNameChanging(value)
				Me.SendPropertyChanging
				Me._CustName = value
				Me.SendPropertyChanged("CustName")
				Me.OnCustNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustIDCardType", DbType:="Int")>  _
	Public Property CustIDCardType() As System.Nullable(Of Integer)
		Get
			Return Me._CustIDCardType
		End Get
		Set
			If (Me._CustIDCardType.Equals(value) = false) Then
				Me.OnCustIDCardTypeChanging(value)
				Me.SendPropertyChanging
				Me._CustIDCardType = value
				Me.SendPropertyChanged("CustIDCardType")
				Me.OnCustIDCardTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustIDCardTypeName", DbType:="VarChar(14)")>  _
	Public Property CustIDCardTypeName() As String
		Get
			Return Me._CustIDCardTypeName
		End Get
		Set
			If (String.Equals(Me._CustIDCardTypeName, value) = false) Then
				Me.OnCustIDCardTypeNameChanging(value)
				Me.SendPropertyChanging
				Me._CustIDCardTypeName = value
				Me.SendPropertyChanged("CustIDCardTypeName")
				Me.OnCustIDCardTypeNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustIDCards", DbType:="VarChar(50)")>  _
	Public Property CustIDCards() As String
		Get
			Return Me._CustIDCards
		End Get
		Set
			If (String.Equals(Me._CustIDCards, value) = false) Then
				Me.OnCustIDCardsChanging(value)
				Me.SendPropertyChanging
				Me._CustIDCards = value
				Me.SendPropertyChanged("CustIDCards")
				Me.OnCustIDCardsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustAddress", DbType:="VarChar(255)")>  _
	Public Property CustAddress() As String
		Get
			Return Me._CustAddress
		End Get
		Set
			If (String.Equals(Me._CustAddress, value) = false) Then
				Me.OnCustAddressChanging(value)
				Me.SendPropertyChanging
				Me._CustAddress = value
				Me.SendPropertyChanged("CustAddress")
				Me.OnCustAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustLocationName", DbType:="VarChar(255)")>  _
	Public Property CustLocationName() As String
		Get
			Return Me._CustLocationName
		End Get
		Set
			If (String.Equals(Me._CustLocationName, value) = false) Then
				Me.OnCustLocationNameChanging(value)
				Me.SendPropertyChanging
				Me._CustLocationName = value
				Me.SendPropertyChanged("CustLocationName")
				Me.OnCustLocationNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustLocationCode", DbType:="VarChar(6)")>  _
	Public Property CustLocationCode() As String
		Get
			Return Me._CustLocationCode
		End Get
		Set
			If (String.Equals(Me._CustLocationCode, value) = false) Then
				Me.OnCustLocationCodeChanging(value)
				Me.SendPropertyChanging
				Me._CustLocationCode = value
				Me.SendPropertyChanged("CustLocationCode")
				Me.OnCustLocationCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustTelNo", DbType:="VarChar(255)")>  _
	Public Property CustTelNo() As String
		Get
			Return Me._CustTelNo
		End Get
		Set
			If (String.Equals(Me._CustTelNo, value) = false) Then
				Me.OnCustTelNoChanging(value)
				Me.SendPropertyChanging
				Me._CustTelNo = value
				Me.SendPropertyChanged("CustTelNo")
				Me.OnCustTelNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustEmail", DbType:="VarChar(255)")>  _
	Public Property CustEmail() As String
		Get
			Return Me._CustEmail
		End Get
		Set
			If (String.Equals(Me._CustEmail, value) = false) Then
				Me.OnCustEmailChanging(value)
				Me.SendPropertyChanging
				Me._CustEmail = value
				Me.SendPropertyChanged("CustEmail")
				Me.OnCustEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustFaxNo", DbType:="VarChar(50)")>  _
	Public Property CustFaxNo() As String
		Get
			Return Me._CustFaxNo
		End Get
		Set
			If (String.Equals(Me._CustFaxNo, value) = false) Then
				Me.OnCustFaxNoChanging(value)
				Me.SendPropertyChanging
				Me._CustFaxNo = value
				Me.SendPropertyChanged("CustFaxNo")
				Me.OnCustFaxNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarSize", DbType:="VarChar(50)")>  _
	Public Property CarSize() As String
		Get
			Return Me._CarSize
		End Get
		Set
			If (String.Equals(Me._CarSize, value) = false) Then
				Me.OnCarSizeChanging(value)
				Me.SendPropertyChanging
				Me._CarSize = value
				Me.SendPropertyChanged("CarSize")
				Me.OnCarSizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarSuminsured", DbType:="Int")>  _
	Public Property CarSuminsured() As System.Nullable(Of Integer)
		Get
			Return Me._CarSuminsured
		End Get
		Set
			If (Me._CarSuminsured.Equals(value) = false) Then
				Me.OnCarSuminsuredChanging(value)
				Me.SendPropertyChanging
				Me._CarSuminsured = value
				Me.SendPropertyChanged("CarSuminsured")
				Me.OnCarSuminsuredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarRegis", DbType:="VarChar(255)")>  _
	Public Property CarRegis() As String
		Get
			Return Me._CarRegis
		End Get
		Set
			If (String.Equals(Me._CarRegis, value) = false) Then
				Me.OnCarRegisChanging(value)
				Me.SendPropertyChanging
				Me._CarRegis = value
				Me.SendPropertyChanged("CarRegis")
				Me.OnCarRegisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarId", DbType:="VarChar(50)")>  _
	Public Property CarId() As String
		Get
			Return Me._CarId
		End Get
		Set
			If (String.Equals(Me._CarId, value) = false) Then
				Me.OnCarIdChanging(value)
				Me.SendPropertyChanging
				Me._CarId = value
				Me.SendPropertyChanged("CarId")
				Me.OnCarIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarChassisNo", DbType:="VarChar(50)")>  _
	Public Property CarChassisNo() As String
		Get
			Return Me._CarChassisNo
		End Get
		Set
			If (String.Equals(Me._CarChassisNo, value) = false) Then
				Me.OnCarChassisNoChanging(value)
				Me.SendPropertyChanging
				Me._CarChassisNo = value
				Me.SendPropertyChanged("CarChassisNo")
				Me.OnCarChassisNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarEngineNo", DbType:="VarChar(255)")>  _
	Public Property CarEngineNo() As String
		Get
			Return Me._CarEngineNo
		End Get
		Set
			If (String.Equals(Me._CarEngineNo, value) = false) Then
				Me.OnCarEngineNoChanging(value)
				Me.SendPropertyChanging
				Me._CarEngineNo = value
				Me.SendPropertyChanged("CarEngineNo")
				Me.OnCarEngineNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="VarChar(50)")>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuredTitleName", DbType:="VarChar(100)")>  _
	Public Property InsuredTitleName() As String
		Get
			Return Me._InsuredTitleName
		End Get
		Set
			If (String.Equals(Me._InsuredTitleName, value) = false) Then
				Me.OnInsuredTitleNameChanging(value)
				Me.SendPropertyChanging
				Me._InsuredTitleName = value
				Me.SendPropertyChanged("InsuredTitleName")
				Me.OnInsuredTitleNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuredName", DbType:="VarChar(255)")>  _
	Public Property InsuredName() As String
		Get
			Return Me._InsuredName
		End Get
		Set
			If (String.Equals(Me._InsuredName, value) = false) Then
				Me.OnInsuredNameChanging(value)
				Me.SendPropertyChanging
				Me._InsuredName = value
				Me.SendPropertyChanged("InsuredName")
				Me.OnInsuredNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReferenceNo", DbType:="VarChar(50)")>  _
	Public Property ReferenceNo() As String
		Get
			Return Me._ReferenceNo
		End Get
		Set
			If (String.Equals(Me._ReferenceNo, value) = false) Then
				Me.OnReferenceNoChanging(value)
				Me.SendPropertyChanging
				Me._ReferenceNo = value
				Me.SendPropertyChanged("ReferenceNo")
				Me.OnReferenceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataFrom", DbType:="VarChar(255)")>  _
	Public Property DataFrom() As String
		Get
			Return Me._DataFrom
		End Get
		Set
			If (String.Equals(Me._DataFrom, value) = false) Then
				Me.OnDataFromChanging(value)
				Me.SendPropertyChanging
				Me._DataFrom = value
				Me.SendPropertyChanged("DataFrom")
				Me.OnDataFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeOfClient", DbType:="VarChar(20)")>  _
	Public Property TypeOfClient() As String
		Get
			Return Me._TypeOfClient
		End Get
		Set
			If (String.Equals(Me._TypeOfClient, value) = false) Then
				Me.OnTypeOfClientChanging(value)
				Me.SendPropertyChanging
				Me._TypeOfClient = value
				Me.SendPropertyChanged("TypeOfClient")
				Me.OnTypeOfClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddressTemp", DbType:="VarChar(MAX)")>  _
	Public Property AddressTemp() As String
		Get
			Return Me._AddressTemp
		End Get
		Set
			If (String.Equals(Me._AddressTemp, value) = false) Then
				Me.OnAddressTempChanging(value)
				Me.SendPropertyChanging
				Me._AddressTemp = value
				Me.SendPropertyChanged("AddressTemp")
				Me.OnAddressTempChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactName", DbType:="VarChar(50)")>  _
	Public Property ContactName() As String
		Get
			Return Me._ContactName
		End Get
		Set
			If (String.Equals(Me._ContactName, value) = false) Then
				Me.OnContactNameChanging(value)
				Me.SendPropertyChanging
				Me._ContactName = value
				Me.SendPropertyChanged("ContactName")
				Me.OnContactNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactTelExt", DbType:="VarChar(50)")>  _
	Public Property ContactTelExt() As String
		Get
			Return Me._ContactTelExt
		End Get
		Set
			If (String.Equals(Me._ContactTelExt, value) = false) Then
				Me.OnContactTelExtChanging(value)
				Me.SendPropertyChanging
				Me._ContactTelExt = value
				Me.SendPropertyChanged("ContactTelExt")
				Me.OnContactTelExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserRec", DbType:="VarChar(255)")>  _
	Public Property UserRec() As String
		Get
			Return Me._UserRec
		End Get
		Set
			If (String.Equals(Me._UserRec, value) = false) Then
				Me.OnUserRecChanging(value)
				Me.SendPropertyChanging
				Me._UserRec = value
				Me.SendPropertyChanged("UserRec")
				Me.OnUserRecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateRec", DbType:="DateTime")>  _
	Public Property DateRec() As System.Nullable(Of Date)
		Get
			Return Me._DateRec
		End Get
		Set
			If (Me._DateRec.Equals(value) = false) Then
				Me.OnDateRecChanging(value)
				Me.SendPropertyChanging
				Me._DateRec = value
				Me.SendPropertyChanged("DateRec")
				Me.OnDateRecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserUpdate", DbType:="VarChar(50)")>  _
	Public Property UserUpdate() As String
		Get
			Return Me._UserUpdate
		End Get
		Set
			If (String.Equals(Me._UserUpdate, value) = false) Then
				Me.OnUserUpdateChanging(value)
				Me.SendPropertyChanging
				Me._UserUpdate = value
				Me.SendPropertyChanged("UserUpdate")
				Me.OnUserUpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateUpdate", DbType:="DateTime")>  _
	Public Property DateUpdate() As System.Nullable(Of Date)
		Get
			Return Me._DateUpdate
		End Get
		Set
			If (Me._DateUpdate.Equals(value) = false) Then
				Me.OnDateUpdateChanging(value)
				Me.SendPropertyChanging
				Me._DateUpdate = value
				Me.SendPropertyChanged("DateUpdate")
				Me.OnDateUpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserConfirm", DbType:="VarChar(50)")>  _
	Public Property UserConfirm() As String
		Get
			Return Me._UserConfirm
		End Get
		Set
			If (String.Equals(Me._UserConfirm, value) = false) Then
				Me.OnUserConfirmChanging(value)
				Me.SendPropertyChanging
				Me._UserConfirm = value
				Me.SendPropertyChanged("UserConfirm")
				Me.OnUserConfirmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateConFirm", DbType:="DateTime")>  _
	Public Property DateConFirm() As System.Nullable(Of Date)
		Get
			Return Me._DateConFirm
		End Get
		Set
			If (Me._DateConFirm.Equals(value) = false) Then
				Me.OnDateConFirmChanging(value)
				Me.SendPropertyChanging
				Me._DateConFirm = value
				Me.SendPropertyChanged("DateConFirm")
				Me.OnDateConFirmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConfirmCode", DbType:="VarChar(50)")>  _
	Public Property ConfirmCode() As String
		Get
			Return Me._ConfirmCode
		End Get
		Set
			If (String.Equals(Me._ConfirmCode, value) = false) Then
				Me.OnConfirmCodeChanging(value)
				Me.SendPropertyChanging
				Me._ConfirmCode = value
				Me.SendPropertyChanged("ConfirmCode")
				Me.OnConfirmCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrandlID", DbType:="Int")>  _
	Public Property CarBrandlID() As System.Nullable(Of Integer)
		Get
			Return Me._CarBrandlID
		End Get
		Set
			If (Me._CarBrandlID.Equals(value) = false) Then
				Me.OnCarBrandlIDChanging(value)
				Me.SendPropertyChanging
				Me._CarBrandlID = value
				Me.SendPropertyChanged("CarBrandlID")
				Me.OnCarBrandlIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrandName", DbType:="VarChar(100)")>  _
	Public Property CarBrandName() As String
		Get
			Return Me._CarBrandName
		End Get
		Set
			If (String.Equals(Me._CarBrandName, value) = false) Then
				Me.OnCarBrandNameChanging(value)
				Me.SendPropertyChanging
				Me._CarBrandName = value
				Me.SendPropertyChanged("CarBrandName")
				Me.OnCarBrandNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModelID", DbType:="Int")>  _
	Public Property CarModelID() As System.Nullable(Of Integer)
		Get
			Return Me._CarModelID
		End Get
		Set
			If (Me._CarModelID.Equals(value) = false) Then
				Me.OnCarModelIDChanging(value)
				Me.SendPropertyChanging
				Me._CarModelID = value
				Me.SendPropertyChanged("CarModelID")
				Me.OnCarModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModelName", DbType:="VarChar(356) NOT NULL", CanBeNull:=false)>  _
	Public Property CarModelName() As String
		Get
			Return Me._CarModelName
		End Get
		Set
			If (String.Equals(Me._CarModelName, value) = false) Then
				Me.OnCarModelNameChanging(value)
				Me.SendPropertyChanging
				Me._CarModelName = value
				Me.SendPropertyChanged("CarModelName")
				Me.OnCarModelNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscGroupId", DbType:="VarChar(15)")>  _
	Public Property DiscGroupId() As String
		Get
			Return Me._DiscGroupId
		End Get
		Set
			If (String.Equals(Me._DiscGroupId, value) = false) Then
				Me.OnDiscGroupIdChanging(value)
				Me.SendPropertyChanging
				Me._DiscGroupId = value
				Me.SendPropertyChanged("DiscGroupId")
				Me.OnDiscGroupIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_txtOther", DbType:="VarChar(255)")>  _
	Public Property txtOther() As String
		Get
			Return Me._txtOther
		End Get
		Set
			If (String.Equals(Me._txtOther, value) = false) Then
				Me.OntxtOtherChanging(value)
				Me.SendPropertyChanging
				Me._txtOther = value
				Me.SendPropertyChanged("txtOther")
				Me.OntxtOtherChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.AgentRiskComm.Amend]")>  _
Partial Public Class Register_AgentRiskComm_Amend
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Agent As String
	
	Private _Risk As String
	
	Private _CommissionOut As System.Nullable(Of Double)
	
	Private _OROut As System.Nullable(Of Double)
	
	Private _OROutCalFrom As String
	
	Private _AdminOut1 As System.Nullable(Of Double)
	
	Private _AdminOut1Cal As String
	
	Private _AdminOut2 As System.Nullable(Of Double)
	
	Private _AdminOut2Cal As String
	
	Private _EntryBy As String
	
	Private _EntryDate As System.Nullable(Of Date)
	
	Private _CommOutCal As String
	
	Private _OROutCal As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _AmendRiskID As System.Nullable(Of Integer)
	
	Private _Register_ClassOfRisk_Amend As EntityRef(Of Register_ClassOfRisk_Amend)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnAgentChanging(value As String)
    End Sub
    Partial Private Sub OnAgentChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnCommissionOutChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCommissionOutChanged()
    End Sub
    Partial Private Sub OnOROutChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOROutChanged()
    End Sub
    Partial Private Sub OnOROutCalFromChanging(value As String)
    End Sub
    Partial Private Sub OnOROutCalFromChanged()
    End Sub
    Partial Private Sub OnAdminOut1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminOut1Changed()
    End Sub
    Partial Private Sub OnAdminOut1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminOut1CalChanged()
    End Sub
    Partial Private Sub OnAdminOut2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminOut2Changed()
    End Sub
    Partial Private Sub OnAdminOut2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminOut2CalChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnCommOutCalChanging(value As String)
    End Sub
    Partial Private Sub OnCommOutCalChanged()
    End Sub
    Partial Private Sub OnOROutCalChanging(value As String)
    End Sub
    Partial Private Sub OnOROutCalChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnAmendRiskIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAmendRiskIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Register_ClassOfRisk_Amend = CType(Nothing, EntityRef(Of Register_ClassOfRisk_Amend))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8)")>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me.OnAgentChanging(value)
				Me.SendPropertyChanging
				Me._Agent = value
				Me.SendPropertyChanged("Agent")
				Me.OnAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut", DbType:="Float")>  _
	Public Property CommissionOut() As System.Nullable(Of Double)
		Get
			Return Me._CommissionOut
		End Get
		Set
			If (Me._CommissionOut.Equals(value) = false) Then
				Me.OnCommissionOutChanging(value)
				Me.SendPropertyChanging
				Me._CommissionOut = value
				Me.SendPropertyChanged("CommissionOut")
				Me.OnCommissionOutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut", DbType:="Float")>  _
	Public Property OROut() As System.Nullable(Of Double)
		Get
			Return Me._OROut
		End Get
		Set
			If (Me._OROut.Equals(value) = false) Then
				Me.OnOROutChanging(value)
				Me.SendPropertyChanging
				Me._OROut = value
				Me.SendPropertyChanged("OROut")
				Me.OnOROutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCalFrom", DbType:="VarChar(2)")>  _
	Public Property OROutCalFrom() As String
		Get
			Return Me._OROutCalFrom
		End Get
		Set
			If (String.Equals(Me._OROutCalFrom, value) = false) Then
				Me.OnOROutCalFromChanging(value)
				Me.SendPropertyChanging
				Me._OROutCalFrom = value
				Me.SendPropertyChanged("OROutCalFrom")
				Me.OnOROutCalFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1", DbType:="Float")>  _
	Public Property AdminOut1() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut1
		End Get
		Set
			If (Me._AdminOut1.Equals(value) = false) Then
				Me.OnAdminOut1Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut1 = value
				Me.SendPropertyChanged("AdminOut1")
				Me.OnAdminOut1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1Cal", DbType:="VarChar(2)")>  _
	Public Property AdminOut1Cal() As String
		Get
			Return Me._AdminOut1Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut1Cal, value) = false) Then
				Me.OnAdminOut1CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminOut1Cal = value
				Me.SendPropertyChanged("AdminOut1Cal")
				Me.OnAdminOut1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2", DbType:="Float")>  _
	Public Property AdminOut2() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut2
		End Get
		Set
			If (Me._AdminOut2.Equals(value) = false) Then
				Me.OnAdminOut2Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut2 = value
				Me.SendPropertyChanged("AdminOut2")
				Me.OnAdminOut2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2Cal", DbType:="VarChar(2)")>  _
	Public Property AdminOut2Cal() As String
		Get
			Return Me._AdminOut2Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut2Cal, value) = false) Then
				Me.OnAdminOut2CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminOut2Cal = value
				Me.SendPropertyChanged("AdminOut2Cal")
				Me.OnAdminOut2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="VarChar(50)")>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime")>  _
	Public Property EntryDate() As System.Nullable(Of Date)
		Get
			Return Me._EntryDate
		End Get
		Set
			If (Me._EntryDate.Equals(value) = false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutCal", DbType:="VarChar(2)")>  _
	Public Property CommOutCal() As String
		Get
			Return Me._CommOutCal
		End Get
		Set
			If (String.Equals(Me._CommOutCal, value) = false) Then
				Me.OnCommOutCalChanging(value)
				Me.SendPropertyChanging
				Me._CommOutCal = value
				Me.SendPropertyChanged("CommOutCal")
				Me.OnCommOutCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCal", DbType:="VarChar(2)")>  _
	Public Property OROutCal() As String
		Get
			Return Me._OROutCal
		End Get
		Set
			If (String.Equals(Me._OROutCal, value) = false) Then
				Me.OnOROutCalChanging(value)
				Me.SendPropertyChanging
				Me._OROutCal = value
				Me.SendPropertyChanged("OROutCal")
				Me.OnOROutCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int")>  _
	Public Property AmendRiskID() As System.Nullable(Of Integer)
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If (Me._AmendRiskID.Equals(value) = false) Then
				If Me._Register_ClassOfRisk_Amend.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAmendRiskIDChanging(value)
				Me.SendPropertyChanging
				Me._AmendRiskID = value
				Me.SendPropertyChanged("AmendRiskID")
				Me.OnAmendRiskIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_Amend_Register_AgentRiskComm_Amend", Storage:="_Register_ClassOfRisk_Amend", ThisKey:="AmendRiskID", OtherKey:="AmendRiskID", IsForeignKey:=true)>  _
	Public Property Register_ClassOfRisk_Amend() As Register_ClassOfRisk_Amend
		Get
			Return Me._Register_ClassOfRisk_Amend.Entity
		End Get
		Set
			Dim previousValue As Register_ClassOfRisk_Amend = Me._Register_ClassOfRisk_Amend.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Register_ClassOfRisk_Amend.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Register_ClassOfRisk_Amend.Entity = Nothing
					previousValue.Register_AgentRiskComm_Amends.Remove(Me)
				End If
				Me._Register_ClassOfRisk_Amend.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Register_AgentRiskComm_Amends.Add(Me)
					Me._AmendRiskID = value.AmendRiskID
				Else
					Me._AmendRiskID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Register_ClassOfRisk_Amend")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.ClassOfRisk.Amend]")>  _
Partial Public Class Register_ClassOfRisk_Amend
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AmendRiskID As Integer
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _RiskGovernment As String
	
	Private _Department As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _RiskYear As System.Nullable(Of Integer)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _Remark As String
	
	Private _IsGeneralCode As System.Nullable(Of Boolean)
	
	Private _InsuranceLine As System.Nullable(Of Integer)
	
	Private _Prefix As String
	
	Private _Register_AgentRiskComm_Amends As EntitySet(Of Register_AgentRiskComm_Amend)
	
	Private _Register_RiskUwriter_Amends As EntitySet(Of Register_RiskUwriter_Amend)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAmendRiskIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnAmendRiskIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnRiskGroupIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIChanged()
    End Sub
    Partial Private Sub OnRiskGroupIIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIIChanged()
    End Sub
    Partial Private Sub OnRiskShortDescChanging(value As String)
    End Sub
    Partial Private Sub OnRiskShortDescChanged()
    End Sub
    Partial Private Sub OnRiskGovernmentChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGovernmentChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnRiskGroupIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRiskGroupIDChanged()
    End Sub
    Partial Private Sub OnRiskYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRiskYearChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnIsGeneralCodeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsGeneralCodeChanged()
    End Sub
    Partial Private Sub OnInsuranceLineChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInsuranceLineChanged()
    End Sub
    Partial Private Sub OnPrefixChanging(value As String)
    End Sub
    Partial Private Sub OnPrefixChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Register_AgentRiskComm_Amends = New EntitySet(Of Register_AgentRiskComm_Amend)(AddressOf Me.attach_Register_AgentRiskComm_Amends, AddressOf Me.detach_Register_AgentRiskComm_Amends)
		Me._Register_RiskUwriter_Amends = New EntitySet(Of Register_RiskUwriter_Amend)(AddressOf Me.attach_Register_RiskUwriter_Amends, AddressOf Me.detach_Register_RiskUwriter_Amends)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property AmendRiskID() As Integer
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If ((Me._AmendRiskID = value)  _
						= false) Then
				Me.OnAmendRiskIDChanging(value)
				Me.SendPropertyChanging
				Me._AmendRiskID = value
				Me.SendPropertyChanged("AmendRiskID")
				Me.OnAmendRiskIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="VarChar(50)")>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me.OnRiskGroupIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupI = value
				Me.SendPropertyChanged("RiskGroupI")
				Me.OnRiskGroupIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="VarChar(50)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me.OnRiskGroupIIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupII = value
				Me.SendPropertyChanged("RiskGroupII")
				Me.OnRiskGroupIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="VarChar(50)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me.OnRiskShortDescChanging(value)
				Me.SendPropertyChanging
				Me._RiskShortDesc = value
				Me.SendPropertyChanged("RiskShortDesc")
				Me.OnRiskShortDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me.OnRiskGovernmentChanging(value)
				Me.SendPropertyChanging
				Me._RiskGovernment = value
				Me.SendPropertyChanged("RiskGovernment")
				Me.OnRiskGovernmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me.OnRiskGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupID = value
				Me.SendPropertyChanged("RiskGroupID")
				Me.OnRiskGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskYear", DbType:="Int")>  _
	Public Property RiskYear() As System.Nullable(Of Integer)
		Get
			Return Me._RiskYear
		End Get
		Set
			If (Me._RiskYear.Equals(value) = false) Then
				Me.OnRiskYearChanging(value)
				Me.SendPropertyChanging
				Me._RiskYear = value
				Me.SendPropertyChanged("RiskYear")
				Me.OnRiskYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsGeneralCode", DbType:="Bit")>  _
	Public Property IsGeneralCode() As System.Nullable(Of Boolean)
		Get
			Return Me._IsGeneralCode
		End Get
		Set
			If (Me._IsGeneralCode.Equals(value) = false) Then
				Me.OnIsGeneralCodeChanging(value)
				Me.SendPropertyChanging
				Me._IsGeneralCode = value
				Me.SendPropertyChanged("IsGeneralCode")
				Me.OnIsGeneralCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="Int")>  _
	Public Property InsuranceLine() As System.Nullable(Of Integer)
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (Me._InsuranceLine.Equals(value) = false) Then
				Me.OnInsuranceLineChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceLine = value
				Me.SendPropertyChanged("InsuranceLine")
				Me.OnInsuranceLineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefix", DbType:="VarChar(8)")>  _
	Public Property Prefix() As String
		Get
			Return Me._Prefix
		End Get
		Set
			If (String.Equals(Me._Prefix, value) = false) Then
				Me.OnPrefixChanging(value)
				Me.SendPropertyChanging
				Me._Prefix = value
				Me.SendPropertyChanged("Prefix")
				Me.OnPrefixChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_Amend_Register_AgentRiskComm_Amend", Storage:="_Register_AgentRiskComm_Amends", ThisKey:="AmendRiskID", OtherKey:="AmendRiskID")>  _
	Public Property Register_AgentRiskComm_Amends() As EntitySet(Of Register_AgentRiskComm_Amend)
		Get
			Return Me._Register_AgentRiskComm_Amends
		End Get
		Set
			Me._Register_AgentRiskComm_Amends.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_Amend_Register_RiskUwriter_Amend", Storage:="_Register_RiskUwriter_Amends", ThisKey:="AmendRiskID", OtherKey:="AmendRiskID")>  _
	Public Property Register_RiskUwriter_Amends() As EntitySet(Of Register_RiskUwriter_Amend)
		Get
			Return Me._Register_RiskUwriter_Amends
		End Get
		Set
			Me._Register_RiskUwriter_Amends.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Register_AgentRiskComm_Amends(ByVal entity As Register_AgentRiskComm_Amend)
		Me.SendPropertyChanging
		entity.Register_ClassOfRisk_Amend = Me
	End Sub
	
	Private Sub detach_Register_AgentRiskComm_Amends(ByVal entity As Register_AgentRiskComm_Amend)
		Me.SendPropertyChanging
		entity.Register_ClassOfRisk_Amend = Nothing
	End Sub
	
	Private Sub attach_Register_RiskUwriter_Amends(ByVal entity As Register_RiskUwriter_Amend)
		Me.SendPropertyChanging
		entity.Register_ClassOfRisk_Amend = Me
	End Sub
	
	Private Sub detach_Register_RiskUwriter_Amends(ByVal entity As Register_RiskUwriter_Amend)
		Me.SendPropertyChanging
		entity.Register_ClassOfRisk_Amend = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.RiskUwriter.Amend]")>  _
Partial Public Class Register_RiskUwriter_Amend
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _Uwriter As String
	
	Private _Description As String
	
	Private _Brokerage As System.Nullable(Of Single)
	
	Private _AgentCommission As System.Nullable(Of Single)
	
	Private _PremiumWarantydays As System.Nullable(Of Short)
	
	Private _NewRenewaldays As System.Nullable(Of Short)
	
	Private _NewNewBusdays As System.Nullable(Of Short)
	
	Private _RenRenewaldays As System.Nullable(Of Short)
	
	Private _RenNewBusdays As System.Nullable(Of Short)
	
	Private _AutoCalculation As System.Nullable(Of Boolean)
	
	Private _ORCommissionPercent As System.Nullable(Of Double)
	
	Private _OROutRate As System.Nullable(Of Double)
	
	Private _AdminFeeIn1 As System.Nullable(Of Double)
	
	Private _AdminFeeIn1Cal As String
	
	Private _AdminFeeIn2 As System.Nullable(Of Double)
	
	Private _AdminFeeIn2Cal As String
	
	Private _ORCalFrom As String
	
	Private _OffsetORFlag As System.Nullable(Of Boolean)
	
	Private _OffsetAdm1Flag As System.Nullable(Of Boolean)
	
	Private _OffsetAdm2Flag As System.Nullable(Of Boolean)
	
	Private _BrokerageCal As String
	
	Private _ORInCal As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _Remark As String
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _AmendRiskID As System.Nullable(Of Integer)
	
	Private _Register_ClassOfRisk_Amend As EntityRef(Of Register_ClassOfRisk_Amend)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnUwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUwriterChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnBrokerageChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnBrokerageChanged()
    End Sub
    Partial Private Sub OnAgentCommissionChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAgentCommissionChanged()
    End Sub
    Partial Private Sub OnPremiumWarantydaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPremiumWarantydaysChanged()
    End Sub
    Partial Private Sub OnNewRenewaldaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnNewRenewaldaysChanged()
    End Sub
    Partial Private Sub OnNewNewBusdaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnNewNewBusdaysChanged()
    End Sub
    Partial Private Sub OnRenRenewaldaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRenRenewaldaysChanged()
    End Sub
    Partial Private Sub OnRenNewBusdaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRenNewBusdaysChanged()
    End Sub
    Partial Private Sub OnAutoCalculationChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAutoCalculationChanged()
    End Sub
    Partial Private Sub OnORCommissionPercentChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORCommissionPercentChanged()
    End Sub
    Partial Private Sub OnOROutRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOROutRateChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminFeeIn1Changed()
    End Sub
    Partial Private Sub OnAdminFeeIn1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminFeeIn1CalChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminFeeIn2Changed()
    End Sub
    Partial Private Sub OnAdminFeeIn2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminFeeIn2CalChanged()
    End Sub
    Partial Private Sub OnORCalFromChanging(value As String)
    End Sub
    Partial Private Sub OnORCalFromChanged()
    End Sub
    Partial Private Sub OnOffsetORFlagChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOffsetORFlagChanged()
    End Sub
    Partial Private Sub OnOffsetAdm1FlagChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOffsetAdm1FlagChanged()
    End Sub
    Partial Private Sub OnOffsetAdm2FlagChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOffsetAdm2FlagChanged()
    End Sub
    Partial Private Sub OnBrokerageCalChanging(value As String)
    End Sub
    Partial Private Sub OnBrokerageCalChanged()
    End Sub
    Partial Private Sub OnORInCalChanging(value As String)
    End Sub
    Partial Private Sub OnORInCalChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnAmendRiskIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAmendRiskIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Register_ClassOfRisk_Amend = CType(Nothing, EntityRef(Of Register_ClassOfRisk_Amend))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Uwriter", DbType:="VarChar(8)")>  _
	Public Property Uwriter() As String
		Get
			Return Me._Uwriter
		End Get
		Set
			If (String.Equals(Me._Uwriter, value) = false) Then
				Me.OnUwriterChanging(value)
				Me.SendPropertyChanging
				Me._Uwriter = value
				Me.SendPropertyChanged("Uwriter")
				Me.OnUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage", DbType:="Real")>  _
	Public Property Brokerage() As System.Nullable(Of Single)
		Get
			Return Me._Brokerage
		End Get
		Set
			If (Me._Brokerage.Equals(value) = false) Then
				Me.OnBrokerageChanging(value)
				Me.SendPropertyChanging
				Me._Brokerage = value
				Me.SendPropertyChanged("Brokerage")
				Me.OnBrokerageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCommission", DbType:="Real")>  _
	Public Property AgentCommission() As System.Nullable(Of Single)
		Get
			Return Me._AgentCommission
		End Get
		Set
			If (Me._AgentCommission.Equals(value) = false) Then
				Me.OnAgentCommissionChanging(value)
				Me.SendPropertyChanging
				Me._AgentCommission = value
				Me.SendPropertyChanged("AgentCommission")
				Me.OnAgentCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumWarantydays", DbType:="SmallInt")>  _
	Public Property PremiumWarantydays() As System.Nullable(Of Short)
		Get
			Return Me._PremiumWarantydays
		End Get
		Set
			If (Me._PremiumWarantydays.Equals(value) = false) Then
				Me.OnPremiumWarantydaysChanging(value)
				Me.SendPropertyChanging
				Me._PremiumWarantydays = value
				Me.SendPropertyChanged("PremiumWarantydays")
				Me.OnPremiumWarantydaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewRenewaldays", DbType:="SmallInt")>  _
	Public Property NewRenewaldays() As System.Nullable(Of Short)
		Get
			Return Me._NewRenewaldays
		End Get
		Set
			If (Me._NewRenewaldays.Equals(value) = false) Then
				Me.OnNewRenewaldaysChanging(value)
				Me.SendPropertyChanging
				Me._NewRenewaldays = value
				Me.SendPropertyChanged("NewRenewaldays")
				Me.OnNewRenewaldaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewNewBusdays", DbType:="SmallInt")>  _
	Public Property NewNewBusdays() As System.Nullable(Of Short)
		Get
			Return Me._NewNewBusdays
		End Get
		Set
			If (Me._NewNewBusdays.Equals(value) = false) Then
				Me.OnNewNewBusdaysChanging(value)
				Me.SendPropertyChanging
				Me._NewNewBusdays = value
				Me.SendPropertyChanged("NewNewBusdays")
				Me.OnNewNewBusdaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenRenewaldays", DbType:="SmallInt")>  _
	Public Property RenRenewaldays() As System.Nullable(Of Short)
		Get
			Return Me._RenRenewaldays
		End Get
		Set
			If (Me._RenRenewaldays.Equals(value) = false) Then
				Me.OnRenRenewaldaysChanging(value)
				Me.SendPropertyChanging
				Me._RenRenewaldays = value
				Me.SendPropertyChanged("RenRenewaldays")
				Me.OnRenRenewaldaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenNewBusdays", DbType:="SmallInt")>  _
	Public Property RenNewBusdays() As System.Nullable(Of Short)
		Get
			Return Me._RenNewBusdays
		End Get
		Set
			If (Me._RenNewBusdays.Equals(value) = false) Then
				Me.OnRenNewBusdaysChanging(value)
				Me.SendPropertyChanging
				Me._RenNewBusdays = value
				Me.SendPropertyChanged("RenNewBusdays")
				Me.OnRenNewBusdaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AutoCalculation", DbType:="Bit")>  _
	Public Property AutoCalculation() As System.Nullable(Of Boolean)
		Get
			Return Me._AutoCalculation
		End Get
		Set
			If (Me._AutoCalculation.Equals(value) = false) Then
				Me.OnAutoCalculationChanging(value)
				Me.SendPropertyChanging
				Me._AutoCalculation = value
				Me.SendPropertyChanged("AutoCalculation")
				Me.OnAutoCalculationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent", DbType:="Float")>  _
	Public Property ORCommissionPercent() As System.Nullable(Of Double)
		Get
			Return Me._ORCommissionPercent
		End Get
		Set
			If (Me._ORCommissionPercent.Equals(value) = false) Then
				Me.OnORCommissionPercentChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionPercent = value
				Me.SendPropertyChanged("ORCommissionPercent")
				Me.OnORCommissionPercentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutRate", DbType:="Float")>  _
	Public Property OROutRate() As System.Nullable(Of Double)
		Get
			Return Me._OROutRate
		End Get
		Set
			If (Me._OROutRate.Equals(value) = false) Then
				Me.OnOROutRateChanging(value)
				Me.SendPropertyChanging
				Me._OROutRate = value
				Me.SendPropertyChanged("OROutRate")
				Me.OnOROutRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1", DbType:="Float")>  _
	Public Property AdminFeeIn1() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn1
		End Get
		Set
			If (Me._AdminFeeIn1.Equals(value) = false) Then
				Me.OnAdminFeeIn1Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1 = value
				Me.SendPropertyChanged("AdminFeeIn1")
				Me.OnAdminFeeIn1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1Cal", DbType:="VarChar(2)")>  _
	Public Property AdminFeeIn1Cal() As String
		Get
			Return Me._AdminFeeIn1Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn1Cal, value) = false) Then
				Me.OnAdminFeeIn1CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1Cal = value
				Me.SendPropertyChanged("AdminFeeIn1Cal")
				Me.OnAdminFeeIn1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2", DbType:="Float")>  _
	Public Property AdminFeeIn2() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn2
		End Get
		Set
			If (Me._AdminFeeIn2.Equals(value) = false) Then
				Me.OnAdminFeeIn2Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2 = value
				Me.SendPropertyChanged("AdminFeeIn2")
				Me.OnAdminFeeIn2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2Cal", DbType:="VarChar(2)")>  _
	Public Property AdminFeeIn2Cal() As String
		Get
			Return Me._AdminFeeIn2Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn2Cal, value) = false) Then
				Me.OnAdminFeeIn2CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2Cal = value
				Me.SendPropertyChanged("AdminFeeIn2Cal")
				Me.OnAdminFeeIn2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCalFrom", DbType:="VarChar(2)")>  _
	Public Property ORCalFrom() As String
		Get
			Return Me._ORCalFrom
		End Get
		Set
			If (String.Equals(Me._ORCalFrom, value) = false) Then
				Me.OnORCalFromChanging(value)
				Me.SendPropertyChanging
				Me._ORCalFrom = value
				Me.SendPropertyChanged("ORCalFrom")
				Me.OnORCalFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetORFlag", DbType:="Bit")>  _
	Public Property OffsetORFlag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetORFlag
		End Get
		Set
			If (Me._OffsetORFlag.Equals(value) = false) Then
				Me.OnOffsetORFlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetORFlag = value
				Me.SendPropertyChanged("OffsetORFlag")
				Me.OnOffsetORFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm1Flag", DbType:="Bit")>  _
	Public Property OffsetAdm1Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetAdm1Flag
		End Get
		Set
			If (Me._OffsetAdm1Flag.Equals(value) = false) Then
				Me.OnOffsetAdm1FlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetAdm1Flag = value
				Me.SendPropertyChanged("OffsetAdm1Flag")
				Me.OnOffsetAdm1FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm2Flag", DbType:="Bit")>  _
	Public Property OffsetAdm2Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetAdm2Flag
		End Get
		Set
			If (Me._OffsetAdm2Flag.Equals(value) = false) Then
				Me.OnOffsetAdm2FlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetAdm2Flag = value
				Me.SendPropertyChanged("OffsetAdm2Flag")
				Me.OnOffsetAdm2FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrokerageCal", DbType:="VarChar(2)")>  _
	Public Property BrokerageCal() As String
		Get
			Return Me._BrokerageCal
		End Get
		Set
			If (String.Equals(Me._BrokerageCal, value) = false) Then
				Me.OnBrokerageCalChanging(value)
				Me.SendPropertyChanging
				Me._BrokerageCal = value
				Me.SendPropertyChanged("BrokerageCal")
				Me.OnBrokerageCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORInCal", DbType:="VarChar(2)")>  _
	Public Property ORInCal() As String
		Get
			Return Me._ORInCal
		End Get
		Set
			If (String.Equals(Me._ORInCal, value) = false) Then
				Me.OnORInCalChanging(value)
				Me.SendPropertyChanging
				Me._ORInCal = value
				Me.SendPropertyChanged("ORInCal")
				Me.OnORInCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int")>  _
	Public Property AmendRiskID() As System.Nullable(Of Integer)
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If (Me._AmendRiskID.Equals(value) = false) Then
				If Me._Register_ClassOfRisk_Amend.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAmendRiskIDChanging(value)
				Me.SendPropertyChanging
				Me._AmendRiskID = value
				Me.SendPropertyChanged("AmendRiskID")
				Me.OnAmendRiskIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Register_ClassOfRisk_Amend_Register_RiskUwriter_Amend", Storage:="_Register_ClassOfRisk_Amend", ThisKey:="AmendRiskID", OtherKey:="AmendRiskID", IsForeignKey:=true)>  _
	Public Property Register_ClassOfRisk_Amend() As Register_ClassOfRisk_Amend
		Get
			Return Me._Register_ClassOfRisk_Amend.Entity
		End Get
		Set
			Dim previousValue As Register_ClassOfRisk_Amend = Me._Register_ClassOfRisk_Amend.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Register_ClassOfRisk_Amend.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Register_ClassOfRisk_Amend.Entity = Nothing
					previousValue.Register_RiskUwriter_Amends.Remove(Me)
				End If
				Me._Register_ClassOfRisk_Amend.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Register_RiskUwriter_Amends.Add(Me)
					Me._AmendRiskID = value.AmendRiskID
				Else
					Me._AmendRiskID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Register_ClassOfRisk_Amend")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_AgentRiskComm")>  _
Partial Public Class V_AgentRiskComm
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _Agent As String
	
	Private _Name As String
	
	Private _CommOutCal As String
	
	Private _CommissionOut As Double
	
	Private _OROutCal As String
	
	Private _OROut As Double
	
	Private _AdminOut1Cal As String
	
	Private _AdminOut1 As Double
	
	Private _AdminOut2Cal As String
	
	Private _AdminOut2 As Double
	
	Private _CommissionOut_Display As String
	
	Private _OROut_Display As String
	
	Private _AdminOut1_Display As String
	
	Private _AdminOut2_Display As String
	
	Private _OROutCalFrom As String
	
	Private _Remark As String
	
	Private _AgentGroup As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _status As String
	
	Private _InsuranceLine As System.Nullable(Of Integer)
	
	Private _Owner As String
	
	Private _Description As String
	
	Private _HasOverComm As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me._Agent = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutCal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property CommOutCal() As String
		Get
			Return Me._CommOutCal
		End Get
		Set
			If (String.Equals(Me._CommOutCal, value) = false) Then
				Me._CommOutCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut", DbType:="Float NOT NULL")>  _
	Public Property CommissionOut() As Double
		Get
			Return Me._CommissionOut
		End Get
		Set
			If ((Me._CommissionOut = value)  _
						= false) Then
				Me._CommissionOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property OROutCal() As String
		Get
			Return Me._OROutCal
		End Get
		Set
			If (String.Equals(Me._OROutCal, value) = false) Then
				Me._OROutCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut", DbType:="Float NOT NULL")>  _
	Public Property OROut() As Double
		Get
			Return Me._OROut
		End Get
		Set
			If ((Me._OROut = value)  _
						= false) Then
				Me._OROut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1Cal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property AdminOut1Cal() As String
		Get
			Return Me._AdminOut1Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut1Cal, value) = false) Then
				Me._AdminOut1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1", DbType:="Float NOT NULL")>  _
	Public Property AdminOut1() As Double
		Get
			Return Me._AdminOut1
		End Get
		Set
			If ((Me._AdminOut1 = value)  _
						= false) Then
				Me._AdminOut1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2Cal", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property AdminOut2Cal() As String
		Get
			Return Me._AdminOut2Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut2Cal, value) = false) Then
				Me._AdminOut2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2", DbType:="Float NOT NULL")>  _
	Public Property AdminOut2() As Double
		Get
			Return Me._AdminOut2
		End Get
		Set
			If ((Me._AdminOut2 = value)  _
						= false) Then
				Me._AdminOut2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut_Display", DbType:="VarChar(31)")>  _
	Public Property CommissionOut_Display() As String
		Get
			Return Me._CommissionOut_Display
		End Get
		Set
			If (String.Equals(Me._CommissionOut_Display, value) = false) Then
				Me._CommissionOut_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut_Display", DbType:="VarChar(31)")>  _
	Public Property OROut_Display() As String
		Get
			Return Me._OROut_Display
		End Get
		Set
			If (String.Equals(Me._OROut_Display, value) = false) Then
				Me._OROut_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1_Display", DbType:="VarChar(31)")>  _
	Public Property AdminOut1_Display() As String
		Get
			Return Me._AdminOut1_Display
		End Get
		Set
			If (String.Equals(Me._AdminOut1_Display, value) = false) Then
				Me._AdminOut1_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2_Display", DbType:="VarChar(31)")>  _
	Public Property AdminOut2_Display() As String
		Get
			Return Me._AdminOut2_Display
		End Get
		Set
			If (String.Equals(Me._AdminOut2_Display, value) = false) Then
				Me._AdminOut2_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCalFrom", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property OROutCalFrom() As String
		Get
			Return Me._OROutCalFrom
		End Get
		Set
			If (String.Equals(Me._OROutCalFrom, value) = false) Then
				Me._OROutCalFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(50)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentGroup", DbType:="NVarChar(50)")>  _
	Public Property AgentGroup() As String
		Get
			Return Me._AgentGroup
		End Get
		Set
			If (String.Equals(Me._AgentGroup, value) = false) Then
				Me._AgentGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me._ModifyBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me._status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="Int")>  _
	Public Property InsuranceLine() As System.Nullable(Of Integer)
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (Me._InsuranceLine.Equals(value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasOverComm", DbType:="Bit")>  _
	Public Property HasOverComm() As System.Nullable(Of Boolean)
		Get
			Return Me._HasOverComm
		End Get
		Set
			If (Me._HasOverComm.Equals(value) = false) Then
				Me._HasOverComm = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RiskUwriter_Amend")>  _
Partial Public Class V_RiskUwriter_Amend
	
	Private _ID As Integer
	
	Private _AmendRiskID As Integer
	
	Private _Owner As String
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _Underwriter As String
	
	Private _AccountContact As String
	
	Private _Name As String
	
	Private _Brokerage As System.Nullable(Of Single)
	
	Private _BrokerageCal As String
	
	Private _ORCommissionPercent As System.Nullable(Of Double)
	
	Private _ORInCal As String
	
	Private _AdminFeeIn1 As System.Nullable(Of Double)
	
	Private _AdminFeeIn1Cal As String
	
	Private _AdminFeeIn2 As System.Nullable(Of Double)
	
	Private _AdminFeeIn2Cal As String
	
	Private _ORCalFrom As String
	
	Private _InsuranceLine As String
	
	Private _Brokerage_display As String
	
	Private _ORCommissionPercent_display As String
	
	Private _AdminFeeIn1_display As String
	
	Private _AdminFeeIn2_display As String
	
	Private _CommIn_Display As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _OffsetORFlag As System.Nullable(Of Boolean)
	
	Private _OffsetAdm1Flag As System.Nullable(Of Boolean)
	
	Private _OffsetAdm2Flag As System.Nullable(Of Boolean)
	
	Private _Remark As String
	
	Private _status As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int NOT NULL")>  _
	Public Property AmendRiskID() As Integer
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If ((Me._AmendRiskID = value)  _
						= false) Then
				Me._AmendRiskID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountContact", DbType:="NVarChar(70)")>  _
	Public Property AccountContact() As String
		Get
			Return Me._AccountContact
		End Get
		Set
			If (String.Equals(Me._AccountContact, value) = false) Then
				Me._AccountContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage", DbType:="Real")>  _
	Public Property Brokerage() As System.Nullable(Of Single)
		Get
			Return Me._Brokerage
		End Get
		Set
			If (Me._Brokerage.Equals(value) = false) Then
				Me._Brokerage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrokerageCal", DbType:="VarChar(2)")>  _
	Public Property BrokerageCal() As String
		Get
			Return Me._BrokerageCal
		End Get
		Set
			If (String.Equals(Me._BrokerageCal, value) = false) Then
				Me._BrokerageCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent", DbType:="Float")>  _
	Public Property ORCommissionPercent() As System.Nullable(Of Double)
		Get
			Return Me._ORCommissionPercent
		End Get
		Set
			If (Me._ORCommissionPercent.Equals(value) = false) Then
				Me._ORCommissionPercent = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORInCal", DbType:="VarChar(2)")>  _
	Public Property ORInCal() As String
		Get
			Return Me._ORInCal
		End Get
		Set
			If (String.Equals(Me._ORInCal, value) = false) Then
				Me._ORInCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1", DbType:="Float")>  _
	Public Property AdminFeeIn1() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn1
		End Get
		Set
			If (Me._AdminFeeIn1.Equals(value) = false) Then
				Me._AdminFeeIn1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1Cal", DbType:="VarChar(2)")>  _
	Public Property AdminFeeIn1Cal() As String
		Get
			Return Me._AdminFeeIn1Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn1Cal, value) = false) Then
				Me._AdminFeeIn1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2", DbType:="Float")>  _
	Public Property AdminFeeIn2() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn2
		End Get
		Set
			If (Me._AdminFeeIn2.Equals(value) = false) Then
				Me._AdminFeeIn2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2Cal", DbType:="VarChar(2)")>  _
	Public Property AdminFeeIn2Cal() As String
		Get
			Return Me._AdminFeeIn2Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn2Cal, value) = false) Then
				Me._AdminFeeIn2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCalFrom", DbType:="VarChar(2)")>  _
	Public Property ORCalFrom() As String
		Get
			Return Me._ORCalFrom
		End Get
		Set
			If (String.Equals(Me._ORCalFrom, value) = false) Then
				Me._ORCalFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage_display", DbType:="VarChar(31)")>  _
	Public Property Brokerage_display() As String
		Get
			Return Me._Brokerage_display
		End Get
		Set
			If (String.Equals(Me._Brokerage_display, value) = false) Then
				Me._Brokerage_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent_display", DbType:="VarChar(31)")>  _
	Public Property ORCommissionPercent_display() As String
		Get
			Return Me._ORCommissionPercent_display
		End Get
		Set
			If (String.Equals(Me._ORCommissionPercent_display, value) = false) Then
				Me._ORCommissionPercent_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1_display", DbType:="VarChar(31)")>  _
	Public Property AdminFeeIn1_display() As String
		Get
			Return Me._AdminFeeIn1_display
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn1_display, value) = false) Then
				Me._AdminFeeIn1_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2_display", DbType:="VarChar(31)")>  _
	Public Property AdminFeeIn2_display() As String
		Get
			Return Me._AdminFeeIn2_display
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn2_display, value) = false) Then
				Me._AdminFeeIn2_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn_Display", DbType:="VarChar(158)")>  _
	Public Property CommIn_Display() As String
		Get
			Return Me._CommIn_Display
		End Get
		Set
			If (String.Equals(Me._CommIn_Display, value) = false) Then
				Me._CommIn_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetORFlag", DbType:="Bit")>  _
	Public Property OffsetORFlag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetORFlag
		End Get
		Set
			If (Me._OffsetORFlag.Equals(value) = false) Then
				Me._OffsetORFlag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm1Flag", DbType:="Bit")>  _
	Public Property OffsetAdm1Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetAdm1Flag
		End Get
		Set
			If (Me._OffsetAdm1Flag.Equals(value) = false) Then
				Me._OffsetAdm1Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm2Flag", DbType:="Bit")>  _
	Public Property OffsetAdm2Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetAdm2Flag
		End Get
		Set
			If (Me._OffsetAdm2Flag.Equals(value) = false) Then
				Me._OffsetAdm2Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me._status = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClassOfRisk_Amend")>  _
Partial Public Class V_ClassOfRisk_Amend
	
	Private _AmendRiskID As Integer
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _RiskGovernment As String
	
	Private _Department As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _Prefix As String
	
	Private _InsuranceLine As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _IsGeneralCode As System.Nullable(Of Boolean)
	
	Private _CommIn As System.Nullable(Of Integer)
	
	Private _CommOut As System.Nullable(Of Integer)
	
	Private _status As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property AmendRiskID() As Integer
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If ((Me._AmendRiskID = value)  _
						= false) Then
				Me._AmendRiskID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="VarChar(50)")>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me._RiskGroupI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="VarChar(50)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me._RiskGroupII = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="VarChar(50)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me._RiskShortDesc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me._RiskGovernment = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me._Department = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me._RiskGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefix", DbType:="VarChar(8)")>  _
	Public Property Prefix() As String
		Get
			Return Me._Prefix
		End Get
		Set
			If (String.Equals(Me._Prefix, value) = false) Then
				Me._Prefix = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me._ModifyBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsGeneralCode", DbType:="Bit")>  _
	Public Property IsGeneralCode() As System.Nullable(Of Boolean)
		Get
			Return Me._IsGeneralCode
		End Get
		Set
			If (Me._IsGeneralCode.Equals(value) = false) Then
				Me._IsGeneralCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn", DbType:="Int")>  _
	Public Property CommIn() As System.Nullable(Of Integer)
		Get
			Return Me._CommIn
		End Get
		Set
			If (Me._CommIn.Equals(value) = false) Then
				Me._CommIn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOut", DbType:="Int")>  _
	Public Property CommOut() As System.Nullable(Of Integer)
		Get
			Return Me._CommOut
		End Get
		Set
			If (Me._CommOut.Equals(value) = false) Then
				Me._CommOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me._status = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.AgentRiskComm.Log]")>  _
Partial Public Class Register_AgentRiskComm_Log
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Agent As String
	
	Private _Risk As String
	
	Private _CommissionOut As System.Nullable(Of Double)
	
	Private _OROut As System.Nullable(Of Double)
	
	Private _OROutCalFrom As String
	
	Private _AdminOut1 As System.Nullable(Of Double)
	
	Private _AdminOut1Cal As String
	
	Private _AdminOut2 As System.Nullable(Of Double)
	
	Private _AdminOut2Cal As String
	
	Private _EntryBy As String
	
	Private _EntryDate As System.Nullable(Of Date)
	
	Private _CommOutCal As String
	
	Private _OROutCal As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _AmendRiskID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnAgentChanging(value As String)
    End Sub
    Partial Private Sub OnAgentChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnCommissionOutChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCommissionOutChanged()
    End Sub
    Partial Private Sub OnOROutChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOROutChanged()
    End Sub
    Partial Private Sub OnOROutCalFromChanging(value As String)
    End Sub
    Partial Private Sub OnOROutCalFromChanged()
    End Sub
    Partial Private Sub OnAdminOut1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminOut1Changed()
    End Sub
    Partial Private Sub OnAdminOut1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminOut1CalChanged()
    End Sub
    Partial Private Sub OnAdminOut2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminOut2Changed()
    End Sub
    Partial Private Sub OnAdminOut2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminOut2CalChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnCommOutCalChanging(value As String)
    End Sub
    Partial Private Sub OnCommOutCalChanged()
    End Sub
    Partial Private Sub OnOROutCalChanging(value As String)
    End Sub
    Partial Private Sub OnOROutCalChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnAmendRiskIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAmendRiskIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8)")>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me.OnAgentChanging(value)
				Me.SendPropertyChanging
				Me._Agent = value
				Me.SendPropertyChanged("Agent")
				Me.OnAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut", DbType:="Float")>  _
	Public Property CommissionOut() As System.Nullable(Of Double)
		Get
			Return Me._CommissionOut
		End Get
		Set
			If (Me._CommissionOut.Equals(value) = false) Then
				Me.OnCommissionOutChanging(value)
				Me.SendPropertyChanging
				Me._CommissionOut = value
				Me.SendPropertyChanged("CommissionOut")
				Me.OnCommissionOutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut", DbType:="Float")>  _
	Public Property OROut() As System.Nullable(Of Double)
		Get
			Return Me._OROut
		End Get
		Set
			If (Me._OROut.Equals(value) = false) Then
				Me.OnOROutChanging(value)
				Me.SendPropertyChanging
				Me._OROut = value
				Me.SendPropertyChanged("OROut")
				Me.OnOROutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCalFrom", DbType:="VarChar(2)")>  _
	Public Property OROutCalFrom() As String
		Get
			Return Me._OROutCalFrom
		End Get
		Set
			If (String.Equals(Me._OROutCalFrom, value) = false) Then
				Me.OnOROutCalFromChanging(value)
				Me.SendPropertyChanging
				Me._OROutCalFrom = value
				Me.SendPropertyChanged("OROutCalFrom")
				Me.OnOROutCalFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1", DbType:="Float")>  _
	Public Property AdminOut1() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut1
		End Get
		Set
			If (Me._AdminOut1.Equals(value) = false) Then
				Me.OnAdminOut1Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut1 = value
				Me.SendPropertyChanged("AdminOut1")
				Me.OnAdminOut1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1Cal", DbType:="VarChar(2)")>  _
	Public Property AdminOut1Cal() As String
		Get
			Return Me._AdminOut1Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut1Cal, value) = false) Then
				Me.OnAdminOut1CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminOut1Cal = value
				Me.SendPropertyChanged("AdminOut1Cal")
				Me.OnAdminOut1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2", DbType:="Float")>  _
	Public Property AdminOut2() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut2
		End Get
		Set
			If (Me._AdminOut2.Equals(value) = false) Then
				Me.OnAdminOut2Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut2 = value
				Me.SendPropertyChanged("AdminOut2")
				Me.OnAdminOut2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2Cal", DbType:="VarChar(2)")>  _
	Public Property AdminOut2Cal() As String
		Get
			Return Me._AdminOut2Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut2Cal, value) = false) Then
				Me.OnAdminOut2CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminOut2Cal = value
				Me.SendPropertyChanged("AdminOut2Cal")
				Me.OnAdminOut2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="VarChar(50)")>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime")>  _
	Public Property EntryDate() As System.Nullable(Of Date)
		Get
			Return Me._EntryDate
		End Get
		Set
			If (Me._EntryDate.Equals(value) = false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutCal", DbType:="VarChar(2)")>  _
	Public Property CommOutCal() As String
		Get
			Return Me._CommOutCal
		End Get
		Set
			If (String.Equals(Me._CommOutCal, value) = false) Then
				Me.OnCommOutCalChanging(value)
				Me.SendPropertyChanging
				Me._CommOutCal = value
				Me.SendPropertyChanged("CommOutCal")
				Me.OnCommOutCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCal", DbType:="VarChar(2)")>  _
	Public Property OROutCal() As String
		Get
			Return Me._OROutCal
		End Get
		Set
			If (String.Equals(Me._OROutCal, value) = false) Then
				Me.OnOROutCalChanging(value)
				Me.SendPropertyChanging
				Me._OROutCal = value
				Me.SendPropertyChanged("OROutCal")
				Me.OnOROutCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int")>  _
	Public Property AmendRiskID() As System.Nullable(Of Integer)
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If (Me._AmendRiskID.Equals(value) = false) Then
				Me.OnAmendRiskIDChanging(value)
				Me.SendPropertyChanging
				Me._AmendRiskID = value
				Me.SendPropertyChanged("AmendRiskID")
				Me.OnAmendRiskIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.ClassOfRisk.Log]")>  _
Partial Public Class Register_ClassOfRisk_Log
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _RiskGovernment As String
	
	Private _Department As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _RiskYear As System.Nullable(Of Integer)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _Remark As String
	
	Private _IsGeneralCode As System.Nullable(Of Boolean)
	
	Private _InsuranceLine As System.Nullable(Of Integer)
	
	Private _Prefix As String
	
	Private _AmendRiskID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnRiskGroupIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIChanged()
    End Sub
    Partial Private Sub OnRiskGroupIIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIIChanged()
    End Sub
    Partial Private Sub OnRiskShortDescChanging(value As String)
    End Sub
    Partial Private Sub OnRiskShortDescChanged()
    End Sub
    Partial Private Sub OnRiskGovernmentChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGovernmentChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnRiskGroupIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRiskGroupIDChanged()
    End Sub
    Partial Private Sub OnRiskYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRiskYearChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnIsGeneralCodeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsGeneralCodeChanged()
    End Sub
    Partial Private Sub OnInsuranceLineChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInsuranceLineChanged()
    End Sub
    Partial Private Sub OnPrefixChanging(value As String)
    End Sub
    Partial Private Sub OnPrefixChanged()
    End Sub
    Partial Private Sub OnAmendRiskIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAmendRiskIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="VarChar(50)")>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me.OnRiskGroupIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupI = value
				Me.SendPropertyChanged("RiskGroupI")
				Me.OnRiskGroupIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="VarChar(50)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me.OnRiskGroupIIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupII = value
				Me.SendPropertyChanged("RiskGroupII")
				Me.OnRiskGroupIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="VarChar(50)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me.OnRiskShortDescChanging(value)
				Me.SendPropertyChanging
				Me._RiskShortDesc = value
				Me.SendPropertyChanged("RiskShortDesc")
				Me.OnRiskShortDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me.OnRiskGovernmentChanging(value)
				Me.SendPropertyChanging
				Me._RiskGovernment = value
				Me.SendPropertyChanged("RiskGovernment")
				Me.OnRiskGovernmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me.OnRiskGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupID = value
				Me.SendPropertyChanged("RiskGroupID")
				Me.OnRiskGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskYear", DbType:="Int")>  _
	Public Property RiskYear() As System.Nullable(Of Integer)
		Get
			Return Me._RiskYear
		End Get
		Set
			If (Me._RiskYear.Equals(value) = false) Then
				Me.OnRiskYearChanging(value)
				Me.SendPropertyChanging
				Me._RiskYear = value
				Me.SendPropertyChanged("RiskYear")
				Me.OnRiskYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsGeneralCode", DbType:="Bit")>  _
	Public Property IsGeneralCode() As System.Nullable(Of Boolean)
		Get
			Return Me._IsGeneralCode
		End Get
		Set
			If (Me._IsGeneralCode.Equals(value) = false) Then
				Me.OnIsGeneralCodeChanging(value)
				Me.SendPropertyChanging
				Me._IsGeneralCode = value
				Me.SendPropertyChanged("IsGeneralCode")
				Me.OnIsGeneralCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="Int")>  _
	Public Property InsuranceLine() As System.Nullable(Of Integer)
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (Me._InsuranceLine.Equals(value) = false) Then
				Me.OnInsuranceLineChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceLine = value
				Me.SendPropertyChanged("InsuranceLine")
				Me.OnInsuranceLineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefix", DbType:="VarChar(8)")>  _
	Public Property Prefix() As String
		Get
			Return Me._Prefix
		End Get
		Set
			If (String.Equals(Me._Prefix, value) = false) Then
				Me.OnPrefixChanging(value)
				Me.SendPropertyChanging
				Me._Prefix = value
				Me.SendPropertyChanged("Prefix")
				Me.OnPrefixChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int")>  _
	Public Property AmendRiskID() As System.Nullable(Of Integer)
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If (Me._AmendRiskID.Equals(value) = false) Then
				Me.OnAmendRiskIDChanging(value)
				Me.SendPropertyChanging
				Me._AmendRiskID = value
				Me.SendPropertyChanged("AmendRiskID")
				Me.OnAmendRiskIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Register.RiskUwriter.Log]")>  _
Partial Public Class Register_RiskUwriter_Log
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Risk As String
	
	Private _Uwriter As String
	
	Private _Description As String
	
	Private _Brokerage As System.Nullable(Of Single)
	
	Private _AgentCommission As System.Nullable(Of Single)
	
	Private _PremiumWarantydays As System.Nullable(Of Short)
	
	Private _NewRenewaldays As System.Nullable(Of Short)
	
	Private _NewNewBusdays As System.Nullable(Of Short)
	
	Private _RenRenewaldays As System.Nullable(Of Short)
	
	Private _RenNewBusdays As System.Nullable(Of Short)
	
	Private _AutoCalculation As System.Nullable(Of Boolean)
	
	Private _ORCommissionPercent As System.Nullable(Of Double)
	
	Private _OROutRate As System.Nullable(Of Double)
	
	Private _AdminFeeIn1 As System.Nullable(Of Double)
	
	Private _AdminFeeIn1Cal As String
	
	Private _AdminFeeIn2 As System.Nullable(Of Double)
	
	Private _AdminFeeIn2Cal As String
	
	Private _ORCalFrom As String
	
	Private _OffsetORFlag As System.Nullable(Of Boolean)
	
	Private _OffsetAdm1Flag As System.Nullable(Of Boolean)
	
	Private _OffsetAdm2Flag As System.Nullable(Of Boolean)
	
	Private _BrokerageCal As String
	
	Private _ORInCal As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _Remark As String
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _AmendRiskID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnUwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUwriterChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnBrokerageChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnBrokerageChanged()
    End Sub
    Partial Private Sub OnAgentCommissionChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnAgentCommissionChanged()
    End Sub
    Partial Private Sub OnPremiumWarantydaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPremiumWarantydaysChanged()
    End Sub
    Partial Private Sub OnNewRenewaldaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnNewRenewaldaysChanged()
    End Sub
    Partial Private Sub OnNewNewBusdaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnNewNewBusdaysChanged()
    End Sub
    Partial Private Sub OnRenRenewaldaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRenRenewaldaysChanged()
    End Sub
    Partial Private Sub OnRenNewBusdaysChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRenNewBusdaysChanged()
    End Sub
    Partial Private Sub OnAutoCalculationChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAutoCalculationChanged()
    End Sub
    Partial Private Sub OnORCommissionPercentChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORCommissionPercentChanged()
    End Sub
    Partial Private Sub OnOROutRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOROutRateChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminFeeIn1Changed()
    End Sub
    Partial Private Sub OnAdminFeeIn1CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminFeeIn1CalChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminFeeIn2Changed()
    End Sub
    Partial Private Sub OnAdminFeeIn2CalChanging(value As String)
    End Sub
    Partial Private Sub OnAdminFeeIn2CalChanged()
    End Sub
    Partial Private Sub OnORCalFromChanging(value As String)
    End Sub
    Partial Private Sub OnORCalFromChanged()
    End Sub
    Partial Private Sub OnOffsetORFlagChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOffsetORFlagChanged()
    End Sub
    Partial Private Sub OnOffsetAdm1FlagChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOffsetAdm1FlagChanged()
    End Sub
    Partial Private Sub OnOffsetAdm2FlagChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOffsetAdm2FlagChanged()
    End Sub
    Partial Private Sub OnBrokerageCalChanging(value As String)
    End Sub
    Partial Private Sub OnBrokerageCalChanged()
    End Sub
    Partial Private Sub OnORInCalChanging(value As String)
    End Sub
    Partial Private Sub OnORInCalChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnApproveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApproveDateChanged()
    End Sub
    Partial Private Sub OnApproveByChanging(value As String)
    End Sub
    Partial Private Sub OnApproveByChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnAmendRiskIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAmendRiskIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Uwriter", DbType:="VarChar(8)")>  _
	Public Property Uwriter() As String
		Get
			Return Me._Uwriter
		End Get
		Set
			If (String.Equals(Me._Uwriter, value) = false) Then
				Me.OnUwriterChanging(value)
				Me.SendPropertyChanging
				Me._Uwriter = value
				Me.SendPropertyChanged("Uwriter")
				Me.OnUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage", DbType:="Real")>  _
	Public Property Brokerage() As System.Nullable(Of Single)
		Get
			Return Me._Brokerage
		End Get
		Set
			If (Me._Brokerage.Equals(value) = false) Then
				Me.OnBrokerageChanging(value)
				Me.SendPropertyChanging
				Me._Brokerage = value
				Me.SendPropertyChanged("Brokerage")
				Me.OnBrokerageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCommission", DbType:="Real")>  _
	Public Property AgentCommission() As System.Nullable(Of Single)
		Get
			Return Me._AgentCommission
		End Get
		Set
			If (Me._AgentCommission.Equals(value) = false) Then
				Me.OnAgentCommissionChanging(value)
				Me.SendPropertyChanging
				Me._AgentCommission = value
				Me.SendPropertyChanged("AgentCommission")
				Me.OnAgentCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumWarantydays", DbType:="SmallInt")>  _
	Public Property PremiumWarantydays() As System.Nullable(Of Short)
		Get
			Return Me._PremiumWarantydays
		End Get
		Set
			If (Me._PremiumWarantydays.Equals(value) = false) Then
				Me.OnPremiumWarantydaysChanging(value)
				Me.SendPropertyChanging
				Me._PremiumWarantydays = value
				Me.SendPropertyChanged("PremiumWarantydays")
				Me.OnPremiumWarantydaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewRenewaldays", DbType:="SmallInt")>  _
	Public Property NewRenewaldays() As System.Nullable(Of Short)
		Get
			Return Me._NewRenewaldays
		End Get
		Set
			If (Me._NewRenewaldays.Equals(value) = false) Then
				Me.OnNewRenewaldaysChanging(value)
				Me.SendPropertyChanging
				Me._NewRenewaldays = value
				Me.SendPropertyChanged("NewRenewaldays")
				Me.OnNewRenewaldaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewNewBusdays", DbType:="SmallInt")>  _
	Public Property NewNewBusdays() As System.Nullable(Of Short)
		Get
			Return Me._NewNewBusdays
		End Get
		Set
			If (Me._NewNewBusdays.Equals(value) = false) Then
				Me.OnNewNewBusdaysChanging(value)
				Me.SendPropertyChanging
				Me._NewNewBusdays = value
				Me.SendPropertyChanged("NewNewBusdays")
				Me.OnNewNewBusdaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenRenewaldays", DbType:="SmallInt")>  _
	Public Property RenRenewaldays() As System.Nullable(Of Short)
		Get
			Return Me._RenRenewaldays
		End Get
		Set
			If (Me._RenRenewaldays.Equals(value) = false) Then
				Me.OnRenRenewaldaysChanging(value)
				Me.SendPropertyChanging
				Me._RenRenewaldays = value
				Me.SendPropertyChanged("RenRenewaldays")
				Me.OnRenRenewaldaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenNewBusdays", DbType:="SmallInt")>  _
	Public Property RenNewBusdays() As System.Nullable(Of Short)
		Get
			Return Me._RenNewBusdays
		End Get
		Set
			If (Me._RenNewBusdays.Equals(value) = false) Then
				Me.OnRenNewBusdaysChanging(value)
				Me.SendPropertyChanging
				Me._RenNewBusdays = value
				Me.SendPropertyChanged("RenNewBusdays")
				Me.OnRenNewBusdaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AutoCalculation", DbType:="Bit")>  _
	Public Property AutoCalculation() As System.Nullable(Of Boolean)
		Get
			Return Me._AutoCalculation
		End Get
		Set
			If (Me._AutoCalculation.Equals(value) = false) Then
				Me.OnAutoCalculationChanging(value)
				Me.SendPropertyChanging
				Me._AutoCalculation = value
				Me.SendPropertyChanged("AutoCalculation")
				Me.OnAutoCalculationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent", DbType:="Float")>  _
	Public Property ORCommissionPercent() As System.Nullable(Of Double)
		Get
			Return Me._ORCommissionPercent
		End Get
		Set
			If (Me._ORCommissionPercent.Equals(value) = false) Then
				Me.OnORCommissionPercentChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionPercent = value
				Me.SendPropertyChanged("ORCommissionPercent")
				Me.OnORCommissionPercentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutRate", DbType:="Float")>  _
	Public Property OROutRate() As System.Nullable(Of Double)
		Get
			Return Me._OROutRate
		End Get
		Set
			If (Me._OROutRate.Equals(value) = false) Then
				Me.OnOROutRateChanging(value)
				Me.SendPropertyChanging
				Me._OROutRate = value
				Me.SendPropertyChanged("OROutRate")
				Me.OnOROutRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1", DbType:="Float")>  _
	Public Property AdminFeeIn1() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn1
		End Get
		Set
			If (Me._AdminFeeIn1.Equals(value) = false) Then
				Me.OnAdminFeeIn1Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1 = value
				Me.SendPropertyChanged("AdminFeeIn1")
				Me.OnAdminFeeIn1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1Cal", DbType:="VarChar(2)")>  _
	Public Property AdminFeeIn1Cal() As String
		Get
			Return Me._AdminFeeIn1Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn1Cal, value) = false) Then
				Me.OnAdminFeeIn1CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1Cal = value
				Me.SendPropertyChanged("AdminFeeIn1Cal")
				Me.OnAdminFeeIn1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2", DbType:="Float")>  _
	Public Property AdminFeeIn2() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn2
		End Get
		Set
			If (Me._AdminFeeIn2.Equals(value) = false) Then
				Me.OnAdminFeeIn2Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2 = value
				Me.SendPropertyChanged("AdminFeeIn2")
				Me.OnAdminFeeIn2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2Cal", DbType:="VarChar(2)")>  _
	Public Property AdminFeeIn2Cal() As String
		Get
			Return Me._AdminFeeIn2Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn2Cal, value) = false) Then
				Me.OnAdminFeeIn2CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2Cal = value
				Me.SendPropertyChanged("AdminFeeIn2Cal")
				Me.OnAdminFeeIn2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCalFrom", DbType:="VarChar(2)")>  _
	Public Property ORCalFrom() As String
		Get
			Return Me._ORCalFrom
		End Get
		Set
			If (String.Equals(Me._ORCalFrom, value) = false) Then
				Me.OnORCalFromChanging(value)
				Me.SendPropertyChanging
				Me._ORCalFrom = value
				Me.SendPropertyChanged("ORCalFrom")
				Me.OnORCalFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetORFlag", DbType:="Bit")>  _
	Public Property OffsetORFlag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetORFlag
		End Get
		Set
			If (Me._OffsetORFlag.Equals(value) = false) Then
				Me.OnOffsetORFlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetORFlag = value
				Me.SendPropertyChanged("OffsetORFlag")
				Me.OnOffsetORFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm1Flag", DbType:="Bit")>  _
	Public Property OffsetAdm1Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetAdm1Flag
		End Get
		Set
			If (Me._OffsetAdm1Flag.Equals(value) = false) Then
				Me.OnOffsetAdm1FlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetAdm1Flag = value
				Me.SendPropertyChanged("OffsetAdm1Flag")
				Me.OnOffsetAdm1FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm2Flag", DbType:="Bit")>  _
	Public Property OffsetAdm2Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetAdm2Flag
		End Get
		Set
			If (Me._OffsetAdm2Flag.Equals(value) = false) Then
				Me.OnOffsetAdm2FlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetAdm2Flag = value
				Me.SendPropertyChanged("OffsetAdm2Flag")
				Me.OnOffsetAdm2FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrokerageCal", DbType:="VarChar(2)")>  _
	Public Property BrokerageCal() As String
		Get
			Return Me._BrokerageCal
		End Get
		Set
			If (String.Equals(Me._BrokerageCal, value) = false) Then
				Me.OnBrokerageCalChanging(value)
				Me.SendPropertyChanging
				Me._BrokerageCal = value
				Me.SendPropertyChanged("BrokerageCal")
				Me.OnBrokerageCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORInCal", DbType:="VarChar(2)")>  _
	Public Property ORInCal() As String
		Get
			Return Me._ORInCal
		End Get
		Set
			If (String.Equals(Me._ORInCal, value) = false) Then
				Me.OnORInCalChanging(value)
				Me.SendPropertyChanging
				Me._ORInCal = value
				Me.SendPropertyChanged("ORInCal")
				Me.OnORInCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me.OnRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._RequestDate = value
				Me.SendPropertyChanged("RequestDate")
				Me.OnRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me.OnApproveDateChanging(value)
				Me.SendPropertyChanging
				Me._ApproveDate = value
				Me.SendPropertyChanged("ApproveDate")
				Me.OnApproveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me.OnApproveByChanging(value)
				Me.SendPropertyChanging
				Me._ApproveBy = value
				Me.SendPropertyChanged("ApproveBy")
				Me.OnApproveByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int")>  _
	Public Property AmendRiskID() As System.Nullable(Of Integer)
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If (Me._AmendRiskID.Equals(value) = false) Then
				Me.OnAmendRiskIDChanging(value)
				Me.SendPropertyChanging
				Me._AmendRiskID = value
				Me.SendPropertyChanged("AmendRiskID")
				Me.OnAmendRiskIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_AgentRiskComm_Log")>  _
Partial Public Class V_AgentRiskComm_Log
	
	Private _ID As Integer
	
	Private _AmendRiskID As System.Nullable(Of Integer)
	
	Private _Risk As String
	
	Private _Agent As String
	
	Private _Name As String
	
	Private _CommOutCal As String
	
	Private _CommissionOut As System.Nullable(Of Double)
	
	Private _OROutCal As String
	
	Private _OROut As System.Nullable(Of Double)
	
	Private _AdminOut1Cal As String
	
	Private _AdminOut1 As System.Nullable(Of Double)
	
	Private _AdminOut2Cal As String
	
	Private _AdminOut2 As System.Nullable(Of Double)
	
	Private _CommissionOut_Display As String
	
	Private _OROut_Display As String
	
	Private _AdminOut1_Display As String
	
	Private _AdminOut2_Display As String
	
	Private _OROutCalFrom As String
	
	Private _Remark As String
	
	Private _AgentGroup As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _status As String
	
	Private _InsuranceLine As String
	
	Private _Owner As String
	
	Private _Description As String
	
	Private _Underwriter As String
	
	Private _Underwriter_Name As String
	
	Private _CommIn_Display As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int")>  _
	Public Property AmendRiskID() As System.Nullable(Of Integer)
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If (Me._AmendRiskID.Equals(value) = false) Then
				Me._AmendRiskID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me._Agent = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutCal", DbType:="VarChar(2)")>  _
	Public Property CommOutCal() As String
		Get
			Return Me._CommOutCal
		End Get
		Set
			If (String.Equals(Me._CommOutCal, value) = false) Then
				Me._CommOutCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut", DbType:="Float")>  _
	Public Property CommissionOut() As System.Nullable(Of Double)
		Get
			Return Me._CommissionOut
		End Get
		Set
			If (Me._CommissionOut.Equals(value) = false) Then
				Me._CommissionOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCal", DbType:="VarChar(2)")>  _
	Public Property OROutCal() As String
		Get
			Return Me._OROutCal
		End Get
		Set
			If (String.Equals(Me._OROutCal, value) = false) Then
				Me._OROutCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut", DbType:="Float")>  _
	Public Property OROut() As System.Nullable(Of Double)
		Get
			Return Me._OROut
		End Get
		Set
			If (Me._OROut.Equals(value) = false) Then
				Me._OROut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1Cal", DbType:="VarChar(2)")>  _
	Public Property AdminOut1Cal() As String
		Get
			Return Me._AdminOut1Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut1Cal, value) = false) Then
				Me._AdminOut1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1", DbType:="Float")>  _
	Public Property AdminOut1() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut1
		End Get
		Set
			If (Me._AdminOut1.Equals(value) = false) Then
				Me._AdminOut1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2Cal", DbType:="VarChar(2)")>  _
	Public Property AdminOut2Cal() As String
		Get
			Return Me._AdminOut2Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut2Cal, value) = false) Then
				Me._AdminOut2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2", DbType:="Float")>  _
	Public Property AdminOut2() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut2
		End Get
		Set
			If (Me._AdminOut2.Equals(value) = false) Then
				Me._AdminOut2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut_Display", DbType:="VarChar(31)")>  _
	Public Property CommissionOut_Display() As String
		Get
			Return Me._CommissionOut_Display
		End Get
		Set
			If (String.Equals(Me._CommissionOut_Display, value) = false) Then
				Me._CommissionOut_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut_Display", DbType:="VarChar(31)")>  _
	Public Property OROut_Display() As String
		Get
			Return Me._OROut_Display
		End Get
		Set
			If (String.Equals(Me._OROut_Display, value) = false) Then
				Me._OROut_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1_Display", DbType:="VarChar(31)")>  _
	Public Property AdminOut1_Display() As String
		Get
			Return Me._AdminOut1_Display
		End Get
		Set
			If (String.Equals(Me._AdminOut1_Display, value) = false) Then
				Me._AdminOut1_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2_Display", DbType:="VarChar(31)")>  _
	Public Property AdminOut2_Display() As String
		Get
			Return Me._AdminOut2_Display
		End Get
		Set
			If (String.Equals(Me._AdminOut2_Display, value) = false) Then
				Me._AdminOut2_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCalFrom", DbType:="VarChar(2)")>  _
	Public Property OROutCalFrom() As String
		Get
			Return Me._OROutCalFrom
		End Get
		Set
			If (String.Equals(Me._OROutCalFrom, value) = false) Then
				Me._OROutCalFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(50)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentGroup", DbType:="NVarChar(50)")>  _
	Public Property AgentGroup() As String
		Get
			Return Me._AgentGroup
		End Get
		Set
			If (String.Equals(Me._AgentGroup, value) = false) Then
				Me._AgentGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me._ModifyBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me._status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter_Name", DbType:="NVarChar(70)")>  _
	Public Property Underwriter_Name() As String
		Get
			Return Me._Underwriter_Name
		End Get
		Set
			If (String.Equals(Me._Underwriter_Name, value) = false) Then
				Me._Underwriter_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn_Display", DbType:="VarChar(158)")>  _
	Public Property CommIn_Display() As String
		Get
			Return Me._CommIn_Display
		End Get
		Set
			If (String.Equals(Me._CommIn_Display, value) = false) Then
				Me._CommIn_Display = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClassOfRisk_Log")>  _
Partial Public Class V_ClassOfRisk_Log
	
	Private _AmendRiskID As System.Nullable(Of Integer)
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _RiskGovernment As String
	
	Private _Department As String
	
	Private _RiskGroupID As System.Nullable(Of Integer)
	
	Private _Prefix As String
	
	Private _InsuranceLine As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _IsGeneralCode As System.Nullable(Of Boolean)
	
	Private _CommIn As System.Nullable(Of Integer)
	
	Private _CommOut As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int")>  _
	Public Property AmendRiskID() As System.Nullable(Of Integer)
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If (Me._AmendRiskID.Equals(value) = false) Then
				Me._AmendRiskID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="VarChar(50)")>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me._RiskGroupI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="VarChar(50)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me._RiskGroupII = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="VarChar(50)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me._RiskShortDesc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me._RiskGovernment = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me._Department = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupID", DbType:="Int")>  _
	Public Property RiskGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._RiskGroupID
		End Get
		Set
			If (Me._RiskGroupID.Equals(value) = false) Then
				Me._RiskGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prefix", DbType:="VarChar(8)")>  _
	Public Property Prefix() As String
		Get
			Return Me._Prefix
		End Get
		Set
			If (String.Equals(Me._Prefix, value) = false) Then
				Me._Prefix = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me._ModifyBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsGeneralCode", DbType:="Bit")>  _
	Public Property IsGeneralCode() As System.Nullable(Of Boolean)
		Get
			Return Me._IsGeneralCode
		End Get
		Set
			If (Me._IsGeneralCode.Equals(value) = false) Then
				Me._IsGeneralCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn", DbType:="Int")>  _
	Public Property CommIn() As System.Nullable(Of Integer)
		Get
			Return Me._CommIn
		End Get
		Set
			If (Me._CommIn.Equals(value) = false) Then
				Me._CommIn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOut", DbType:="Int")>  _
	Public Property CommOut() As System.Nullable(Of Integer)
		Get
			Return Me._CommOut
		End Get
		Set
			If (Me._CommOut.Equals(value) = false) Then
				Me._CommOut = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RiskUwriter_Log")>  _
Partial Public Class V_RiskUwriter_Log
	
	Private _ID As Integer
	
	Private _AmendRiskID As System.Nullable(Of Integer)
	
	Private _Owner As String
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _Underwriter As String
	
	Private _AccountContact As String
	
	Private _Name As String
	
	Private _Brokerage As System.Nullable(Of Single)
	
	Private _BrokerageCal As String
	
	Private _ORCommissionPercent As System.Nullable(Of Double)
	
	Private _ORInCal As String
	
	Private _AdminFeeIn1 As System.Nullable(Of Double)
	
	Private _AdminFeeIn1Cal As String
	
	Private _AdminFeeIn2 As System.Nullable(Of Double)
	
	Private _AdminFeeIn2Cal As String
	
	Private _ORCalFrom As String
	
	Private _InsuranceLine As String
	
	Private _Brokerage_display As String
	
	Private _ORCommissionPercent_display As String
	
	Private _AdminFeeIn1_display As String
	
	Private _AdminFeeIn2_display As String
	
	Private _CommIn_Display As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _OffsetORFlag As System.Nullable(Of Boolean)
	
	Private _OffsetAdm1Flag As System.Nullable(Of Boolean)
	
	Private _OffsetAdm2Flag As System.Nullable(Of Boolean)
	
	Private _Remark As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int")>  _
	Public Property AmendRiskID() As System.Nullable(Of Integer)
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If (Me._AmendRiskID.Equals(value) = false) Then
				Me._AmendRiskID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountContact", DbType:="NVarChar(70)")>  _
	Public Property AccountContact() As String
		Get
			Return Me._AccountContact
		End Get
		Set
			If (String.Equals(Me._AccountContact, value) = false) Then
				Me._AccountContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage", DbType:="Real")>  _
	Public Property Brokerage() As System.Nullable(Of Single)
		Get
			Return Me._Brokerage
		End Get
		Set
			If (Me._Brokerage.Equals(value) = false) Then
				Me._Brokerage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrokerageCal", DbType:="VarChar(2)")>  _
	Public Property BrokerageCal() As String
		Get
			Return Me._BrokerageCal
		End Get
		Set
			If (String.Equals(Me._BrokerageCal, value) = false) Then
				Me._BrokerageCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent", DbType:="Float")>  _
	Public Property ORCommissionPercent() As System.Nullable(Of Double)
		Get
			Return Me._ORCommissionPercent
		End Get
		Set
			If (Me._ORCommissionPercent.Equals(value) = false) Then
				Me._ORCommissionPercent = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORInCal", DbType:="VarChar(2)")>  _
	Public Property ORInCal() As String
		Get
			Return Me._ORInCal
		End Get
		Set
			If (String.Equals(Me._ORInCal, value) = false) Then
				Me._ORInCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1", DbType:="Float")>  _
	Public Property AdminFeeIn1() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn1
		End Get
		Set
			If (Me._AdminFeeIn1.Equals(value) = false) Then
				Me._AdminFeeIn1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1Cal", DbType:="VarChar(2)")>  _
	Public Property AdminFeeIn1Cal() As String
		Get
			Return Me._AdminFeeIn1Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn1Cal, value) = false) Then
				Me._AdminFeeIn1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2", DbType:="Float")>  _
	Public Property AdminFeeIn2() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn2
		End Get
		Set
			If (Me._AdminFeeIn2.Equals(value) = false) Then
				Me._AdminFeeIn2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2Cal", DbType:="VarChar(2)")>  _
	Public Property AdminFeeIn2Cal() As String
		Get
			Return Me._AdminFeeIn2Cal
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn2Cal, value) = false) Then
				Me._AdminFeeIn2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCalFrom", DbType:="VarChar(2)")>  _
	Public Property ORCalFrom() As String
		Get
			Return Me._ORCalFrom
		End Get
		Set
			If (String.Equals(Me._ORCalFrom, value) = false) Then
				Me._ORCalFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage_display", DbType:="VarChar(31)")>  _
	Public Property Brokerage_display() As String
		Get
			Return Me._Brokerage_display
		End Get
		Set
			If (String.Equals(Me._Brokerage_display, value) = false) Then
				Me._Brokerage_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent_display", DbType:="VarChar(31)")>  _
	Public Property ORCommissionPercent_display() As String
		Get
			Return Me._ORCommissionPercent_display
		End Get
		Set
			If (String.Equals(Me._ORCommissionPercent_display, value) = false) Then
				Me._ORCommissionPercent_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1_display", DbType:="VarChar(31)")>  _
	Public Property AdminFeeIn1_display() As String
		Get
			Return Me._AdminFeeIn1_display
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn1_display, value) = false) Then
				Me._AdminFeeIn1_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2_display", DbType:="VarChar(31)")>  _
	Public Property AdminFeeIn2_display() As String
		Get
			Return Me._AdminFeeIn2_display
		End Get
		Set
			If (String.Equals(Me._AdminFeeIn2_display, value) = false) Then
				Me._AdminFeeIn2_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn_Display", DbType:="VarChar(158)")>  _
	Public Property CommIn_Display() As String
		Get
			Return Me._CommIn_Display
		End Get
		Set
			If (String.Equals(Me._CommIn_Display, value) = false) Then
				Me._CommIn_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetORFlag", DbType:="Bit")>  _
	Public Property OffsetORFlag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetORFlag
		End Get
		Set
			If (Me._OffsetORFlag.Equals(value) = false) Then
				Me._OffsetORFlag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm1Flag", DbType:="Bit")>  _
	Public Property OffsetAdm1Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetAdm1Flag
		End Get
		Set
			If (Me._OffsetAdm1Flag.Equals(value) = false) Then
				Me._OffsetAdm1Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm2Flag", DbType:="Bit")>  _
	Public Property OffsetAdm2Flag() As System.Nullable(Of Boolean)
		Get
			Return Me._OffsetAdm2Flag
		End Get
		Set
			If (Me._OffsetAdm2Flag.Equals(value) = false) Then
				Me._OffsetAdm2Flag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_AgentRiskComm_Amend")>  _
Partial Public Class V_AgentRiskComm_Amend
	
	Private _ID As Integer
	
	Private _AmendRiskID As Integer
	
	Private _Risk As String
	
	Private _Agent As String
	
	Private _Name As String
	
	Private _CommOutCal As String
	
	Private _CommissionOut As System.Nullable(Of Double)
	
	Private _OROutCal As String
	
	Private _OROut As System.Nullable(Of Double)
	
	Private _AdminOut1Cal As String
	
	Private _AdminOut1 As System.Nullable(Of Double)
	
	Private _AdminOut2Cal As String
	
	Private _AdminOut2 As System.Nullable(Of Double)
	
	Private _CommissionOut_Display As String
	
	Private _OROut_Display As String
	
	Private _AdminOut1_Display As String
	
	Private _AdminOut2_Display As String
	
	Private _OROutCalFrom As String
	
	Private _Remark As String
	
	Private _AgentGroup As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _RequestDate As System.Nullable(Of Date)
	
	Private _RequestBy As String
	
	Private _ApproveDate As System.Nullable(Of Date)
	
	Private _ApproveBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _status As String
	
	Private _InsuranceLine As String
	
	Private _Owner As String
	
	Private _Description As String
	
	Private _OverComm As Integer
	
	Private _OverOR As Integer
	
	Private _OverFee1 As Integer
	
	Private _OverFee2 As Integer
	
	Private _HasOverComm As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmendRiskID", DbType:="Int NOT NULL")>  _
	Public Property AmendRiskID() As Integer
		Get
			Return Me._AmendRiskID
		End Get
		Set
			If ((Me._AmendRiskID = value)  _
						= false) Then
				Me._AmendRiskID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me._Agent = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutCal", DbType:="VarChar(2)")>  _
	Public Property CommOutCal() As String
		Get
			Return Me._CommOutCal
		End Get
		Set
			If (String.Equals(Me._CommOutCal, value) = false) Then
				Me._CommOutCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut", DbType:="Float")>  _
	Public Property CommissionOut() As System.Nullable(Of Double)
		Get
			Return Me._CommissionOut
		End Get
		Set
			If (Me._CommissionOut.Equals(value) = false) Then
				Me._CommissionOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCal", DbType:="VarChar(2)")>  _
	Public Property OROutCal() As String
		Get
			Return Me._OROutCal
		End Get
		Set
			If (String.Equals(Me._OROutCal, value) = false) Then
				Me._OROutCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut", DbType:="Float")>  _
	Public Property OROut() As System.Nullable(Of Double)
		Get
			Return Me._OROut
		End Get
		Set
			If (Me._OROut.Equals(value) = false) Then
				Me._OROut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1Cal", DbType:="VarChar(2)")>  _
	Public Property AdminOut1Cal() As String
		Get
			Return Me._AdminOut1Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut1Cal, value) = false) Then
				Me._AdminOut1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1", DbType:="Float")>  _
	Public Property AdminOut1() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut1
		End Get
		Set
			If (Me._AdminOut1.Equals(value) = false) Then
				Me._AdminOut1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2Cal", DbType:="VarChar(2)")>  _
	Public Property AdminOut2Cal() As String
		Get
			Return Me._AdminOut2Cal
		End Get
		Set
			If (String.Equals(Me._AdminOut2Cal, value) = false) Then
				Me._AdminOut2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2", DbType:="Float")>  _
	Public Property AdminOut2() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut2
		End Get
		Set
			If (Me._AdminOut2.Equals(value) = false) Then
				Me._AdminOut2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut_Display", DbType:="VarChar(31)")>  _
	Public Property CommissionOut_Display() As String
		Get
			Return Me._CommissionOut_Display
		End Get
		Set
			If (String.Equals(Me._CommissionOut_Display, value) = false) Then
				Me._CommissionOut_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut_Display", DbType:="VarChar(31)")>  _
	Public Property OROut_Display() As String
		Get
			Return Me._OROut_Display
		End Get
		Set
			If (String.Equals(Me._OROut_Display, value) = false) Then
				Me._OROut_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1_Display", DbType:="VarChar(31)")>  _
	Public Property AdminOut1_Display() As String
		Get
			Return Me._AdminOut1_Display
		End Get
		Set
			If (String.Equals(Me._AdminOut1_Display, value) = false) Then
				Me._AdminOut1_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2_Display", DbType:="VarChar(31)")>  _
	Public Property AdminOut2_Display() As String
		Get
			Return Me._AdminOut2_Display
		End Get
		Set
			If (String.Equals(Me._AdminOut2_Display, value) = false) Then
				Me._AdminOut2_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCalFrom", DbType:="VarChar(2)")>  _
	Public Property OROutCalFrom() As String
		Get
			Return Me._OROutCalFrom
		End Get
		Set
			If (String.Equals(Me._OROutCalFrom, value) = false) Then
				Me._OROutCalFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(50)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentGroup", DbType:="NVarChar(50)")>  _
	Public Property AgentGroup() As String
		Get
			Return Me._AgentGroup
		End Get
		Set
			If (String.Equals(Me._AgentGroup, value) = false) Then
				Me._AgentGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="DateTime")>  _
	Public Property RequestDate() As System.Nullable(Of Date)
		Get
			Return Me._RequestDate
		End Get
		Set
			If (Me._RequestDate.Equals(value) = false) Then
				Me._RequestDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(50)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me._RequestBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveDate", DbType:="DateTime")>  _
	Public Property ApproveDate() As System.Nullable(Of Date)
		Get
			Return Me._ApproveDate
		End Get
		Set
			If (Me._ApproveDate.Equals(value) = false) Then
				Me._ApproveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproveBy", DbType:="VarChar(50)")>  _
	Public Property ApproveBy() As String
		Get
			Return Me._ApproveBy
		End Get
		Set
			If (String.Equals(Me._ApproveBy, value) = false) Then
				Me._ApproveBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me._ModifyBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me._status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverComm", DbType:="Int NOT NULL")>  _
	Public Property OverComm() As Integer
		Get
			Return Me._OverComm
		End Get
		Set
			If ((Me._OverComm = value)  _
						= false) Then
				Me._OverComm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverOR", DbType:="Int NOT NULL")>  _
	Public Property OverOR() As Integer
		Get
			Return Me._OverOR
		End Get
		Set
			If ((Me._OverOR = value)  _
						= false) Then
				Me._OverOR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverFee1", DbType:="Int NOT NULL")>  _
	Public Property OverFee1() As Integer
		Get
			Return Me._OverFee1
		End Get
		Set
			If ((Me._OverFee1 = value)  _
						= false) Then
				Me._OverFee1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverFee2", DbType:="Int NOT NULL")>  _
	Public Property OverFee2() As Integer
		Get
			Return Me._OverFee2
		End Get
		Set
			If ((Me._OverFee2 = value)  _
						= false) Then
				Me._OverFee2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasOverComm", DbType:="Bit")>  _
	Public Property HasOverComm() As System.Nullable(Of Boolean)
		Get
			Return Me._HasOverComm
		End Get
		Set
			If (Me._HasOverComm.Equals(value) = false) Then
				Me._HasOverComm = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblNoticeDetail")>  _
Partial Public Class tblNoticeDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NoticeDataID As Integer
	
	Private _NoticeID As Integer
	
	Private _Code As String
	
	Private _SendDate As System.Nullable(Of Date)
	
	Private _f01 As String
	
	Private _f02 As String
	
	Private _f03 As String
	
	Private _f04 As String
	
	Private _f05 As String
	
	Private _f06 As String
	
	Private _f07 As String
	
	Private _f08 As String
	
	Private _f09 As String
	
	Private _f10 As String
	
	Private _f11 As String
	
	Private _f12 As String
	
	Private _f13 As String
	
	Private _f14 As String
	
	Private _f15 As String
	
	Private _f16 As String
	
	Private _f17 As String
	
	Private _f18 As String
	
	Private _f19 As String
	
	Private _f20 As String
	
	Private _tblNoticeHeader As EntityRef(Of tblNoticeHeader)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNoticeDataIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNoticeDataIDChanged()
    End Sub
    Partial Private Sub OnNoticeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNoticeIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnSendDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSendDateChanged()
    End Sub
    Partial Private Sub Onf01Changing(value As String)
    End Sub
    Partial Private Sub Onf01Changed()
    End Sub
    Partial Private Sub Onf02Changing(value As String)
    End Sub
    Partial Private Sub Onf02Changed()
    End Sub
    Partial Private Sub Onf03Changing(value As String)
    End Sub
    Partial Private Sub Onf03Changed()
    End Sub
    Partial Private Sub Onf04Changing(value As String)
    End Sub
    Partial Private Sub Onf04Changed()
    End Sub
    Partial Private Sub Onf05Changing(value As String)
    End Sub
    Partial Private Sub Onf05Changed()
    End Sub
    Partial Private Sub Onf06Changing(value As String)
    End Sub
    Partial Private Sub Onf06Changed()
    End Sub
    Partial Private Sub Onf07Changing(value As String)
    End Sub
    Partial Private Sub Onf07Changed()
    End Sub
    Partial Private Sub Onf08Changing(value As String)
    End Sub
    Partial Private Sub Onf08Changed()
    End Sub
    Partial Private Sub Onf09Changing(value As String)
    End Sub
    Partial Private Sub Onf09Changed()
    End Sub
    Partial Private Sub Onf10Changing(value As String)
    End Sub
    Partial Private Sub Onf10Changed()
    End Sub
    Partial Private Sub Onf11Changing(value As String)
    End Sub
    Partial Private Sub Onf11Changed()
    End Sub
    Partial Private Sub Onf12Changing(value As String)
    End Sub
    Partial Private Sub Onf12Changed()
    End Sub
    Partial Private Sub Onf13Changing(value As String)
    End Sub
    Partial Private Sub Onf13Changed()
    End Sub
    Partial Private Sub Onf14Changing(value As String)
    End Sub
    Partial Private Sub Onf14Changed()
    End Sub
    Partial Private Sub Onf15Changing(value As String)
    End Sub
    Partial Private Sub Onf15Changed()
    End Sub
    Partial Private Sub Onf16Changing(value As String)
    End Sub
    Partial Private Sub Onf16Changed()
    End Sub
    Partial Private Sub Onf17Changing(value As String)
    End Sub
    Partial Private Sub Onf17Changed()
    End Sub
    Partial Private Sub Onf18Changing(value As String)
    End Sub
    Partial Private Sub Onf18Changed()
    End Sub
    Partial Private Sub Onf19Changing(value As String)
    End Sub
    Partial Private Sub Onf19Changed()
    End Sub
    Partial Private Sub Onf20Changing(value As String)
    End Sub
    Partial Private Sub Onf20Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblNoticeHeader = CType(Nothing, EntityRef(Of tblNoticeHeader))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeDataID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NoticeDataID() As Integer
		Get
			Return Me._NoticeDataID
		End Get
		Set
			If ((Me._NoticeDataID = value)  _
						= false) Then
				Me.OnNoticeDataIDChanging(value)
				Me.SendPropertyChanging
				Me._NoticeDataID = value
				Me.SendPropertyChanged("NoticeDataID")
				Me.OnNoticeDataIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeID", DbType:="Int NOT NULL")>  _
	Public Property NoticeID() As Integer
		Get
			Return Me._NoticeID
		End Get
		Set
			If ((Me._NoticeID = value)  _
						= false) Then
				If Me._tblNoticeHeader.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnNoticeIDChanging(value)
				Me.SendPropertyChanging
				Me._NoticeID = value
				Me.SendPropertyChanged("NoticeID")
				Me.OnNoticeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendDate", DbType:="DateTime")>  _
	Public Property SendDate() As System.Nullable(Of Date)
		Get
			Return Me._SendDate
		End Get
		Set
			If (Me._SendDate.Equals(value) = false) Then
				Me.OnSendDateChanging(value)
				Me.SendPropertyChanging
				Me._SendDate = value
				Me.SendPropertyChanged("SendDate")
				Me.OnSendDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f01", DbType:="VarChar(MAX)")>  _
	Public Property f01() As String
		Get
			Return Me._f01
		End Get
		Set
			If (String.Equals(Me._f01, value) = false) Then
				Me.Onf01Changing(value)
				Me.SendPropertyChanging
				Me._f01 = value
				Me.SendPropertyChanged("f01")
				Me.Onf01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f02", DbType:="VarChar(MAX)")>  _
	Public Property f02() As String
		Get
			Return Me._f02
		End Get
		Set
			If (String.Equals(Me._f02, value) = false) Then
				Me.Onf02Changing(value)
				Me.SendPropertyChanging
				Me._f02 = value
				Me.SendPropertyChanged("f02")
				Me.Onf02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f03", DbType:="VarChar(MAX)")>  _
	Public Property f03() As String
		Get
			Return Me._f03
		End Get
		Set
			If (String.Equals(Me._f03, value) = false) Then
				Me.Onf03Changing(value)
				Me.SendPropertyChanging
				Me._f03 = value
				Me.SendPropertyChanged("f03")
				Me.Onf03Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f04", DbType:="VarChar(MAX)")>  _
	Public Property f04() As String
		Get
			Return Me._f04
		End Get
		Set
			If (String.Equals(Me._f04, value) = false) Then
				Me.Onf04Changing(value)
				Me.SendPropertyChanging
				Me._f04 = value
				Me.SendPropertyChanged("f04")
				Me.Onf04Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f05", DbType:="VarChar(MAX)")>  _
	Public Property f05() As String
		Get
			Return Me._f05
		End Get
		Set
			If (String.Equals(Me._f05, value) = false) Then
				Me.Onf05Changing(value)
				Me.SendPropertyChanging
				Me._f05 = value
				Me.SendPropertyChanged("f05")
				Me.Onf05Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f06", DbType:="VarChar(MAX)")>  _
	Public Property f06() As String
		Get
			Return Me._f06
		End Get
		Set
			If (String.Equals(Me._f06, value) = false) Then
				Me.Onf06Changing(value)
				Me.SendPropertyChanging
				Me._f06 = value
				Me.SendPropertyChanged("f06")
				Me.Onf06Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f07", DbType:="VarChar(MAX)")>  _
	Public Property f07() As String
		Get
			Return Me._f07
		End Get
		Set
			If (String.Equals(Me._f07, value) = false) Then
				Me.Onf07Changing(value)
				Me.SendPropertyChanging
				Me._f07 = value
				Me.SendPropertyChanged("f07")
				Me.Onf07Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f08", DbType:="VarChar(MAX)")>  _
	Public Property f08() As String
		Get
			Return Me._f08
		End Get
		Set
			If (String.Equals(Me._f08, value) = false) Then
				Me.Onf08Changing(value)
				Me.SendPropertyChanging
				Me._f08 = value
				Me.SendPropertyChanged("f08")
				Me.Onf08Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f09", DbType:="VarChar(MAX)")>  _
	Public Property f09() As String
		Get
			Return Me._f09
		End Get
		Set
			If (String.Equals(Me._f09, value) = false) Then
				Me.Onf09Changing(value)
				Me.SendPropertyChanging
				Me._f09 = value
				Me.SendPropertyChanged("f09")
				Me.Onf09Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f10", DbType:="VarChar(MAX)")>  _
	Public Property f10() As String
		Get
			Return Me._f10
		End Get
		Set
			If (String.Equals(Me._f10, value) = false) Then
				Me.Onf10Changing(value)
				Me.SendPropertyChanging
				Me._f10 = value
				Me.SendPropertyChanged("f10")
				Me.Onf10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f11", DbType:="VarChar(MAX)")>  _
	Public Property f11() As String
		Get
			Return Me._f11
		End Get
		Set
			If (String.Equals(Me._f11, value) = false) Then
				Me.Onf11Changing(value)
				Me.SendPropertyChanging
				Me._f11 = value
				Me.SendPropertyChanged("f11")
				Me.Onf11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f12", DbType:="VarChar(MAX)")>  _
	Public Property f12() As String
		Get
			Return Me._f12
		End Get
		Set
			If (String.Equals(Me._f12, value) = false) Then
				Me.Onf12Changing(value)
				Me.SendPropertyChanging
				Me._f12 = value
				Me.SendPropertyChanged("f12")
				Me.Onf12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f13", DbType:="VarChar(MAX)")>  _
	Public Property f13() As String
		Get
			Return Me._f13
		End Get
		Set
			If (String.Equals(Me._f13, value) = false) Then
				Me.Onf13Changing(value)
				Me.SendPropertyChanging
				Me._f13 = value
				Me.SendPropertyChanged("f13")
				Me.Onf13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f14", DbType:="VarChar(MAX)")>  _
	Public Property f14() As String
		Get
			Return Me._f14
		End Get
		Set
			If (String.Equals(Me._f14, value) = false) Then
				Me.Onf14Changing(value)
				Me.SendPropertyChanging
				Me._f14 = value
				Me.SendPropertyChanged("f14")
				Me.Onf14Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f15", DbType:="VarChar(MAX)")>  _
	Public Property f15() As String
		Get
			Return Me._f15
		End Get
		Set
			If (String.Equals(Me._f15, value) = false) Then
				Me.Onf15Changing(value)
				Me.SendPropertyChanging
				Me._f15 = value
				Me.SendPropertyChanged("f15")
				Me.Onf15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f16", DbType:="VarChar(MAX)")>  _
	Public Property f16() As String
		Get
			Return Me._f16
		End Get
		Set
			If (String.Equals(Me._f16, value) = false) Then
				Me.Onf16Changing(value)
				Me.SendPropertyChanging
				Me._f16 = value
				Me.SendPropertyChanged("f16")
				Me.Onf16Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f17", DbType:="VarChar(MAX)")>  _
	Public Property f17() As String
		Get
			Return Me._f17
		End Get
		Set
			If (String.Equals(Me._f17, value) = false) Then
				Me.Onf17Changing(value)
				Me.SendPropertyChanging
				Me._f17 = value
				Me.SendPropertyChanged("f17")
				Me.Onf17Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f18", DbType:="VarChar(MAX)")>  _
	Public Property f18() As String
		Get
			Return Me._f18
		End Get
		Set
			If (String.Equals(Me._f18, value) = false) Then
				Me.Onf18Changing(value)
				Me.SendPropertyChanging
				Me._f18 = value
				Me.SendPropertyChanged("f18")
				Me.Onf18Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f19", DbType:="VarChar(MAX)")>  _
	Public Property f19() As String
		Get
			Return Me._f19
		End Get
		Set
			If (String.Equals(Me._f19, value) = false) Then
				Me.Onf19Changing(value)
				Me.SendPropertyChanging
				Me._f19 = value
				Me.SendPropertyChanged("f19")
				Me.Onf19Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f20", DbType:="VarChar(MAX)")>  _
	Public Property f20() As String
		Get
			Return Me._f20
		End Get
		Set
			If (String.Equals(Me._f20, value) = false) Then
				Me.Onf20Changing(value)
				Me.SendPropertyChanging
				Me._f20 = value
				Me.SendPropertyChanged("f20")
				Me.Onf20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblNoticeHeader_tblNoticeDetail", Storage:="_tblNoticeHeader", ThisKey:="NoticeID", OtherKey:="NoticeID", IsForeignKey:=true)>  _
	Public Property tblNoticeHeader() As tblNoticeHeader
		Get
			Return Me._tblNoticeHeader.Entity
		End Get
		Set
			Dim previousValue As tblNoticeHeader = Me._tblNoticeHeader.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblNoticeHeader.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblNoticeHeader.Entity = Nothing
					previousValue.tblNoticeDetails.Remove(Me)
				End If
				Me._tblNoticeHeader.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblNoticeDetails.Add(Me)
					Me._NoticeID = value.NoticeID
				Else
					Me._NoticeID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("tblNoticeHeader")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblNoticeHeader")>  _
Partial Public Class tblNoticeHeader
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NoticeID As Integer
	
	Private _NoticeTitle As String
	
	Private _NoticeCode As String
	
	Private _NoticeDate As System.Nullable(Of Date)
	
	Private _DueDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _SendBy As String
	
	Private _SendDate As System.Nullable(Of Date)
	
	Private _ReSendBy As String
	
	Private _ReSendDate As System.Nullable(Of Date)
	
	Private _tblNoticeDetails As EntitySet(Of tblNoticeDetail)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNoticeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNoticeIDChanged()
    End Sub
    Partial Private Sub OnNoticeTitleChanging(value As String)
    End Sub
    Partial Private Sub OnNoticeTitleChanged()
    End Sub
    Partial Private Sub OnNoticeCodeChanging(value As String)
    End Sub
    Partial Private Sub OnNoticeCodeChanged()
    End Sub
    Partial Private Sub OnNoticeDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNoticeDateChanged()
    End Sub
    Partial Private Sub OnDueDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDueDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnSendByChanging(value As String)
    End Sub
    Partial Private Sub OnSendByChanged()
    End Sub
    Partial Private Sub OnSendDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSendDateChanged()
    End Sub
    Partial Private Sub OnReSendByChanging(value As String)
    End Sub
    Partial Private Sub OnReSendByChanged()
    End Sub
    Partial Private Sub OnReSendDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReSendDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblNoticeDetails = New EntitySet(Of tblNoticeDetail)(AddressOf Me.attach_tblNoticeDetails, AddressOf Me.detach_tblNoticeDetails)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NoticeID() As Integer
		Get
			Return Me._NoticeID
		End Get
		Set
			If ((Me._NoticeID = value)  _
						= false) Then
				Me.OnNoticeIDChanging(value)
				Me.SendPropertyChanging
				Me._NoticeID = value
				Me.SendPropertyChanged("NoticeID")
				Me.OnNoticeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeTitle", DbType:="VarChar(255)")>  _
	Public Property NoticeTitle() As String
		Get
			Return Me._NoticeTitle
		End Get
		Set
			If (String.Equals(Me._NoticeTitle, value) = false) Then
				Me.OnNoticeTitleChanging(value)
				Me.SendPropertyChanging
				Me._NoticeTitle = value
				Me.SendPropertyChanged("NoticeTitle")
				Me.OnNoticeTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeCode", DbType:="VarChar(8)")>  _
	Public Property NoticeCode() As String
		Get
			Return Me._NoticeCode
		End Get
		Set
			If (String.Equals(Me._NoticeCode, value) = false) Then
				Me.OnNoticeCodeChanging(value)
				Me.SendPropertyChanging
				Me._NoticeCode = value
				Me.SendPropertyChanged("NoticeCode")
				Me.OnNoticeCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeDate", DbType:="DateTime")>  _
	Public Property NoticeDate() As System.Nullable(Of Date)
		Get
			Return Me._NoticeDate
		End Get
		Set
			If (Me._NoticeDate.Equals(value) = false) Then
				Me.OnNoticeDateChanging(value)
				Me.SendPropertyChanging
				Me._NoticeDate = value
				Me.SendPropertyChanged("NoticeDate")
				Me.OnNoticeDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DueDate", DbType:="DateTime")>  _
	Public Property DueDate() As System.Nullable(Of Date)
		Get
			Return Me._DueDate
		End Get
		Set
			If (Me._DueDate.Equals(value) = false) Then
				Me.OnDueDateChanging(value)
				Me.SendPropertyChanging
				Me._DueDate = value
				Me.SendPropertyChanged("DueDate")
				Me.OnDueDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendBy", DbType:="VarChar(50)")>  _
	Public Property SendBy() As String
		Get
			Return Me._SendBy
		End Get
		Set
			If (String.Equals(Me._SendBy, value) = false) Then
				Me.OnSendByChanging(value)
				Me.SendPropertyChanging
				Me._SendBy = value
				Me.SendPropertyChanged("SendBy")
				Me.OnSendByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendDate", DbType:="DateTime")>  _
	Public Property SendDate() As System.Nullable(Of Date)
		Get
			Return Me._SendDate
		End Get
		Set
			If (Me._SendDate.Equals(value) = false) Then
				Me.OnSendDateChanging(value)
				Me.SendPropertyChanging
				Me._SendDate = value
				Me.SendPropertyChanged("SendDate")
				Me.OnSendDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReSendBy", DbType:="VarChar(50)")>  _
	Public Property ReSendBy() As String
		Get
			Return Me._ReSendBy
		End Get
		Set
			If (String.Equals(Me._ReSendBy, value) = false) Then
				Me.OnReSendByChanging(value)
				Me.SendPropertyChanging
				Me._ReSendBy = value
				Me.SendPropertyChanged("ReSendBy")
				Me.OnReSendByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReSendDate", DbType:="DateTime")>  _
	Public Property ReSendDate() As System.Nullable(Of Date)
		Get
			Return Me._ReSendDate
		End Get
		Set
			If (Me._ReSendDate.Equals(value) = false) Then
				Me.OnReSendDateChanging(value)
				Me.SendPropertyChanging
				Me._ReSendDate = value
				Me.SendPropertyChanged("ReSendDate")
				Me.OnReSendDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblNoticeHeader_tblNoticeDetail", Storage:="_tblNoticeDetails", ThisKey:="NoticeID", OtherKey:="NoticeID")>  _
	Public Property tblNoticeDetails() As EntitySet(Of tblNoticeDetail)
		Get
			Return Me._tblNoticeDetails
		End Get
		Set
			Me._tblNoticeDetails.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblNoticeDetails(ByVal entity As tblNoticeDetail)
		Me.SendPropertyChanging
		entity.tblNoticeHeader = Me
	End Sub
	
	Private Sub detach_tblNoticeDetails(ByVal entity As tblNoticeDetail)
		Me.SendPropertyChanging
		entity.tblNoticeHeader = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_NoticeDetail")>  _
Partial Public Class V_NoticeDetail
	
	Private _NoticeDataID As Integer
	
	Private _NoticeID As Integer
	
	Private _NoticeCode As String
	
	Private _Code As String
	
	Private _Name As String
	
	Private _SendDate As System.Nullable(Of Date)
	
	Private _f01 As String
	
	Private _f02 As String
	
	Private _f03 As String
	
	Private _f04 As String
	
	Private _f05 As String
	
	Private _f06 As String
	
	Private _f07 As String
	
	Private _f08 As String
	
	Private _f09 As String
	
	Private _f10 As String
	
	Private _f11 As String
	
	Private _f12 As String
	
	Private _f13 As String
	
	Private _f14 As String
	
	Private _f15 As String
	
	Private _f16 As String
	
	Private _f17 As String
	
	Private _f18 As String
	
	Private _f19 As String
	
	Private _f20 As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeDataID", DbType:="Int NOT NULL")>  _
	Public Property NoticeDataID() As Integer
		Get
			Return Me._NoticeDataID
		End Get
		Set
			If ((Me._NoticeDataID = value)  _
						= false) Then
				Me._NoticeDataID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeID", DbType:="Int NOT NULL")>  _
	Public Property NoticeID() As Integer
		Get
			Return Me._NoticeID
		End Get
		Set
			If ((Me._NoticeID = value)  _
						= false) Then
				Me._NoticeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeCode", DbType:="VarChar(8)")>  _
	Public Property NoticeCode() As String
		Get
			Return Me._NoticeCode
		End Get
		Set
			If (String.Equals(Me._NoticeCode, value) = false) Then
				Me._NoticeCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendDate", DbType:="DateTime")>  _
	Public Property SendDate() As System.Nullable(Of Date)
		Get
			Return Me._SendDate
		End Get
		Set
			If (Me._SendDate.Equals(value) = false) Then
				Me._SendDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f01", DbType:="VarChar(MAX)")>  _
	Public Property f01() As String
		Get
			Return Me._f01
		End Get
		Set
			If (String.Equals(Me._f01, value) = false) Then
				Me._f01 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f02", DbType:="VarChar(MAX)")>  _
	Public Property f02() As String
		Get
			Return Me._f02
		End Get
		Set
			If (String.Equals(Me._f02, value) = false) Then
				Me._f02 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f03", DbType:="VarChar(MAX)")>  _
	Public Property f03() As String
		Get
			Return Me._f03
		End Get
		Set
			If (String.Equals(Me._f03, value) = false) Then
				Me._f03 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f04", DbType:="VarChar(MAX)")>  _
	Public Property f04() As String
		Get
			Return Me._f04
		End Get
		Set
			If (String.Equals(Me._f04, value) = false) Then
				Me._f04 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f05", DbType:="VarChar(MAX)")>  _
	Public Property f05() As String
		Get
			Return Me._f05
		End Get
		Set
			If (String.Equals(Me._f05, value) = false) Then
				Me._f05 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f06", DbType:="VarChar(MAX)")>  _
	Public Property f06() As String
		Get
			Return Me._f06
		End Get
		Set
			If (String.Equals(Me._f06, value) = false) Then
				Me._f06 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f07", DbType:="VarChar(MAX)")>  _
	Public Property f07() As String
		Get
			Return Me._f07
		End Get
		Set
			If (String.Equals(Me._f07, value) = false) Then
				Me._f07 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f08", DbType:="VarChar(MAX)")>  _
	Public Property f08() As String
		Get
			Return Me._f08
		End Get
		Set
			If (String.Equals(Me._f08, value) = false) Then
				Me._f08 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f09", DbType:="VarChar(MAX)")>  _
	Public Property f09() As String
		Get
			Return Me._f09
		End Get
		Set
			If (String.Equals(Me._f09, value) = false) Then
				Me._f09 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f10", DbType:="VarChar(MAX)")>  _
	Public Property f10() As String
		Get
			Return Me._f10
		End Get
		Set
			If (String.Equals(Me._f10, value) = false) Then
				Me._f10 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f11", DbType:="VarChar(MAX)")>  _
	Public Property f11() As String
		Get
			Return Me._f11
		End Get
		Set
			If (String.Equals(Me._f11, value) = false) Then
				Me._f11 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f12", DbType:="VarChar(MAX)")>  _
	Public Property f12() As String
		Get
			Return Me._f12
		End Get
		Set
			If (String.Equals(Me._f12, value) = false) Then
				Me._f12 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f13", DbType:="VarChar(MAX)")>  _
	Public Property f13() As String
		Get
			Return Me._f13
		End Get
		Set
			If (String.Equals(Me._f13, value) = false) Then
				Me._f13 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f14", DbType:="VarChar(MAX)")>  _
	Public Property f14() As String
		Get
			Return Me._f14
		End Get
		Set
			If (String.Equals(Me._f14, value) = false) Then
				Me._f14 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f15", DbType:="VarChar(MAX)")>  _
	Public Property f15() As String
		Get
			Return Me._f15
		End Get
		Set
			If (String.Equals(Me._f15, value) = false) Then
				Me._f15 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f16", DbType:="VarChar(MAX)")>  _
	Public Property f16() As String
		Get
			Return Me._f16
		End Get
		Set
			If (String.Equals(Me._f16, value) = false) Then
				Me._f16 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f17", DbType:="VarChar(MAX)")>  _
	Public Property f17() As String
		Get
			Return Me._f17
		End Get
		Set
			If (String.Equals(Me._f17, value) = false) Then
				Me._f17 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f18", DbType:="VarChar(MAX)")>  _
	Public Property f18() As String
		Get
			Return Me._f18
		End Get
		Set
			If (String.Equals(Me._f18, value) = false) Then
				Me._f18 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f19", DbType:="VarChar(MAX)")>  _
	Public Property f19() As String
		Get
			Return Me._f19
		End Get
		Set
			If (String.Equals(Me._f19, value) = false) Then
				Me._f19 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f20", DbType:="VarChar(MAX)")>  _
	Public Property f20() As String
		Get
			Return Me._f20
		End Get
		Set
			If (String.Equals(Me._f20, value) = false) Then
				Me._f20 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Campaign_CommIn")>  _
Partial Public Class V_Campaign_CommIn
	
	Private _CommInID As Integer
	
	Private _Owner As String
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _Underwriter As String
	
	Private _AccountContact As String
	
	Private _Name As String
	
	Private _Commission As System.Nullable(Of Double)
	
	Private _CommissionCal As String
	
	Private _ORCommission As System.Nullable(Of Double)
	
	Private _ORCommissionCal As String
	
	Private _Admin1 As System.Nullable(Of Double)
	
	Private _Admin1Cal As String
	
	Private _Admin2 As System.Nullable(Of Double)
	
	Private _Admin2Cal As String
	
	Private _InsuranceLine As String
	
	Private _Commission_display As String
	
	Private _ORCommission_display As String
	
	Private _Admin1_display As String
	
	Private _Admin2_display As String
	
	Private _CommIn_Display As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _DupFromID As System.Nullable(Of Integer)
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommInID", DbType:="Int NOT NULL")>  _
	Public Property CommInID() As Integer
		Get
			Return Me._CommInID
		End Get
		Set
			If ((Me._CommInID = value)  _
						= false) Then
				Me._CommInID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me._Owner = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me._Underwriter = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountContact", DbType:="NVarChar(70)")>  _
	Public Property AccountContact() As String
		Get
			Return Me._AccountContact
		End Get
		Set
			If (String.Equals(Me._AccountContact, value) = false) Then
				Me._AccountContact = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission", DbType:="Float")>  _
	Public Property Commission() As System.Nullable(Of Double)
		Get
			Return Me._Commission
		End Get
		Set
			If (Me._Commission.Equals(value) = false) Then
				Me._Commission = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionCal", DbType:="VarChar(2)")>  _
	Public Property CommissionCal() As String
		Get
			Return Me._CommissionCal
		End Get
		Set
			If (String.Equals(Me._CommissionCal, value) = false) Then
				Me._CommissionCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission", DbType:="Float")>  _
	Public Property ORCommission() As System.Nullable(Of Double)
		Get
			Return Me._ORCommission
		End Get
		Set
			If (Me._ORCommission.Equals(value) = false) Then
				Me._ORCommission = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionCal", DbType:="VarChar(2)")>  _
	Public Property ORCommissionCal() As String
		Get
			Return Me._ORCommissionCal
		End Get
		Set
			If (String.Equals(Me._ORCommissionCal, value) = false) Then
				Me._ORCommissionCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1", DbType:="Float")>  _
	Public Property Admin1() As System.Nullable(Of Double)
		Get
			Return Me._Admin1
		End Get
		Set
			If (Me._Admin1.Equals(value) = false) Then
				Me._Admin1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1Cal", DbType:="VarChar(2)")>  _
	Public Property Admin1Cal() As String
		Get
			Return Me._Admin1Cal
		End Get
		Set
			If (String.Equals(Me._Admin1Cal, value) = false) Then
				Me._Admin1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2", DbType:="Float")>  _
	Public Property Admin2() As System.Nullable(Of Double)
		Get
			Return Me._Admin2
		End Get
		Set
			If (Me._Admin2.Equals(value) = false) Then
				Me._Admin2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2Cal", DbType:="VarChar(2)")>  _
	Public Property Admin2Cal() As String
		Get
			Return Me._Admin2Cal
		End Get
		Set
			If (String.Equals(Me._Admin2Cal, value) = false) Then
				Me._Admin2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property InsuranceLine() As String
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If (String.Equals(Me._InsuranceLine, value) = false) Then
				Me._InsuranceLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission_display", DbType:="VarChar(31)")>  _
	Public Property Commission_display() As String
		Get
			Return Me._Commission_display
		End Get
		Set
			If (String.Equals(Me._Commission_display, value) = false) Then
				Me._Commission_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission_display", DbType:="VarChar(31)")>  _
	Public Property ORCommission_display() As String
		Get
			Return Me._ORCommission_display
		End Get
		Set
			If (String.Equals(Me._ORCommission_display, value) = false) Then
				Me._ORCommission_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1_display", DbType:="VarChar(31)")>  _
	Public Property Admin1_display() As String
		Get
			Return Me._Admin1_display
		End Get
		Set
			If (String.Equals(Me._Admin1_display, value) = false) Then
				Me._Admin1_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2_display", DbType:="VarChar(31)")>  _
	Public Property Admin2_display() As String
		Get
			Return Me._Admin2_display
		End Get
		Set
			If (String.Equals(Me._Admin2_display, value) = false) Then
				Me._Admin2_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommIn_Display", DbType:="VarChar(161)")>  _
	Public Property CommIn_Display() As String
		Get
			Return Me._CommIn_Display
		End Get
		Set
			If (String.Equals(Me._CommIn_Display, value) = false) Then
				Me._CommIn_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me._ExpiryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DupFromID", DbType:="Int")>  _
	Public Property DupFromID() As System.Nullable(Of Integer)
		Get
			Return Me._DupFromID
		End Get
		Set
			If (Me._DupFromID.Equals(value) = false) Then
				Me._DupFromID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				Me._CampaignID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Campaign_CommOut")>  _
Partial Public Class V_Campaign_CommOut
	
	Private _CommOutID As Integer
	
	Private _CommInID As System.Nullable(Of Integer)
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Private _Risk As String
	
	Private _Agent As String
	
	Private _Name As String
	
	Private _Commission As System.Nullable(Of Double)
	
	Private _CommissionCal As String
	
	Private _ORCommission As System.Nullable(Of Double)
	
	Private _ORCommissionCal As String
	
	Private _Admin1 As System.Nullable(Of Double)
	
	Private _Admin1Cal As String
	
	Private _Admin2 As System.Nullable(Of Double)
	
	Private _Admin2Cal As String
	
	Private _Commission_Display As String
	
	Private _ORCommission_Display As String
	
	Private _Admin1_Display As String
	
	Private _Admin2_Display As String
	
	Private _Remark As String
	
	Private _AgentGroup As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _OverComm As Integer
	
	Private _OverOR As Integer
	
	Private _OverFee1 As Integer
	
	Private _OverFee2 As Integer
	
	Private _HasOverComm As System.Nullable(Of Boolean)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutID", DbType:="Int NOT NULL")>  _
	Public Property CommOutID() As Integer
		Get
			Return Me._CommOutID
		End Get
		Set
			If ((Me._CommOutID = value)  _
						= false) Then
				Me._CommOutID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommInID", DbType:="Int")>  _
	Public Property CommInID() As System.Nullable(Of Integer)
		Get
			Return Me._CommInID
		End Get
		Set
			If (Me._CommInID.Equals(value) = false) Then
				Me._CommInID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				Me._CampaignID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me._Agent = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission", DbType:="Float")>  _
	Public Property Commission() As System.Nullable(Of Double)
		Get
			Return Me._Commission
		End Get
		Set
			If (Me._Commission.Equals(value) = false) Then
				Me._Commission = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionCal", DbType:="VarChar(2)")>  _
	Public Property CommissionCal() As String
		Get
			Return Me._CommissionCal
		End Get
		Set
			If (String.Equals(Me._CommissionCal, value) = false) Then
				Me._CommissionCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission", DbType:="Float")>  _
	Public Property ORCommission() As System.Nullable(Of Double)
		Get
			Return Me._ORCommission
		End Get
		Set
			If (Me._ORCommission.Equals(value) = false) Then
				Me._ORCommission = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionCal", DbType:="VarChar(2)")>  _
	Public Property ORCommissionCal() As String
		Get
			Return Me._ORCommissionCal
		End Get
		Set
			If (String.Equals(Me._ORCommissionCal, value) = false) Then
				Me._ORCommissionCal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1", DbType:="Float")>  _
	Public Property Admin1() As System.Nullable(Of Double)
		Get
			Return Me._Admin1
		End Get
		Set
			If (Me._Admin1.Equals(value) = false) Then
				Me._Admin1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1Cal", DbType:="VarChar(2)")>  _
	Public Property Admin1Cal() As String
		Get
			Return Me._Admin1Cal
		End Get
		Set
			If (String.Equals(Me._Admin1Cal, value) = false) Then
				Me._Admin1Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2", DbType:="Float")>  _
	Public Property Admin2() As System.Nullable(Of Double)
		Get
			Return Me._Admin2
		End Get
		Set
			If (Me._Admin2.Equals(value) = false) Then
				Me._Admin2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2Cal", DbType:="VarChar(2)")>  _
	Public Property Admin2Cal() As String
		Get
			Return Me._Admin2Cal
		End Get
		Set
			If (String.Equals(Me._Admin2Cal, value) = false) Then
				Me._Admin2Cal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission_Display", DbType:="VarChar(31)")>  _
	Public Property Commission_Display() As String
		Get
			Return Me._Commission_Display
		End Get
		Set
			If (String.Equals(Me._Commission_Display, value) = false) Then
				Me._Commission_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission_Display", DbType:="VarChar(31)")>  _
	Public Property ORCommission_Display() As String
		Get
			Return Me._ORCommission_Display
		End Get
		Set
			If (String.Equals(Me._ORCommission_Display, value) = false) Then
				Me._ORCommission_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1_Display", DbType:="VarChar(31)")>  _
	Public Property Admin1_Display() As String
		Get
			Return Me._Admin1_Display
		End Get
		Set
			If (String.Equals(Me._Admin1_Display, value) = false) Then
				Me._Admin1_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2_Display", DbType:="VarChar(31)")>  _
	Public Property Admin2_Display() As String
		Get
			Return Me._Admin2_Display
		End Get
		Set
			If (String.Equals(Me._Admin2_Display, value) = false) Then
				Me._Admin2_Display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(50)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentGroup", DbType:="NVarChar(50)")>  _
	Public Property AgentGroup() As String
		Get
			Return Me._AgentGroup
		End Get
		Set
			If (String.Equals(Me._AgentGroup, value) = false) Then
				Me._AgentGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me._CreationDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me._CreationBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverComm", DbType:="Int NOT NULL")>  _
	Public Property OverComm() As Integer
		Get
			Return Me._OverComm
		End Get
		Set
			If ((Me._OverComm = value)  _
						= false) Then
				Me._OverComm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverOR", DbType:="Int NOT NULL")>  _
	Public Property OverOR() As Integer
		Get
			Return Me._OverOR
		End Get
		Set
			If ((Me._OverOR = value)  _
						= false) Then
				Me._OverOR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverFee1", DbType:="Int NOT NULL")>  _
	Public Property OverFee1() As Integer
		Get
			Return Me._OverFee1
		End Get
		Set
			If ((Me._OverFee1 = value)  _
						= false) Then
				Me._OverFee1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverFee2", DbType:="Int NOT NULL")>  _
	Public Property OverFee2() As Integer
		Get
			Return Me._OverFee2
		End Get
		Set
			If ((Me._OverFee2 = value)  _
						= false) Then
				Me._OverFee2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasOverComm", DbType:="Bit")>  _
	Public Property HasOverComm() As System.Nullable(Of Boolean)
		Get
			Return Me._HasOverComm
		End Get
		Set
			If (Me._HasOverComm.Equals(value) = false) Then
				Me._HasOverComm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me._ExpiryDate = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Campaign_Commission")>  _
Partial Public Class V_Campaign_Commission
	
	Private _ID As System.Nullable(Of Integer)
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _Risk As String
	
	Private _Code As String
	
	Private _Name As String
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _CampaignID As System.Nullable(Of Integer)
	
	Private _Commission_display As String
	
	Private _ORCommission_display As String
	
	Private _Admin1_display As String
	
	Private _Admin2_display As String
	
	Private _Remark As String
	
	Private _HasOverComm As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int")>  _
	Public Property ID() As System.Nullable(Of Integer)
		Get
			Return Me._ID
		End Get
		Set
			If (Me._ID.Equals(value) = false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me._ParentID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="VarChar(8)")>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me._Risk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(70)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me._ExpiryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CampaignID", DbType:="Int")>  _
	Public Property CampaignID() As System.Nullable(Of Integer)
		Get
			Return Me._CampaignID
		End Get
		Set
			If (Me._CampaignID.Equals(value) = false) Then
				Me._CampaignID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Commission_display", DbType:="VarChar(31)")>  _
	Public Property Commission_display() As String
		Get
			Return Me._Commission_display
		End Get
		Set
			If (String.Equals(Me._Commission_display, value) = false) Then
				Me._Commission_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommission_display", DbType:="VarChar(31)")>  _
	Public Property ORCommission_display() As String
		Get
			Return Me._ORCommission_display
		End Get
		Set
			If (String.Equals(Me._ORCommission_display, value) = false) Then
				Me._ORCommission_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1_display", DbType:="VarChar(31)")>  _
	Public Property Admin1_display() As String
		Get
			Return Me._Admin1_display
		End Get
		Set
			If (String.Equals(Me._Admin1_display, value) = false) Then
				Me._Admin1_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2_display", DbType:="VarChar(31)")>  _
	Public Property Admin2_display() As String
		Get
			Return Me._Admin2_display
		End Get
		Set
			If (String.Equals(Me._Admin2_display, value) = false) Then
				Me._Admin2_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(50)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasOverComm", DbType:="Bit")>  _
	Public Property HasOverComm() As System.Nullable(Of Boolean)
		Get
			Return Me._HasOverComm
		End Get
		Set
			If (Me._HasOverComm.Equals(value) = false) Then
				Me._HasOverComm = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_BillingD500Notification")>  _
Partial Public Class V_BillingD500Notification
	
	Private _NotificationID As Integer
	
	Private _AgentCode As String
	
	Private _AgentName As String
	
	Private _AccountNo As String
	
	Private _Mailto As String
	
	Private _f01 As String
	
	Private _f02 As String
	
	Private _f03 As String
	
	Private _f04 As String
	
	Private _f05 As String
	
	Private _f06 As String
	
	Private _f07 As String
	
	Private _f08 As String
	
	Private _f09 As String
	
	Private _f10 As String
	
	Private _f11 As String
	
	Private _New As System.Nullable(Of Integer)
	
	Private _Renew As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotificationID", DbType:="Int NOT NULL")>  _
	Public Property NotificationID() As Integer
		Get
			Return Me._NotificationID
		End Get
		Set
			If ((Me._NotificationID = value)  _
						= false) Then
				Me._NotificationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property AgentCode() As String
		Get
			Return Me._AgentCode
		End Get
		Set
			If (String.Equals(Me._AgentCode, value) = false) Then
				Me._AgentCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentName", DbType:="VarChar(255)")>  _
	Public Property AgentName() As String
		Get
			Return Me._AgentName
		End Get
		Set
			If (String.Equals(Me._AgentName, value) = false) Then
				Me._AgentName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountNo", DbType:="VarChar(13)")>  _
	Public Property AccountNo() As String
		Get
			Return Me._AccountNo
		End Get
		Set
			If (String.Equals(Me._AccountNo, value) = false) Then
				Me._AccountNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mailto", DbType:="VarChar(MAX)")>  _
	Public Property Mailto() As String
		Get
			Return Me._Mailto
		End Get
		Set
			If (String.Equals(Me._Mailto, value) = false) Then
				Me._Mailto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f01", DbType:="VarChar(MAX)")>  _
	Public Property f01() As String
		Get
			Return Me._f01
		End Get
		Set
			If (String.Equals(Me._f01, value) = false) Then
				Me._f01 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f02", DbType:="VarChar(MAX)")>  _
	Public Property f02() As String
		Get
			Return Me._f02
		End Get
		Set
			If (String.Equals(Me._f02, value) = false) Then
				Me._f02 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f03", DbType:="VarChar(MAX)")>  _
	Public Property f03() As String
		Get
			Return Me._f03
		End Get
		Set
			If (String.Equals(Me._f03, value) = false) Then
				Me._f03 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f04", DbType:="VarChar(MAX)")>  _
	Public Property f04() As String
		Get
			Return Me._f04
		End Get
		Set
			If (String.Equals(Me._f04, value) = false) Then
				Me._f04 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f05", DbType:="VarChar(MAX)")>  _
	Public Property f05() As String
		Get
			Return Me._f05
		End Get
		Set
			If (String.Equals(Me._f05, value) = false) Then
				Me._f05 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f06", DbType:="VarChar(MAX)")>  _
	Public Property f06() As String
		Get
			Return Me._f06
		End Get
		Set
			If (String.Equals(Me._f06, value) = false) Then
				Me._f06 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f07", DbType:="VarChar(MAX)")>  _
	Public Property f07() As String
		Get
			Return Me._f07
		End Get
		Set
			If (String.Equals(Me._f07, value) = false) Then
				Me._f07 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f08", DbType:="VarChar(MAX)")>  _
	Public Property f08() As String
		Get
			Return Me._f08
		End Get
		Set
			If (String.Equals(Me._f08, value) = false) Then
				Me._f08 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f09", DbType:="VarChar(MAX)")>  _
	Public Property f09() As String
		Get
			Return Me._f09
		End Get
		Set
			If (String.Equals(Me._f09, value) = false) Then
				Me._f09 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f10", DbType:="VarChar(MAX)")>  _
	Public Property f10() As String
		Get
			Return Me._f10
		End Get
		Set
			If (String.Equals(Me._f10, value) = false) Then
				Me._f10 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f11", DbType:="VarChar(MAX)")>  _
	Public Property f11() As String
		Get
			Return Me._f11
		End Get
		Set
			If (String.Equals(Me._f11, value) = false) Then
				Me._f11 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="New", Storage:="_New", DbType:="Int")>  _
	Public Property [New]() As System.Nullable(Of Integer)
		Get
			Return Me._New
		End Get
		Set
			If (Me._New.Equals(value) = false) Then
				Me._New = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Renew", DbType:="Int")>  _
	Public Property Renew() As System.Nullable(Of Integer)
		Get
			Return Me._Renew
		End Get
		Set
			If (Me._Renew.Equals(value) = false) Then
				Me._Renew = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_BillingNMTNotification")>  _
Partial Public Class V_BillingNMTNotification
	
	Private _NotificationID As Integer
	
	Private _AgentCode As String
	
	Private _AgentName As String
	
	Private _AccountNo As String
	
	Private _Mailto As String
	
	Private _Records As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotificationID", DbType:="Int NOT NULL")>  _
	Public Property NotificationID() As Integer
		Get
			Return Me._NotificationID
		End Get
		Set
			If ((Me._NotificationID = value)  _
						= false) Then
				Me._NotificationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property AgentCode() As String
		Get
			Return Me._AgentCode
		End Get
		Set
			If (String.Equals(Me._AgentCode, value) = false) Then
				Me._AgentCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentName", DbType:="VarChar(MAX)")>  _
	Public Property AgentName() As String
		Get
			Return Me._AgentName
		End Get
		Set
			If (String.Equals(Me._AgentName, value) = false) Then
				Me._AgentName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountNo", DbType:="VarChar(13)")>  _
	Public Property AccountNo() As String
		Get
			Return Me._AccountNo
		End Get
		Set
			If (String.Equals(Me._AccountNo, value) = false) Then
				Me._AccountNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mailto", DbType:="VarChar(MAX)")>  _
	Public Property Mailto() As String
		Get
			Return Me._Mailto
		End Get
		Set
			If (String.Equals(Me._Mailto, value) = false) Then
				Me._Mailto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Records", DbType:="Int")>  _
	Public Property Records() As System.Nullable(Of Integer)
		Get
			Return Me._Records
		End Get
		Set
			If (Me._Records.Equals(value) = false) Then
				Me._Records = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblNoticeMailContact")>  _
Partial Public Class tblNoticeMailContact
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _NoticeCode As String
	
	Private _Code As String
	
	Private _Name As String
	
	Private _MailTo As String
	
	Private _MailCC As String
	
	Private _AccountNo As String
	
	Private _ContactName As String
	
	Private _ContactAddress As String
	
	Private _ContactTel As String
	
	Private _ContactFax As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _M1Code As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNoticeCodeChanging(value As String)
    End Sub
    Partial Private Sub OnNoticeCodeChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnMailToChanging(value As String)
    End Sub
    Partial Private Sub OnMailToChanged()
    End Sub
    Partial Private Sub OnMailCCChanging(value As String)
    End Sub
    Partial Private Sub OnMailCCChanged()
    End Sub
    Partial Private Sub OnAccountNoChanging(value As String)
    End Sub
    Partial Private Sub OnAccountNoChanged()
    End Sub
    Partial Private Sub OnContactNameChanging(value As String)
    End Sub
    Partial Private Sub OnContactNameChanged()
    End Sub
    Partial Private Sub OnContactAddressChanging(value As String)
    End Sub
    Partial Private Sub OnContactAddressChanged()
    End Sub
    Partial Private Sub OnContactTelChanging(value As String)
    End Sub
    Partial Private Sub OnContactTelChanged()
    End Sub
    Partial Private Sub OnContactFaxChanging(value As String)
    End Sub
    Partial Private Sub OnContactFaxChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnM1CodeChanging(value As String)
    End Sub
    Partial Private Sub OnM1CodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeCode", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property NoticeCode() As String
		Get
			Return Me._NoticeCode
		End Get
		Set
			If (String.Equals(Me._NoticeCode, value) = false) Then
				Me.OnNoticeCodeChanging(value)
				Me.SendPropertyChanging
				Me._NoticeCode = value
				Me.SendPropertyChanged("NoticeCode")
				Me.OnNoticeCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailTo", DbType:="VarChar(MAX)")>  _
	Public Property MailTo() As String
		Get
			Return Me._MailTo
		End Get
		Set
			If (String.Equals(Me._MailTo, value) = false) Then
				Me.OnMailToChanging(value)
				Me.SendPropertyChanging
				Me._MailTo = value
				Me.SendPropertyChanged("MailTo")
				Me.OnMailToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailCC", DbType:="VarChar(MAX)")>  _
	Public Property MailCC() As String
		Get
			Return Me._MailCC
		End Get
		Set
			If (String.Equals(Me._MailCC, value) = false) Then
				Me.OnMailCCChanging(value)
				Me.SendPropertyChanging
				Me._MailCC = value
				Me.SendPropertyChanged("MailCC")
				Me.OnMailCCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountNo", DbType:="VarChar(13)")>  _
	Public Property AccountNo() As String
		Get
			Return Me._AccountNo
		End Get
		Set
			If (String.Equals(Me._AccountNo, value) = false) Then
				Me.OnAccountNoChanging(value)
				Me.SendPropertyChanging
				Me._AccountNo = value
				Me.SendPropertyChanged("AccountNo")
				Me.OnAccountNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactName", DbType:="VarChar(255)")>  _
	Public Property ContactName() As String
		Get
			Return Me._ContactName
		End Get
		Set
			If (String.Equals(Me._ContactName, value) = false) Then
				Me.OnContactNameChanging(value)
				Me.SendPropertyChanging
				Me._ContactName = value
				Me.SendPropertyChanged("ContactName")
				Me.OnContactNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactAddress", DbType:="VarChar(255)")>  _
	Public Property ContactAddress() As String
		Get
			Return Me._ContactAddress
		End Get
		Set
			If (String.Equals(Me._ContactAddress, value) = false) Then
				Me.OnContactAddressChanging(value)
				Me.SendPropertyChanging
				Me._ContactAddress = value
				Me.SendPropertyChanged("ContactAddress")
				Me.OnContactAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactTel", DbType:="VarChar(255)")>  _
	Public Property ContactTel() As String
		Get
			Return Me._ContactTel
		End Get
		Set
			If (String.Equals(Me._ContactTel, value) = false) Then
				Me.OnContactTelChanging(value)
				Me.SendPropertyChanging
				Me._ContactTel = value
				Me.SendPropertyChanged("ContactTel")
				Me.OnContactTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactFax", DbType:="VarChar(255)")>  _
	Public Property ContactFax() As String
		Get
			Return Me._ContactFax
		End Get
		Set
			If (String.Equals(Me._ContactFax, value) = false) Then
				Me.OnContactFaxChanging(value)
				Me.SendPropertyChanging
				Me._ContactFax = value
				Me.SendPropertyChanged("ContactFax")
				Me.OnContactFaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_M1Code", DbType:="VarChar(50)")>  _
	Public Property M1Code() As String
		Get
			Return Me._M1Code
		End Get
		Set
			If (String.Equals(Me._M1Code, value) = false) Then
				Me.OnM1CodeChanging(value)
				Me.SendPropertyChanging
				Me._M1Code = value
				Me.SendPropertyChanged("M1Code")
				Me.OnM1CodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_WeeklyClaimDealerNotification")>  _
Partial Public Class V_WeeklyClaimDealerNotification
	
	Private _NotificationID As Integer
	
	Private _AgentCode As String
	
	Private _AgentName As String
	
	Private _AccountNo As String
	
	Private _Mailto As String
	
	Private _Records As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotificationID", DbType:="Int NOT NULL")>  _
	Public Property NotificationID() As Integer
		Get
			Return Me._NotificationID
		End Get
		Set
			If ((Me._NotificationID = value)  _
						= false) Then
				Me._NotificationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property AgentCode() As String
		Get
			Return Me._AgentCode
		End Get
		Set
			If (String.Equals(Me._AgentCode, value) = false) Then
				Me._AgentCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentName", DbType:="VarChar(255)")>  _
	Public Property AgentName() As String
		Get
			Return Me._AgentName
		End Get
		Set
			If (String.Equals(Me._AgentName, value) = false) Then
				Me._AgentName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountNo", DbType:="VarChar(13)")>  _
	Public Property AccountNo() As String
		Get
			Return Me._AccountNo
		End Get
		Set
			If (String.Equals(Me._AccountNo, value) = false) Then
				Me._AccountNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mailto", DbType:="VarChar(MAX)")>  _
	Public Property Mailto() As String
		Get
			Return Me._Mailto
		End Get
		Set
			If (String.Equals(Me._Mailto, value) = false) Then
				Me._Mailto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Records", DbType:="Int")>  _
	Public Property Records() As System.Nullable(Of Integer)
		Get
			Return Me._Records
		End Get
		Set
			If (Me._Records.Equals(value) = false) Then
				Me._Records = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_BillingDealerNotification")>  _
Partial Public Class V_BillingDealerNotification
	
	Private _NotificationID As Integer
	
	Private _AgentCode As String
	
	Private _AgentName As String
	
	Private _AccountNo As String
	
	Private _Mailto As String
	
	Private _Records As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotificationID", DbType:="Int NOT NULL")>  _
	Public Property NotificationID() As Integer
		Get
			Return Me._NotificationID
		End Get
		Set
			If ((Me._NotificationID = value)  _
						= false) Then
				Me._NotificationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property AgentCode() As String
		Get
			Return Me._AgentCode
		End Get
		Set
			If (String.Equals(Me._AgentCode, value) = false) Then
				Me._AgentCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentName", DbType:="VarChar(255)")>  _
	Public Property AgentName() As String
		Get
			Return Me._AgentName
		End Get
		Set
			If (String.Equals(Me._AgentName, value) = false) Then
				Me._AgentName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountNo", DbType:="VarChar(13)")>  _
	Public Property AccountNo() As String
		Get
			Return Me._AccountNo
		End Get
		Set
			If (String.Equals(Me._AccountNo, value) = false) Then
				Me._AccountNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mailto", DbType:="VarChar(MAX)")>  _
	Public Property Mailto() As String
		Get
			Return Me._Mailto
		End Get
		Set
			If (String.Equals(Me._Mailto, value) = false) Then
				Me._Mailto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Records", DbType:="Int")>  _
	Public Property Records() As System.Nullable(Of Integer)
		Get
			Return Me._Records
		End Get
		Set
			If (Me._Records.Equals(value) = false) Then
				Me._Records = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_BillingCBCNotification")>  _
Partial Public Class V_BillingCBCNotification
	
	Private _NotificationID As Integer
	
	Private _AgentCode As String
	
	Private _AgentName As String
	
	Private _AccountNo As String
	
	Private _Mailto As String
	
	Private _Records As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotificationID", DbType:="Int NOT NULL")>  _
	Public Property NotificationID() As Integer
		Get
			Return Me._NotificationID
		End Get
		Set
			If ((Me._NotificationID = value)  _
						= false) Then
				Me._NotificationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property AgentCode() As String
		Get
			Return Me._AgentCode
		End Get
		Set
			If (String.Equals(Me._AgentCode, value) = false) Then
				Me._AgentCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentName", DbType:="VarChar(255)")>  _
	Public Property AgentName() As String
		Get
			Return Me._AgentName
		End Get
		Set
			If (String.Equals(Me._AgentName, value) = false) Then
				Me._AgentName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountNo", DbType:="VarChar(13)")>  _
	Public Property AccountNo() As String
		Get
			Return Me._AccountNo
		End Get
		Set
			If (String.Equals(Me._AccountNo, value) = false) Then
				Me._AccountNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mailto", DbType:="VarChar(MAX)")>  _
	Public Property Mailto() As String
		Get
			Return Me._Mailto
		End Get
		Set
			If (String.Equals(Me._Mailto, value) = false) Then
				Me._Mailto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Records", DbType:="Int")>  _
	Public Property Records() As System.Nullable(Of Integer)
		Get
			Return Me._Records
		End Get
		Set
			If (Me._Records.Equals(value) = false) Then
				Me._Records = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_BillingCBCNotification2")>  _
Partial Public Class V_BillingCBCNotification2
	
	Private _NotificationID As Integer
	
	Private _AgentCode As String
	
	Private _AgentName As String
	
	Private _AccountNo As String
	
	Private _Mailto As String
	
	Private _Records As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotificationID", DbType:="Int NOT NULL")>  _
	Public Property NotificationID() As Integer
		Get
			Return Me._NotificationID
		End Get
		Set
			If ((Me._NotificationID = value)  _
						= false) Then
				Me._NotificationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property AgentCode() As String
		Get
			Return Me._AgentCode
		End Get
		Set
			If (String.Equals(Me._AgentCode, value) = false) Then
				Me._AgentCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentName", DbType:="VarChar(255)")>  _
	Public Property AgentName() As String
		Get
			Return Me._AgentName
		End Get
		Set
			If (String.Equals(Me._AgentName, value) = false) Then
				Me._AgentName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountNo", DbType:="VarChar(13)")>  _
	Public Property AccountNo() As String
		Get
			Return Me._AccountNo
		End Get
		Set
			If (String.Equals(Me._AccountNo, value) = false) Then
				Me._AccountNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mailto", DbType:="VarChar(MAX)")>  _
	Public Property Mailto() As String
		Get
			Return Me._Mailto
		End Get
		Set
			If (String.Equals(Me._Mailto, value) = false) Then
				Me._Mailto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Records", DbType:="Int")>  _
	Public Property Records() As System.Nullable(Of Integer)
		Get
			Return Me._Records
		End Get
		Set
			If (Me._Records.Equals(value) = false) Then
				Me._Records = value
			End If
		End Set
	End Property
End Class
