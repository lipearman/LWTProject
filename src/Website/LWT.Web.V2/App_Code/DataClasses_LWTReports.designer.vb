'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="LWTReports")>  _
Partial Public Class DataClasses_LWTReportsDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertV_CLAIM_MONTHLY_DATA(instance As V_CLAIM_MONTHLY_DATA)
    End Sub
  Partial Private Sub UpdateV_CLAIM_MONTHLY_DATA(instance As V_CLAIM_MONTHLY_DATA)
    End Sub
  Partial Private Sub DeleteV_CLAIM_MONTHLY_DATA(instance As V_CLAIM_MONTHLY_DATA)
    End Sub
  Partial Private Sub Insertnapd(instance As napd)
    End Sub
  Partial Private Sub Updatenapd(instance As napd)
    End Sub
  Partial Private Sub Deletenapd(instance As napd)
    End Sub
  Partial Private Sub InsertNewFY13FY15NoCN(instance As NewFY13FY15NoCN)
    End Sub
  Partial Private Sub UpdateNewFY13FY15NoCN(instance As NewFY13FY15NoCN)
    End Sub
  Partial Private Sub DeleteNewFY13FY15NoCN(instance As NewFY13FY15NoCN)
    End Sub
  Partial Private Sub InsertSIBIS2015(instance As SIBIS2015)
    End Sub
  Partial Private Sub UpdateSIBIS2015(instance As SIBIS2015)
    End Sub
  Partial Private Sub DeleteSIBIS2015(instance As SIBIS2015)
    End Sub
  Partial Private Sub InserttblReport(instance As tblReport)
    End Sub
  Partial Private Sub UpdatetblReport(instance As tblReport)
    End Sub
  Partial Private Sub DeletetblReport(instance As tblReport)
    End Sub
  Partial Private Sub InserttblReport_Assignment(instance As tblReport_Assignment)
    End Sub
  Partial Private Sub UpdatetblReport_Assignment(instance As tblReport_Assignment)
    End Sub
  Partial Private Sub DeletetblReport_Assignment(instance As tblReport_Assignment)
    End Sub
  Partial Private Sub InserttblReport_DashBoard(instance As tblReport_DashBoard)
    End Sub
  Partial Private Sub UpdatetblReport_DashBoard(instance As tblReport_DashBoard)
    End Sub
  Partial Private Sub DeletetblReport_DashBoard(instance As tblReport_DashBoard)
    End Sub
  Partial Private Sub InserttblReport_MasterData(instance As tblReport_MasterData)
    End Sub
  Partial Private Sub UpdatetblReport_MasterData(instance As tblReport_MasterData)
    End Sub
  Partial Private Sub DeletetblReport_MasterData(instance As tblReport_MasterData)
    End Sub
  Partial Private Sub InserttblReport_VIEW(instance As tblReport_VIEW)
    End Sub
  Partial Private Sub UpdatetblReport_VIEW(instance As tblReport_VIEW)
    End Sub
  Partial Private Sub DeletetblReport_VIEW(instance As tblReport_VIEW)
    End Sub
  Partial Private Sub InserttblReportMaster_Template(instance As tblReportMaster_Template)
    End Sub
  Partial Private Sub UpdatetblReportMaster_Template(instance As tblReportMaster_Template)
    End Sub
  Partial Private Sub DeletetblReportMaster_Template(instance As tblReportMaster_Template)
    End Sub
  Partial Private Sub InserttblReportUser_Template(instance As tblReportUser_Template)
    End Sub
  Partial Private Sub UpdatetblReportUser_Template(instance As tblReportUser_Template)
    End Sub
  Partial Private Sub DeletetblReportUser_Template(instance As tblReportUser_Template)
    End Sub
  Partial Private Sub InserttblReportMaster_FilterValue(instance As tblReportMaster_FilterValue)
    End Sub
  Partial Private Sub UpdatetblReportMaster_FilterValue(instance As tblReportMaster_FilterValue)
    End Sub
  Partial Private Sub DeletetblReportMaster_FilterValue(instance As tblReportMaster_FilterValue)
    End Sub
  Partial Private Sub InserttblReportUser_FilterValue(instance As tblReportUser_FilterValue)
    End Sub
  Partial Private Sub UpdatetblReportUser_FilterValue(instance As tblReportUser_FilterValue)
    End Sub
  Partial Private Sub DeletetblReportUser_FilterValue(instance As tblReportUser_FilterValue)
    End Sub
  Partial Private Sub InsertNAPD_SUMMARY(instance As NAPD_SUMMARY)
    End Sub
  Partial Private Sub UpdateNAPD_SUMMARY(instance As NAPD_SUMMARY)
    End Sub
  Partial Private Sub DeleteNAPD_SUMMARY(instance As NAPD_SUMMARY)
    End Sub
  Partial Private Sub InserttblReport_VIEWs_Field(instance As tblReport_VIEWs_Field)
    End Sub
  Partial Private Sub UpdatetblReport_VIEWs_Field(instance As tblReport_VIEWs_Field)
    End Sub
  Partial Private Sub DeletetblReport_VIEWs_Field(instance As tblReport_VIEWs_Field)
    End Sub
  Partial Private Sub InsertV_Nissan(instance As V_Nissan)
    End Sub
  Partial Private Sub UpdateV_Nissan(instance As V_Nissan)
    End Sub
  Partial Private Sub DeleteV_Nissan(instance As V_Nissan)
    End Sub
  Partial Private Sub InserttblBudget_APD_NetIncome(instance As tblBudget_APD_NetIncome)
    End Sub
  Partial Private Sub UpdatetblBudget_APD_NetIncome(instance As tblBudget_APD_NetIncome)
    End Sub
  Partial Private Sub DeletetblBudget_APD_NetIncome(instance As tblBudget_APD_NetIncome)
    End Sub
  Partial Private Sub InserttblMazdaClaim(instance As tblMazdaClaim)
    End Sub
  Partial Private Sub UpdatetblMazdaClaim(instance As tblMazdaClaim)
    End Sub
  Partial Private Sub DeletetblMazdaClaim(instance As tblMazdaClaim)
    End Sub
  Partial Private Sub InserttblMazdaNew(instance As tblMazdaNew)
    End Sub
  Partial Private Sub UpdatetblMazdaNew(instance As tblMazdaNew)
    End Sub
  Partial Private Sub DeletetblMazdaNew(instance As tblMazdaNew)
    End Sub
  Partial Private Sub InsertSummitRawData(instance As SummitRawData)
    End Sub
  Partial Private Sub UpdateSummitRawData(instance As SummitRawData)
    End Sub
  Partial Private Sub DeleteSummitRawData(instance As SummitRawData)
    End Sub
  Partial Private Sub InserttblMazdaRawData(instance As tblMazdaRawData)
    End Sub
  Partial Private Sub UpdatetblMazdaRawData(instance As tblMazdaRawData)
    End Sub
  Partial Private Sub DeletetblMazdaRawData(instance As tblMazdaRawData)
    End Sub
  Partial Private Sub InsertV_CustomDashBoard01(instance As V_CustomDashBoard01)
    End Sub
  Partial Private Sub UpdateV_CustomDashBoard01(instance As V_CustomDashBoard01)
    End Sub
  Partial Private Sub DeleteV_CustomDashBoard01(instance As V_CustomDashBoard01)
    End Sub
  Partial Private Sub InsertRawDataProduction(instance As RawDataProduction)
    End Sub
  Partial Private Sub UpdateRawDataProduction(instance As RawDataProduction)
    End Sub
  Partial Private Sub DeleteRawDataProduction(instance As RawDataProduction)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("LWTReportsConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property V_CLAIM_MONTHLY_DATAs() As System.Data.Linq.Table(Of V_CLAIM_MONTHLY_DATA)
		Get
			Return Me.GetTable(Of V_CLAIM_MONTHLY_DATA)
		End Get
	End Property
	
	Public ReadOnly Property napds() As System.Data.Linq.Table(Of napd)
		Get
			Return Me.GetTable(Of napd)
		End Get
	End Property
	
	Public ReadOnly Property NewFY13FY15NoCNs() As System.Data.Linq.Table(Of NewFY13FY15NoCN)
		Get
			Return Me.GetTable(Of NewFY13FY15NoCN)
		End Get
	End Property
	
	Public ReadOnly Property SIBIS2015s() As System.Data.Linq.Table(Of SIBIS2015)
		Get
			Return Me.GetTable(Of SIBIS2015)
		End Get
	End Property
	
	Public ReadOnly Property tblReports() As System.Data.Linq.Table(Of tblReport)
		Get
			Return Me.GetTable(Of tblReport)
		End Get
	End Property
	
	Public ReadOnly Property tblReport_Assignments() As System.Data.Linq.Table(Of tblReport_Assignment)
		Get
			Return Me.GetTable(Of tblReport_Assignment)
		End Get
	End Property
	
	Public ReadOnly Property tblReport_DashBoards() As System.Data.Linq.Table(Of tblReport_DashBoard)
		Get
			Return Me.GetTable(Of tblReport_DashBoard)
		End Get
	End Property
	
	Public ReadOnly Property tblReport_MasterDatas() As System.Data.Linq.Table(Of tblReport_MasterData)
		Get
			Return Me.GetTable(Of tblReport_MasterData)
		End Get
	End Property
	
	Public ReadOnly Property tblReport_VIEWs() As System.Data.Linq.Table(Of tblReport_VIEW)
		Get
			Return Me.GetTable(Of tblReport_VIEW)
		End Get
	End Property
	
	Public ReadOnly Property tblReportMaster_Templates() As System.Data.Linq.Table(Of tblReportMaster_Template)
		Get
			Return Me.GetTable(Of tblReportMaster_Template)
		End Get
	End Property
	
	Public ReadOnly Property tblReportUser_Templates() As System.Data.Linq.Table(Of tblReportUser_Template)
		Get
			Return Me.GetTable(Of tblReportUser_Template)
		End Get
	End Property
	
	Public ReadOnly Property V_REPORT_ASSIGNMENTs() As System.Data.Linq.Table(Of V_REPORT_ASSIGNMENT)
		Get
			Return Me.GetTable(Of V_REPORT_ASSIGNMENT)
		End Get
	End Property
	
	Public ReadOnly Property V_REPORT_BIs() As System.Data.Linq.Table(Of V_REPORT_BI)
		Get
			Return Me.GetTable(Of V_REPORT_BI)
		End Get
	End Property
	
	Public ReadOnly Property V_REPORT_DBs() As System.Data.Linq.Table(Of V_REPORT_DB)
		Get
			Return Me.GetTable(Of V_REPORT_DB)
		End Get
	End Property
	
	Public ReadOnly Property V_REPORT_MASTER_TEMPLATEs() As System.Data.Linq.Table(Of V_REPORT_MASTER_TEMPLATE)
		Get
			Return Me.GetTable(Of V_REPORT_MASTER_TEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property V_REPORT_USER_TEMPLATEs() As System.Data.Linq.Table(Of V_REPORT_USER_TEMPLATE)
		Get
			Return Me.GetTable(Of V_REPORT_USER_TEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property V_NAPD_SUMMARies() As System.Data.Linq.Table(Of V_NAPD_SUMMARY)
		Get
			Return Me.GetTable(Of V_NAPD_SUMMARY)
		End Get
	End Property
	
	Public ReadOnly Property tblReportMaster_FilterValues() As System.Data.Linq.Table(Of tblReportMaster_FilterValue)
		Get
			Return Me.GetTable(Of tblReportMaster_FilterValue)
		End Get
	End Property
	
	Public ReadOnly Property tblReportUser_FilterValues() As System.Data.Linq.Table(Of tblReportUser_FilterValue)
		Get
			Return Me.GetTable(Of tblReportUser_FilterValue)
		End Get
	End Property
	
	Public ReadOnly Property NAPD_SUMMARies() As System.Data.Linq.Table(Of NAPD_SUMMARY)
		Get
			Return Me.GetTable(Of NAPD_SUMMARY)
		End Get
	End Property
	
	Public ReadOnly Property tblReport_VIEWs_Fields() As System.Data.Linq.Table(Of tblReport_VIEWs_Field)
		Get
			Return Me.GetTable(Of tblReport_VIEWs_Field)
		End Get
	End Property
	
	Public ReadOnly Property V_Nissans() As System.Data.Linq.Table(Of V_Nissan)
		Get
			Return Me.GetTable(Of V_Nissan)
		End Get
	End Property
	
	Public ReadOnly Property tblBudget_APD_NetIncomes() As System.Data.Linq.Table(Of tblBudget_APD_NetIncome)
		Get
			Return Me.GetTable(Of tblBudget_APD_NetIncome)
		End Get
	End Property
	
	Public ReadOnly Property tblMazdaClaims() As System.Data.Linq.Table(Of tblMazdaClaim)
		Get
			Return Me.GetTable(Of tblMazdaClaim)
		End Get
	End Property
	
	Public ReadOnly Property tblMazdaNews() As System.Data.Linq.Table(Of tblMazdaNew)
		Get
			Return Me.GetTable(Of tblMazdaNew)
		End Get
	End Property
	
	Public ReadOnly Property SummitRawDatas() As System.Data.Linq.Table(Of SummitRawData)
		Get
			Return Me.GetTable(Of SummitRawData)
		End Get
	End Property
	
	Public ReadOnly Property tblMazdaRawDatas() As System.Data.Linq.Table(Of tblMazdaRawData)
		Get
			Return Me.GetTable(Of tblMazdaRawData)
		End Get
	End Property
	
	Public ReadOnly Property V_CustomDashBoard01s() As System.Data.Linq.Table(Of V_CustomDashBoard01)
		Get
			Return Me.GetTable(Of V_CustomDashBoard01)
		End Get
	End Property
	
	Public ReadOnly Property RawDataProductions() As System.Data.Linq.Table(Of RawDataProduction)
		Get
			Return Me.GetTable(Of RawDataProduction)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_CLAIM_MONTHLY_DATA")>  _
Partial Public Class V_CLAIM_MONTHLY_DATA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecNo As Integer
	
	Private _FullCustomerName As String
	
	Private _CustomerName As String
	
	Private _ClientCode As String
	
	Private _ChassisNo As String
	
	Private _CarLicence As String
	
	Private _PolicyNo As String
	
	Private _Insurance_ClaimNo As String
	
	Private _GarageProvinceTH As String
	
	Private _GarageProvinceEN As String
	
	Private _AccidentDate As System.Nullable(Of Date)
	
	Private _AccidentDateStr As String
	
	Private _AccidentPlace As String
	
	Private _ClaimGroup As String
	
	Private _IndemnityGroup As System.Nullable(Of Integer)
	
	Private _ClaimCost As System.Nullable(Of Decimal)
	
	Private _IndemnityAmount As String
	
	Private _IndemnityType As String
	
	Private _GarageName As String
	
	Private _GarageType1 As String
	
	Private _GarageType2 As String
	
	Private _InsurerName As String
	
	Private _InsurerCode As String
	
	Private _Remark1 As String
	
	Private _Remark2 As String
	
	Private _Remark3 As String
	
	Private _LotNo As String
	
	Private _CustType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecNoChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNoChanged()
    End Sub
    Partial Private Sub OnFullCustomerNameChanging(value As String)
    End Sub
    Partial Private Sub OnFullCustomerNameChanged()
    End Sub
    Partial Private Sub OnCustomerNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerNameChanged()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnChassisNoChanging(value As String)
    End Sub
    Partial Private Sub OnChassisNoChanged()
    End Sub
    Partial Private Sub OnCarLicenceChanging(value As String)
    End Sub
    Partial Private Sub OnCarLicenceChanged()
    End Sub
    Partial Private Sub OnPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyNoChanged()
    End Sub
    Partial Private Sub OnInsurance_ClaimNoChanging(value As String)
    End Sub
    Partial Private Sub OnInsurance_ClaimNoChanged()
    End Sub
    Partial Private Sub OnGarageProvinceTHChanging(value As String)
    End Sub
    Partial Private Sub OnGarageProvinceTHChanged()
    End Sub
    Partial Private Sub OnGarageProvinceENChanging(value As String)
    End Sub
    Partial Private Sub OnGarageProvinceENChanged()
    End Sub
    Partial Private Sub OnAccidentDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAccidentDateChanged()
    End Sub
    Partial Private Sub OnAccidentDateStrChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentDateStrChanged()
    End Sub
    Partial Private Sub OnAccidentPlaceChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentPlaceChanged()
    End Sub
    Partial Private Sub OnClaimGroupChanging(value As String)
    End Sub
    Partial Private Sub OnClaimGroupChanged()
    End Sub
    Partial Private Sub OnIndemnityGroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIndemnityGroupChanged()
    End Sub
    Partial Private Sub OnClaimCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnClaimCostChanged()
    End Sub
    Partial Private Sub OnIndemnityAmountChanging(value As String)
    End Sub
    Partial Private Sub OnIndemnityAmountChanged()
    End Sub
    Partial Private Sub OnIndemnityTypeChanging(value As String)
    End Sub
    Partial Private Sub OnIndemnityTypeChanged()
    End Sub
    Partial Private Sub OnGarageNameChanging(value As String)
    End Sub
    Partial Private Sub OnGarageNameChanged()
    End Sub
    Partial Private Sub OnGarageType1Changing(value As String)
    End Sub
    Partial Private Sub OnGarageType1Changed()
    End Sub
    Partial Private Sub OnGarageType2Changing(value As String)
    End Sub
    Partial Private Sub OnGarageType2Changed()
    End Sub
    Partial Private Sub OnInsurerNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerNameChanged()
    End Sub
    Partial Private Sub OnInsurerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerCodeChanged()
    End Sub
    Partial Private Sub OnRemark1Changing(value As String)
    End Sub
    Partial Private Sub OnRemark1Changed()
    End Sub
    Partial Private Sub OnRemark2Changing(value As String)
    End Sub
    Partial Private Sub OnRemark2Changed()
    End Sub
    Partial Private Sub OnRemark3Changing(value As String)
    End Sub
    Partial Private Sub OnRemark3Changed()
    End Sub
    Partial Private Sub OnLotNoChanging(value As String)
    End Sub
    Partial Private Sub OnLotNoChanged()
    End Sub
    Partial Private Sub OnCustTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCustTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNo", DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecNo() As Integer
		Get
			Return Me._RecNo
		End Get
		Set
			If ((Me._RecNo = value)  _
						= false) Then
				Me.OnRecNoChanging(value)
				Me.SendPropertyChanging
				Me._RecNo = value
				Me.SendPropertyChanged("RecNo")
				Me.OnRecNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullCustomerName", DbType:="VarChar(500)")>  _
	Public Property FullCustomerName() As String
		Get
			Return Me._FullCustomerName
		End Get
		Set
			If (String.Equals(Me._FullCustomerName, value) = false) Then
				Me.OnFullCustomerNameChanging(value)
				Me.SendPropertyChanging
				Me._FullCustomerName = value
				Me.SendPropertyChanged("FullCustomerName")
				Me.OnFullCustomerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerName", DbType:="VarChar(128)")>  _
	Public Property CustomerName() As String
		Get
			Return Me._CustomerName
		End Get
		Set
			If (String.Equals(Me._CustomerName, value) = false) Then
				Me.OnCustomerNameChanging(value)
				Me.SendPropertyChanging
				Me._CustomerName = value
				Me.SendPropertyChanged("CustomerName")
				Me.OnCustomerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="VarChar(16)")>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChassisNo", DbType:="VarChar(128)")>  _
	Public Property ChassisNo() As String
		Get
			Return Me._ChassisNo
		End Get
		Set
			If (String.Equals(Me._ChassisNo, value) = false) Then
				Me.OnChassisNoChanging(value)
				Me.SendPropertyChanging
				Me._ChassisNo = value
				Me.SendPropertyChanged("ChassisNo")
				Me.OnChassisNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarLicence", DbType:="VarChar(50)")>  _
	Public Property CarLicence() As String
		Get
			Return Me._CarLicence
		End Get
		Set
			If (String.Equals(Me._CarLicence, value) = false) Then
				Me.OnCarLicenceChanging(value)
				Me.SendPropertyChanging
				Me._CarLicence = value
				Me.SendPropertyChanged("CarLicence")
				Me.OnCarLicenceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="VarChar(50)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me.OnPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._PolicyNo = value
				Me.SendPropertyChanged("PolicyNo")
				Me.OnPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insurance_ClaimNo", DbType:="VarChar(50)")>  _
	Public Property Insurance_ClaimNo() As String
		Get
			Return Me._Insurance_ClaimNo
		End Get
		Set
			If (String.Equals(Me._Insurance_ClaimNo, value) = false) Then
				Me.OnInsurance_ClaimNoChanging(value)
				Me.SendPropertyChanging
				Me._Insurance_ClaimNo = value
				Me.SendPropertyChanged("Insurance_ClaimNo")
				Me.OnInsurance_ClaimNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageProvinceTH", DbType:="VarChar(128)")>  _
	Public Property GarageProvinceTH() As String
		Get
			Return Me._GarageProvinceTH
		End Get
		Set
			If (String.Equals(Me._GarageProvinceTH, value) = false) Then
				Me.OnGarageProvinceTHChanging(value)
				Me.SendPropertyChanging
				Me._GarageProvinceTH = value
				Me.SendPropertyChanged("GarageProvinceTH")
				Me.OnGarageProvinceTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageProvinceEN", DbType:="VarChar(128)")>  _
	Public Property GarageProvinceEN() As String
		Get
			Return Me._GarageProvinceEN
		End Get
		Set
			If (String.Equals(Me._GarageProvinceEN, value) = false) Then
				Me.OnGarageProvinceENChanging(value)
				Me.SendPropertyChanging
				Me._GarageProvinceEN = value
				Me.SendPropertyChanged("GarageProvinceEN")
				Me.OnGarageProvinceENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDate", DbType:="DateTime")>  _
	Public Property AccidentDate() As System.Nullable(Of Date)
		Get
			Return Me._AccidentDate
		End Get
		Set
			If (Me._AccidentDate.Equals(value) = false) Then
				Me.OnAccidentDateChanging(value)
				Me.SendPropertyChanging
				Me._AccidentDate = value
				Me.SendPropertyChanged("AccidentDate")
				Me.OnAccidentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDateStr", DbType:="VarChar(50)")>  _
	Public Property AccidentDateStr() As String
		Get
			Return Me._AccidentDateStr
		End Get
		Set
			If (String.Equals(Me._AccidentDateStr, value) = false) Then
				Me.OnAccidentDateStrChanging(value)
				Me.SendPropertyChanging
				Me._AccidentDateStr = value
				Me.SendPropertyChanged("AccidentDateStr")
				Me.OnAccidentDateStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace", DbType:="VarChar(MAX)")>  _
	Public Property AccidentPlace() As String
		Get
			Return Me._AccidentPlace
		End Get
		Set
			If (String.Equals(Me._AccidentPlace, value) = false) Then
				Me.OnAccidentPlaceChanging(value)
				Me.SendPropertyChanging
				Me._AccidentPlace = value
				Me.SendPropertyChanged("AccidentPlace")
				Me.OnAccidentPlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimGroup", DbType:="VarChar(50)")>  _
	Public Property ClaimGroup() As String
		Get
			Return Me._ClaimGroup
		End Get
		Set
			If (String.Equals(Me._ClaimGroup, value) = false) Then
				Me.OnClaimGroupChanging(value)
				Me.SendPropertyChanging
				Me._ClaimGroup = value
				Me.SendPropertyChanged("ClaimGroup")
				Me.OnClaimGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IndemnityGroup", DbType:="Int")>  _
	Public Property IndemnityGroup() As System.Nullable(Of Integer)
		Get
			Return Me._IndemnityGroup
		End Get
		Set
			If (Me._IndemnityGroup.Equals(value) = false) Then
				Me.OnIndemnityGroupChanging(value)
				Me.SendPropertyChanging
				Me._IndemnityGroup = value
				Me.SendPropertyChanged("IndemnityGroup")
				Me.OnIndemnityGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimCost", DbType:="Decimal(18,2)")>  _
	Public Property ClaimCost() As System.Nullable(Of Decimal)
		Get
			Return Me._ClaimCost
		End Get
		Set
			If (Me._ClaimCost.Equals(value) = false) Then
				Me.OnClaimCostChanging(value)
				Me.SendPropertyChanging
				Me._ClaimCost = value
				Me.SendPropertyChanged("ClaimCost")
				Me.OnClaimCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IndemnityAmount", DbType:="VarChar(50)")>  _
	Public Property IndemnityAmount() As String
		Get
			Return Me._IndemnityAmount
		End Get
		Set
			If (String.Equals(Me._IndemnityAmount, value) = false) Then
				Me.OnIndemnityAmountChanging(value)
				Me.SendPropertyChanging
				Me._IndemnityAmount = value
				Me.SendPropertyChanged("IndemnityAmount")
				Me.OnIndemnityAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IndemnityType", DbType:="VarChar(50)")>  _
	Public Property IndemnityType() As String
		Get
			Return Me._IndemnityType
		End Get
		Set
			If (String.Equals(Me._IndemnityType, value) = false) Then
				Me.OnIndemnityTypeChanging(value)
				Me.SendPropertyChanging
				Me._IndemnityType = value
				Me.SendPropertyChanged("IndemnityType")
				Me.OnIndemnityTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageName", DbType:="VarChar(1000)")>  _
	Public Property GarageName() As String
		Get
			Return Me._GarageName
		End Get
		Set
			If (String.Equals(Me._GarageName, value) = false) Then
				Me.OnGarageNameChanging(value)
				Me.SendPropertyChanging
				Me._GarageName = value
				Me.SendPropertyChanged("GarageName")
				Me.OnGarageNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType1", DbType:="VarChar(50)")>  _
	Public Property GarageType1() As String
		Get
			Return Me._GarageType1
		End Get
		Set
			If (String.Equals(Me._GarageType1, value) = false) Then
				Me.OnGarageType1Changing(value)
				Me.SendPropertyChanging
				Me._GarageType1 = value
				Me.SendPropertyChanged("GarageType1")
				Me.OnGarageType1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType2", DbType:="VarChar(50)")>  _
	Public Property GarageType2() As String
		Get
			Return Me._GarageType2
		End Get
		Set
			If (String.Equals(Me._GarageType2, value) = false) Then
				Me.OnGarageType2Changing(value)
				Me.SendPropertyChanging
				Me._GarageType2 = value
				Me.SendPropertyChanged("GarageType2")
				Me.OnGarageType2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerName", DbType:="VarChar(500)")>  _
	Public Property InsurerName() As String
		Get
			Return Me._InsurerName
		End Get
		Set
			If (String.Equals(Me._InsurerName, value) = false) Then
				Me.OnInsurerNameChanging(value)
				Me.SendPropertyChanging
				Me._InsurerName = value
				Me.SendPropertyChanged("InsurerName")
				Me.OnInsurerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="VarChar(50)")>  _
	Public Property InsurerCode() As String
		Get
			Return Me._InsurerCode
		End Get
		Set
			If (String.Equals(Me._InsurerCode, value) = false) Then
				Me.OnInsurerCodeChanging(value)
				Me.SendPropertyChanging
				Me._InsurerCode = value
				Me.SendPropertyChanged("InsurerCode")
				Me.OnInsurerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark1", DbType:="VarChar(500)")>  _
	Public Property Remark1() As String
		Get
			Return Me._Remark1
		End Get
		Set
			If (String.Equals(Me._Remark1, value) = false) Then
				Me.OnRemark1Changing(value)
				Me.SendPropertyChanging
				Me._Remark1 = value
				Me.SendPropertyChanged("Remark1")
				Me.OnRemark1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark2", DbType:="VarChar(500)")>  _
	Public Property Remark2() As String
		Get
			Return Me._Remark2
		End Get
		Set
			If (String.Equals(Me._Remark2, value) = false) Then
				Me.OnRemark2Changing(value)
				Me.SendPropertyChanging
				Me._Remark2 = value
				Me.SendPropertyChanged("Remark2")
				Me.OnRemark2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark3", DbType:="VarChar(500)")>  _
	Public Property Remark3() As String
		Get
			Return Me._Remark3
		End Get
		Set
			If (String.Equals(Me._Remark3, value) = false) Then
				Me.OnRemark3Changing(value)
				Me.SendPropertyChanging
				Me._Remark3 = value
				Me.SendPropertyChanged("Remark3")
				Me.OnRemark3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LotNo", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LotNo() As String
		Get
			Return Me._LotNo
		End Get
		Set
			If (String.Equals(Me._LotNo, value) = false) Then
				Me.OnLotNoChanging(value)
				Me.SendPropertyChanging
				Me._LotNo = value
				Me.SendPropertyChanged("LotNo")
				Me.OnLotNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustType", DbType:="VarChar(2)")>  _
	Public Property CustType() As String
		Get
			Return Me._CustType
		End Get
		Set
			If (String.Equals(Me._CustType, value) = false) Then
				Me.OnCustTypeChanging(value)
				Me.SendPropertyChanging
				Me._CustType = value
				Me.SendPropertyChanged("CustType")
				Me.OnCustTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.napd")>  _
Partial Public Class napd
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CODE As String
	
	Private _CLIENT As String
	
	Private _CLIENTNAME As String
	
	Private _GROUP As String
	
	Private _REFNO As String
	
	Private _TYPE As String
	
	Private _BILL_DATE As System.Nullable(Of Date)
	
	Private _EFFDATE As System.Nullable(Of Date)
	
	Private _EXPDATE As System.Nullable(Of Date)
	
	Private _DETAIL As String
	
	Private _AE As String
	
	Private _AEGRP As String
	
	Private _RISK As String
	
	Private _RISKI As String
	
	Private _RISKII As String
	
	Private _RISKGOV As String
	
	Private _ORIGI_AMT As System.Nullable(Of Integer)
	
	Private _CURRENCY As String
	
	Private _EXC_RATE As System.Nullable(Of Double)
	
	Private _GLNO As String
	
	Private _UW_REF As String
	
	Private _PREMIUM As System.Nullable(Of Double)
	
	Private _STAMP As System.Nullable(Of Double)
	
	Private _OTHER As System.Nullable(Of Double)
	
	Private _BROKERAGE As System.Nullable(Of Double)
	
	Private _VAT As System.Nullable(Of Double)
	
	Private _CCW_AMT As System.Nullable(Of Double)
	
	Private _BALANCE As System.Nullable(Of Double)
	
	Private _CO_REF As String
	
	Private _TRNO As System.Nullable(Of Integer)
	
	Private _TR_DATE As System.Nullable(Of Date)
	
	Private _RV_DATE As System.Nullable(Of Date)
	
	Private _RVP_DATE As System.Nullable(Of Date)
	
	Private _TRCANCEL As String
	
	Private _PVNO As System.Nullable(Of Integer)
	
	Private _PV_DATE As System.Nullable(Of Date)
	
	Private _PV_PDATE As System.Nullable(Of Date)
	
	Private _PVCANCEL As String
	
	Private _COM_OUT As System.Nullable(Of Double)
	
	Private _DISCOUNT As System.Nullable(Of Double)
	
	Private _PREM_IN_T As System.Nullable(Of Double)
	
	Private _OLD_SA_T As System.Nullable(Of Double)
	
	Private _NET_SA_T As System.Nullable(Of Double)
	
	Private _DIS_IN_T As System.Nullable(Of Double)
	
	Private _BROK_IN_T As System.Nullable(Of Double)
	
	Private _NET_IR_T As System.Nullable(Of Double)
	
	Private _GROS_IN_T As System.Nullable(Of Double)
	
	Private _JVNO As System.Nullable(Of Integer)
	
	Private _UWNAME As String
	
	Private _GROUPNAME As String
	
	Private _GGRP As String
	
	Private _MGROUP As String
	
	Private _MGNAME As String
	
	Private _NETBROK As System.Nullable(Of Double)
	
	Private _VAT_T As System.Nullable(Of Double)
	
	Private _STAMP_P As System.Nullable(Of Double)
	
	Private _ORIN As System.Nullable(Of Double)
	
	Private _OROUT As System.Nullable(Of Double)
	
	Private _ADMININ1 As System.Nullable(Of Double)
	
	Private _ADMININ2 As System.Nullable(Of Double)
	
	Private _ADMINOUT1 As System.Nullable(Of Double)
	
	Private _ADMINOUT2 As System.Nullable(Of Double)
	
	Private _SOURCE As String
	
	Private _SOURCENAME As String
	
	Private _INDUSTRY As String
	
	Private _CHANNEL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnCLIENTChanging(value As String)
    End Sub
    Partial Private Sub OnCLIENTChanged()
    End Sub
    Partial Private Sub OnCLIENTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCLIENTNAMEChanged()
    End Sub
    Partial Private Sub OnGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPChanged()
    End Sub
    Partial Private Sub OnREFNOChanging(value As String)
    End Sub
    Partial Private Sub OnREFNOChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnBILL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBILL_DATEChanged()
    End Sub
    Partial Private Sub OnEFFDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEFFDATEChanged()
    End Sub
    Partial Private Sub OnEXPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXPDATEChanged()
    End Sub
    Partial Private Sub OnDETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDETAILChanged()
    End Sub
    Partial Private Sub OnAEChanging(value As String)
    End Sub
    Partial Private Sub OnAEChanged()
    End Sub
    Partial Private Sub OnAEGRPChanging(value As String)
    End Sub
    Partial Private Sub OnAEGRPChanged()
    End Sub
    Partial Private Sub OnRISKChanging(value As String)
    End Sub
    Partial Private Sub OnRISKChanged()
    End Sub
    Partial Private Sub OnRISKIChanging(value As String)
    End Sub
    Partial Private Sub OnRISKIChanged()
    End Sub
    Partial Private Sub OnRISKIIChanging(value As String)
    End Sub
    Partial Private Sub OnRISKIIChanged()
    End Sub
    Partial Private Sub OnRISKGOVChanging(value As String)
    End Sub
    Partial Private Sub OnRISKGOVChanged()
    End Sub
    Partial Private Sub OnORIGI_AMTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORIGI_AMTChanged()
    End Sub
    Partial Private Sub OnCURRENCYChanging(value As String)
    End Sub
    Partial Private Sub OnCURRENCYChanged()
    End Sub
    Partial Private Sub OnEXC_RATEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEXC_RATEChanged()
    End Sub
    Partial Private Sub OnGLNOChanging(value As String)
    End Sub
    Partial Private Sub OnGLNOChanged()
    End Sub
    Partial Private Sub OnUW_REFChanging(value As String)
    End Sub
    Partial Private Sub OnUW_REFChanged()
    End Sub
    Partial Private Sub OnPREMIUMChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPREMIUMChanged()
    End Sub
    Partial Private Sub OnSTAMPChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSTAMPChanged()
    End Sub
    Partial Private Sub OnOTHERChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOTHERChanged()
    End Sub
    Partial Private Sub OnBROKERAGEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBROKERAGEChanged()
    End Sub
    Partial Private Sub OnVATChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVATChanged()
    End Sub
    Partial Private Sub OnCCW_AMTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCCW_AMTChanged()
    End Sub
    Partial Private Sub OnBALANCEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBALANCEChanged()
    End Sub
    Partial Private Sub OnCO_REFChanging(value As String)
    End Sub
    Partial Private Sub OnCO_REFChanged()
    End Sub
    Partial Private Sub OnTRNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRNOChanged()
    End Sub
    Partial Private Sub OnTR_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTR_DATEChanged()
    End Sub
    Partial Private Sub OnRV_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRV_DATEChanged()
    End Sub
    Partial Private Sub OnRVP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRVP_DATEChanged()
    End Sub
    Partial Private Sub OnTRCANCELChanging(value As String)
    End Sub
    Partial Private Sub OnTRCANCELChanged()
    End Sub
    Partial Private Sub OnPVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNOChanged()
    End Sub
    Partial Private Sub OnPV_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPV_DATEChanged()
    End Sub
    Partial Private Sub OnPV_PDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPV_PDATEChanged()
    End Sub
    Partial Private Sub OnPVCANCELChanging(value As String)
    End Sub
    Partial Private Sub OnPVCANCELChanged()
    End Sub
    Partial Private Sub OnCOM_OUTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCOM_OUTChanged()
    End Sub
    Partial Private Sub OnDISCOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDISCOUNTChanged()
    End Sub
    Partial Private Sub OnPREM_IN_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPREM_IN_TChanged()
    End Sub
    Partial Private Sub OnOLD_SA_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOLD_SA_TChanged()
    End Sub
    Partial Private Sub OnNET_SA_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNET_SA_TChanged()
    End Sub
    Partial Private Sub OnDIS_IN_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDIS_IN_TChanged()
    End Sub
    Partial Private Sub OnBROK_IN_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBROK_IN_TChanged()
    End Sub
    Partial Private Sub OnNET_IR_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNET_IR_TChanged()
    End Sub
    Partial Private Sub OnGROS_IN_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGROS_IN_TChanged()
    End Sub
    Partial Private Sub OnJVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnJVNOChanged()
    End Sub
    Partial Private Sub OnUWNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUWNAMEChanged()
    End Sub
    Partial Private Sub OnGROUPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPNAMEChanged()
    End Sub
    Partial Private Sub OnGGRPChanging(value As String)
    End Sub
    Partial Private Sub OnGGRPChanged()
    End Sub
    Partial Private Sub OnMGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnMGROUPChanged()
    End Sub
    Partial Private Sub OnMGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMGNAMEChanged()
    End Sub
    Partial Private Sub OnNETBROKChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNETBROKChanged()
    End Sub
    Partial Private Sub OnVAT_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVAT_TChanged()
    End Sub
    Partial Private Sub OnSTAMP_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSTAMP_PChanged()
    End Sub
    Partial Private Sub OnORINChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORINChanged()
    End Sub
    Partial Private Sub OnOROUTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOROUTChanged()
    End Sub
    Partial Private Sub OnADMININ1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMININ1Changed()
    End Sub
    Partial Private Sub OnADMININ2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMININ2Changed()
    End Sub
    Partial Private Sub OnADMINOUT1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMINOUT1Changed()
    End Sub
    Partial Private Sub OnADMINOUT2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMINOUT2Changed()
    End Sub
    Partial Private Sub OnSOURCEChanging(value As String)
    End Sub
    Partial Private Sub OnSOURCEChanged()
    End Sub
    Partial Private Sub OnSOURCENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSOURCENAMEChanged()
    End Sub
    Partial Private Sub OnINDUSTRYChanging(value As String)
    End Sub
    Partial Private Sub OnINDUSTRYChanged()
    End Sub
    Partial Private Sub OnCHANNELChanging(value As String)
    End Sub
    Partial Private Sub OnCHANNELChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="NVarChar(255)")>  _
	Public Property CODE() As String
		Get
			Return Me._CODE
		End Get
		Set
			If (String.Equals(Me._CODE, value) = false) Then
				Me.OnCODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE = value
				Me.SendPropertyChanged("CODE")
				Me.OnCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLIENT", DbType:="NVarChar(255)")>  _
	Public Property CLIENT() As String
		Get
			Return Me._CLIENT
		End Get
		Set
			If (String.Equals(Me._CLIENT, value) = false) Then
				Me.OnCLIENTChanging(value)
				Me.SendPropertyChanging
				Me._CLIENT = value
				Me.SendPropertyChanged("CLIENT")
				Me.OnCLIENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLIENTNAME", DbType:="NVarChar(255)")>  _
	Public Property CLIENTNAME() As String
		Get
			Return Me._CLIENTNAME
		End Get
		Set
			If (String.Equals(Me._CLIENTNAME, value) = false) Then
				Me.OnCLIENTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._CLIENTNAME = value
				Me.SendPropertyChanged("CLIENTNAME")
				Me.OnCLIENTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP", DbType:="NVarChar(255)")>  _
	Public Property [GROUP]() As String
		Get
			Return Me._GROUP
		End Get
		Set
			If (String.Equals(Me._GROUP, value) = false) Then
				Me.OnGROUPChanging(value)
				Me.SendPropertyChanging
				Me._GROUP = value
				Me.SendPropertyChanged("[GROUP]")
				Me.OnGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFNO", DbType:="NVarChar(255)")>  _
	Public Property REFNO() As String
		Get
			Return Me._REFNO
		End Get
		Set
			If (String.Equals(Me._REFNO, value) = false) Then
				Me.OnREFNOChanging(value)
				Me.SendPropertyChanging
				Me._REFNO = value
				Me.SendPropertyChanged("REFNO")
				Me.OnREFNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(255)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BILL_DATE", DbType:="DateTime")>  _
	Public Property BILL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._BILL_DATE
		End Get
		Set
			If (Me._BILL_DATE.Equals(value) = false) Then
				Me.OnBILL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._BILL_DATE = value
				Me.SendPropertyChanged("BILL_DATE")
				Me.OnBILL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFFDATE", DbType:="DateTime")>  _
	Public Property EFFDATE() As System.Nullable(Of Date)
		Get
			Return Me._EFFDATE
		End Get
		Set
			If (Me._EFFDATE.Equals(value) = false) Then
				Me.OnEFFDATEChanging(value)
				Me.SendPropertyChanging
				Me._EFFDATE = value
				Me.SendPropertyChanged("EFFDATE")
				Me.OnEFFDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPDATE", DbType:="DateTime")>  _
	Public Property EXPDATE() As System.Nullable(Of Date)
		Get
			Return Me._EXPDATE
		End Get
		Set
			If (Me._EXPDATE.Equals(value) = false) Then
				Me.OnEXPDATEChanging(value)
				Me.SendPropertyChanging
				Me._EXPDATE = value
				Me.SendPropertyChanged("EXPDATE")
				Me.OnEXPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DETAIL", DbType:="NVarChar(255)")>  _
	Public Property DETAIL() As String
		Get
			Return Me._DETAIL
		End Get
		Set
			If (String.Equals(Me._DETAIL, value) = false) Then
				Me.OnDETAILChanging(value)
				Me.SendPropertyChanging
				Me._DETAIL = value
				Me.SendPropertyChanged("DETAIL")
				Me.OnDETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AE", DbType:="NVarChar(255)")>  _
	Public Property AE() As String
		Get
			Return Me._AE
		End Get
		Set
			If (String.Equals(Me._AE, value) = false) Then
				Me.OnAEChanging(value)
				Me.SendPropertyChanging
				Me._AE = value
				Me.SendPropertyChanged("AE")
				Me.OnAEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AEGRP", DbType:="NVarChar(255)")>  _
	Public Property AEGRP() As String
		Get
			Return Me._AEGRP
		End Get
		Set
			If (String.Equals(Me._AEGRP, value) = false) Then
				Me.OnAEGRPChanging(value)
				Me.SendPropertyChanging
				Me._AEGRP = value
				Me.SendPropertyChanged("AEGRP")
				Me.OnAEGRPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISK", DbType:="NVarChar(255)")>  _
	Public Property RISK() As String
		Get
			Return Me._RISK
		End Get
		Set
			If (String.Equals(Me._RISK, value) = false) Then
				Me.OnRISKChanging(value)
				Me.SendPropertyChanging
				Me._RISK = value
				Me.SendPropertyChanged("RISK")
				Me.OnRISKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISKI", DbType:="NVarChar(255)")>  _
	Public Property RISKI() As String
		Get
			Return Me._RISKI
		End Get
		Set
			If (String.Equals(Me._RISKI, value) = false) Then
				Me.OnRISKIChanging(value)
				Me.SendPropertyChanging
				Me._RISKI = value
				Me.SendPropertyChanged("RISKI")
				Me.OnRISKIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISKII", DbType:="NVarChar(255)")>  _
	Public Property RISKII() As String
		Get
			Return Me._RISKII
		End Get
		Set
			If (String.Equals(Me._RISKII, value) = false) Then
				Me.OnRISKIIChanging(value)
				Me.SendPropertyChanging
				Me._RISKII = value
				Me.SendPropertyChanged("RISKII")
				Me.OnRISKIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISKGOV", DbType:="NVarChar(255)")>  _
	Public Property RISKGOV() As String
		Get
			Return Me._RISKGOV
		End Get
		Set
			If (String.Equals(Me._RISKGOV, value) = false) Then
				Me.OnRISKGOVChanging(value)
				Me.SendPropertyChanging
				Me._RISKGOV = value
				Me.SendPropertyChanged("RISKGOV")
				Me.OnRISKGOVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIGI_AMT", DbType:="Int")>  _
	Public Property ORIGI_AMT() As System.Nullable(Of Integer)
		Get
			Return Me._ORIGI_AMT
		End Get
		Set
			If (Me._ORIGI_AMT.Equals(value) = false) Then
				Me.OnORIGI_AMTChanging(value)
				Me.SendPropertyChanging
				Me._ORIGI_AMT = value
				Me.SendPropertyChanged("ORIGI_AMT")
				Me.OnORIGI_AMTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CURRENCY", DbType:="NVarChar(255)")>  _
	Public Property CURRENCY() As String
		Get
			Return Me._CURRENCY
		End Get
		Set
			If (String.Equals(Me._CURRENCY, value) = false) Then
				Me.OnCURRENCYChanging(value)
				Me.SendPropertyChanging
				Me._CURRENCY = value
				Me.SendPropertyChanged("CURRENCY")
				Me.OnCURRENCYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXC_RATE", DbType:="Float")>  _
	Public Property EXC_RATE() As System.Nullable(Of Double)
		Get
			Return Me._EXC_RATE
		End Get
		Set
			If (Me._EXC_RATE.Equals(value) = false) Then
				Me.OnEXC_RATEChanging(value)
				Me.SendPropertyChanging
				Me._EXC_RATE = value
				Me.SendPropertyChanged("EXC_RATE")
				Me.OnEXC_RATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLNO", DbType:="NVarChar(255)")>  _
	Public Property GLNO() As String
		Get
			Return Me._GLNO
		End Get
		Set
			If (String.Equals(Me._GLNO, value) = false) Then
				Me.OnGLNOChanging(value)
				Me.SendPropertyChanging
				Me._GLNO = value
				Me.SendPropertyChanged("GLNO")
				Me.OnGLNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UW_REF", DbType:="NVarChar(255)")>  _
	Public Property UW_REF() As String
		Get
			Return Me._UW_REF
		End Get
		Set
			If (String.Equals(Me._UW_REF, value) = false) Then
				Me.OnUW_REFChanging(value)
				Me.SendPropertyChanging
				Me._UW_REF = value
				Me.SendPropertyChanged("UW_REF")
				Me.OnUW_REFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREMIUM", DbType:="Float")>  _
	Public Property PREMIUM() As System.Nullable(Of Double)
		Get
			Return Me._PREMIUM
		End Get
		Set
			If (Me._PREMIUM.Equals(value) = false) Then
				Me.OnPREMIUMChanging(value)
				Me.SendPropertyChanging
				Me._PREMIUM = value
				Me.SendPropertyChanged("PREMIUM")
				Me.OnPREMIUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAMP", DbType:="Float")>  _
	Public Property STAMP() As System.Nullable(Of Double)
		Get
			Return Me._STAMP
		End Get
		Set
			If (Me._STAMP.Equals(value) = false) Then
				Me.OnSTAMPChanging(value)
				Me.SendPropertyChanging
				Me._STAMP = value
				Me.SendPropertyChanged("STAMP")
				Me.OnSTAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER", DbType:="Float")>  _
	Public Property OTHER() As System.Nullable(Of Double)
		Get
			Return Me._OTHER
		End Get
		Set
			If (Me._OTHER.Equals(value) = false) Then
				Me.OnOTHERChanging(value)
				Me.SendPropertyChanging
				Me._OTHER = value
				Me.SendPropertyChanged("OTHER")
				Me.OnOTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BROKERAGE", DbType:="Float")>  _
	Public Property BROKERAGE() As System.Nullable(Of Double)
		Get
			Return Me._BROKERAGE
		End Get
		Set
			If (Me._BROKERAGE.Equals(value) = false) Then
				Me.OnBROKERAGEChanging(value)
				Me.SendPropertyChanging
				Me._BROKERAGE = value
				Me.SendPropertyChanged("BROKERAGE")
				Me.OnBROKERAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT", DbType:="Float")>  _
	Public Property VAT() As System.Nullable(Of Double)
		Get
			Return Me._VAT
		End Get
		Set
			If (Me._VAT.Equals(value) = false) Then
				Me.OnVATChanging(value)
				Me.SendPropertyChanging
				Me._VAT = value
				Me.SendPropertyChanged("VAT")
				Me.OnVATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CCW_AMT", DbType:="Float")>  _
	Public Property CCW_AMT() As System.Nullable(Of Double)
		Get
			Return Me._CCW_AMT
		End Get
		Set
			If (Me._CCW_AMT.Equals(value) = false) Then
				Me.OnCCW_AMTChanging(value)
				Me.SendPropertyChanging
				Me._CCW_AMT = value
				Me.SendPropertyChanged("CCW_AMT")
				Me.OnCCW_AMTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BALANCE", DbType:="Float")>  _
	Public Property BALANCE() As System.Nullable(Of Double)
		Get
			Return Me._BALANCE
		End Get
		Set
			If (Me._BALANCE.Equals(value) = false) Then
				Me.OnBALANCEChanging(value)
				Me.SendPropertyChanging
				Me._BALANCE = value
				Me.SendPropertyChanged("BALANCE")
				Me.OnBALANCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CO_REF", DbType:="NVarChar(255)")>  _
	Public Property CO_REF() As String
		Get
			Return Me._CO_REF
		End Get
		Set
			If (String.Equals(Me._CO_REF, value) = false) Then
				Me.OnCO_REFChanging(value)
				Me.SendPropertyChanging
				Me._CO_REF = value
				Me.SendPropertyChanged("CO_REF")
				Me.OnCO_REFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNO", DbType:="Int")>  _
	Public Property TRNO() As System.Nullable(Of Integer)
		Get
			Return Me._TRNO
		End Get
		Set
			If (Me._TRNO.Equals(value) = false) Then
				Me.OnTRNOChanging(value)
				Me.SendPropertyChanging
				Me._TRNO = value
				Me.SendPropertyChanged("TRNO")
				Me.OnTRNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_DATE", DbType:="DateTime")>  _
	Public Property TR_DATE() As System.Nullable(Of Date)
		Get
			Return Me._TR_DATE
		End Get
		Set
			If (Me._TR_DATE.Equals(value) = false) Then
				Me.OnTR_DATEChanging(value)
				Me.SendPropertyChanging
				Me._TR_DATE = value
				Me.SendPropertyChanged("TR_DATE")
				Me.OnTR_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RV_DATE", DbType:="DateTime")>  _
	Public Property RV_DATE() As System.Nullable(Of Date)
		Get
			Return Me._RV_DATE
		End Get
		Set
			If (Me._RV_DATE.Equals(value) = false) Then
				Me.OnRV_DATEChanging(value)
				Me.SendPropertyChanging
				Me._RV_DATE = value
				Me.SendPropertyChanged("RV_DATE")
				Me.OnRV_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RVP_DATE", DbType:="DateTime")>  _
	Public Property RVP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._RVP_DATE
		End Get
		Set
			If (Me._RVP_DATE.Equals(value) = false) Then
				Me.OnRVP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._RVP_DATE = value
				Me.SendPropertyChanged("RVP_DATE")
				Me.OnRVP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRCANCEL", DbType:="NVarChar(255)")>  _
	Public Property TRCANCEL() As String
		Get
			Return Me._TRCANCEL
		End Get
		Set
			If (String.Equals(Me._TRCANCEL, value) = false) Then
				Me.OnTRCANCELChanging(value)
				Me.SendPropertyChanging
				Me._TRCANCEL = value
				Me.SendPropertyChanged("TRCANCEL")
				Me.OnTRCANCELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNO", DbType:="Int")>  _
	Public Property PVNO() As System.Nullable(Of Integer)
		Get
			Return Me._PVNO
		End Get
		Set
			If (Me._PVNO.Equals(value) = false) Then
				Me.OnPVNOChanging(value)
				Me.SendPropertyChanging
				Me._PVNO = value
				Me.SendPropertyChanged("PVNO")
				Me.OnPVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PV_DATE", DbType:="DateTime")>  _
	Public Property PV_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PV_DATE
		End Get
		Set
			If (Me._PV_DATE.Equals(value) = false) Then
				Me.OnPV_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PV_DATE = value
				Me.SendPropertyChanged("PV_DATE")
				Me.OnPV_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PV_PDATE", DbType:="DateTime")>  _
	Public Property PV_PDATE() As System.Nullable(Of Date)
		Get
			Return Me._PV_PDATE
		End Get
		Set
			If (Me._PV_PDATE.Equals(value) = false) Then
				Me.OnPV_PDATEChanging(value)
				Me.SendPropertyChanging
				Me._PV_PDATE = value
				Me.SendPropertyChanged("PV_PDATE")
				Me.OnPV_PDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCANCEL", DbType:="NVarChar(255)")>  _
	Public Property PVCANCEL() As String
		Get
			Return Me._PVCANCEL
		End Get
		Set
			If (String.Equals(Me._PVCANCEL, value) = false) Then
				Me.OnPVCANCELChanging(value)
				Me.SendPropertyChanging
				Me._PVCANCEL = value
				Me.SendPropertyChanged("PVCANCEL")
				Me.OnPVCANCELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COM_OUT", DbType:="Float")>  _
	Public Property COM_OUT() As System.Nullable(Of Double)
		Get
			Return Me._COM_OUT
		End Get
		Set
			If (Me._COM_OUT.Equals(value) = false) Then
				Me.OnCOM_OUTChanging(value)
				Me.SendPropertyChanging
				Me._COM_OUT = value
				Me.SendPropertyChanged("COM_OUT")
				Me.OnCOM_OUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT", DbType:="Float")>  _
	Public Property DISCOUNT() As System.Nullable(Of Double)
		Get
			Return Me._DISCOUNT
		End Get
		Set
			If (Me._DISCOUNT.Equals(value) = false) Then
				Me.OnDISCOUNTChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNT = value
				Me.SendPropertyChanged("DISCOUNT")
				Me.OnDISCOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREM_IN_T", DbType:="Float")>  _
	Public Property PREM_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._PREM_IN_T
		End Get
		Set
			If (Me._PREM_IN_T.Equals(value) = false) Then
				Me.OnPREM_IN_TChanging(value)
				Me.SendPropertyChanging
				Me._PREM_IN_T = value
				Me.SendPropertyChanged("PREM_IN_T")
				Me.OnPREM_IN_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_SA_T", DbType:="Float")>  _
	Public Property OLD_SA_T() As System.Nullable(Of Double)
		Get
			Return Me._OLD_SA_T
		End Get
		Set
			If (Me._OLD_SA_T.Equals(value) = false) Then
				Me.OnOLD_SA_TChanging(value)
				Me.SendPropertyChanging
				Me._OLD_SA_T = value
				Me.SendPropertyChanged("OLD_SA_T")
				Me.OnOLD_SA_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NET_SA_T", DbType:="Float")>  _
	Public Property NET_SA_T() As System.Nullable(Of Double)
		Get
			Return Me._NET_SA_T
		End Get
		Set
			If (Me._NET_SA_T.Equals(value) = false) Then
				Me.OnNET_SA_TChanging(value)
				Me.SendPropertyChanging
				Me._NET_SA_T = value
				Me.SendPropertyChanged("NET_SA_T")
				Me.OnNET_SA_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIS_IN_T", DbType:="Float")>  _
	Public Property DIS_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._DIS_IN_T
		End Get
		Set
			If (Me._DIS_IN_T.Equals(value) = false) Then
				Me.OnDIS_IN_TChanging(value)
				Me.SendPropertyChanging
				Me._DIS_IN_T = value
				Me.SendPropertyChanged("DIS_IN_T")
				Me.OnDIS_IN_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BROK_IN_T", DbType:="Float")>  _
	Public Property BROK_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._BROK_IN_T
		End Get
		Set
			If (Me._BROK_IN_T.Equals(value) = false) Then
				Me.OnBROK_IN_TChanging(value)
				Me.SendPropertyChanging
				Me._BROK_IN_T = value
				Me.SendPropertyChanged("BROK_IN_T")
				Me.OnBROK_IN_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NET_IR_T", DbType:="Float")>  _
	Public Property NET_IR_T() As System.Nullable(Of Double)
		Get
			Return Me._NET_IR_T
		End Get
		Set
			If (Me._NET_IR_T.Equals(value) = false) Then
				Me.OnNET_IR_TChanging(value)
				Me.SendPropertyChanging
				Me._NET_IR_T = value
				Me.SendPropertyChanged("NET_IR_T")
				Me.OnNET_IR_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROS_IN_T", DbType:="Float")>  _
	Public Property GROS_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._GROS_IN_T
		End Get
		Set
			If (Me._GROS_IN_T.Equals(value) = false) Then
				Me.OnGROS_IN_TChanging(value)
				Me.SendPropertyChanging
				Me._GROS_IN_T = value
				Me.SendPropertyChanged("GROS_IN_T")
				Me.OnGROS_IN_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JVNO", DbType:="Int")>  _
	Public Property JVNO() As System.Nullable(Of Integer)
		Get
			Return Me._JVNO
		End Get
		Set
			If (Me._JVNO.Equals(value) = false) Then
				Me.OnJVNOChanging(value)
				Me.SendPropertyChanging
				Me._JVNO = value
				Me.SendPropertyChanged("JVNO")
				Me.OnJVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWNAME", DbType:="NVarChar(255)")>  _
	Public Property UWNAME() As String
		Get
			Return Me._UWNAME
		End Get
		Set
			If (String.Equals(Me._UWNAME, value) = false) Then
				Me.OnUWNAMEChanging(value)
				Me.SendPropertyChanging
				Me._UWNAME = value
				Me.SendPropertyChanged("UWNAME")
				Me.OnUWNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPNAME", DbType:="NVarChar(255)")>  _
	Public Property GROUPNAME() As String
		Get
			Return Me._GROUPNAME
		End Get
		Set
			If (String.Equals(Me._GROUPNAME, value) = false) Then
				Me.OnGROUPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPNAME = value
				Me.SendPropertyChanged("GROUPNAME")
				Me.OnGROUPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GGRP", DbType:="NVarChar(255)")>  _
	Public Property GGRP() As String
		Get
			Return Me._GGRP
		End Get
		Set
			If (String.Equals(Me._GGRP, value) = false) Then
				Me.OnGGRPChanging(value)
				Me.SendPropertyChanging
				Me._GGRP = value
				Me.SendPropertyChanged("GGRP")
				Me.OnGGRPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MGROUP", DbType:="NVarChar(255)")>  _
	Public Property MGROUP() As String
		Get
			Return Me._MGROUP
		End Get
		Set
			If (String.Equals(Me._MGROUP, value) = false) Then
				Me.OnMGROUPChanging(value)
				Me.SendPropertyChanging
				Me._MGROUP = value
				Me.SendPropertyChanged("MGROUP")
				Me.OnMGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MGNAME", DbType:="NVarChar(255)")>  _
	Public Property MGNAME() As String
		Get
			Return Me._MGNAME
		End Get
		Set
			If (String.Equals(Me._MGNAME, value) = false) Then
				Me.OnMGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MGNAME = value
				Me.SendPropertyChanged("MGNAME")
				Me.OnMGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NETBROK", DbType:="Float")>  _
	Public Property NETBROK() As System.Nullable(Of Double)
		Get
			Return Me._NETBROK
		End Get
		Set
			If (Me._NETBROK.Equals(value) = false) Then
				Me.OnNETBROKChanging(value)
				Me.SendPropertyChanging
				Me._NETBROK = value
				Me.SendPropertyChanged("NETBROK")
				Me.OnNETBROKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT_T", DbType:="Float")>  _
	Public Property VAT_T() As System.Nullable(Of Double)
		Get
			Return Me._VAT_T
		End Get
		Set
			If (Me._VAT_T.Equals(value) = false) Then
				Me.OnVAT_TChanging(value)
				Me.SendPropertyChanging
				Me._VAT_T = value
				Me.SendPropertyChanged("VAT_T")
				Me.OnVAT_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAMP_P", DbType:="Float")>  _
	Public Property STAMP_P() As System.Nullable(Of Double)
		Get
			Return Me._STAMP_P
		End Get
		Set
			If (Me._STAMP_P.Equals(value) = false) Then
				Me.OnSTAMP_PChanging(value)
				Me.SendPropertyChanging
				Me._STAMP_P = value
				Me.SendPropertyChanged("STAMP_P")
				Me.OnSTAMP_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIN", DbType:="Float")>  _
	Public Property ORIN() As System.Nullable(Of Double)
		Get
			Return Me._ORIN
		End Get
		Set
			If (Me._ORIN.Equals(value) = false) Then
				Me.OnORINChanging(value)
				Me.SendPropertyChanging
				Me._ORIN = value
				Me.SendPropertyChanged("ORIN")
				Me.OnORINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROUT", DbType:="Float")>  _
	Public Property OROUT() As System.Nullable(Of Double)
		Get
			Return Me._OROUT
		End Get
		Set
			If (Me._OROUT.Equals(value) = false) Then
				Me.OnOROUTChanging(value)
				Me.SendPropertyChanging
				Me._OROUT = value
				Me.SendPropertyChanged("OROUT")
				Me.OnOROUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ1", DbType:="Float")>  _
	Public Property ADMININ1() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ1
		End Get
		Set
			If (Me._ADMININ1.Equals(value) = false) Then
				Me.OnADMININ1Changing(value)
				Me.SendPropertyChanging
				Me._ADMININ1 = value
				Me.SendPropertyChanged("ADMININ1")
				Me.OnADMININ1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ2", DbType:="Float")>  _
	Public Property ADMININ2() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ2
		End Get
		Set
			If (Me._ADMININ2.Equals(value) = false) Then
				Me.OnADMININ2Changing(value)
				Me.SendPropertyChanging
				Me._ADMININ2 = value
				Me.SendPropertyChanged("ADMININ2")
				Me.OnADMININ2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMINOUT1", DbType:="Float")>  _
	Public Property ADMINOUT1() As System.Nullable(Of Double)
		Get
			Return Me._ADMINOUT1
		End Get
		Set
			If (Me._ADMINOUT1.Equals(value) = false) Then
				Me.OnADMINOUT1Changing(value)
				Me.SendPropertyChanging
				Me._ADMINOUT1 = value
				Me.SendPropertyChanged("ADMINOUT1")
				Me.OnADMINOUT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMINOUT2", DbType:="Float")>  _
	Public Property ADMINOUT2() As System.Nullable(Of Double)
		Get
			Return Me._ADMINOUT2
		End Get
		Set
			If (Me._ADMINOUT2.Equals(value) = false) Then
				Me.OnADMINOUT2Changing(value)
				Me.SendPropertyChanging
				Me._ADMINOUT2 = value
				Me.SendPropertyChanged("ADMINOUT2")
				Me.OnADMINOUT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOURCE", DbType:="NVarChar(255)")>  _
	Public Property SOURCE() As String
		Get
			Return Me._SOURCE
		End Get
		Set
			If (String.Equals(Me._SOURCE, value) = false) Then
				Me.OnSOURCEChanging(value)
				Me.SendPropertyChanging
				Me._SOURCE = value
				Me.SendPropertyChanged("SOURCE")
				Me.OnSOURCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOURCENAME", DbType:="NVarChar(255)")>  _
	Public Property SOURCENAME() As String
		Get
			Return Me._SOURCENAME
		End Get
		Set
			If (String.Equals(Me._SOURCENAME, value) = false) Then
				Me.OnSOURCENAMEChanging(value)
				Me.SendPropertyChanging
				Me._SOURCENAME = value
				Me.SendPropertyChanged("SOURCENAME")
				Me.OnSOURCENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INDUSTRY", DbType:="NVarChar(255)")>  _
	Public Property INDUSTRY() As String
		Get
			Return Me._INDUSTRY
		End Get
		Set
			If (String.Equals(Me._INDUSTRY, value) = false) Then
				Me.OnINDUSTRYChanging(value)
				Me.SendPropertyChanging
				Me._INDUSTRY = value
				Me.SendPropertyChanged("INDUSTRY")
				Me.OnINDUSTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHANNEL", DbType:="NVarChar(255)")>  _
	Public Property CHANNEL() As String
		Get
			Return Me._CHANNEL
		End Get
		Set
			If (String.Equals(Me._CHANNEL, value) = false) Then
				Me.OnCHANNELChanging(value)
				Me.SendPropertyChanging
				Me._CHANNEL = value
				Me.SendPropertyChanged("CHANNEL")
				Me.OnCHANNELChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.NewFY13FY15NoCN")>  _
Partial Public Class NewFY13FY15NoCN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _No As System.Nullable(Of Integer)
	
	Private _ClientCode As String
	
	Private _ClientName As String
	
	Private _TempID As String
	
	Private _InsuranceType As String
	
	Private _SchemeCode As String
	
	Private _EFFECTIVEDATE As Date
	
	Private _INSURER As String
	
	Private _CHASSISNO As String
	
	Private _ENGINENO As String
	
	Private _Model As String
	
	Private _SumInsure As System.Nullable(Of Integer)
	
	Private _NetVoluntaryPremium As System.Nullable(Of Double)
	
	Private _VMI As System.Nullable(Of Double)
	
	Private _CMI As System.Nullable(Of Double)
	
	Private _ContractNo As String
	
	Private _AppID As System.Nullable(Of Integer)
	
	Private _Status As String
	
	Private _Remark As String
	
	Private _VMIPolicyNo As String
	
	Private _CMIPolicyNo As String
	
	Private _Showroom As String
	
	Private _Beneficiary As String
	
	Private _ContactPerson As String
	
	Private _NotifigationDate As System.Nullable(Of Date)
	
	Private _Mobile As String
	
	Private _OfficeTelephone As String
	
	Private _HomeTelephone As String
	
	Private _ClassOfRiskVMI As String
	
	Private _ClassOfRiskCMI As String
	
	Private _IDCard As String
	
	Private _HDCode As String
	
	Private _ClosingDate As Date
	
	Private _DealerName As String
	
	Private _ModelGroup As String
	
	Private _BenefitGroup As String
	
	Private _CarRegisterYear As System.Nullable(Of Integer)
	
	Private _BNFGroup As String
	
	Private _ContractNo1 As String
	
	Private _CMIGross As System.Nullable(Of Double)
	
	Private _ProductCode As String
	
	Private _UserClosing As String
	
	Private _ClosingDate1 As System.Nullable(Of Date)
	
	Private _DealerEn As String
	
	Private _ShowroomType As String
	
	Private _Province As String
	
	Private _ProvinceEng As String
	
	Private _Region As String
	
	Private _FYTD As System.Nullable(Of Integer)
	
	Private _INSURERENG As String
	
	Private _InsurerEngGroup As String
	
	Private _VehicleType As String
	
	Private _BillingChannel As String
	
	Private _FolioVMI As System.Nullable(Of Integer)
	
	Private _FolioCMI As System.Nullable(Of Integer)
	
	Private _VMIOriginalAmount As System.Nullable(Of Double)
	
	Private _VMICCWCollectAmt As System.Nullable(Of Double)
	
	Private _VMIBalanceAmount As System.Nullable(Of Double)
	
	Private _CMIOriginalAmount As System.Nullable(Of Double)
	
	Private _CMICCWCollectAmt As System.Nullable(Of Double)
	
	Private _CMIBalanceAmount As System.Nullable(Of Double)
	
	Private _TRVMI_NETTOTAL As System.Nullable(Of Double)
	
	Private _TRVMI_PAIDAMOUNT As System.Nullable(Of Double)
	
	Private _TRVMI_BalanceAmount As System.Nullable(Of Double)
	
	Private _TRCMI_NETTOTAL As System.Nullable(Of Double)
	
	Private _TRCMI_PAIDAMOUNT As System.Nullable(Of Double)
	
	Private _TRCMI_BalanceAmount As System.Nullable(Of Double)
	
	Private _NetIncomeVMI As System.Nullable(Of Double)
	
	Private _NetIncomeCMI As System.Nullable(Of Double)
	
	Private _NetTotal As System.Nullable(Of Double)
	
	Private _ASAT As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNoChanged()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnClientNameChanging(value As String)
    End Sub
    Partial Private Sub OnClientNameChanged()
    End Sub
    Partial Private Sub OnTempIDChanging(value As String)
    End Sub
    Partial Private Sub OnTempIDChanged()
    End Sub
    Partial Private Sub OnInsuranceTypeChanging(value As String)
    End Sub
    Partial Private Sub OnInsuranceTypeChanged()
    End Sub
    Partial Private Sub OnSchemeCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSchemeCodeChanged()
    End Sub
    Partial Private Sub OnEFFECTIVEDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnEFFECTIVEDATEChanged()
    End Sub
    Partial Private Sub OnINSURERChanging(value As String)
    End Sub
    Partial Private Sub OnINSURERChanged()
    End Sub
    Partial Private Sub OnCHASSISNOChanging(value As String)
    End Sub
    Partial Private Sub OnCHASSISNOChanged()
    End Sub
    Partial Private Sub OnENGINENOChanging(value As String)
    End Sub
    Partial Private Sub OnENGINENOChanged()
    End Sub
    Partial Private Sub OnModelChanging(value As String)
    End Sub
    Partial Private Sub OnModelChanged()
    End Sub
    Partial Private Sub OnSumInsureChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSumInsureChanged()
    End Sub
    Partial Private Sub OnNetVoluntaryPremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetVoluntaryPremiumChanged()
    End Sub
    Partial Private Sub OnVMIChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVMIChanged()
    End Sub
    Partial Private Sub OnCMIChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCMIChanged()
    End Sub
    Partial Private Sub OnContractNoChanging(value As String)
    End Sub
    Partial Private Sub OnContractNoChanged()
    End Sub
    Partial Private Sub OnAppIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAppIDChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnVMIPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnVMIPolicyNoChanged()
    End Sub
    Partial Private Sub OnCMIPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnCMIPolicyNoChanged()
    End Sub
    Partial Private Sub OnShowroomChanging(value As String)
    End Sub
    Partial Private Sub OnShowroomChanged()
    End Sub
    Partial Private Sub OnBeneficiaryChanging(value As String)
    End Sub
    Partial Private Sub OnBeneficiaryChanged()
    End Sub
    Partial Private Sub OnContactPersonChanging(value As String)
    End Sub
    Partial Private Sub OnContactPersonChanged()
    End Sub
    Partial Private Sub OnNotifigationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNotifigationDateChanged()
    End Sub
    Partial Private Sub OnMobileChanging(value As String)
    End Sub
    Partial Private Sub OnMobileChanged()
    End Sub
    Partial Private Sub OnOfficeTelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnOfficeTelephoneChanged()
    End Sub
    Partial Private Sub OnHomeTelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnHomeTelephoneChanged()
    End Sub
    Partial Private Sub OnClassOfRiskVMIChanging(value As String)
    End Sub
    Partial Private Sub OnClassOfRiskVMIChanged()
    End Sub
    Partial Private Sub OnClassOfRiskCMIChanging(value As String)
    End Sub
    Partial Private Sub OnClassOfRiskCMIChanged()
    End Sub
    Partial Private Sub OnIDCardChanging(value As String)
    End Sub
    Partial Private Sub OnIDCardChanged()
    End Sub
    Partial Private Sub OnHDCodeChanging(value As String)
    End Sub
    Partial Private Sub OnHDCodeChanged()
    End Sub
    Partial Private Sub OnClosingDateChanging(value As Date)
    End Sub
    Partial Private Sub OnClosingDateChanged()
    End Sub
    Partial Private Sub OnDealerNameChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameChanged()
    End Sub
    Partial Private Sub OnModelGroupChanging(value As String)
    End Sub
    Partial Private Sub OnModelGroupChanged()
    End Sub
    Partial Private Sub OnBenefitGroupChanging(value As String)
    End Sub
    Partial Private Sub OnBenefitGroupChanged()
    End Sub
    Partial Private Sub OnCarRegisterYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarRegisterYearChanged()
    End Sub
    Partial Private Sub OnBNFGroupChanging(value As String)
    End Sub
    Partial Private Sub OnBNFGroupChanged()
    End Sub
    Partial Private Sub OnContractNo1Changing(value As String)
    End Sub
    Partial Private Sub OnContractNo1Changed()
    End Sub
    Partial Private Sub OnCMIGrossChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCMIGrossChanged()
    End Sub
    Partial Private Sub OnProductCodeChanging(value As String)
    End Sub
    Partial Private Sub OnProductCodeChanged()
    End Sub
    Partial Private Sub OnUserClosingChanging(value As String)
    End Sub
    Partial Private Sub OnUserClosingChanged()
    End Sub
    Partial Private Sub OnClosingDate1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnClosingDate1Changed()
    End Sub
    Partial Private Sub OnDealerEnChanging(value As String)
    End Sub
    Partial Private Sub OnDealerEnChanged()
    End Sub
    Partial Private Sub OnShowroomTypeChanging(value As String)
    End Sub
    Partial Private Sub OnShowroomTypeChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnProvinceEngChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceEngChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnFYTDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFYTDChanged()
    End Sub
    Partial Private Sub OnINSURERENGChanging(value As String)
    End Sub
    Partial Private Sub OnINSURERENGChanged()
    End Sub
    Partial Private Sub OnInsurerEngGroupChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerEngGroupChanged()
    End Sub
    Partial Private Sub OnVehicleTypeChanging(value As String)
    End Sub
    Partial Private Sub OnVehicleTypeChanged()
    End Sub
    Partial Private Sub OnBillingChannelChanging(value As String)
    End Sub
    Partial Private Sub OnBillingChannelChanged()
    End Sub
    Partial Private Sub OnFolioVMIChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFolioVMIChanged()
    End Sub
    Partial Private Sub OnFolioCMIChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFolioCMIChanged()
    End Sub
    Partial Private Sub OnVMIOriginalAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVMIOriginalAmountChanged()
    End Sub
    Partial Private Sub OnVMICCWCollectAmtChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVMICCWCollectAmtChanged()
    End Sub
    Partial Private Sub OnVMIBalanceAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVMIBalanceAmountChanged()
    End Sub
    Partial Private Sub OnCMIOriginalAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCMIOriginalAmountChanged()
    End Sub
    Partial Private Sub OnCMICCWCollectAmtChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCMICCWCollectAmtChanged()
    End Sub
    Partial Private Sub OnCMIBalanceAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCMIBalanceAmountChanged()
    End Sub
    Partial Private Sub OnTRVMI_NETTOTALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTRVMI_NETTOTALChanged()
    End Sub
    Partial Private Sub OnTRVMI_PAIDAMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTRVMI_PAIDAMOUNTChanged()
    End Sub
    Partial Private Sub OnTRVMI_BalanceAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTRVMI_BalanceAmountChanged()
    End Sub
    Partial Private Sub OnTRCMI_NETTOTALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTRCMI_NETTOTALChanged()
    End Sub
    Partial Private Sub OnTRCMI_PAIDAMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTRCMI_PAIDAMOUNTChanged()
    End Sub
    Partial Private Sub OnTRCMI_BalanceAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTRCMI_BalanceAmountChanged()
    End Sub
    Partial Private Sub OnNetIncomeVMIChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetIncomeVMIChanged()
    End Sub
    Partial Private Sub OnNetIncomeCMIChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetIncomeCMIChanged()
    End Sub
    Partial Private Sub OnNetTotalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetTotalChanged()
    End Sub
    Partial Private Sub OnASATChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnASATChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No", DbType:="Int")>  _
	Public Property No() As System.Nullable(Of Integer)
		Get
			Return Me._No
		End Get
		Set
			If (Me._No.Equals(value) = false) Then
				Me.OnNoChanging(value)
				Me.SendPropertyChanging
				Me._No = value
				Me.SendPropertyChanged("No")
				Me.OnNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="NVarChar(255)")>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientName", DbType:="NVarChar(255)")>  _
	Public Property ClientName() As String
		Get
			Return Me._ClientName
		End Get
		Set
			If (String.Equals(Me._ClientName, value) = false) Then
				Me.OnClientNameChanging(value)
				Me.SendPropertyChanging
				Me._ClientName = value
				Me.SendPropertyChanged("ClientName")
				Me.OnClientNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TempID", DbType:="NVarChar(255)")>  _
	Public Property TempID() As String
		Get
			Return Me._TempID
		End Get
		Set
			If (String.Equals(Me._TempID, value) = false) Then
				Me.OnTempIDChanging(value)
				Me.SendPropertyChanging
				Me._TempID = value
				Me.SendPropertyChanged("TempID")
				Me.OnTempIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceType", DbType:="NVarChar(255)")>  _
	Public Property InsuranceType() As String
		Get
			Return Me._InsuranceType
		End Get
		Set
			If (String.Equals(Me._InsuranceType, value) = false) Then
				Me.OnInsuranceTypeChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceType = value
				Me.SendPropertyChanged("InsuranceType")
				Me.OnInsuranceTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchemeCode", DbType:="NVarChar(255)")>  _
	Public Property SchemeCode() As String
		Get
			Return Me._SchemeCode
		End Get
		Set
			If (String.Equals(Me._SchemeCode, value) = false) Then
				Me.OnSchemeCodeChanging(value)
				Me.SendPropertyChanging
				Me._SchemeCode = value
				Me.SendPropertyChanged("SchemeCode")
				Me.OnSchemeCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFFECTIVEDATE", DbType:="Date NOT NULL")>  _
	Public Property EFFECTIVEDATE() As Date
		Get
			Return Me._EFFECTIVEDATE
		End Get
		Set
			If ((Me._EFFECTIVEDATE = value)  _
						= false) Then
				Me.OnEFFECTIVEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EFFECTIVEDATE = value
				Me.SendPropertyChanged("EFFECTIVEDATE")
				Me.OnEFFECTIVEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSURER", DbType:="NVarChar(255)")>  _
	Public Property INSURER() As String
		Get
			Return Me._INSURER
		End Get
		Set
			If (String.Equals(Me._INSURER, value) = false) Then
				Me.OnINSURERChanging(value)
				Me.SendPropertyChanging
				Me._INSURER = value
				Me.SendPropertyChanged("INSURER")
				Me.OnINSURERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHASSISNO", DbType:="NVarChar(255)")>  _
	Public Property CHASSISNO() As String
		Get
			Return Me._CHASSISNO
		End Get
		Set
			If (String.Equals(Me._CHASSISNO, value) = false) Then
				Me.OnCHASSISNOChanging(value)
				Me.SendPropertyChanging
				Me._CHASSISNO = value
				Me.SendPropertyChanged("CHASSISNO")
				Me.OnCHASSISNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENGINENO", DbType:="NVarChar(255)")>  _
	Public Property ENGINENO() As String
		Get
			Return Me._ENGINENO
		End Get
		Set
			If (String.Equals(Me._ENGINENO, value) = false) Then
				Me.OnENGINENOChanging(value)
				Me.SendPropertyChanging
				Me._ENGINENO = value
				Me.SendPropertyChanged("ENGINENO")
				Me.OnENGINENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="NVarChar(255)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me.OnModelChanging(value)
				Me.SendPropertyChanging
				Me._Model = value
				Me.SendPropertyChanged("Model")
				Me.OnModelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsure", DbType:="Int")>  _
	Public Property SumInsure() As System.Nullable(Of Integer)
		Get
			Return Me._SumInsure
		End Get
		Set
			If (Me._SumInsure.Equals(value) = false) Then
				Me.OnSumInsureChanging(value)
				Me.SendPropertyChanging
				Me._SumInsure = value
				Me.SendPropertyChanged("SumInsure")
				Me.OnSumInsureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetVoluntaryPremium", DbType:="Float")>  _
	Public Property NetVoluntaryPremium() As System.Nullable(Of Double)
		Get
			Return Me._NetVoluntaryPremium
		End Get
		Set
			If (Me._NetVoluntaryPremium.Equals(value) = false) Then
				Me.OnNetVoluntaryPremiumChanging(value)
				Me.SendPropertyChanging
				Me._NetVoluntaryPremium = value
				Me.SendPropertyChanged("NetVoluntaryPremium")
				Me.OnNetVoluntaryPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VMI", DbType:="Float")>  _
	Public Property VMI() As System.Nullable(Of Double)
		Get
			Return Me._VMI
		End Get
		Set
			If (Me._VMI.Equals(value) = false) Then
				Me.OnVMIChanging(value)
				Me.SendPropertyChanging
				Me._VMI = value
				Me.SendPropertyChanged("VMI")
				Me.OnVMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI", DbType:="Float")>  _
	Public Property CMI() As System.Nullable(Of Double)
		Get
			Return Me._CMI
		End Get
		Set
			If (Me._CMI.Equals(value) = false) Then
				Me.OnCMIChanging(value)
				Me.SendPropertyChanging
				Me._CMI = value
				Me.SendPropertyChanged("CMI")
				Me.OnCMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContractNo", DbType:="NVarChar(255)")>  _
	Public Property ContractNo() As String
		Get
			Return Me._ContractNo
		End Get
		Set
			If (String.Equals(Me._ContractNo, value) = false) Then
				Me.OnContractNoChanging(value)
				Me.SendPropertyChanging
				Me._ContractNo = value
				Me.SendPropertyChanged("ContractNo")
				Me.OnContractNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppID", DbType:="Int")>  _
	Public Property AppID() As System.Nullable(Of Integer)
		Get
			Return Me._AppID
		End Get
		Set
			If (Me._AppID.Equals(value) = false) Then
				Me.OnAppIDChanging(value)
				Me.SendPropertyChanging
				Me._AppID = value
				Me.SendPropertyChanged("AppID")
				Me.OnAppIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(255)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VMIPolicyNo", DbType:="NVarChar(255)")>  _
	Public Property VMIPolicyNo() As String
		Get
			Return Me._VMIPolicyNo
		End Get
		Set
			If (String.Equals(Me._VMIPolicyNo, value) = false) Then
				Me.OnVMIPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._VMIPolicyNo = value
				Me.SendPropertyChanged("VMIPolicyNo")
				Me.OnVMIPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIPolicyNo", DbType:="NVarChar(255)")>  _
	Public Property CMIPolicyNo() As String
		Get
			Return Me._CMIPolicyNo
		End Get
		Set
			If (String.Equals(Me._CMIPolicyNo, value) = false) Then
				Me.OnCMIPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._CMIPolicyNo = value
				Me.SendPropertyChanged("CMIPolicyNo")
				Me.OnCMIPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Showroom", DbType:="NVarChar(255)")>  _
	Public Property Showroom() As String
		Get
			Return Me._Showroom
		End Get
		Set
			If (String.Equals(Me._Showroom, value) = false) Then
				Me.OnShowroomChanging(value)
				Me.SendPropertyChanging
				Me._Showroom = value
				Me.SendPropertyChanged("Showroom")
				Me.OnShowroomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficiary", DbType:="NVarChar(255)")>  _
	Public Property Beneficiary() As String
		Get
			Return Me._Beneficiary
		End Get
		Set
			If (String.Equals(Me._Beneficiary, value) = false) Then
				Me.OnBeneficiaryChanging(value)
				Me.SendPropertyChanging
				Me._Beneficiary = value
				Me.SendPropertyChanged("Beneficiary")
				Me.OnBeneficiaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPerson", DbType:="NVarChar(255)")>  _
	Public Property ContactPerson() As String
		Get
			Return Me._ContactPerson
		End Get
		Set
			If (String.Equals(Me._ContactPerson, value) = false) Then
				Me.OnContactPersonChanging(value)
				Me.SendPropertyChanging
				Me._ContactPerson = value
				Me.SendPropertyChanged("ContactPerson")
				Me.OnContactPersonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotifigationDate", DbType:="DateTime")>  _
	Public Property NotifigationDate() As System.Nullable(Of Date)
		Get
			Return Me._NotifigationDate
		End Get
		Set
			If (Me._NotifigationDate.Equals(value) = false) Then
				Me.OnNotifigationDateChanging(value)
				Me.SendPropertyChanging
				Me._NotifigationDate = value
				Me.SendPropertyChanged("NotifigationDate")
				Me.OnNotifigationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile", DbType:="NVarChar(255)")>  _
	Public Property Mobile() As String
		Get
			Return Me._Mobile
		End Get
		Set
			If (String.Equals(Me._Mobile, value) = false) Then
				Me.OnMobileChanging(value)
				Me.SendPropertyChanging
				Me._Mobile = value
				Me.SendPropertyChanged("Mobile")
				Me.OnMobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfficeTelephone", DbType:="NVarChar(255)")>  _
	Public Property OfficeTelephone() As String
		Get
			Return Me._OfficeTelephone
		End Get
		Set
			If (String.Equals(Me._OfficeTelephone, value) = false) Then
				Me.OnOfficeTelephoneChanging(value)
				Me.SendPropertyChanging
				Me._OfficeTelephone = value
				Me.SendPropertyChanged("OfficeTelephone")
				Me.OnOfficeTelephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HomeTelephone", DbType:="NVarChar(255)")>  _
	Public Property HomeTelephone() As String
		Get
			Return Me._HomeTelephone
		End Get
		Set
			If (String.Equals(Me._HomeTelephone, value) = false) Then
				Me.OnHomeTelephoneChanging(value)
				Me.SendPropertyChanging
				Me._HomeTelephone = value
				Me.SendPropertyChanged("HomeTelephone")
				Me.OnHomeTelephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassOfRiskVMI", DbType:="NVarChar(255)")>  _
	Public Property ClassOfRiskVMI() As String
		Get
			Return Me._ClassOfRiskVMI
		End Get
		Set
			If (String.Equals(Me._ClassOfRiskVMI, value) = false) Then
				Me.OnClassOfRiskVMIChanging(value)
				Me.SendPropertyChanging
				Me._ClassOfRiskVMI = value
				Me.SendPropertyChanged("ClassOfRiskVMI")
				Me.OnClassOfRiskVMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassOfRiskCMI", DbType:="NVarChar(255)")>  _
	Public Property ClassOfRiskCMI() As String
		Get
			Return Me._ClassOfRiskCMI
		End Get
		Set
			If (String.Equals(Me._ClassOfRiskCMI, value) = false) Then
				Me.OnClassOfRiskCMIChanging(value)
				Me.SendPropertyChanging
				Me._ClassOfRiskCMI = value
				Me.SendPropertyChanged("ClassOfRiskCMI")
				Me.OnClassOfRiskCMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCard", DbType:="NVarChar(255)")>  _
	Public Property IDCard() As String
		Get
			Return Me._IDCard
		End Get
		Set
			If (String.Equals(Me._IDCard, value) = false) Then
				Me.OnIDCardChanging(value)
				Me.SendPropertyChanging
				Me._IDCard = value
				Me.SendPropertyChanged("IDCard")
				Me.OnIDCardChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HDCode", DbType:="NVarChar(255)")>  _
	Public Property HDCode() As String
		Get
			Return Me._HDCode
		End Get
		Set
			If (String.Equals(Me._HDCode, value) = false) Then
				Me.OnHDCodeChanging(value)
				Me.SendPropertyChanging
				Me._HDCode = value
				Me.SendPropertyChanged("HDCode")
				Me.OnHDCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingDate", DbType:="Date NOT NULL")>  _
	Public Property ClosingDate() As Date
		Get
			Return Me._ClosingDate
		End Get
		Set
			If ((Me._ClosingDate = value)  _
						= false) Then
				Me.OnClosingDateChanging(value)
				Me.SendPropertyChanging
				Me._ClosingDate = value
				Me.SendPropertyChanged("ClosingDate")
				Me.OnClosingDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerName", DbType:="NVarChar(255)")>  _
	Public Property DealerName() As String
		Get
			Return Me._DealerName
		End Get
		Set
			If (String.Equals(Me._DealerName, value) = false) Then
				Me.OnDealerNameChanging(value)
				Me.SendPropertyChanging
				Me._DealerName = value
				Me.SendPropertyChanged("DealerName")
				Me.OnDealerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelGroup", DbType:="NVarChar(255)")>  _
	Public Property ModelGroup() As String
		Get
			Return Me._ModelGroup
		End Get
		Set
			If (String.Equals(Me._ModelGroup, value) = false) Then
				Me.OnModelGroupChanging(value)
				Me.SendPropertyChanging
				Me._ModelGroup = value
				Me.SendPropertyChanged("ModelGroup")
				Me.OnModelGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BenefitGroup", DbType:="NVarChar(255)")>  _
	Public Property BenefitGroup() As String
		Get
			Return Me._BenefitGroup
		End Get
		Set
			If (String.Equals(Me._BenefitGroup, value) = false) Then
				Me.OnBenefitGroupChanging(value)
				Me.SendPropertyChanging
				Me._BenefitGroup = value
				Me.SendPropertyChanged("BenefitGroup")
				Me.OnBenefitGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarRegisterYear", DbType:="Int")>  _
	Public Property CarRegisterYear() As System.Nullable(Of Integer)
		Get
			Return Me._CarRegisterYear
		End Get
		Set
			If (Me._CarRegisterYear.Equals(value) = false) Then
				Me.OnCarRegisterYearChanging(value)
				Me.SendPropertyChanging
				Me._CarRegisterYear = value
				Me.SendPropertyChanged("CarRegisterYear")
				Me.OnCarRegisterYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BNFGroup", DbType:="NVarChar(255)")>  _
	Public Property BNFGroup() As String
		Get
			Return Me._BNFGroup
		End Get
		Set
			If (String.Equals(Me._BNFGroup, value) = false) Then
				Me.OnBNFGroupChanging(value)
				Me.SendPropertyChanging
				Me._BNFGroup = value
				Me.SendPropertyChanged("BNFGroup")
				Me.OnBNFGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContractNo1", DbType:="NVarChar(255)")>  _
	Public Property ContractNo1() As String
		Get
			Return Me._ContractNo1
		End Get
		Set
			If (String.Equals(Me._ContractNo1, value) = false) Then
				Me.OnContractNo1Changing(value)
				Me.SendPropertyChanging
				Me._ContractNo1 = value
				Me.SendPropertyChanged("ContractNo1")
				Me.OnContractNo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIGross", DbType:="Float")>  _
	Public Property CMIGross() As System.Nullable(Of Double)
		Get
			Return Me._CMIGross
		End Get
		Set
			If (Me._CMIGross.Equals(value) = false) Then
				Me.OnCMIGrossChanging(value)
				Me.SendPropertyChanging
				Me._CMIGross = value
				Me.SendPropertyChanged("CMIGross")
				Me.OnCMIGrossChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductCode", DbType:="NVarChar(255)")>  _
	Public Property ProductCode() As String
		Get
			Return Me._ProductCode
		End Get
		Set
			If (String.Equals(Me._ProductCode, value) = false) Then
				Me.OnProductCodeChanging(value)
				Me.SendPropertyChanging
				Me._ProductCode = value
				Me.SendPropertyChanged("ProductCode")
				Me.OnProductCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserClosing", DbType:="NVarChar(255)")>  _
	Public Property UserClosing() As String
		Get
			Return Me._UserClosing
		End Get
		Set
			If (String.Equals(Me._UserClosing, value) = false) Then
				Me.OnUserClosingChanging(value)
				Me.SendPropertyChanging
				Me._UserClosing = value
				Me.SendPropertyChanged("UserClosing")
				Me.OnUserClosingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingDate1", DbType:="DateTime")>  _
	Public Property ClosingDate1() As System.Nullable(Of Date)
		Get
			Return Me._ClosingDate1
		End Get
		Set
			If (Me._ClosingDate1.Equals(value) = false) Then
				Me.OnClosingDate1Changing(value)
				Me.SendPropertyChanging
				Me._ClosingDate1 = value
				Me.SendPropertyChanged("ClosingDate1")
				Me.OnClosingDate1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerEn", DbType:="NVarChar(255)")>  _
	Public Property DealerEn() As String
		Get
			Return Me._DealerEn
		End Get
		Set
			If (String.Equals(Me._DealerEn, value) = false) Then
				Me.OnDealerEnChanging(value)
				Me.SendPropertyChanging
				Me._DealerEn = value
				Me.SendPropertyChanged("DealerEn")
				Me.OnDealerEnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomType", DbType:="NVarChar(255)")>  _
	Public Property ShowroomType() As String
		Get
			Return Me._ShowroomType
		End Get
		Set
			If (String.Equals(Me._ShowroomType, value) = false) Then
				Me.OnShowroomTypeChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomType = value
				Me.SendPropertyChanged("ShowroomType")
				Me.OnShowroomTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="NVarChar(255)")>  _
	Public Property Province() As String
		Get
			Return Me._Province
		End Get
		Set
			If (String.Equals(Me._Province, value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProvinceEng", DbType:="NVarChar(255)")>  _
	Public Property ProvinceEng() As String
		Get
			Return Me._ProvinceEng
		End Get
		Set
			If (String.Equals(Me._ProvinceEng, value) = false) Then
				Me.OnProvinceEngChanging(value)
				Me.SendPropertyChanging
				Me._ProvinceEng = value
				Me.SendPropertyChanged("ProvinceEng")
				Me.OnProvinceEngChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="NVarChar(255)")>  _
	Public Property Region() As String
		Get
			Return Me._Region
		End Get
		Set
			If (String.Equals(Me._Region, value) = false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FYTD", DbType:="Int")>  _
	Public Property FYTD() As System.Nullable(Of Integer)
		Get
			Return Me._FYTD
		End Get
		Set
			If (Me._FYTD.Equals(value) = false) Then
				Me.OnFYTDChanging(value)
				Me.SendPropertyChanging
				Me._FYTD = value
				Me.SendPropertyChanged("FYTD")
				Me.OnFYTDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSURERENG", DbType:="NVarChar(255)")>  _
	Public Property INSURERENG() As String
		Get
			Return Me._INSURERENG
		End Get
		Set
			If (String.Equals(Me._INSURERENG, value) = false) Then
				Me.OnINSURERENGChanging(value)
				Me.SendPropertyChanging
				Me._INSURERENG = value
				Me.SendPropertyChanged("INSURERENG")
				Me.OnINSURERENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerEngGroup", DbType:="NVarChar(255)")>  _
	Public Property InsurerEngGroup() As String
		Get
			Return Me._InsurerEngGroup
		End Get
		Set
			If (String.Equals(Me._InsurerEngGroup, value) = false) Then
				Me.OnInsurerEngGroupChanging(value)
				Me.SendPropertyChanging
				Me._InsurerEngGroup = value
				Me.SendPropertyChanged("InsurerEngGroup")
				Me.OnInsurerEngGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VehicleType", DbType:="NVarChar(255)")>  _
	Public Property VehicleType() As String
		Get
			Return Me._VehicleType
		End Get
		Set
			If (String.Equals(Me._VehicleType, value) = false) Then
				Me.OnVehicleTypeChanging(value)
				Me.SendPropertyChanging
				Me._VehicleType = value
				Me.SendPropertyChanged("VehicleType")
				Me.OnVehicleTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingChannel", DbType:="NVarChar(255)")>  _
	Public Property BillingChannel() As String
		Get
			Return Me._BillingChannel
		End Get
		Set
			If (String.Equals(Me._BillingChannel, value) = false) Then
				Me.OnBillingChannelChanging(value)
				Me.SendPropertyChanging
				Me._BillingChannel = value
				Me.SendPropertyChanged("BillingChannel")
				Me.OnBillingChannelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FolioVMI", DbType:="Int")>  _
	Public Property FolioVMI() As System.Nullable(Of Integer)
		Get
			Return Me._FolioVMI
		End Get
		Set
			If (Me._FolioVMI.Equals(value) = false) Then
				Me.OnFolioVMIChanging(value)
				Me.SendPropertyChanging
				Me._FolioVMI = value
				Me.SendPropertyChanged("FolioVMI")
				Me.OnFolioVMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FolioCMI", DbType:="Int")>  _
	Public Property FolioCMI() As System.Nullable(Of Integer)
		Get
			Return Me._FolioCMI
		End Get
		Set
			If (Me._FolioCMI.Equals(value) = false) Then
				Me.OnFolioCMIChanging(value)
				Me.SendPropertyChanging
				Me._FolioCMI = value
				Me.SendPropertyChanged("FolioCMI")
				Me.OnFolioCMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VMIOriginalAmount", DbType:="Float")>  _
	Public Property VMIOriginalAmount() As System.Nullable(Of Double)
		Get
			Return Me._VMIOriginalAmount
		End Get
		Set
			If (Me._VMIOriginalAmount.Equals(value) = false) Then
				Me.OnVMIOriginalAmountChanging(value)
				Me.SendPropertyChanging
				Me._VMIOriginalAmount = value
				Me.SendPropertyChanged("VMIOriginalAmount")
				Me.OnVMIOriginalAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VMICCWCollectAmt", DbType:="Float")>  _
	Public Property VMICCWCollectAmt() As System.Nullable(Of Double)
		Get
			Return Me._VMICCWCollectAmt
		End Get
		Set
			If (Me._VMICCWCollectAmt.Equals(value) = false) Then
				Me.OnVMICCWCollectAmtChanging(value)
				Me.SendPropertyChanging
				Me._VMICCWCollectAmt = value
				Me.SendPropertyChanged("VMICCWCollectAmt")
				Me.OnVMICCWCollectAmtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VMIBalanceAmount", DbType:="Float")>  _
	Public Property VMIBalanceAmount() As System.Nullable(Of Double)
		Get
			Return Me._VMIBalanceAmount
		End Get
		Set
			If (Me._VMIBalanceAmount.Equals(value) = false) Then
				Me.OnVMIBalanceAmountChanging(value)
				Me.SendPropertyChanging
				Me._VMIBalanceAmount = value
				Me.SendPropertyChanged("VMIBalanceAmount")
				Me.OnVMIBalanceAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIOriginalAmount", DbType:="Float")>  _
	Public Property CMIOriginalAmount() As System.Nullable(Of Double)
		Get
			Return Me._CMIOriginalAmount
		End Get
		Set
			If (Me._CMIOriginalAmount.Equals(value) = false) Then
				Me.OnCMIOriginalAmountChanging(value)
				Me.SendPropertyChanging
				Me._CMIOriginalAmount = value
				Me.SendPropertyChanged("CMIOriginalAmount")
				Me.OnCMIOriginalAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMICCWCollectAmt", DbType:="Float")>  _
	Public Property CMICCWCollectAmt() As System.Nullable(Of Double)
		Get
			Return Me._CMICCWCollectAmt
		End Get
		Set
			If (Me._CMICCWCollectAmt.Equals(value) = false) Then
				Me.OnCMICCWCollectAmtChanging(value)
				Me.SendPropertyChanging
				Me._CMICCWCollectAmt = value
				Me.SendPropertyChanged("CMICCWCollectAmt")
				Me.OnCMICCWCollectAmtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIBalanceAmount", DbType:="Float")>  _
	Public Property CMIBalanceAmount() As System.Nullable(Of Double)
		Get
			Return Me._CMIBalanceAmount
		End Get
		Set
			If (Me._CMIBalanceAmount.Equals(value) = false) Then
				Me.OnCMIBalanceAmountChanging(value)
				Me.SendPropertyChanging
				Me._CMIBalanceAmount = value
				Me.SendPropertyChanged("CMIBalanceAmount")
				Me.OnCMIBalanceAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRVMI_NETTOTAL", DbType:="Float")>  _
	Public Property TRVMI_NETTOTAL() As System.Nullable(Of Double)
		Get
			Return Me._TRVMI_NETTOTAL
		End Get
		Set
			If (Me._TRVMI_NETTOTAL.Equals(value) = false) Then
				Me.OnTRVMI_NETTOTALChanging(value)
				Me.SendPropertyChanging
				Me._TRVMI_NETTOTAL = value
				Me.SendPropertyChanged("TRVMI_NETTOTAL")
				Me.OnTRVMI_NETTOTALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRVMI_PAIDAMOUNT", DbType:="Float")>  _
	Public Property TRVMI_PAIDAMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._TRVMI_PAIDAMOUNT
		End Get
		Set
			If (Me._TRVMI_PAIDAMOUNT.Equals(value) = false) Then
				Me.OnTRVMI_PAIDAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._TRVMI_PAIDAMOUNT = value
				Me.SendPropertyChanged("TRVMI_PAIDAMOUNT")
				Me.OnTRVMI_PAIDAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRVMI_BalanceAmount", DbType:="Float")>  _
	Public Property TRVMI_BalanceAmount() As System.Nullable(Of Double)
		Get
			Return Me._TRVMI_BalanceAmount
		End Get
		Set
			If (Me._TRVMI_BalanceAmount.Equals(value) = false) Then
				Me.OnTRVMI_BalanceAmountChanging(value)
				Me.SendPropertyChanging
				Me._TRVMI_BalanceAmount = value
				Me.SendPropertyChanged("TRVMI_BalanceAmount")
				Me.OnTRVMI_BalanceAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRCMI_NETTOTAL", DbType:="Float")>  _
	Public Property TRCMI_NETTOTAL() As System.Nullable(Of Double)
		Get
			Return Me._TRCMI_NETTOTAL
		End Get
		Set
			If (Me._TRCMI_NETTOTAL.Equals(value) = false) Then
				Me.OnTRCMI_NETTOTALChanging(value)
				Me.SendPropertyChanging
				Me._TRCMI_NETTOTAL = value
				Me.SendPropertyChanged("TRCMI_NETTOTAL")
				Me.OnTRCMI_NETTOTALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRCMI_PAIDAMOUNT", DbType:="Float")>  _
	Public Property TRCMI_PAIDAMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._TRCMI_PAIDAMOUNT
		End Get
		Set
			If (Me._TRCMI_PAIDAMOUNT.Equals(value) = false) Then
				Me.OnTRCMI_PAIDAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._TRCMI_PAIDAMOUNT = value
				Me.SendPropertyChanged("TRCMI_PAIDAMOUNT")
				Me.OnTRCMI_PAIDAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRCMI_BalanceAmount", DbType:="Float")>  _
	Public Property TRCMI_BalanceAmount() As System.Nullable(Of Double)
		Get
			Return Me._TRCMI_BalanceAmount
		End Get
		Set
			If (Me._TRCMI_BalanceAmount.Equals(value) = false) Then
				Me.OnTRCMI_BalanceAmountChanging(value)
				Me.SendPropertyChanging
				Me._TRCMI_BalanceAmount = value
				Me.SendPropertyChanged("TRCMI_BalanceAmount")
				Me.OnTRCMI_BalanceAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncomeVMI", DbType:="Float")>  _
	Public Property NetIncomeVMI() As System.Nullable(Of Double)
		Get
			Return Me._NetIncomeVMI
		End Get
		Set
			If (Me._NetIncomeVMI.Equals(value) = false) Then
				Me.OnNetIncomeVMIChanging(value)
				Me.SendPropertyChanging
				Me._NetIncomeVMI = value
				Me.SendPropertyChanged("NetIncomeVMI")
				Me.OnNetIncomeVMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncomeCMI", DbType:="Float")>  _
	Public Property NetIncomeCMI() As System.Nullable(Of Double)
		Get
			Return Me._NetIncomeCMI
		End Get
		Set
			If (Me._NetIncomeCMI.Equals(value) = false) Then
				Me.OnNetIncomeCMIChanging(value)
				Me.SendPropertyChanging
				Me._NetIncomeCMI = value
				Me.SendPropertyChanged("NetIncomeCMI")
				Me.OnNetIncomeCMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetTotal", DbType:="Float")>  _
	Public Property NetTotal() As System.Nullable(Of Double)
		Get
			Return Me._NetTotal
		End Get
		Set
			If (Me._NetTotal.Equals(value) = false) Then
				Me.OnNetTotalChanging(value)
				Me.SendPropertyChanging
				Me._NetTotal = value
				Me.SendPropertyChanged("NetTotal")
				Me.OnNetTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASAT", DbType:="DateTime")>  _
	Public Property ASAT() As System.Nullable(Of Date)
		Get
			Return Me._ASAT
		End Get
		Set
			If (Me._ASAT.Equals(value) = false) Then
				Me.OnASATChanging(value)
				Me.SendPropertyChanging
				Me._ASAT = value
				Me.SendPropertyChanged("ASAT")
				Me.OnASATChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SIBIS2015")>  _
Partial Public Class SIBIS2015
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _No As System.Nullable(Of Double)
	
	Private _DNNo As System.Nullable(Of Double)
	
	Private _Class As String
	
	Private _ClientCode As String
	
	Private _ClientName As String
	
	Private _DivCode As String
	
	Private _AExec As String
	
	Private _Source As String
	
	Private _ClientGroup As String
	
	Private _Trans As System.Nullable(Of Double)
	
	Private _DN As System.Nullable(Of Double)
	
	Private _CN As System.Nullable(Of Double)
	
	Private _Premium As System.Nullable(Of Double)
	
	Private _PremiumDN As System.Nullable(Of Double)
	
	Private _PremiumCN As System.Nullable(Of Double)
	
	Private _ComIn As System.Nullable(Of Double)
	
	Private _ORIn As System.Nullable(Of Double)
	
	Private _Admin1 As System.Nullable(Of Double)
	
	Private _Admin2 As System.Nullable(Of Double)
	
	Private _TotalIncome As System.Nullable(Of Double)
	
	Private _Discount As System.Nullable(Of Double)
	
	Private _ComOut As System.Nullable(Of Double)
	
	Private _OROut As System.Nullable(Of Double)
	
	Private _AdminOut1 As System.Nullable(Of Double)
	
	Private _AdminOut2 As System.Nullable(Of Double)
	
	Private _NetIncome As System.Nullable(Of Double)
	
	Private _NetIncomeDN As System.Nullable(Of Double)
	
	Private _NetIncomeCN As System.Nullable(Of Double)
	
	Private _GroupDiv As String
	
	Private _GroupSource As String
	
	Private _GroupSourceSub1 As String
	
	Private _GroupSourceSub2 As String
	
	Private _GroupSourceSub As String
	
	Private _GroupMaster As String
	
	Private _BriefDesc As String
	
	Private _PeriodForm As Date
	
	Private _DNDate As Date
	
	Private _Expiry As Date
	
	Private _PolicyNo As String
	
	Private _RiskGov As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _UWShort As String
	
	Private _UWName As String
	
	Private _EffectiveDate As Date
	
	Private _Year As System.Nullable(Of Double)
	
	Private _TotalIncomeP As System.Nullable(Of Double)
	
	Private _NetIncomeP As System.Nullable(Of Double)
	
	Private _RiskGov2 As String
	
	Private _RiskGov3 As String
	
	Private _Year2 As System.Nullable(Of Double)
	
	Private _Month As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNoChanged()
    End Sub
    Partial Private Sub OnDNNoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDNNoChanged()
    End Sub
    Partial Private Sub OnClassChanging(value As String)
    End Sub
    Partial Private Sub OnClassChanged()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnClientNameChanging(value As String)
    End Sub
    Partial Private Sub OnClientNameChanged()
    End Sub
    Partial Private Sub OnDivCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDivCodeChanged()
    End Sub
    Partial Private Sub OnAExecChanging(value As String)
    End Sub
    Partial Private Sub OnAExecChanged()
    End Sub
    Partial Private Sub OnSourceChanging(value As String)
    End Sub
    Partial Private Sub OnSourceChanged()
    End Sub
    Partial Private Sub OnClientGroupChanging(value As String)
    End Sub
    Partial Private Sub OnClientGroupChanged()
    End Sub
    Partial Private Sub OnTransChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTransChanged()
    End Sub
    Partial Private Sub OnDNChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDNChanged()
    End Sub
    Partial Private Sub OnCNChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNChanged()
    End Sub
    Partial Private Sub OnPremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPremiumChanged()
    End Sub
    Partial Private Sub OnPremiumDNChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPremiumDNChanged()
    End Sub
    Partial Private Sub OnPremiumCNChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPremiumCNChanged()
    End Sub
    Partial Private Sub OnComInChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnComInChanged()
    End Sub
    Partial Private Sub OnORInChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORInChanged()
    End Sub
    Partial Private Sub OnAdmin1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin1Changed()
    End Sub
    Partial Private Sub OnAdmin2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdmin2Changed()
    End Sub
    Partial Private Sub OnTotalIncomeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalIncomeChanged()
    End Sub
    Partial Private Sub OnDiscountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDiscountChanged()
    End Sub
    Partial Private Sub OnComOutChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnComOutChanged()
    End Sub
    Partial Private Sub OnOROutChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOROutChanged()
    End Sub
    Partial Private Sub OnAdminOut1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminOut1Changed()
    End Sub
    Partial Private Sub OnAdminOut2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminOut2Changed()
    End Sub
    Partial Private Sub OnNetIncomeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetIncomeChanged()
    End Sub
    Partial Private Sub OnNetIncomeDNChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetIncomeDNChanged()
    End Sub
    Partial Private Sub OnNetIncomeCNChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetIncomeCNChanged()
    End Sub
    Partial Private Sub OnGroupDivChanging(value As String)
    End Sub
    Partial Private Sub OnGroupDivChanged()
    End Sub
    Partial Private Sub OnGroupSourceChanging(value As String)
    End Sub
    Partial Private Sub OnGroupSourceChanged()
    End Sub
    Partial Private Sub OnGroupSourceSub1Changing(value As String)
    End Sub
    Partial Private Sub OnGroupSourceSub1Changed()
    End Sub
    Partial Private Sub OnGroupSourceSub2Changing(value As String)
    End Sub
    Partial Private Sub OnGroupSourceSub2Changed()
    End Sub
    Partial Private Sub OnGroupSourceSubChanging(value As String)
    End Sub
    Partial Private Sub OnGroupSourceSubChanged()
    End Sub
    Partial Private Sub OnGroupMasterChanging(value As String)
    End Sub
    Partial Private Sub OnGroupMasterChanged()
    End Sub
    Partial Private Sub OnBriefDescChanging(value As String)
    End Sub
    Partial Private Sub OnBriefDescChanged()
    End Sub
    Partial Private Sub OnPeriodFormChanging(value As Date)
    End Sub
    Partial Private Sub OnPeriodFormChanged()
    End Sub
    Partial Private Sub OnDNDateChanging(value As Date)
    End Sub
    Partial Private Sub OnDNDateChanged()
    End Sub
    Partial Private Sub OnExpiryChanging(value As Date)
    End Sub
    Partial Private Sub OnExpiryChanged()
    End Sub
    Partial Private Sub OnPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyNoChanged()
    End Sub
    Partial Private Sub OnRiskGovChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGovChanged()
    End Sub
    Partial Private Sub OnRiskGroupIIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIIChanged()
    End Sub
    Partial Private Sub OnRiskShortDescChanging(value As String)
    End Sub
    Partial Private Sub OnRiskShortDescChanged()
    End Sub
    Partial Private Sub OnUWShortChanging(value As String)
    End Sub
    Partial Private Sub OnUWShortChanged()
    End Sub
    Partial Private Sub OnUWNameChanging(value As String)
    End Sub
    Partial Private Sub OnUWNameChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnYearChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnYearChanged()
    End Sub
    Partial Private Sub OnTotalIncomePChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalIncomePChanged()
    End Sub
    Partial Private Sub OnNetIncomePChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetIncomePChanged()
    End Sub
    Partial Private Sub OnRiskGov2Changing(value As String)
    End Sub
    Partial Private Sub OnRiskGov2Changed()
    End Sub
    Partial Private Sub OnRiskGov3Changing(value As String)
    End Sub
    Partial Private Sub OnRiskGov3Changed()
    End Sub
    Partial Private Sub OnYear2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnYear2Changed()
    End Sub
    Partial Private Sub OnMonthChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMonthChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No", DbType:="Float")>  _
	Public Property No() As System.Nullable(Of Double)
		Get
			Return Me._No
		End Get
		Set
			If (Me._No.Equals(value) = false) Then
				Me.OnNoChanging(value)
				Me.SendPropertyChanging
				Me._No = value
				Me.SendPropertyChanged("No")
				Me.OnNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNNo", DbType:="Float")>  _
	Public Property DNNo() As System.Nullable(Of Double)
		Get
			Return Me._DNNo
		End Get
		Set
			If (Me._DNNo.Equals(value) = false) Then
				Me.OnDNNoChanging(value)
				Me.SendPropertyChanging
				Me._DNNo = value
				Me.SendPropertyChanged("DNNo")
				Me.OnDNNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Class", Storage:="_Class", DbType:="NVarChar(255)")>  _
	Public Property [Class]() As String
		Get
			Return Me._Class
		End Get
		Set
			If (String.Equals(Me._Class, value) = false) Then
				Me.OnClassChanging(value)
				Me.SendPropertyChanging
				Me._Class = value
				Me.SendPropertyChanged("[Class]")
				Me.OnClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="NVarChar(255)")>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientName", DbType:="NVarChar(255)")>  _
	Public Property ClientName() As String
		Get
			Return Me._ClientName
		End Get
		Set
			If (String.Equals(Me._ClientName, value) = false) Then
				Me.OnClientNameChanging(value)
				Me.SendPropertyChanging
				Me._ClientName = value
				Me.SendPropertyChanged("ClientName")
				Me.OnClientNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DivCode", DbType:="NVarChar(255)")>  _
	Public Property DivCode() As String
		Get
			Return Me._DivCode
		End Get
		Set
			If (String.Equals(Me._DivCode, value) = false) Then
				Me.OnDivCodeChanging(value)
				Me.SendPropertyChanging
				Me._DivCode = value
				Me.SendPropertyChanged("DivCode")
				Me.OnDivCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AExec", DbType:="NVarChar(255)")>  _
	Public Property AExec() As String
		Get
			Return Me._AExec
		End Get
		Set
			If (String.Equals(Me._AExec, value) = false) Then
				Me.OnAExecChanging(value)
				Me.SendPropertyChanging
				Me._AExec = value
				Me.SendPropertyChanged("AExec")
				Me.OnAExecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Source", DbType:="NVarChar(255)")>  _
	Public Property Source() As String
		Get
			Return Me._Source
		End Get
		Set
			If (String.Equals(Me._Source, value) = false) Then
				Me.OnSourceChanging(value)
				Me.SendPropertyChanging
				Me._Source = value
				Me.SendPropertyChanged("Source")
				Me.OnSourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientGroup", DbType:="NVarChar(255)")>  _
	Public Property ClientGroup() As String
		Get
			Return Me._ClientGroup
		End Get
		Set
			If (String.Equals(Me._ClientGroup, value) = false) Then
				Me.OnClientGroupChanging(value)
				Me.SendPropertyChanging
				Me._ClientGroup = value
				Me.SendPropertyChanged("ClientGroup")
				Me.OnClientGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trans", DbType:="Float")>  _
	Public Property Trans() As System.Nullable(Of Double)
		Get
			Return Me._Trans
		End Get
		Set
			If (Me._Trans.Equals(value) = false) Then
				Me.OnTransChanging(value)
				Me.SendPropertyChanging
				Me._Trans = value
				Me.SendPropertyChanged("Trans")
				Me.OnTransChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DN", DbType:="Float")>  _
	Public Property DN() As System.Nullable(Of Double)
		Get
			Return Me._DN
		End Get
		Set
			If (Me._DN.Equals(value) = false) Then
				Me.OnDNChanging(value)
				Me.SendPropertyChanging
				Me._DN = value
				Me.SendPropertyChanged("DN")
				Me.OnDNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CN", DbType:="Float")>  _
	Public Property CN() As System.Nullable(Of Double)
		Get
			Return Me._CN
		End Get
		Set
			If (Me._CN.Equals(value) = false) Then
				Me.OnCNChanging(value)
				Me.SendPropertyChanging
				Me._CN = value
				Me.SendPropertyChanged("CN")
				Me.OnCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Premium", DbType:="Float")>  _
	Public Property Premium() As System.Nullable(Of Double)
		Get
			Return Me._Premium
		End Get
		Set
			If (Me._Premium.Equals(value) = false) Then
				Me.OnPremiumChanging(value)
				Me.SendPropertyChanging
				Me._Premium = value
				Me.SendPropertyChanged("Premium")
				Me.OnPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumDN", DbType:="Float")>  _
	Public Property PremiumDN() As System.Nullable(Of Double)
		Get
			Return Me._PremiumDN
		End Get
		Set
			If (Me._PremiumDN.Equals(value) = false) Then
				Me.OnPremiumDNChanging(value)
				Me.SendPropertyChanging
				Me._PremiumDN = value
				Me.SendPropertyChanged("PremiumDN")
				Me.OnPremiumDNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumCN", DbType:="Float")>  _
	Public Property PremiumCN() As System.Nullable(Of Double)
		Get
			Return Me._PremiumCN
		End Get
		Set
			If (Me._PremiumCN.Equals(value) = false) Then
				Me.OnPremiumCNChanging(value)
				Me.SendPropertyChanging
				Me._PremiumCN = value
				Me.SendPropertyChanged("PremiumCN")
				Me.OnPremiumCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ComIn", DbType:="Float")>  _
	Public Property ComIn() As System.Nullable(Of Double)
		Get
			Return Me._ComIn
		End Get
		Set
			If (Me._ComIn.Equals(value) = false) Then
				Me.OnComInChanging(value)
				Me.SendPropertyChanging
				Me._ComIn = value
				Me.SendPropertyChanged("ComIn")
				Me.OnComInChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIn", DbType:="Float")>  _
	Public Property ORIn() As System.Nullable(Of Double)
		Get
			Return Me._ORIn
		End Get
		Set
			If (Me._ORIn.Equals(value) = false) Then
				Me.OnORInChanging(value)
				Me.SendPropertyChanging
				Me._ORIn = value
				Me.SendPropertyChanged("ORIn")
				Me.OnORInChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin1", DbType:="Float")>  _
	Public Property Admin1() As System.Nullable(Of Double)
		Get
			Return Me._Admin1
		End Get
		Set
			If (Me._Admin1.Equals(value) = false) Then
				Me.OnAdmin1Changing(value)
				Me.SendPropertyChanging
				Me._Admin1 = value
				Me.SendPropertyChanged("Admin1")
				Me.OnAdmin1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Admin2", DbType:="Float")>  _
	Public Property Admin2() As System.Nullable(Of Double)
		Get
			Return Me._Admin2
		End Get
		Set
			If (Me._Admin2.Equals(value) = false) Then
				Me.OnAdmin2Changing(value)
				Me.SendPropertyChanging
				Me._Admin2 = value
				Me.SendPropertyChanged("Admin2")
				Me.OnAdmin2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalIncome", DbType:="Float")>  _
	Public Property TotalIncome() As System.Nullable(Of Double)
		Get
			Return Me._TotalIncome
		End Get
		Set
			If (Me._TotalIncome.Equals(value) = false) Then
				Me.OnTotalIncomeChanging(value)
				Me.SendPropertyChanging
				Me._TotalIncome = value
				Me.SendPropertyChanged("TotalIncome")
				Me.OnTotalIncomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discount", DbType:="Float")>  _
	Public Property Discount() As System.Nullable(Of Double)
		Get
			Return Me._Discount
		End Get
		Set
			If (Me._Discount.Equals(value) = false) Then
				Me.OnDiscountChanging(value)
				Me.SendPropertyChanging
				Me._Discount = value
				Me.SendPropertyChanged("Discount")
				Me.OnDiscountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ComOut", DbType:="Float")>  _
	Public Property ComOut() As System.Nullable(Of Double)
		Get
			Return Me._ComOut
		End Get
		Set
			If (Me._ComOut.Equals(value) = false) Then
				Me.OnComOutChanging(value)
				Me.SendPropertyChanging
				Me._ComOut = value
				Me.SendPropertyChanged("ComOut")
				Me.OnComOutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut", DbType:="Float")>  _
	Public Property OROut() As System.Nullable(Of Double)
		Get
			Return Me._OROut
		End Get
		Set
			If (Me._OROut.Equals(value) = false) Then
				Me.OnOROutChanging(value)
				Me.SendPropertyChanging
				Me._OROut = value
				Me.SendPropertyChanged("OROut")
				Me.OnOROutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1", DbType:="Float")>  _
	Public Property AdminOut1() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut1
		End Get
		Set
			If (Me._AdminOut1.Equals(value) = false) Then
				Me.OnAdminOut1Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut1 = value
				Me.SendPropertyChanged("AdminOut1")
				Me.OnAdminOut1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2", DbType:="Float")>  _
	Public Property AdminOut2() As System.Nullable(Of Double)
		Get
			Return Me._AdminOut2
		End Get
		Set
			If (Me._AdminOut2.Equals(value) = false) Then
				Me.OnAdminOut2Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut2 = value
				Me.SendPropertyChanged("AdminOut2")
				Me.OnAdminOut2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncome", DbType:="Float")>  _
	Public Property NetIncome() As System.Nullable(Of Double)
		Get
			Return Me._NetIncome
		End Get
		Set
			If (Me._NetIncome.Equals(value) = false) Then
				Me.OnNetIncomeChanging(value)
				Me.SendPropertyChanging
				Me._NetIncome = value
				Me.SendPropertyChanged("NetIncome")
				Me.OnNetIncomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncomeDN", DbType:="Float")>  _
	Public Property NetIncomeDN() As System.Nullable(Of Double)
		Get
			Return Me._NetIncomeDN
		End Get
		Set
			If (Me._NetIncomeDN.Equals(value) = false) Then
				Me.OnNetIncomeDNChanging(value)
				Me.SendPropertyChanging
				Me._NetIncomeDN = value
				Me.SendPropertyChanged("NetIncomeDN")
				Me.OnNetIncomeDNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncomeCN", DbType:="Float")>  _
	Public Property NetIncomeCN() As System.Nullable(Of Double)
		Get
			Return Me._NetIncomeCN
		End Get
		Set
			If (Me._NetIncomeCN.Equals(value) = false) Then
				Me.OnNetIncomeCNChanging(value)
				Me.SendPropertyChanging
				Me._NetIncomeCN = value
				Me.SendPropertyChanged("NetIncomeCN")
				Me.OnNetIncomeCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupDiv", DbType:="NVarChar(255)")>  _
	Public Property GroupDiv() As String
		Get
			Return Me._GroupDiv
		End Get
		Set
			If (String.Equals(Me._GroupDiv, value) = false) Then
				Me.OnGroupDivChanging(value)
				Me.SendPropertyChanging
				Me._GroupDiv = value
				Me.SendPropertyChanged("GroupDiv")
				Me.OnGroupDivChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupSource", DbType:="NVarChar(255)")>  _
	Public Property GroupSource() As String
		Get
			Return Me._GroupSource
		End Get
		Set
			If (String.Equals(Me._GroupSource, value) = false) Then
				Me.OnGroupSourceChanging(value)
				Me.SendPropertyChanging
				Me._GroupSource = value
				Me.SendPropertyChanged("GroupSource")
				Me.OnGroupSourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupSourceSub1", DbType:="NVarChar(255)")>  _
	Public Property GroupSourceSub1() As String
		Get
			Return Me._GroupSourceSub1
		End Get
		Set
			If (String.Equals(Me._GroupSourceSub1, value) = false) Then
				Me.OnGroupSourceSub1Changing(value)
				Me.SendPropertyChanging
				Me._GroupSourceSub1 = value
				Me.SendPropertyChanged("GroupSourceSub1")
				Me.OnGroupSourceSub1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupSourceSub2", DbType:="NVarChar(255)")>  _
	Public Property GroupSourceSub2() As String
		Get
			Return Me._GroupSourceSub2
		End Get
		Set
			If (String.Equals(Me._GroupSourceSub2, value) = false) Then
				Me.OnGroupSourceSub2Changing(value)
				Me.SendPropertyChanging
				Me._GroupSourceSub2 = value
				Me.SendPropertyChanged("GroupSourceSub2")
				Me.OnGroupSourceSub2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupSourceSub", DbType:="NVarChar(255)")>  _
	Public Property GroupSourceSub() As String
		Get
			Return Me._GroupSourceSub
		End Get
		Set
			If (String.Equals(Me._GroupSourceSub, value) = false) Then
				Me.OnGroupSourceSubChanging(value)
				Me.SendPropertyChanging
				Me._GroupSourceSub = value
				Me.SendPropertyChanged("GroupSourceSub")
				Me.OnGroupSourceSubChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupMaster", DbType:="NVarChar(255)")>  _
	Public Property GroupMaster() As String
		Get
			Return Me._GroupMaster
		End Get
		Set
			If (String.Equals(Me._GroupMaster, value) = false) Then
				Me.OnGroupMasterChanging(value)
				Me.SendPropertyChanging
				Me._GroupMaster = value
				Me.SendPropertyChanged("GroupMaster")
				Me.OnGroupMasterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BriefDesc", DbType:="NVarChar(255)")>  _
	Public Property BriefDesc() As String
		Get
			Return Me._BriefDesc
		End Get
		Set
			If (String.Equals(Me._BriefDesc, value) = false) Then
				Me.OnBriefDescChanging(value)
				Me.SendPropertyChanging
				Me._BriefDesc = value
				Me.SendPropertyChanged("BriefDesc")
				Me.OnBriefDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodForm", DbType:="DateTime NOT NULL")>  _
	Public Property PeriodForm() As Date
		Get
			Return Me._PeriodForm
		End Get
		Set
			If ((Me._PeriodForm = value)  _
						= false) Then
				Me.OnPeriodFormChanging(value)
				Me.SendPropertyChanging
				Me._PeriodForm = value
				Me.SendPropertyChanged("PeriodForm")
				Me.OnPeriodFormChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNDate", DbType:="DateTime NOT NULL")>  _
	Public Property DNDate() As Date
		Get
			Return Me._DNDate
		End Get
		Set
			If ((Me._DNDate = value)  _
						= false) Then
				Me.OnDNDateChanging(value)
				Me.SendPropertyChanging
				Me._DNDate = value
				Me.SendPropertyChanged("DNDate")
				Me.OnDNDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expiry", DbType:="DateTime NOT NULL")>  _
	Public Property Expiry() As Date
		Get
			Return Me._Expiry
		End Get
		Set
			If ((Me._Expiry = value)  _
						= false) Then
				Me.OnExpiryChanging(value)
				Me.SendPropertyChanging
				Me._Expiry = value
				Me.SendPropertyChanged("Expiry")
				Me.OnExpiryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="NVarChar(255)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me.OnPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._PolicyNo = value
				Me.SendPropertyChanged("PolicyNo")
				Me.OnPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGov", DbType:="NVarChar(255)")>  _
	Public Property RiskGov() As String
		Get
			Return Me._RiskGov
		End Get
		Set
			If (String.Equals(Me._RiskGov, value) = false) Then
				Me.OnRiskGovChanging(value)
				Me.SendPropertyChanging
				Me._RiskGov = value
				Me.SendPropertyChanged("RiskGov")
				Me.OnRiskGovChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="NVarChar(255)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me.OnRiskGroupIIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupII = value
				Me.SendPropertyChanged("RiskGroupII")
				Me.OnRiskGroupIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="NVarChar(255)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me.OnRiskShortDescChanging(value)
				Me.SendPropertyChanging
				Me._RiskShortDesc = value
				Me.SendPropertyChanged("RiskShortDesc")
				Me.OnRiskShortDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWShort", DbType:="NVarChar(255)")>  _
	Public Property UWShort() As String
		Get
			Return Me._UWShort
		End Get
		Set
			If (String.Equals(Me._UWShort, value) = false) Then
				Me.OnUWShortChanging(value)
				Me.SendPropertyChanging
				Me._UWShort = value
				Me.SendPropertyChanged("UWShort")
				Me.OnUWShortChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWName", DbType:="NVarChar(255)")>  _
	Public Property UWName() As String
		Get
			Return Me._UWName
		End Get
		Set
			If (String.Equals(Me._UWName, value) = false) Then
				Me.OnUWNameChanging(value)
				Me.SendPropertyChanging
				Me._UWName = value
				Me.SendPropertyChanged("UWName")
				Me.OnUWNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime NOT NULL")>  _
	Public Property EffectiveDate() As Date
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If ((Me._EffectiveDate = value)  _
						= false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="Float")>  _
	Public Property Year() As System.Nullable(Of Double)
		Get
			Return Me._Year
		End Get
		Set
			If (Me._Year.Equals(value) = false) Then
				Me.OnYearChanging(value)
				Me.SendPropertyChanging
				Me._Year = value
				Me.SendPropertyChanged("Year")
				Me.OnYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalIncomeP", DbType:="Float")>  _
	Public Property TotalIncomeP() As System.Nullable(Of Double)
		Get
			Return Me._TotalIncomeP
		End Get
		Set
			If (Me._TotalIncomeP.Equals(value) = false) Then
				Me.OnTotalIncomePChanging(value)
				Me.SendPropertyChanging
				Me._TotalIncomeP = value
				Me.SendPropertyChanged("TotalIncomeP")
				Me.OnTotalIncomePChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncomeP", DbType:="Float")>  _
	Public Property NetIncomeP() As System.Nullable(Of Double)
		Get
			Return Me._NetIncomeP
		End Get
		Set
			If (Me._NetIncomeP.Equals(value) = false) Then
				Me.OnNetIncomePChanging(value)
				Me.SendPropertyChanging
				Me._NetIncomeP = value
				Me.SendPropertyChanged("NetIncomeP")
				Me.OnNetIncomePChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGov2", DbType:="NVarChar(255)")>  _
	Public Property RiskGov2() As String
		Get
			Return Me._RiskGov2
		End Get
		Set
			If (String.Equals(Me._RiskGov2, value) = false) Then
				Me.OnRiskGov2Changing(value)
				Me.SendPropertyChanging
				Me._RiskGov2 = value
				Me.SendPropertyChanged("RiskGov2")
				Me.OnRiskGov2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGov3", DbType:="NVarChar(255)")>  _
	Public Property RiskGov3() As String
		Get
			Return Me._RiskGov3
		End Get
		Set
			If (String.Equals(Me._RiskGov3, value) = false) Then
				Me.OnRiskGov3Changing(value)
				Me.SendPropertyChanging
				Me._RiskGov3 = value
				Me.SendPropertyChanged("RiskGov3")
				Me.OnRiskGov3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year2", DbType:="Float")>  _
	Public Property Year2() As System.Nullable(Of Double)
		Get
			Return Me._Year2
		End Get
		Set
			If (Me._Year2.Equals(value) = false) Then
				Me.OnYear2Changing(value)
				Me.SendPropertyChanging
				Me._Year2 = value
				Me.SendPropertyChanged("Year2")
				Me.OnYear2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Month", DbType:="Float")>  _
	Public Property Month() As System.Nullable(Of Double)
		Get
			Return Me._Month
		End Get
		Set
			If (Me._Month.Equals(value) = false) Then
				Me.OnMonthChanging(value)
				Me.SendPropertyChanging
				Me._Month = value
				Me.SendPropertyChanged("Month")
				Me.OnMonthChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReport")>  _
Partial Public Class tblReport
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RID As Integer
	
	Private _No As System.Nullable(Of Integer)
	
	Private _TITLE As String
	
	Private _DESCRIPTION As String
	
	Private _DEPARTMENT As String
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _VIEW_ID As System.Nullable(Of Integer)
	
	Private _DB_ID As System.Nullable(Of Integer)
	
	Private _REPORT_TYPE As String
	
	Private _tblReport_Assignments As EntitySet(Of tblReport_Assignment)
	
	Private _tblReport_DashBoard As EntityRef(Of tblReport_DashBoard)
	
	Private _tblReport_VIEW As EntityRef(Of tblReport_VIEW)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRIDChanged()
    End Sub
    Partial Private Sub OnNoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNoChanged()
    End Sub
    Partial Private Sub OnTITLEChanging(value As String)
    End Sub
    Partial Private Sub OnTITLEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnParentIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParentIDChanged()
    End Sub
    Partial Private Sub OnVIEW_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVIEW_IDChanged()
    End Sub
    Partial Private Sub OnDB_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDB_IDChanged()
    End Sub
    Partial Private Sub OnREPORT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnREPORT_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblReport_Assignments = New EntitySet(Of tblReport_Assignment)(AddressOf Me.attach_tblReport_Assignments, AddressOf Me.detach_tblReport_Assignments)
		Me._tblReport_DashBoard = CType(Nothing, EntityRef(Of tblReport_DashBoard))
		Me._tblReport_VIEW = CType(Nothing, EntityRef(Of tblReport_VIEW))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me.OnRIDChanging(value)
				Me.SendPropertyChanging
				Me._RID = value
				Me.SendPropertyChanged("RID")
				Me.OnRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No", DbType:="Int")>  _
	Public Property No() As System.Nullable(Of Integer)
		Get
			Return Me._No
		End Get
		Set
			If (Me._No.Equals(value) = false) Then
				Me.OnNoChanging(value)
				Me.SendPropertyChanging
				Me._No = value
				Me.SendPropertyChanged("No")
				Me.OnNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TITLE", DbType:="VarChar(255)")>  _
	Public Property TITLE() As String
		Get
			Return Me._TITLE
		End Get
		Set
			If (String.Equals(Me._TITLE, value) = false) Then
				Me.OnTITLEChanging(value)
				Me.SendPropertyChanging
				Me._TITLE = value
				Me.SendPropertyChanged("TITLE")
				Me.OnTITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="VarChar(255)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me.OnParentIDChanging(value)
				Me.SendPropertyChanging
				Me._ParentID = value
				Me.SendPropertyChanged("ParentID")
				Me.OnParentIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_ID", DbType:="Int")>  _
	Public Property VIEW_ID() As System.Nullable(Of Integer)
		Get
			Return Me._VIEW_ID
		End Get
		Set
			If (Me._VIEW_ID.Equals(value) = false) Then
				If Me._tblReport_VIEW.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnVIEW_IDChanging(value)
				Me.SendPropertyChanging
				Me._VIEW_ID = value
				Me.SendPropertyChanged("VIEW_ID")
				Me.OnVIEW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DB_ID", DbType:="Int")>  _
	Public Property DB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DB_ID
		End Get
		Set
			If (Me._DB_ID.Equals(value) = false) Then
				If Me._tblReport_DashBoard.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnDB_IDChanging(value)
				Me.SendPropertyChanging
				Me._DB_ID = value
				Me.SendPropertyChanged("DB_ID")
				Me.OnDB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_TYPE", DbType:="VarChar(50)")>  _
	Public Property REPORT_TYPE() As String
		Get
			Return Me._REPORT_TYPE
		End Get
		Set
			If (String.Equals(Me._REPORT_TYPE, value) = false) Then
				Me.OnREPORT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._REPORT_TYPE = value
				Me.SendPropertyChanged("REPORT_TYPE")
				Me.OnREPORT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_tblReport_Assignment", Storage:="_tblReport_Assignments", ThisKey:="RID", OtherKey:="RID")>  _
	Public Property tblReport_Assignments() As EntitySet(Of tblReport_Assignment)
		Get
			Return Me._tblReport_Assignments
		End Get
		Set
			Me._tblReport_Assignments.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_DashBoard_tblReport", Storage:="_tblReport_DashBoard", ThisKey:="DB_ID", OtherKey:="DB_ID", IsForeignKey:=true)>  _
	Public Property tblReport_DashBoard() As tblReport_DashBoard
		Get
			Return Me._tblReport_DashBoard.Entity
		End Get
		Set
			Dim previousValue As tblReport_DashBoard = Me._tblReport_DashBoard.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblReport_DashBoard.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblReport_DashBoard.Entity = Nothing
					previousValue.tblReports.Remove(Me)
				End If
				Me._tblReport_DashBoard.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblReports.Add(Me)
					Me._DB_ID = value.DB_ID
				Else
					Me._DB_ID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblReport_DashBoard")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEW_tblReport", Storage:="_tblReport_VIEW", ThisKey:="VIEW_ID", OtherKey:="VIEW_ID", IsForeignKey:=true)>  _
	Public Property tblReport_VIEW() As tblReport_VIEW
		Get
			Return Me._tblReport_VIEW.Entity
		End Get
		Set
			Dim previousValue As tblReport_VIEW = Me._tblReport_VIEW.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblReport_VIEW.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblReport_VIEW.Entity = Nothing
					previousValue.tblReports.Remove(Me)
				End If
				Me._tblReport_VIEW.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblReports.Add(Me)
					Me._VIEW_ID = value.VIEW_ID
				Else
					Me._VIEW_ID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblReport_VIEW")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblReport_Assignments(ByVal entity As tblReport_Assignment)
		Me.SendPropertyChanging
		entity.tblReport = Me
	End Sub
	
	Private Sub detach_tblReport_Assignments(ByVal entity As tblReport_Assignment)
		Me.SendPropertyChanging
		entity.tblReport = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReport_Assignment")>  _
Partial Public Class tblReport_Assignment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _RID As Integer
	
	Private _UserName As String
	
	Private _tblReport As EntityRef(Of tblReport)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblReport = CType(Nothing, EntityRef(Of tblReport))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				If Me._tblReport.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRIDChanging(value)
				Me.SendPropertyChanging
				Me._RID = value
				Me.SendPropertyChanged("RID")
				Me.OnRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_tblReport_Assignment", Storage:="_tblReport", ThisKey:="RID", OtherKey:="RID", IsForeignKey:=true)>  _
	Public Property tblReport() As tblReport
		Get
			Return Me._tblReport.Entity
		End Get
		Set
			Dim previousValue As tblReport = Me._tblReport.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblReport.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblReport.Entity = Nothing
					previousValue.tblReport_Assignments.Remove(Me)
				End If
				Me._tblReport.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblReport_Assignments.Add(Me)
					Me._RID = value.RID
				Else
					Me._RID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("tblReport")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReport_DashBoard")>  _
Partial Public Class tblReport_DashBoard
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DB_ID As Integer
	
	Private _DB_TITLE As String
	
	Private _DB_XML As String
	
	Private _VIEW_ID As System.Nullable(Of Integer)
	
	Private _tblReports As EntitySet(Of tblReport)
	
	Private _tblReport_VIEW As EntityRef(Of tblReport_VIEW)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDB_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDB_IDChanged()
    End Sub
    Partial Private Sub OnDB_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnDB_TITLEChanged()
    End Sub
    Partial Private Sub OnDB_XMLChanging(value As String)
    End Sub
    Partial Private Sub OnDB_XMLChanged()
    End Sub
    Partial Private Sub OnVIEW_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVIEW_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblReports = New EntitySet(Of tblReport)(AddressOf Me.attach_tblReports, AddressOf Me.detach_tblReports)
		Me._tblReport_VIEW = CType(Nothing, EntityRef(Of tblReport_VIEW))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DB_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DB_ID() As Integer
		Get
			Return Me._DB_ID
		End Get
		Set
			If ((Me._DB_ID = value)  _
						= false) Then
				Me.OnDB_IDChanging(value)
				Me.SendPropertyChanging
				Me._DB_ID = value
				Me.SendPropertyChanged("DB_ID")
				Me.OnDB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DB_TITLE", DbType:="VarChar(255)")>  _
	Public Property DB_TITLE() As String
		Get
			Return Me._DB_TITLE
		End Get
		Set
			If (String.Equals(Me._DB_TITLE, value) = false) Then
				Me.OnDB_TITLEChanging(value)
				Me.SendPropertyChanging
				Me._DB_TITLE = value
				Me.SendPropertyChanged("DB_TITLE")
				Me.OnDB_TITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DB_XML", DbType:="VarChar(255)")>  _
	Public Property DB_XML() As String
		Get
			Return Me._DB_XML
		End Get
		Set
			If (String.Equals(Me._DB_XML, value) = false) Then
				Me.OnDB_XMLChanging(value)
				Me.SendPropertyChanging
				Me._DB_XML = value
				Me.SendPropertyChanged("DB_XML")
				Me.OnDB_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_ID", DbType:="Int")>  _
	Public Property VIEW_ID() As System.Nullable(Of Integer)
		Get
			Return Me._VIEW_ID
		End Get
		Set
			If (Me._VIEW_ID.Equals(value) = false) Then
				If Me._tblReport_VIEW.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnVIEW_IDChanging(value)
				Me.SendPropertyChanging
				Me._VIEW_ID = value
				Me.SendPropertyChanged("VIEW_ID")
				Me.OnVIEW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_DashBoard_tblReport", Storage:="_tblReports", ThisKey:="DB_ID", OtherKey:="DB_ID")>  _
	Public Property tblReports() As EntitySet(Of tblReport)
		Get
			Return Me._tblReports
		End Get
		Set
			Me._tblReports.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEW_tblReport_DashBoard", Storage:="_tblReport_VIEW", ThisKey:="VIEW_ID", OtherKey:="VIEW_ID", IsForeignKey:=true)>  _
	Public Property tblReport_VIEW() As tblReport_VIEW
		Get
			Return Me._tblReport_VIEW.Entity
		End Get
		Set
			Dim previousValue As tblReport_VIEW = Me._tblReport_VIEW.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblReport_VIEW.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblReport_VIEW.Entity = Nothing
					previousValue.tblReport_DashBoards.Remove(Me)
				End If
				Me._tblReport_VIEW.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblReport_DashBoards.Add(Me)
					Me._VIEW_ID = value.VIEW_ID
				Else
					Me._VIEW_ID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblReport_VIEW")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblReports(ByVal entity As tblReport)
		Me.SendPropertyChanging
		entity.tblReport_DashBoard = Me
	End Sub
	
	Private Sub detach_tblReports(ByVal entity As tblReport)
		Me.SendPropertyChanging
		entity.tblReport_DashBoard = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReport_MasterData")>  _
Partial Public Class tblReport_MasterData
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Name As String
	
	Private _Value As System.Nullable(Of Integer)
	
	Private _GroupName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnValueChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnValueChanged()
    End Sub
    Partial Private Sub OnGroupNameChanging(value As String)
    End Sub
    Partial Private Sub OnGroupNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value", DbType:="Int")>  _
	Public Property Value() As System.Nullable(Of Integer)
		Get
			Return Me._Value
		End Get
		Set
			If (Me._Value.Equals(value) = false) Then
				Me.OnValueChanging(value)
				Me.SendPropertyChanging
				Me._Value = value
				Me.SendPropertyChanged("Value")
				Me.OnValueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupName", DbType:="VarChar(50)")>  _
	Public Property GroupName() As String
		Get
			Return Me._GroupName
		End Get
		Set
			If (String.Equals(Me._GroupName, value) = false) Then
				Me.OnGroupNameChanging(value)
				Me.SendPropertyChanging
				Me._GroupName = value
				Me.SendPropertyChanged("GroupName")
				Me.OnGroupNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReport_VIEWs")>  _
Partial Public Class tblReport_VIEW
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _VIEW_ID As Integer
	
	Private _VIEW_TITLE As String
	
	Private _VIEW_QUERY As String
	
	Private _VIEW_CONNECTION As String
	
	Private _Department As String
	
	Private _BIFile As String
	
	Private _tblReports As EntitySet(Of tblReport)
	
	Private _tblReport_DashBoards As EntitySet(Of tblReport_DashBoard)
	
	Private _tblReport_VIEWs_Fields As EntitySet(Of tblReport_VIEWs_Field)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVIEW_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnVIEW_IDChanged()
    End Sub
    Partial Private Sub OnVIEW_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnVIEW_TITLEChanged()
    End Sub
    Partial Private Sub OnVIEW_QUERYChanging(value As String)
    End Sub
    Partial Private Sub OnVIEW_QUERYChanged()
    End Sub
    Partial Private Sub OnVIEW_CONNECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnVIEW_CONNECTIONChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnBIFileChanging(value As String)
    End Sub
    Partial Private Sub OnBIFileChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblReports = New EntitySet(Of tblReport)(AddressOf Me.attach_tblReports, AddressOf Me.detach_tblReports)
		Me._tblReport_DashBoards = New EntitySet(Of tblReport_DashBoard)(AddressOf Me.attach_tblReport_DashBoards, AddressOf Me.detach_tblReport_DashBoards)
		Me._tblReport_VIEWs_Fields = New EntitySet(Of tblReport_VIEWs_Field)(AddressOf Me.attach_tblReport_VIEWs_Fields, AddressOf Me.detach_tblReport_VIEWs_Fields)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property VIEW_ID() As Integer
		Get
			Return Me._VIEW_ID
		End Get
		Set
			If ((Me._VIEW_ID = value)  _
						= false) Then
				Me.OnVIEW_IDChanging(value)
				Me.SendPropertyChanging
				Me._VIEW_ID = value
				Me.SendPropertyChanged("VIEW_ID")
				Me.OnVIEW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_TITLE", DbType:="VarChar(255)")>  _
	Public Property VIEW_TITLE() As String
		Get
			Return Me._VIEW_TITLE
		End Get
		Set
			If (String.Equals(Me._VIEW_TITLE, value) = false) Then
				Me.OnVIEW_TITLEChanging(value)
				Me.SendPropertyChanging
				Me._VIEW_TITLE = value
				Me.SendPropertyChanged("VIEW_TITLE")
				Me.OnVIEW_TITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_QUERY", DbType:="VarChar(255)")>  _
	Public Property VIEW_QUERY() As String
		Get
			Return Me._VIEW_QUERY
		End Get
		Set
			If (String.Equals(Me._VIEW_QUERY, value) = false) Then
				Me.OnVIEW_QUERYChanging(value)
				Me.SendPropertyChanging
				Me._VIEW_QUERY = value
				Me.SendPropertyChanged("VIEW_QUERY")
				Me.OnVIEW_QUERYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_CONNECTION", DbType:="VarChar(255)")>  _
	Public Property VIEW_CONNECTION() As String
		Get
			Return Me._VIEW_CONNECTION
		End Get
		Set
			If (String.Equals(Me._VIEW_CONNECTION, value) = false) Then
				Me.OnVIEW_CONNECTIONChanging(value)
				Me.SendPropertyChanging
				Me._VIEW_CONNECTION = value
				Me.SendPropertyChanged("VIEW_CONNECTION")
				Me.OnVIEW_CONNECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIFile", DbType:="VarChar(255)")>  _
	Public Property BIFile() As String
		Get
			Return Me._BIFile
		End Get
		Set
			If (String.Equals(Me._BIFile, value) = false) Then
				Me.OnBIFileChanging(value)
				Me.SendPropertyChanging
				Me._BIFile = value
				Me.SendPropertyChanged("BIFile")
				Me.OnBIFileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEW_tblReport", Storage:="_tblReports", ThisKey:="VIEW_ID", OtherKey:="VIEW_ID")>  _
	Public Property tblReports() As EntitySet(Of tblReport)
		Get
			Return Me._tblReports
		End Get
		Set
			Me._tblReports.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEW_tblReport_DashBoard", Storage:="_tblReport_DashBoards", ThisKey:="VIEW_ID", OtherKey:="VIEW_ID")>  _
	Public Property tblReport_DashBoards() As EntitySet(Of tblReport_DashBoard)
		Get
			Return Me._tblReport_DashBoards
		End Get
		Set
			Me._tblReport_DashBoards.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEW_tblReport_VIEWs_Field", Storage:="_tblReport_VIEWs_Fields", ThisKey:="VIEW_ID", OtherKey:="VIEW_ID")>  _
	Public Property tblReport_VIEWs_Fields() As EntitySet(Of tblReport_VIEWs_Field)
		Get
			Return Me._tblReport_VIEWs_Fields
		End Get
		Set
			Me._tblReport_VIEWs_Fields.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblReports(ByVal entity As tblReport)
		Me.SendPropertyChanging
		entity.tblReport_VIEW = Me
	End Sub
	
	Private Sub detach_tblReports(ByVal entity As tblReport)
		Me.SendPropertyChanging
		entity.tblReport_VIEW = Nothing
	End Sub
	
	Private Sub attach_tblReport_DashBoards(ByVal entity As tblReport_DashBoard)
		Me.SendPropertyChanging
		entity.tblReport_VIEW = Me
	End Sub
	
	Private Sub detach_tblReport_DashBoards(ByVal entity As tblReport_DashBoard)
		Me.SendPropertyChanging
		entity.tblReport_VIEW = Nothing
	End Sub
	
	Private Sub attach_tblReport_VIEWs_Fields(ByVal entity As tblReport_VIEWs_Field)
		Me.SendPropertyChanging
		entity.tblReport_VIEW = Me
	End Sub
	
	Private Sub detach_tblReport_VIEWs_Fields(ByVal entity As tblReport_VIEWs_Field)
		Me.SendPropertyChanging
		entity.tblReport_VIEW = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReportMaster_Template")>  _
Partial Public Class tblReportMaster_Template
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MASTER_ID As Integer
	
	Private _RID As Integer
	
	Private _FIELD_ID As Integer
	
	Private _AREA As System.Nullable(Of Integer)
	
	Private _ORDERBY As System.Nullable(Of Integer)
	
	Private _tblReportMaster_FilterValues As EntitySet(Of tblReportMaster_FilterValue)
	
	Private _tblReport_VIEWs_Field As EntityRef(Of tblReport_VIEWs_Field)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMASTER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMASTER_IDChanged()
    End Sub
    Partial Private Sub OnRIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRIDChanged()
    End Sub
    Partial Private Sub OnFIELD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFIELD_IDChanged()
    End Sub
    Partial Private Sub OnAREAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAREAChanged()
    End Sub
    Partial Private Sub OnORDERBYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORDERBYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblReportMaster_FilterValues = New EntitySet(Of tblReportMaster_FilterValue)(AddressOf Me.attach_tblReportMaster_FilterValues, AddressOf Me.detach_tblReportMaster_FilterValues)
		Me._tblReport_VIEWs_Field = CType(Nothing, EntityRef(Of tblReport_VIEWs_Field))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MASTER_ID() As Integer
		Get
			Return Me._MASTER_ID
		End Get
		Set
			If ((Me._MASTER_ID = value)  _
						= false) Then
				Me.OnMASTER_IDChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_ID = value
				Me.SendPropertyChanged("MASTER_ID")
				Me.OnMASTER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", DbType:="Int NOT NULL")>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me.OnRIDChanging(value)
				Me.SendPropertyChanging
				Me._RID = value
				Me.SendPropertyChanged("RID")
				Me.OnRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_ID", DbType:="Int NOT NULL")>  _
	Public Property FIELD_ID() As Integer
		Get
			Return Me._FIELD_ID
		End Get
		Set
			If ((Me._FIELD_ID = value)  _
						= false) Then
				If Me._tblReport_VIEWs_Field.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFIELD_IDChanging(value)
				Me.SendPropertyChanging
				Me._FIELD_ID = value
				Me.SendPropertyChanged("FIELD_ID")
				Me.OnFIELD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA", DbType:="Int")>  _
	Public Property AREA() As System.Nullable(Of Integer)
		Get
			Return Me._AREA
		End Get
		Set
			If (Me._AREA.Equals(value) = false) Then
				Me.OnAREAChanging(value)
				Me.SendPropertyChanging
				Me._AREA = value
				Me.SendPropertyChanged("AREA")
				Me.OnAREAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDERBY", DbType:="Int")>  _
	Public Property ORDERBY() As System.Nullable(Of Integer)
		Get
			Return Me._ORDERBY
		End Get
		Set
			If (Me._ORDERBY.Equals(value) = false) Then
				Me.OnORDERBYChanging(value)
				Me.SendPropertyChanging
				Me._ORDERBY = value
				Me.SendPropertyChanged("ORDERBY")
				Me.OnORDERBYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReportMaster_Template_tblReportMaster_FilterValue", Storage:="_tblReportMaster_FilterValues", ThisKey:="MASTER_ID", OtherKey:="MASTER_ID")>  _
	Public Property tblReportMaster_FilterValues() As EntitySet(Of tblReportMaster_FilterValue)
		Get
			Return Me._tblReportMaster_FilterValues
		End Get
		Set
			Me._tblReportMaster_FilterValues.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEWs_Field_tblReportMaster_Template", Storage:="_tblReport_VIEWs_Field", ThisKey:="FIELD_ID", OtherKey:="FIELD_ID", IsForeignKey:=true)>  _
	Public Property tblReport_VIEWs_Field() As tblReport_VIEWs_Field
		Get
			Return Me._tblReport_VIEWs_Field.Entity
		End Get
		Set
			Dim previousValue As tblReport_VIEWs_Field = Me._tblReport_VIEWs_Field.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblReport_VIEWs_Field.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblReport_VIEWs_Field.Entity = Nothing
					previousValue.tblReportMaster_Templates.Remove(Me)
				End If
				Me._tblReport_VIEWs_Field.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblReportMaster_Templates.Add(Me)
					Me._FIELD_ID = value.FIELD_ID
				Else
					Me._FIELD_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("tblReport_VIEWs_Field")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblReportMaster_FilterValues(ByVal entity As tblReportMaster_FilterValue)
		Me.SendPropertyChanging
		entity.tblReportMaster_Template = Me
	End Sub
	
	Private Sub detach_tblReportMaster_FilterValues(ByVal entity As tblReportMaster_FilterValue)
		Me.SendPropertyChanging
		entity.tblReportMaster_Template = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReportUser_Template")>  _
Partial Public Class tblReportUser_Template
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _RID As Integer
	
	Private _FIELD_ID As Integer
	
	Private _AREA As Integer
	
	Private _OWNER As String
	
	Private _ORDERBY As System.Nullable(Of Integer)
	
	Private _tblReportUser_FilterValues As EntitySet(Of tblReportUser_FilterValue)
	
	Private _tblReport_VIEWs_Field As EntityRef(Of tblReport_VIEWs_Field)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRIDChanged()
    End Sub
    Partial Private Sub OnFIELD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFIELD_IDChanged()
    End Sub
    Partial Private Sub OnAREAChanging(value As Integer)
    End Sub
    Partial Private Sub OnAREAChanged()
    End Sub
    Partial Private Sub OnOWNERChanging(value As String)
    End Sub
    Partial Private Sub OnOWNERChanged()
    End Sub
    Partial Private Sub OnORDERBYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORDERBYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblReportUser_FilterValues = New EntitySet(Of tblReportUser_FilterValue)(AddressOf Me.attach_tblReportUser_FilterValues, AddressOf Me.detach_tblReportUser_FilterValues)
		Me._tblReport_VIEWs_Field = CType(Nothing, EntityRef(Of tblReport_VIEWs_Field))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", DbType:="Int NOT NULL")>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me.OnRIDChanging(value)
				Me.SendPropertyChanging
				Me._RID = value
				Me.SendPropertyChanged("RID")
				Me.OnRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_ID", DbType:="Int NOT NULL")>  _
	Public Property FIELD_ID() As Integer
		Get
			Return Me._FIELD_ID
		End Get
		Set
			If ((Me._FIELD_ID = value)  _
						= false) Then
				If Me._tblReport_VIEWs_Field.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFIELD_IDChanging(value)
				Me.SendPropertyChanging
				Me._FIELD_ID = value
				Me.SendPropertyChanged("FIELD_ID")
				Me.OnFIELD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA", DbType:="Int NOT NULL")>  _
	Public Property AREA() As Integer
		Get
			Return Me._AREA
		End Get
		Set
			If ((Me._AREA = value)  _
						= false) Then
				Me.OnAREAChanging(value)
				Me.SendPropertyChanging
				Me._AREA = value
				Me.SendPropertyChanged("AREA")
				Me.OnAREAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWNER", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OWNER() As String
		Get
			Return Me._OWNER
		End Get
		Set
			If (String.Equals(Me._OWNER, value) = false) Then
				Me.OnOWNERChanging(value)
				Me.SendPropertyChanging
				Me._OWNER = value
				Me.SendPropertyChanged("OWNER")
				Me.OnOWNERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDERBY", DbType:="Int")>  _
	Public Property ORDERBY() As System.Nullable(Of Integer)
		Get
			Return Me._ORDERBY
		End Get
		Set
			If (Me._ORDERBY.Equals(value) = false) Then
				Me.OnORDERBYChanging(value)
				Me.SendPropertyChanging
				Me._ORDERBY = value
				Me.SendPropertyChanged("ORDERBY")
				Me.OnORDERBYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReportUser_Template_tblReportUser_FilterValue", Storage:="_tblReportUser_FilterValues", ThisKey:="ID", OtherKey:="ID")>  _
	Public Property tblReportUser_FilterValues() As EntitySet(Of tblReportUser_FilterValue)
		Get
			Return Me._tblReportUser_FilterValues
		End Get
		Set
			Me._tblReportUser_FilterValues.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEWs_Field_tblReportUser_Template", Storage:="_tblReport_VIEWs_Field", ThisKey:="FIELD_ID", OtherKey:="FIELD_ID", IsForeignKey:=true)>  _
	Public Property tblReport_VIEWs_Field() As tblReport_VIEWs_Field
		Get
			Return Me._tblReport_VIEWs_Field.Entity
		End Get
		Set
			Dim previousValue As tblReport_VIEWs_Field = Me._tblReport_VIEWs_Field.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblReport_VIEWs_Field.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblReport_VIEWs_Field.Entity = Nothing
					previousValue.tblReportUser_Templates.Remove(Me)
				End If
				Me._tblReport_VIEWs_Field.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblReportUser_Templates.Add(Me)
					Me._FIELD_ID = value.FIELD_ID
				Else
					Me._FIELD_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("tblReport_VIEWs_Field")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblReportUser_FilterValues(ByVal entity As tblReportUser_FilterValue)
		Me.SendPropertyChanging
		entity.tblReportUser_Template = Me
	End Sub
	
	Private Sub detach_tblReportUser_FilterValues(ByVal entity As tblReportUser_FilterValue)
		Me.SendPropertyChanging
		entity.tblReportUser_Template = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_REPORT_ASSIGNMENT")>  _
Partial Public Class V_REPORT_ASSIGNMENT
	
	Private _RID As Integer
	
	Private _No As System.Nullable(Of Integer)
	
	Private _TITLE As String
	
	Private _DESCRIPTION As String
	
	Private _DEPARTMENT As String
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _VIEW_ID As System.Nullable(Of Integer)
	
	Private _DB_ID As System.Nullable(Of Integer)
	
	Private _REPORT_TYPE As String
	
	Private _UserName As String
	
	Private _SelectNode As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", DbType:="Int NOT NULL")>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me._RID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No", DbType:="Int")>  _
	Public Property No() As System.Nullable(Of Integer)
		Get
			Return Me._No
		End Get
		Set
			If (Me._No.Equals(value) = false) Then
				Me._No = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TITLE", DbType:="VarChar(255)")>  _
	Public Property TITLE() As String
		Get
			Return Me._TITLE
		End Get
		Set
			If (String.Equals(Me._TITLE, value) = false) Then
				Me._TITLE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="VarChar(255)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me._DESCRIPTION = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me._DEPARTMENT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me._ParentID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_ID", DbType:="Int")>  _
	Public Property VIEW_ID() As System.Nullable(Of Integer)
		Get
			Return Me._VIEW_ID
		End Get
		Set
			If (Me._VIEW_ID.Equals(value) = false) Then
				Me._VIEW_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DB_ID", DbType:="Int")>  _
	Public Property DB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DB_ID
		End Get
		Set
			If (Me._DB_ID.Equals(value) = false) Then
				Me._DB_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_TYPE", DbType:="VarChar(50)")>  _
	Public Property REPORT_TYPE() As String
		Get
			Return Me._REPORT_TYPE
		End Get
		Set
			If (String.Equals(Me._REPORT_TYPE, value) = false) Then
				Me._REPORT_TYPE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="VarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SelectNode", DbType:="Int")>  _
	Public Property SelectNode() As System.Nullable(Of Integer)
		Get
			Return Me._SelectNode
		End Get
		Set
			If (Me._SelectNode.Equals(value) = false) Then
				Me._SelectNode = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_REPORT_BI")>  _
Partial Public Class V_REPORT_BI
	
	Private _RID As Integer
	
	Private _No As System.Nullable(Of Integer)
	
	Private _TITLE As String
	
	Private _DESCRIPTION As String
	
	Private _DEPARTMENT As String
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _REPORT_TYPE As String
	
	Private _VIEW_TITLE As String
	
	Private _VIEW_QUERY As String
	
	Private _VIEW_CONNECTION As String
	
	Private _BIFile As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", DbType:="Int NOT NULL")>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me._RID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No", DbType:="Int")>  _
	Public Property No() As System.Nullable(Of Integer)
		Get
			Return Me._No
		End Get
		Set
			If (Me._No.Equals(value) = false) Then
				Me._No = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TITLE", DbType:="VarChar(255)")>  _
	Public Property TITLE() As String
		Get
			Return Me._TITLE
		End Get
		Set
			If (String.Equals(Me._TITLE, value) = false) Then
				Me._TITLE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="VarChar(255)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me._DESCRIPTION = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me._DEPARTMENT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me._ParentID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_TYPE", DbType:="VarChar(50)")>  _
	Public Property REPORT_TYPE() As String
		Get
			Return Me._REPORT_TYPE
		End Get
		Set
			If (String.Equals(Me._REPORT_TYPE, value) = false) Then
				Me._REPORT_TYPE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_TITLE", DbType:="VarChar(255)")>  _
	Public Property VIEW_TITLE() As String
		Get
			Return Me._VIEW_TITLE
		End Get
		Set
			If (String.Equals(Me._VIEW_TITLE, value) = false) Then
				Me._VIEW_TITLE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_QUERY", DbType:="VarChar(255)")>  _
	Public Property VIEW_QUERY() As String
		Get
			Return Me._VIEW_QUERY
		End Get
		Set
			If (String.Equals(Me._VIEW_QUERY, value) = false) Then
				Me._VIEW_QUERY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_CONNECTION", DbType:="VarChar(255)")>  _
	Public Property VIEW_CONNECTION() As String
		Get
			Return Me._VIEW_CONNECTION
		End Get
		Set
			If (String.Equals(Me._VIEW_CONNECTION, value) = false) Then
				Me._VIEW_CONNECTION = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIFile", DbType:="VarChar(255)")>  _
	Public Property BIFile() As String
		Get
			Return Me._BIFile
		End Get
		Set
			If (String.Equals(Me._BIFile, value) = false) Then
				Me._BIFile = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_REPORT_DB")>  _
Partial Public Class V_REPORT_DB
	
	Private _RID As Integer
	
	Private _No As System.Nullable(Of Integer)
	
	Private _TITLE As String
	
	Private _DESCRIPTION As String
	
	Private _DEPARTMENT As String
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _REPORT_TYPE As String
	
	Private _DB_ID As System.Nullable(Of Integer)
	
	Private _DB_TITLE As String
	
	Private _DB_XML As String
	
	Private _VIEW_QUERY As String
	
	Private _VIEW_CONNECTION As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", DbType:="Int NOT NULL")>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me._RID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No", DbType:="Int")>  _
	Public Property No() As System.Nullable(Of Integer)
		Get
			Return Me._No
		End Get
		Set
			If (Me._No.Equals(value) = false) Then
				Me._No = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TITLE", DbType:="VarChar(255)")>  _
	Public Property TITLE() As String
		Get
			Return Me._TITLE
		End Get
		Set
			If (String.Equals(Me._TITLE, value) = false) Then
				Me._TITLE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="VarChar(255)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me._DESCRIPTION = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me._DEPARTMENT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me._ParentID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPORT_TYPE", DbType:="VarChar(50)")>  _
	Public Property REPORT_TYPE() As String
		Get
			Return Me._REPORT_TYPE
		End Get
		Set
			If (String.Equals(Me._REPORT_TYPE, value) = false) Then
				Me._REPORT_TYPE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DB_ID", DbType:="Int")>  _
	Public Property DB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DB_ID
		End Get
		Set
			If (Me._DB_ID.Equals(value) = false) Then
				Me._DB_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DB_TITLE", DbType:="VarChar(255)")>  _
	Public Property DB_TITLE() As String
		Get
			Return Me._DB_TITLE
		End Get
		Set
			If (String.Equals(Me._DB_TITLE, value) = false) Then
				Me._DB_TITLE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DB_XML", DbType:="VarChar(255)")>  _
	Public Property DB_XML() As String
		Get
			Return Me._DB_XML
		End Get
		Set
			If (String.Equals(Me._DB_XML, value) = false) Then
				Me._DB_XML = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_QUERY", DbType:="VarChar(255)")>  _
	Public Property VIEW_QUERY() As String
		Get
			Return Me._VIEW_QUERY
		End Get
		Set
			If (String.Equals(Me._VIEW_QUERY, value) = false) Then
				Me._VIEW_QUERY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_CONNECTION", DbType:="VarChar(255)")>  _
	Public Property VIEW_CONNECTION() As String
		Get
			Return Me._VIEW_CONNECTION
		End Get
		Set
			If (String.Equals(Me._VIEW_CONNECTION, value) = false) Then
				Me._VIEW_CONNECTION = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_REPORT_MASTER_TEMPLATE")>  _
Partial Public Class V_REPORT_MASTER_TEMPLATE
	
	Private _FIELD_ID As Integer
	
	Private _FIELD_CAPTION As String
	
	Private _FIELD_NAME As String
	
	Private _SummaryType As System.Nullable(Of Integer)
	
	Private _CellFormat_FormatType As System.Nullable(Of Integer)
	
	Private _CellFormat_FormatString As String
	
	Private _UnboundExpressionMode As System.Nullable(Of Integer)
	
	Private _UnboundExpression As String
	
	Private _UnboundColumnType As System.Nullable(Of Integer)
	
	Private _GroupInterval As System.Nullable(Of Integer)
	
	Private _RID As Integer
	
	Private _MASTER_ID As System.Nullable(Of Integer)
	
	Private _AREA As System.Nullable(Of Integer)
	
	Private _ORDERBY As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_ID", DbType:="Int NOT NULL")>  _
	Public Property FIELD_ID() As Integer
		Get
			Return Me._FIELD_ID
		End Get
		Set
			If ((Me._FIELD_ID = value)  _
						= false) Then
				Me._FIELD_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_CAPTION", DbType:="VarChar(50)")>  _
	Public Property FIELD_CAPTION() As String
		Get
			Return Me._FIELD_CAPTION
		End Get
		Set
			If (String.Equals(Me._FIELD_CAPTION, value) = false) Then
				Me._FIELD_CAPTION = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_NAME", DbType:="VarChar(50)")>  _
	Public Property FIELD_NAME() As String
		Get
			Return Me._FIELD_NAME
		End Get
		Set
			If (String.Equals(Me._FIELD_NAME, value) = false) Then
				Me._FIELD_NAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SummaryType", DbType:="Int")>  _
	Public Property SummaryType() As System.Nullable(Of Integer)
		Get
			Return Me._SummaryType
		End Get
		Set
			If (Me._SummaryType.Equals(value) = false) Then
				Me._SummaryType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CellFormat_FormatType", DbType:="Int")>  _
	Public Property CellFormat_FormatType() As System.Nullable(Of Integer)
		Get
			Return Me._CellFormat_FormatType
		End Get
		Set
			If (Me._CellFormat_FormatType.Equals(value) = false) Then
				Me._CellFormat_FormatType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CellFormat_FormatString", DbType:="VarChar(10)")>  _
	Public Property CellFormat_FormatString() As String
		Get
			Return Me._CellFormat_FormatString
		End Get
		Set
			If (String.Equals(Me._CellFormat_FormatString, value) = false) Then
				Me._CellFormat_FormatString = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnboundExpressionMode", DbType:="Int")>  _
	Public Property UnboundExpressionMode() As System.Nullable(Of Integer)
		Get
			Return Me._UnboundExpressionMode
		End Get
		Set
			If (Me._UnboundExpressionMode.Equals(value) = false) Then
				Me._UnboundExpressionMode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnboundExpression", DbType:="VarChar(50)")>  _
	Public Property UnboundExpression() As String
		Get
			Return Me._UnboundExpression
		End Get
		Set
			If (String.Equals(Me._UnboundExpression, value) = false) Then
				Me._UnboundExpression = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnboundColumnType", DbType:="Int")>  _
	Public Property UnboundColumnType() As System.Nullable(Of Integer)
		Get
			Return Me._UnboundColumnType
		End Get
		Set
			If (Me._UnboundColumnType.Equals(value) = false) Then
				Me._UnboundColumnType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupInterval", DbType:="Int")>  _
	Public Property GroupInterval() As System.Nullable(Of Integer)
		Get
			Return Me._GroupInterval
		End Get
		Set
			If (Me._GroupInterval.Equals(value) = false) Then
				Me._GroupInterval = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", DbType:="Int NOT NULL")>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me._RID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_ID", DbType:="Int")>  _
	Public Property MASTER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MASTER_ID
		End Get
		Set
			If (Me._MASTER_ID.Equals(value) = false) Then
				Me._MASTER_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA", DbType:="Int")>  _
	Public Property AREA() As System.Nullable(Of Integer)
		Get
			Return Me._AREA
		End Get
		Set
			If (Me._AREA.Equals(value) = false) Then
				Me._AREA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDERBY", DbType:="Int")>  _
	Public Property ORDERBY() As System.Nullable(Of Integer)
		Get
			Return Me._ORDERBY
		End Get
		Set
			If (Me._ORDERBY.Equals(value) = false) Then
				Me._ORDERBY = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_REPORT_USER_TEMPLATE")>  _
Partial Public Class V_REPORT_USER_TEMPLATE
	
	Private _FIELD_ID As Integer
	
	Private _TEMPLATE_CAPTION As String
	
	Private _TEMPLATE_NAME As String
	
	Private _SummaryType As System.Nullable(Of Integer)
	
	Private _CellFormat_FormatType As System.Nullable(Of Integer)
	
	Private _CellFormat_FormatString As String
	
	Private _UnboundExpressionMode As System.Nullable(Of Integer)
	
	Private _UnboundExpression As String
	
	Private _UnboundColumnType As System.Nullable(Of Integer)
	
	Private _GroupInterval As System.Nullable(Of Integer)
	
	Private _RID As Integer
	
	Private _MASTER_ID As System.Nullable(Of Integer)
	
	Private _TEMPLATE_AREA As System.Nullable(Of Integer)
	
	Private _TEMPLATE_ORDERBY As System.Nullable(Of Integer)
	
	Private _ID As Integer
	
	Private _OWNER As String
	
	Private _AREA As Integer
	
	Private _ORDERBY As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_ID", DbType:="Int NOT NULL")>  _
	Public Property FIELD_ID() As Integer
		Get
			Return Me._FIELD_ID
		End Get
		Set
			If ((Me._FIELD_ID = value)  _
						= false) Then
				Me._FIELD_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_CAPTION", DbType:="VarChar(50)")>  _
	Public Property TEMPLATE_CAPTION() As String
		Get
			Return Me._TEMPLATE_CAPTION
		End Get
		Set
			If (String.Equals(Me._TEMPLATE_CAPTION, value) = false) Then
				Me._TEMPLATE_CAPTION = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_NAME", DbType:="VarChar(50)")>  _
	Public Property TEMPLATE_NAME() As String
		Get
			Return Me._TEMPLATE_NAME
		End Get
		Set
			If (String.Equals(Me._TEMPLATE_NAME, value) = false) Then
				Me._TEMPLATE_NAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SummaryType", DbType:="Int")>  _
	Public Property SummaryType() As System.Nullable(Of Integer)
		Get
			Return Me._SummaryType
		End Get
		Set
			If (Me._SummaryType.Equals(value) = false) Then
				Me._SummaryType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CellFormat_FormatType", DbType:="Int")>  _
	Public Property CellFormat_FormatType() As System.Nullable(Of Integer)
		Get
			Return Me._CellFormat_FormatType
		End Get
		Set
			If (Me._CellFormat_FormatType.Equals(value) = false) Then
				Me._CellFormat_FormatType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CellFormat_FormatString", DbType:="VarChar(10)")>  _
	Public Property CellFormat_FormatString() As String
		Get
			Return Me._CellFormat_FormatString
		End Get
		Set
			If (String.Equals(Me._CellFormat_FormatString, value) = false) Then
				Me._CellFormat_FormatString = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnboundExpressionMode", DbType:="Int")>  _
	Public Property UnboundExpressionMode() As System.Nullable(Of Integer)
		Get
			Return Me._UnboundExpressionMode
		End Get
		Set
			If (Me._UnboundExpressionMode.Equals(value) = false) Then
				Me._UnboundExpressionMode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnboundExpression", DbType:="VarChar(50)")>  _
	Public Property UnboundExpression() As String
		Get
			Return Me._UnboundExpression
		End Get
		Set
			If (String.Equals(Me._UnboundExpression, value) = false) Then
				Me._UnboundExpression = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnboundColumnType", DbType:="Int")>  _
	Public Property UnboundColumnType() As System.Nullable(Of Integer)
		Get
			Return Me._UnboundColumnType
		End Get
		Set
			If (Me._UnboundColumnType.Equals(value) = false) Then
				Me._UnboundColumnType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupInterval", DbType:="Int")>  _
	Public Property GroupInterval() As System.Nullable(Of Integer)
		Get
			Return Me._GroupInterval
		End Get
		Set
			If (Me._GroupInterval.Equals(value) = false) Then
				Me._GroupInterval = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", DbType:="Int NOT NULL")>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me._RID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_ID", DbType:="Int")>  _
	Public Property MASTER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MASTER_ID
		End Get
		Set
			If (Me._MASTER_ID.Equals(value) = false) Then
				Me._MASTER_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_AREA", DbType:="Int")>  _
	Public Property TEMPLATE_AREA() As System.Nullable(Of Integer)
		Get
			Return Me._TEMPLATE_AREA
		End Get
		Set
			If (Me._TEMPLATE_AREA.Equals(value) = false) Then
				Me._TEMPLATE_AREA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_ORDERBY", DbType:="Int")>  _
	Public Property TEMPLATE_ORDERBY() As System.Nullable(Of Integer)
		Get
			Return Me._TEMPLATE_ORDERBY
		End Get
		Set
			If (Me._TEMPLATE_ORDERBY.Equals(value) = false) Then
				Me._TEMPLATE_ORDERBY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWNER", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OWNER() As String
		Get
			Return Me._OWNER
		End Get
		Set
			If (String.Equals(Me._OWNER, value) = false) Then
				Me._OWNER = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREA", DbType:="Int NOT NULL")>  _
	Public Property AREA() As Integer
		Get
			Return Me._AREA
		End Get
		Set
			If ((Me._AREA = value)  _
						= false) Then
				Me._AREA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDERBY", DbType:="Int")>  _
	Public Property ORDERBY() As System.Nullable(Of Integer)
		Get
			Return Me._ORDERBY
		End Get
		Set
			If (Me._ORDERBY.Equals(value) = false) Then
				Me._ORDERBY = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_NAPD_SUMMARY")>  _
Partial Public Class V_NAPD_SUMMARY
	
	Private _ID As Integer
	
	Private _BillingYear As System.Nullable(Of Integer)
	
	Private _BillingMonth As System.Nullable(Of Integer)
	
	Private _EffYear As System.Nullable(Of Integer)
	
	Private _EffMonth As System.Nullable(Of Integer)
	
	Private _ExpYear As System.Nullable(Of Integer)
	
	Private _ExpMonth As System.Nullable(Of Integer)
	
	Private _GROUP As String
	
	Private _AE As String
	
	Private _AEGRP As String
	
	Private _RISKI As String
	
	Private _RISKII As String
	
	Private _RISKGOV As String
	
	Private _CURRENCY As String
	
	Private _EXC_RATE As System.Nullable(Of Double)
	
	Private _UWNAME As String
	
	Private _GROUPNAME As String
	
	Private _GGRP As String
	
	Private _MGROUP As String
	
	Private _MGNAME As String
	
	Private _SOURCE As String
	
	Private _SOURCENAME As String
	
	Private _INDUSTRY As String
	
	Private _CHANNEL As String
	
	Private _Description As String
	
	Private _ShortDesc As String
	
	Private _GovtGroup As String
	
	Private _LWTGroup As String
	
	Private _GroupClass As String
	
	Private _Department As String
	
	Private _MiscClass As String
	
	Private _ORIGI_AMT As System.Nullable(Of Double)
	
	Private _PREM_IN_T As System.Nullable(Of Double)
	
	Private _OLD_SA_T As System.Nullable(Of Double)
	
	Private _NET_SA_T As System.Nullable(Of Double)
	
	Private _DIS_IN_T As System.Nullable(Of Double)
	
	Private _BROK_IN_T As System.Nullable(Of Double)
	
	Private _NET_IR_T As System.Nullable(Of Double)
	
	Private _GROS_IN_T As System.Nullable(Of Double)
	
	Private _NETBROK As System.Nullable(Of Double)
	
	Private _VAT_T As System.Nullable(Of Double)
	
	Private _STAMP_P As System.Nullable(Of Double)
	
	Private _ORIN As System.Nullable(Of Double)
	
	Private _OROUT As System.Nullable(Of Double)
	
	Private _ADMININ1 As System.Nullable(Of Double)
	
	Private _ADMININ2 As System.Nullable(Of Double)
	
	Private _ADMINOUT1 As System.Nullable(Of Double)
	
	Private _ADMINOUT2 As System.Nullable(Of Double)
	
	Private _TRANS As System.Nullable(Of Double)
	
	Private _COMMIN As System.Nullable(Of Double)
	
	Private _NETBROK_P As System.Nullable(Of Double)
	
	Private _ORIN_P As System.Nullable(Of Double)
	
	Private _ADMININ1_P As System.Nullable(Of Double)
	
	Private _ADMININ2_P As System.Nullable(Of Double)
	
	Private _COMMIN_P As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingYear", DbType:="Int")>  _
	Public Property BillingYear() As System.Nullable(Of Integer)
		Get
			Return Me._BillingYear
		End Get
		Set
			If (Me._BillingYear.Equals(value) = false) Then
				Me._BillingYear = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingMonth", DbType:="Int")>  _
	Public Property BillingMonth() As System.Nullable(Of Integer)
		Get
			Return Me._BillingMonth
		End Get
		Set
			If (Me._BillingMonth.Equals(value) = false) Then
				Me._BillingMonth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffYear", DbType:="Int")>  _
	Public Property EffYear() As System.Nullable(Of Integer)
		Get
			Return Me._EffYear
		End Get
		Set
			If (Me._EffYear.Equals(value) = false) Then
				Me._EffYear = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffMonth", DbType:="Int")>  _
	Public Property EffMonth() As System.Nullable(Of Integer)
		Get
			Return Me._EffMonth
		End Get
		Set
			If (Me._EffMonth.Equals(value) = false) Then
				Me._EffMonth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpYear", DbType:="Int")>  _
	Public Property ExpYear() As System.Nullable(Of Integer)
		Get
			Return Me._ExpYear
		End Get
		Set
			If (Me._ExpYear.Equals(value) = false) Then
				Me._ExpYear = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpMonth", DbType:="Int")>  _
	Public Property ExpMonth() As System.Nullable(Of Integer)
		Get
			Return Me._ExpMonth
		End Get
		Set
			If (Me._ExpMonth.Equals(value) = false) Then
				Me._ExpMonth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP", DbType:="VarChar(255)")>  _
	Public Property [GROUP]() As String
		Get
			Return Me._GROUP
		End Get
		Set
			If (String.Equals(Me._GROUP, value) = false) Then
				Me._GROUP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AE", DbType:="VarChar(255)")>  _
	Public Property AE() As String
		Get
			Return Me._AE
		End Get
		Set
			If (String.Equals(Me._AE, value) = false) Then
				Me._AE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AEGRP", DbType:="VarChar(255)")>  _
	Public Property AEGRP() As String
		Get
			Return Me._AEGRP
		End Get
		Set
			If (String.Equals(Me._AEGRP, value) = false) Then
				Me._AEGRP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISKI", DbType:="VarChar(255)")>  _
	Public Property RISKI() As String
		Get
			Return Me._RISKI
		End Get
		Set
			If (String.Equals(Me._RISKI, value) = false) Then
				Me._RISKI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISKII", DbType:="VarChar(255)")>  _
	Public Property RISKII() As String
		Get
			Return Me._RISKII
		End Get
		Set
			If (String.Equals(Me._RISKII, value) = false) Then
				Me._RISKII = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISKGOV", DbType:="VarChar(255)")>  _
	Public Property RISKGOV() As String
		Get
			Return Me._RISKGOV
		End Get
		Set
			If (String.Equals(Me._RISKGOV, value) = false) Then
				Me._RISKGOV = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CURRENCY", DbType:="VarChar(255)")>  _
	Public Property CURRENCY() As String
		Get
			Return Me._CURRENCY
		End Get
		Set
			If (String.Equals(Me._CURRENCY, value) = false) Then
				Me._CURRENCY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXC_RATE", DbType:="Float")>  _
	Public Property EXC_RATE() As System.Nullable(Of Double)
		Get
			Return Me._EXC_RATE
		End Get
		Set
			If (Me._EXC_RATE.Equals(value) = false) Then
				Me._EXC_RATE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWNAME", DbType:="VarChar(255)")>  _
	Public Property UWNAME() As String
		Get
			Return Me._UWNAME
		End Get
		Set
			If (String.Equals(Me._UWNAME, value) = false) Then
				Me._UWNAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPNAME", DbType:="VarChar(255)")>  _
	Public Property GROUPNAME() As String
		Get
			Return Me._GROUPNAME
		End Get
		Set
			If (String.Equals(Me._GROUPNAME, value) = false) Then
				Me._GROUPNAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GGRP", DbType:="VarChar(255)")>  _
	Public Property GGRP() As String
		Get
			Return Me._GGRP
		End Get
		Set
			If (String.Equals(Me._GGRP, value) = false) Then
				Me._GGRP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MGROUP", DbType:="VarChar(255)")>  _
	Public Property MGROUP() As String
		Get
			Return Me._MGROUP
		End Get
		Set
			If (String.Equals(Me._MGROUP, value) = false) Then
				Me._MGROUP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MGNAME", DbType:="VarChar(255)")>  _
	Public Property MGNAME() As String
		Get
			Return Me._MGNAME
		End Get
		Set
			If (String.Equals(Me._MGNAME, value) = false) Then
				Me._MGNAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOURCE", DbType:="VarChar(255)")>  _
	Public Property SOURCE() As String
		Get
			Return Me._SOURCE
		End Get
		Set
			If (String.Equals(Me._SOURCE, value) = false) Then
				Me._SOURCE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOURCENAME", DbType:="VarChar(255)")>  _
	Public Property SOURCENAME() As String
		Get
			Return Me._SOURCENAME
		End Get
		Set
			If (String.Equals(Me._SOURCENAME, value) = false) Then
				Me._SOURCENAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INDUSTRY", DbType:="VarChar(255)")>  _
	Public Property INDUSTRY() As String
		Get
			Return Me._INDUSTRY
		End Get
		Set
			If (String.Equals(Me._INDUSTRY, value) = false) Then
				Me._INDUSTRY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHANNEL", DbType:="VarChar(255)")>  _
	Public Property CHANNEL() As String
		Get
			Return Me._CHANNEL
		End Get
		Set
			If (String.Equals(Me._CHANNEL, value) = false) Then
				Me._CHANNEL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(255)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShortDesc", DbType:="VarChar(255)")>  _
	Public Property ShortDesc() As String
		Get
			Return Me._ShortDesc
		End Get
		Set
			If (String.Equals(Me._ShortDesc, value) = false) Then
				Me._ShortDesc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GovtGroup", DbType:="VarChar(255)")>  _
	Public Property GovtGroup() As String
		Get
			Return Me._GovtGroup
		End Get
		Set
			If (String.Equals(Me._GovtGroup, value) = false) Then
				Me._GovtGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LWTGroup", DbType:="VarChar(255)")>  _
	Public Property LWTGroup() As String
		Get
			Return Me._LWTGroup
		End Get
		Set
			If (String.Equals(Me._LWTGroup, value) = false) Then
				Me._LWTGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupClass", DbType:="VarChar(255)")>  _
	Public Property GroupClass() As String
		Get
			Return Me._GroupClass
		End Get
		Set
			If (String.Equals(Me._GroupClass, value) = false) Then
				Me._GroupClass = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(255)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me._Department = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MiscClass", DbType:="VarChar(255)")>  _
	Public Property MiscClass() As String
		Get
			Return Me._MiscClass
		End Get
		Set
			If (String.Equals(Me._MiscClass, value) = false) Then
				Me._MiscClass = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIGI_AMT", DbType:="Float")>  _
	Public Property ORIGI_AMT() As System.Nullable(Of Double)
		Get
			Return Me._ORIGI_AMT
		End Get
		Set
			If (Me._ORIGI_AMT.Equals(value) = false) Then
				Me._ORIGI_AMT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREM_IN_T", DbType:="Float")>  _
	Public Property PREM_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._PREM_IN_T
		End Get
		Set
			If (Me._PREM_IN_T.Equals(value) = false) Then
				Me._PREM_IN_T = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_SA_T", DbType:="Float")>  _
	Public Property OLD_SA_T() As System.Nullable(Of Double)
		Get
			Return Me._OLD_SA_T
		End Get
		Set
			If (Me._OLD_SA_T.Equals(value) = false) Then
				Me._OLD_SA_T = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NET_SA_T", DbType:="Float")>  _
	Public Property NET_SA_T() As System.Nullable(Of Double)
		Get
			Return Me._NET_SA_T
		End Get
		Set
			If (Me._NET_SA_T.Equals(value) = false) Then
				Me._NET_SA_T = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIS_IN_T", DbType:="Float")>  _
	Public Property DIS_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._DIS_IN_T
		End Get
		Set
			If (Me._DIS_IN_T.Equals(value) = false) Then
				Me._DIS_IN_T = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BROK_IN_T", DbType:="Float")>  _
	Public Property BROK_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._BROK_IN_T
		End Get
		Set
			If (Me._BROK_IN_T.Equals(value) = false) Then
				Me._BROK_IN_T = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NET_IR_T", DbType:="Float")>  _
	Public Property NET_IR_T() As System.Nullable(Of Double)
		Get
			Return Me._NET_IR_T
		End Get
		Set
			If (Me._NET_IR_T.Equals(value) = false) Then
				Me._NET_IR_T = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROS_IN_T", DbType:="Float")>  _
	Public Property GROS_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._GROS_IN_T
		End Get
		Set
			If (Me._GROS_IN_T.Equals(value) = false) Then
				Me._GROS_IN_T = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NETBROK", DbType:="Float")>  _
	Public Property NETBROK() As System.Nullable(Of Double)
		Get
			Return Me._NETBROK
		End Get
		Set
			If (Me._NETBROK.Equals(value) = false) Then
				Me._NETBROK = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT_T", DbType:="Float")>  _
	Public Property VAT_T() As System.Nullable(Of Double)
		Get
			Return Me._VAT_T
		End Get
		Set
			If (Me._VAT_T.Equals(value) = false) Then
				Me._VAT_T = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAMP_P", DbType:="Float")>  _
	Public Property STAMP_P() As System.Nullable(Of Double)
		Get
			Return Me._STAMP_P
		End Get
		Set
			If (Me._STAMP_P.Equals(value) = false) Then
				Me._STAMP_P = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIN", DbType:="Float")>  _
	Public Property ORIN() As System.Nullable(Of Double)
		Get
			Return Me._ORIN
		End Get
		Set
			If (Me._ORIN.Equals(value) = false) Then
				Me._ORIN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROUT", DbType:="Float")>  _
	Public Property OROUT() As System.Nullable(Of Double)
		Get
			Return Me._OROUT
		End Get
		Set
			If (Me._OROUT.Equals(value) = false) Then
				Me._OROUT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ1", DbType:="Float")>  _
	Public Property ADMININ1() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ1
		End Get
		Set
			If (Me._ADMININ1.Equals(value) = false) Then
				Me._ADMININ1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ2", DbType:="Float")>  _
	Public Property ADMININ2() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ2
		End Get
		Set
			If (Me._ADMININ2.Equals(value) = false) Then
				Me._ADMININ2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMINOUT1", DbType:="Float")>  _
	Public Property ADMINOUT1() As System.Nullable(Of Double)
		Get
			Return Me._ADMINOUT1
		End Get
		Set
			If (Me._ADMINOUT1.Equals(value) = false) Then
				Me._ADMINOUT1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMINOUT2", DbType:="Float")>  _
	Public Property ADMINOUT2() As System.Nullable(Of Double)
		Get
			Return Me._ADMINOUT2
		End Get
		Set
			If (Me._ADMINOUT2.Equals(value) = false) Then
				Me._ADMINOUT2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANS", DbType:="Float")>  _
	Public Property TRANS() As System.Nullable(Of Double)
		Get
			Return Me._TRANS
		End Get
		Set
			If (Me._TRANS.Equals(value) = false) Then
				Me._TRANS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMIN", DbType:="Float")>  _
	Public Property COMMIN() As System.Nullable(Of Double)
		Get
			Return Me._COMMIN
		End Get
		Set
			If (Me._COMMIN.Equals(value) = false) Then
				Me._COMMIN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NETBROK_P", DbType:="Float")>  _
	Public Property NETBROK_P() As System.Nullable(Of Double)
		Get
			Return Me._NETBROK_P
		End Get
		Set
			If (Me._NETBROK_P.Equals(value) = false) Then
				Me._NETBROK_P = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIN_P", DbType:="Float")>  _
	Public Property ORIN_P() As System.Nullable(Of Double)
		Get
			Return Me._ORIN_P
		End Get
		Set
			If (Me._ORIN_P.Equals(value) = false) Then
				Me._ORIN_P = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ1_P", DbType:="Float")>  _
	Public Property ADMININ1_P() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ1_P
		End Get
		Set
			If (Me._ADMININ1_P.Equals(value) = false) Then
				Me._ADMININ1_P = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ2_P", DbType:="Float")>  _
	Public Property ADMININ2_P() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ2_P
		End Get
		Set
			If (Me._ADMININ2_P.Equals(value) = false) Then
				Me._ADMININ2_P = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMIN_P", DbType:="Float")>  _
	Public Property COMMIN_P() As System.Nullable(Of Double)
		Get
			Return Me._COMMIN_P
		End Get
		Set
			If (Me._COMMIN_P.Equals(value) = false) Then
				Me._COMMIN_P = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReportMaster_FilterValues")>  _
Partial Public Class tblReportMaster_FilterValue
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FILTER_ID As Integer
	
	Private _FILTER_VALUE As String
	
	Private _FILTER_TYPE As String
	
	Private _MASTER_ID As System.Nullable(Of Integer)
	
	Private _tblReportMaster_Template As EntityRef(Of tblReportMaster_Template)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFILTER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFILTER_IDChanged()
    End Sub
    Partial Private Sub OnFILTER_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnFILTER_VALUEChanged()
    End Sub
    Partial Private Sub OnFILTER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnFILTER_TYPEChanged()
    End Sub
    Partial Private Sub OnMASTER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMASTER_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblReportMaster_Template = CType(Nothing, EntityRef(Of tblReportMaster_Template))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILTER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FILTER_ID() As Integer
		Get
			Return Me._FILTER_ID
		End Get
		Set
			If ((Me._FILTER_ID = value)  _
						= false) Then
				Me.OnFILTER_IDChanging(value)
				Me.SendPropertyChanging
				Me._FILTER_ID = value
				Me.SendPropertyChanged("FILTER_ID")
				Me.OnFILTER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILTER_VALUE", DbType:="VarChar(255)")>  _
	Public Property FILTER_VALUE() As String
		Get
			Return Me._FILTER_VALUE
		End Get
		Set
			If (String.Equals(Me._FILTER_VALUE, value) = false) Then
				Me.OnFILTER_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._FILTER_VALUE = value
				Me.SendPropertyChanged("FILTER_VALUE")
				Me.OnFILTER_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILTER_TYPE", DbType:="VarChar(50)")>  _
	Public Property FILTER_TYPE() As String
		Get
			Return Me._FILTER_TYPE
		End Get
		Set
			If (String.Equals(Me._FILTER_TYPE, value) = false) Then
				Me.OnFILTER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._FILTER_TYPE = value
				Me.SendPropertyChanged("FILTER_TYPE")
				Me.OnFILTER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_ID", DbType:="Int")>  _
	Public Property MASTER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MASTER_ID
		End Get
		Set
			If (Me._MASTER_ID.Equals(value) = false) Then
				If Me._tblReportMaster_Template.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnMASTER_IDChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_ID = value
				Me.SendPropertyChanged("MASTER_ID")
				Me.OnMASTER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReportMaster_Template_tblReportMaster_FilterValue", Storage:="_tblReportMaster_Template", ThisKey:="MASTER_ID", OtherKey:="MASTER_ID", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
	Public Property tblReportMaster_Template() As tblReportMaster_Template
		Get
			Return Me._tblReportMaster_Template.Entity
		End Get
		Set
			Dim previousValue As tblReportMaster_Template = Me._tblReportMaster_Template.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblReportMaster_Template.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblReportMaster_Template.Entity = Nothing
					previousValue.tblReportMaster_FilterValues.Remove(Me)
				End If
				Me._tblReportMaster_Template.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblReportMaster_FilterValues.Add(Me)
					Me._MASTER_ID = value.MASTER_ID
				Else
					Me._MASTER_ID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblReportMaster_Template")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReportUser_FilterValues")>  _
Partial Public Class tblReportUser_FilterValue
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FILTER_ID As Integer
	
	Private _FILTER_VALUE As String
	
	Private _FILTER_TYPE As String
	
	Private _ID As System.Nullable(Of Integer)
	
	Private _tblReportUser_Template As EntityRef(Of tblReportUser_Template)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFILTER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFILTER_IDChanged()
    End Sub
    Partial Private Sub OnFILTER_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnFILTER_VALUEChanged()
    End Sub
    Partial Private Sub OnFILTER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnFILTER_TYPEChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblReportUser_Template = CType(Nothing, EntityRef(Of tblReportUser_Template))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILTER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FILTER_ID() As Integer
		Get
			Return Me._FILTER_ID
		End Get
		Set
			If ((Me._FILTER_ID = value)  _
						= false) Then
				Me.OnFILTER_IDChanging(value)
				Me.SendPropertyChanging
				Me._FILTER_ID = value
				Me.SendPropertyChanged("FILTER_ID")
				Me.OnFILTER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILTER_VALUE", DbType:="VarChar(255)")>  _
	Public Property FILTER_VALUE() As String
		Get
			Return Me._FILTER_VALUE
		End Get
		Set
			If (String.Equals(Me._FILTER_VALUE, value) = false) Then
				Me.OnFILTER_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._FILTER_VALUE = value
				Me.SendPropertyChanged("FILTER_VALUE")
				Me.OnFILTER_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILTER_TYPE", DbType:="VarChar(50)")>  _
	Public Property FILTER_TYPE() As String
		Get
			Return Me._FILTER_TYPE
		End Get
		Set
			If (String.Equals(Me._FILTER_TYPE, value) = false) Then
				Me.OnFILTER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._FILTER_TYPE = value
				Me.SendPropertyChanged("FILTER_TYPE")
				Me.OnFILTER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int")>  _
	Public Property ID() As System.Nullable(Of Integer)
		Get
			Return Me._ID
		End Get
		Set
			If (Me._ID.Equals(value) = false) Then
				If Me._tblReportUser_Template.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReportUser_Template_tblReportUser_FilterValue", Storage:="_tblReportUser_Template", ThisKey:="ID", OtherKey:="ID", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
	Public Property tblReportUser_Template() As tblReportUser_Template
		Get
			Return Me._tblReportUser_Template.Entity
		End Get
		Set
			Dim previousValue As tblReportUser_Template = Me._tblReportUser_Template.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblReportUser_Template.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblReportUser_Template.Entity = Nothing
					previousValue.tblReportUser_FilterValues.Remove(Me)
				End If
				Me._tblReportUser_Template.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblReportUser_FilterValues.Add(Me)
					Me._ID = value.ID
				Else
					Me._ID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblReportUser_Template")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.NAPD_SUMMARY")>  _
Partial Public Class NAPD_SUMMARY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _BillingYear As System.Nullable(Of Integer)
	
	Private _BillingMonth As System.Nullable(Of Integer)
	
	Private _EffYear As System.Nullable(Of Integer)
	
	Private _EffMonth As System.Nullable(Of Integer)
	
	Private _ExpYear As System.Nullable(Of Integer)
	
	Private _ExpMonth As System.Nullable(Of Integer)
	
	Private _GROUP As String
	
	Private _AE As String
	
	Private _AEGRP As String
	
	Private _RISKI As String
	
	Private _RISKII As String
	
	Private _RISKGOV As String
	
	Private _CURRENCY As String
	
	Private _EXC_RATE As System.Nullable(Of Double)
	
	Private _UWNAME As String
	
	Private _GROUPNAME As String
	
	Private _GGRP As String
	
	Private _MGROUP As String
	
	Private _MGNAME As String
	
	Private _SOURCE As String
	
	Private _SOURCENAME As String
	
	Private _INDUSTRY As String
	
	Private _CHANNEL As String
	
	Private _Description As String
	
	Private _ShortDesc As String
	
	Private _GovtGroup As String
	
	Private _LWTGroup As String
	
	Private _GroupClass As String
	
	Private _Department As String
	
	Private _MiscClass As String
	
	Private _ORIGI_AMT As System.Nullable(Of Double)
	
	Private _PREM_IN_T As System.Nullable(Of Double)
	
	Private _OLD_SA_T As System.Nullable(Of Double)
	
	Private _NET_SA_T As System.Nullable(Of Double)
	
	Private _DIS_IN_T As System.Nullable(Of Double)
	
	Private _BROK_IN_T As System.Nullable(Of Double)
	
	Private _NET_IR_T As System.Nullable(Of Double)
	
	Private _GROS_IN_T As System.Nullable(Of Double)
	
	Private _NETBROK As System.Nullable(Of Double)
	
	Private _VAT_T As System.Nullable(Of Double)
	
	Private _STAMP_P As System.Nullable(Of Double)
	
	Private _ORIN As System.Nullable(Of Double)
	
	Private _OROUT As System.Nullable(Of Double)
	
	Private _ADMININ1 As System.Nullable(Of Double)
	
	Private _ADMININ2 As System.Nullable(Of Double)
	
	Private _ADMINOUT1 As System.Nullable(Of Double)
	
	Private _ADMINOUT2 As System.Nullable(Of Double)
	
	Private _TRANS As System.Nullable(Of Double)
	
	Private _NETBROK_P As System.Nullable(Of Double)
	
	Private _ORIN_P As System.Nullable(Of Double)
	
	Private _ADMININ1_P As System.Nullable(Of Double)
	
	Private _ADMININ2_P As System.Nullable(Of Double)
	
	Private _COMMIN As System.Nullable(Of Double)
	
	Private _COMMIN_P As System.Nullable(Of Double)
	
	Private _ASAT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnBillingYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBillingYearChanged()
    End Sub
    Partial Private Sub OnBillingMonthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBillingMonthChanged()
    End Sub
    Partial Private Sub OnEffYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEffYearChanged()
    End Sub
    Partial Private Sub OnEffMonthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEffMonthChanged()
    End Sub
    Partial Private Sub OnExpYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnExpYearChanged()
    End Sub
    Partial Private Sub OnExpMonthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnExpMonthChanged()
    End Sub
    Partial Private Sub OnGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPChanged()
    End Sub
    Partial Private Sub OnAEChanging(value As String)
    End Sub
    Partial Private Sub OnAEChanged()
    End Sub
    Partial Private Sub OnAEGRPChanging(value As String)
    End Sub
    Partial Private Sub OnAEGRPChanged()
    End Sub
    Partial Private Sub OnRISKIChanging(value As String)
    End Sub
    Partial Private Sub OnRISKIChanged()
    End Sub
    Partial Private Sub OnRISKIIChanging(value As String)
    End Sub
    Partial Private Sub OnRISKIIChanged()
    End Sub
    Partial Private Sub OnRISKGOVChanging(value As String)
    End Sub
    Partial Private Sub OnRISKGOVChanged()
    End Sub
    Partial Private Sub OnCURRENCYChanging(value As String)
    End Sub
    Partial Private Sub OnCURRENCYChanged()
    End Sub
    Partial Private Sub OnEXC_RATEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEXC_RATEChanged()
    End Sub
    Partial Private Sub OnUWNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUWNAMEChanged()
    End Sub
    Partial Private Sub OnGROUPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPNAMEChanged()
    End Sub
    Partial Private Sub OnGGRPChanging(value As String)
    End Sub
    Partial Private Sub OnGGRPChanged()
    End Sub
    Partial Private Sub OnMGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnMGROUPChanged()
    End Sub
    Partial Private Sub OnMGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMGNAMEChanged()
    End Sub
    Partial Private Sub OnSOURCEChanging(value As String)
    End Sub
    Partial Private Sub OnSOURCEChanged()
    End Sub
    Partial Private Sub OnSOURCENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSOURCENAMEChanged()
    End Sub
    Partial Private Sub OnINDUSTRYChanging(value As String)
    End Sub
    Partial Private Sub OnINDUSTRYChanged()
    End Sub
    Partial Private Sub OnCHANNELChanging(value As String)
    End Sub
    Partial Private Sub OnCHANNELChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnShortDescChanging(value As String)
    End Sub
    Partial Private Sub OnShortDescChanged()
    End Sub
    Partial Private Sub OnGovtGroupChanging(value As String)
    End Sub
    Partial Private Sub OnGovtGroupChanged()
    End Sub
    Partial Private Sub OnLWTGroupChanging(value As String)
    End Sub
    Partial Private Sub OnLWTGroupChanged()
    End Sub
    Partial Private Sub OnGroupClassChanging(value As String)
    End Sub
    Partial Private Sub OnGroupClassChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnMiscClassChanging(value As String)
    End Sub
    Partial Private Sub OnMiscClassChanged()
    End Sub
    Partial Private Sub OnORIGI_AMTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORIGI_AMTChanged()
    End Sub
    Partial Private Sub OnPREM_IN_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPREM_IN_TChanged()
    End Sub
    Partial Private Sub OnOLD_SA_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOLD_SA_TChanged()
    End Sub
    Partial Private Sub OnNET_SA_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNET_SA_TChanged()
    End Sub
    Partial Private Sub OnDIS_IN_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDIS_IN_TChanged()
    End Sub
    Partial Private Sub OnBROK_IN_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBROK_IN_TChanged()
    End Sub
    Partial Private Sub OnNET_IR_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNET_IR_TChanged()
    End Sub
    Partial Private Sub OnGROS_IN_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGROS_IN_TChanged()
    End Sub
    Partial Private Sub OnNETBROKChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNETBROKChanged()
    End Sub
    Partial Private Sub OnVAT_TChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVAT_TChanged()
    End Sub
    Partial Private Sub OnSTAMP_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSTAMP_PChanged()
    End Sub
    Partial Private Sub OnORINChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORINChanged()
    End Sub
    Partial Private Sub OnOROUTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOROUTChanged()
    End Sub
    Partial Private Sub OnADMININ1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMININ1Changed()
    End Sub
    Partial Private Sub OnADMININ2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMININ2Changed()
    End Sub
    Partial Private Sub OnADMINOUT1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMINOUT1Changed()
    End Sub
    Partial Private Sub OnADMINOUT2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMINOUT2Changed()
    End Sub
    Partial Private Sub OnTRANSChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTRANSChanged()
    End Sub
    Partial Private Sub OnNETBROK_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNETBROK_PChanged()
    End Sub
    Partial Private Sub OnORIN_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORIN_PChanged()
    End Sub
    Partial Private Sub OnADMININ1_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMININ1_PChanged()
    End Sub
    Partial Private Sub OnADMININ2_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnADMININ2_PChanged()
    End Sub
    Partial Private Sub OnCOMMINChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCOMMINChanged()
    End Sub
    Partial Private Sub OnCOMMIN_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCOMMIN_PChanged()
    End Sub
    Partial Private Sub OnASATChanging(value As String)
    End Sub
    Partial Private Sub OnASATChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingYear", DbType:="Int")>  _
	Public Property BillingYear() As System.Nullable(Of Integer)
		Get
			Return Me._BillingYear
		End Get
		Set
			If (Me._BillingYear.Equals(value) = false) Then
				Me.OnBillingYearChanging(value)
				Me.SendPropertyChanging
				Me._BillingYear = value
				Me.SendPropertyChanged("BillingYear")
				Me.OnBillingYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingMonth", DbType:="Int")>  _
	Public Property BillingMonth() As System.Nullable(Of Integer)
		Get
			Return Me._BillingMonth
		End Get
		Set
			If (Me._BillingMonth.Equals(value) = false) Then
				Me.OnBillingMonthChanging(value)
				Me.SendPropertyChanging
				Me._BillingMonth = value
				Me.SendPropertyChanged("BillingMonth")
				Me.OnBillingMonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffYear", DbType:="Int")>  _
	Public Property EffYear() As System.Nullable(Of Integer)
		Get
			Return Me._EffYear
		End Get
		Set
			If (Me._EffYear.Equals(value) = false) Then
				Me.OnEffYearChanging(value)
				Me.SendPropertyChanging
				Me._EffYear = value
				Me.SendPropertyChanged("EffYear")
				Me.OnEffYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffMonth", DbType:="Int")>  _
	Public Property EffMonth() As System.Nullable(Of Integer)
		Get
			Return Me._EffMonth
		End Get
		Set
			If (Me._EffMonth.Equals(value) = false) Then
				Me.OnEffMonthChanging(value)
				Me.SendPropertyChanging
				Me._EffMonth = value
				Me.SendPropertyChanged("EffMonth")
				Me.OnEffMonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpYear", DbType:="Int")>  _
	Public Property ExpYear() As System.Nullable(Of Integer)
		Get
			Return Me._ExpYear
		End Get
		Set
			If (Me._ExpYear.Equals(value) = false) Then
				Me.OnExpYearChanging(value)
				Me.SendPropertyChanging
				Me._ExpYear = value
				Me.SendPropertyChanged("ExpYear")
				Me.OnExpYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpMonth", DbType:="Int")>  _
	Public Property ExpMonth() As System.Nullable(Of Integer)
		Get
			Return Me._ExpMonth
		End Get
		Set
			If (Me._ExpMonth.Equals(value) = false) Then
				Me.OnExpMonthChanging(value)
				Me.SendPropertyChanging
				Me._ExpMonth = value
				Me.SendPropertyChanged("ExpMonth")
				Me.OnExpMonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP", DbType:="VarChar(255)")>  _
	Public Property [GROUP]() As String
		Get
			Return Me._GROUP
		End Get
		Set
			If (String.Equals(Me._GROUP, value) = false) Then
				Me.OnGROUPChanging(value)
				Me.SendPropertyChanging
				Me._GROUP = value
				Me.SendPropertyChanged("[GROUP]")
				Me.OnGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AE", DbType:="VarChar(255)")>  _
	Public Property AE() As String
		Get
			Return Me._AE
		End Get
		Set
			If (String.Equals(Me._AE, value) = false) Then
				Me.OnAEChanging(value)
				Me.SendPropertyChanging
				Me._AE = value
				Me.SendPropertyChanged("AE")
				Me.OnAEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AEGRP", DbType:="VarChar(255)")>  _
	Public Property AEGRP() As String
		Get
			Return Me._AEGRP
		End Get
		Set
			If (String.Equals(Me._AEGRP, value) = false) Then
				Me.OnAEGRPChanging(value)
				Me.SendPropertyChanging
				Me._AEGRP = value
				Me.SendPropertyChanged("AEGRP")
				Me.OnAEGRPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISKI", DbType:="VarChar(255)")>  _
	Public Property RISKI() As String
		Get
			Return Me._RISKI
		End Get
		Set
			If (String.Equals(Me._RISKI, value) = false) Then
				Me.OnRISKIChanging(value)
				Me.SendPropertyChanging
				Me._RISKI = value
				Me.SendPropertyChanged("RISKI")
				Me.OnRISKIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISKII", DbType:="VarChar(255)")>  _
	Public Property RISKII() As String
		Get
			Return Me._RISKII
		End Get
		Set
			If (String.Equals(Me._RISKII, value) = false) Then
				Me.OnRISKIIChanging(value)
				Me.SendPropertyChanging
				Me._RISKII = value
				Me.SendPropertyChanged("RISKII")
				Me.OnRISKIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RISKGOV", DbType:="VarChar(255)")>  _
	Public Property RISKGOV() As String
		Get
			Return Me._RISKGOV
		End Get
		Set
			If (String.Equals(Me._RISKGOV, value) = false) Then
				Me.OnRISKGOVChanging(value)
				Me.SendPropertyChanging
				Me._RISKGOV = value
				Me.SendPropertyChanged("RISKGOV")
				Me.OnRISKGOVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CURRENCY", DbType:="VarChar(255)")>  _
	Public Property CURRENCY() As String
		Get
			Return Me._CURRENCY
		End Get
		Set
			If (String.Equals(Me._CURRENCY, value) = false) Then
				Me.OnCURRENCYChanging(value)
				Me.SendPropertyChanging
				Me._CURRENCY = value
				Me.SendPropertyChanged("CURRENCY")
				Me.OnCURRENCYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXC_RATE", DbType:="Float")>  _
	Public Property EXC_RATE() As System.Nullable(Of Double)
		Get
			Return Me._EXC_RATE
		End Get
		Set
			If (Me._EXC_RATE.Equals(value) = false) Then
				Me.OnEXC_RATEChanging(value)
				Me.SendPropertyChanging
				Me._EXC_RATE = value
				Me.SendPropertyChanged("EXC_RATE")
				Me.OnEXC_RATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWNAME", DbType:="VarChar(255)")>  _
	Public Property UWNAME() As String
		Get
			Return Me._UWNAME
		End Get
		Set
			If (String.Equals(Me._UWNAME, value) = false) Then
				Me.OnUWNAMEChanging(value)
				Me.SendPropertyChanging
				Me._UWNAME = value
				Me.SendPropertyChanged("UWNAME")
				Me.OnUWNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPNAME", DbType:="VarChar(255)")>  _
	Public Property GROUPNAME() As String
		Get
			Return Me._GROUPNAME
		End Get
		Set
			If (String.Equals(Me._GROUPNAME, value) = false) Then
				Me.OnGROUPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPNAME = value
				Me.SendPropertyChanged("GROUPNAME")
				Me.OnGROUPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GGRP", DbType:="VarChar(255)")>  _
	Public Property GGRP() As String
		Get
			Return Me._GGRP
		End Get
		Set
			If (String.Equals(Me._GGRP, value) = false) Then
				Me.OnGGRPChanging(value)
				Me.SendPropertyChanging
				Me._GGRP = value
				Me.SendPropertyChanged("GGRP")
				Me.OnGGRPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MGROUP", DbType:="VarChar(255)")>  _
	Public Property MGROUP() As String
		Get
			Return Me._MGROUP
		End Get
		Set
			If (String.Equals(Me._MGROUP, value) = false) Then
				Me.OnMGROUPChanging(value)
				Me.SendPropertyChanging
				Me._MGROUP = value
				Me.SendPropertyChanged("MGROUP")
				Me.OnMGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MGNAME", DbType:="VarChar(255)")>  _
	Public Property MGNAME() As String
		Get
			Return Me._MGNAME
		End Get
		Set
			If (String.Equals(Me._MGNAME, value) = false) Then
				Me.OnMGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._MGNAME = value
				Me.SendPropertyChanged("MGNAME")
				Me.OnMGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOURCE", DbType:="VarChar(255)")>  _
	Public Property SOURCE() As String
		Get
			Return Me._SOURCE
		End Get
		Set
			If (String.Equals(Me._SOURCE, value) = false) Then
				Me.OnSOURCEChanging(value)
				Me.SendPropertyChanging
				Me._SOURCE = value
				Me.SendPropertyChanged("SOURCE")
				Me.OnSOURCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOURCENAME", DbType:="VarChar(255)")>  _
	Public Property SOURCENAME() As String
		Get
			Return Me._SOURCENAME
		End Get
		Set
			If (String.Equals(Me._SOURCENAME, value) = false) Then
				Me.OnSOURCENAMEChanging(value)
				Me.SendPropertyChanging
				Me._SOURCENAME = value
				Me.SendPropertyChanged("SOURCENAME")
				Me.OnSOURCENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INDUSTRY", DbType:="VarChar(255)")>  _
	Public Property INDUSTRY() As String
		Get
			Return Me._INDUSTRY
		End Get
		Set
			If (String.Equals(Me._INDUSTRY, value) = false) Then
				Me.OnINDUSTRYChanging(value)
				Me.SendPropertyChanging
				Me._INDUSTRY = value
				Me.SendPropertyChanged("INDUSTRY")
				Me.OnINDUSTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHANNEL", DbType:="VarChar(255)")>  _
	Public Property CHANNEL() As String
		Get
			Return Me._CHANNEL
		End Get
		Set
			If (String.Equals(Me._CHANNEL, value) = false) Then
				Me.OnCHANNELChanging(value)
				Me.SendPropertyChanging
				Me._CHANNEL = value
				Me.SendPropertyChanged("CHANNEL")
				Me.OnCHANNELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(255)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShortDesc", DbType:="VarChar(255)")>  _
	Public Property ShortDesc() As String
		Get
			Return Me._ShortDesc
		End Get
		Set
			If (String.Equals(Me._ShortDesc, value) = false) Then
				Me.OnShortDescChanging(value)
				Me.SendPropertyChanging
				Me._ShortDesc = value
				Me.SendPropertyChanged("ShortDesc")
				Me.OnShortDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GovtGroup", DbType:="VarChar(255)")>  _
	Public Property GovtGroup() As String
		Get
			Return Me._GovtGroup
		End Get
		Set
			If (String.Equals(Me._GovtGroup, value) = false) Then
				Me.OnGovtGroupChanging(value)
				Me.SendPropertyChanging
				Me._GovtGroup = value
				Me.SendPropertyChanged("GovtGroup")
				Me.OnGovtGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LWTGroup", DbType:="VarChar(255)")>  _
	Public Property LWTGroup() As String
		Get
			Return Me._LWTGroup
		End Get
		Set
			If (String.Equals(Me._LWTGroup, value) = false) Then
				Me.OnLWTGroupChanging(value)
				Me.SendPropertyChanging
				Me._LWTGroup = value
				Me.SendPropertyChanged("LWTGroup")
				Me.OnLWTGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupClass", DbType:="VarChar(255)")>  _
	Public Property GroupClass() As String
		Get
			Return Me._GroupClass
		End Get
		Set
			If (String.Equals(Me._GroupClass, value) = false) Then
				Me.OnGroupClassChanging(value)
				Me.SendPropertyChanging
				Me._GroupClass = value
				Me.SendPropertyChanged("GroupClass")
				Me.OnGroupClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(255)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MiscClass", DbType:="VarChar(255)")>  _
	Public Property MiscClass() As String
		Get
			Return Me._MiscClass
		End Get
		Set
			If (String.Equals(Me._MiscClass, value) = false) Then
				Me.OnMiscClassChanging(value)
				Me.SendPropertyChanging
				Me._MiscClass = value
				Me.SendPropertyChanged("MiscClass")
				Me.OnMiscClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIGI_AMT", DbType:="Float")>  _
	Public Property ORIGI_AMT() As System.Nullable(Of Double)
		Get
			Return Me._ORIGI_AMT
		End Get
		Set
			If (Me._ORIGI_AMT.Equals(value) = false) Then
				Me.OnORIGI_AMTChanging(value)
				Me.SendPropertyChanging
				Me._ORIGI_AMT = value
				Me.SendPropertyChanged("ORIGI_AMT")
				Me.OnORIGI_AMTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREM_IN_T", DbType:="Float")>  _
	Public Property PREM_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._PREM_IN_T
		End Get
		Set
			If (Me._PREM_IN_T.Equals(value) = false) Then
				Me.OnPREM_IN_TChanging(value)
				Me.SendPropertyChanging
				Me._PREM_IN_T = value
				Me.SendPropertyChanged("PREM_IN_T")
				Me.OnPREM_IN_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_SA_T", DbType:="Float")>  _
	Public Property OLD_SA_T() As System.Nullable(Of Double)
		Get
			Return Me._OLD_SA_T
		End Get
		Set
			If (Me._OLD_SA_T.Equals(value) = false) Then
				Me.OnOLD_SA_TChanging(value)
				Me.SendPropertyChanging
				Me._OLD_SA_T = value
				Me.SendPropertyChanged("OLD_SA_T")
				Me.OnOLD_SA_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NET_SA_T", DbType:="Float")>  _
	Public Property NET_SA_T() As System.Nullable(Of Double)
		Get
			Return Me._NET_SA_T
		End Get
		Set
			If (Me._NET_SA_T.Equals(value) = false) Then
				Me.OnNET_SA_TChanging(value)
				Me.SendPropertyChanging
				Me._NET_SA_T = value
				Me.SendPropertyChanged("NET_SA_T")
				Me.OnNET_SA_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIS_IN_T", DbType:="Float")>  _
	Public Property DIS_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._DIS_IN_T
		End Get
		Set
			If (Me._DIS_IN_T.Equals(value) = false) Then
				Me.OnDIS_IN_TChanging(value)
				Me.SendPropertyChanging
				Me._DIS_IN_T = value
				Me.SendPropertyChanged("DIS_IN_T")
				Me.OnDIS_IN_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BROK_IN_T", DbType:="Float")>  _
	Public Property BROK_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._BROK_IN_T
		End Get
		Set
			If (Me._BROK_IN_T.Equals(value) = false) Then
				Me.OnBROK_IN_TChanging(value)
				Me.SendPropertyChanging
				Me._BROK_IN_T = value
				Me.SendPropertyChanged("BROK_IN_T")
				Me.OnBROK_IN_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NET_IR_T", DbType:="Float")>  _
	Public Property NET_IR_T() As System.Nullable(Of Double)
		Get
			Return Me._NET_IR_T
		End Get
		Set
			If (Me._NET_IR_T.Equals(value) = false) Then
				Me.OnNET_IR_TChanging(value)
				Me.SendPropertyChanging
				Me._NET_IR_T = value
				Me.SendPropertyChanged("NET_IR_T")
				Me.OnNET_IR_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROS_IN_T", DbType:="Float")>  _
	Public Property GROS_IN_T() As System.Nullable(Of Double)
		Get
			Return Me._GROS_IN_T
		End Get
		Set
			If (Me._GROS_IN_T.Equals(value) = false) Then
				Me.OnGROS_IN_TChanging(value)
				Me.SendPropertyChanging
				Me._GROS_IN_T = value
				Me.SendPropertyChanged("GROS_IN_T")
				Me.OnGROS_IN_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NETBROK", DbType:="Float")>  _
	Public Property NETBROK() As System.Nullable(Of Double)
		Get
			Return Me._NETBROK
		End Get
		Set
			If (Me._NETBROK.Equals(value) = false) Then
				Me.OnNETBROKChanging(value)
				Me.SendPropertyChanging
				Me._NETBROK = value
				Me.SendPropertyChanged("NETBROK")
				Me.OnNETBROKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT_T", DbType:="Float")>  _
	Public Property VAT_T() As System.Nullable(Of Double)
		Get
			Return Me._VAT_T
		End Get
		Set
			If (Me._VAT_T.Equals(value) = false) Then
				Me.OnVAT_TChanging(value)
				Me.SendPropertyChanging
				Me._VAT_T = value
				Me.SendPropertyChanged("VAT_T")
				Me.OnVAT_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAMP_P", DbType:="Float")>  _
	Public Property STAMP_P() As System.Nullable(Of Double)
		Get
			Return Me._STAMP_P
		End Get
		Set
			If (Me._STAMP_P.Equals(value) = false) Then
				Me.OnSTAMP_PChanging(value)
				Me.SendPropertyChanging
				Me._STAMP_P = value
				Me.SendPropertyChanged("STAMP_P")
				Me.OnSTAMP_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIN", DbType:="Float")>  _
	Public Property ORIN() As System.Nullable(Of Double)
		Get
			Return Me._ORIN
		End Get
		Set
			If (Me._ORIN.Equals(value) = false) Then
				Me.OnORINChanging(value)
				Me.SendPropertyChanging
				Me._ORIN = value
				Me.SendPropertyChanged("ORIN")
				Me.OnORINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROUT", DbType:="Float")>  _
	Public Property OROUT() As System.Nullable(Of Double)
		Get
			Return Me._OROUT
		End Get
		Set
			If (Me._OROUT.Equals(value) = false) Then
				Me.OnOROUTChanging(value)
				Me.SendPropertyChanging
				Me._OROUT = value
				Me.SendPropertyChanged("OROUT")
				Me.OnOROUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ1", DbType:="Float")>  _
	Public Property ADMININ1() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ1
		End Get
		Set
			If (Me._ADMININ1.Equals(value) = false) Then
				Me.OnADMININ1Changing(value)
				Me.SendPropertyChanging
				Me._ADMININ1 = value
				Me.SendPropertyChanged("ADMININ1")
				Me.OnADMININ1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ2", DbType:="Float")>  _
	Public Property ADMININ2() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ2
		End Get
		Set
			If (Me._ADMININ2.Equals(value) = false) Then
				Me.OnADMININ2Changing(value)
				Me.SendPropertyChanging
				Me._ADMININ2 = value
				Me.SendPropertyChanged("ADMININ2")
				Me.OnADMININ2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMINOUT1", DbType:="Float")>  _
	Public Property ADMINOUT1() As System.Nullable(Of Double)
		Get
			Return Me._ADMINOUT1
		End Get
		Set
			If (Me._ADMINOUT1.Equals(value) = false) Then
				Me.OnADMINOUT1Changing(value)
				Me.SendPropertyChanging
				Me._ADMINOUT1 = value
				Me.SendPropertyChanged("ADMINOUT1")
				Me.OnADMINOUT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMINOUT2", DbType:="Float")>  _
	Public Property ADMINOUT2() As System.Nullable(Of Double)
		Get
			Return Me._ADMINOUT2
		End Get
		Set
			If (Me._ADMINOUT2.Equals(value) = false) Then
				Me.OnADMINOUT2Changing(value)
				Me.SendPropertyChanging
				Me._ADMINOUT2 = value
				Me.SendPropertyChanged("ADMINOUT2")
				Me.OnADMINOUT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANS", DbType:="Float")>  _
	Public Property TRANS() As System.Nullable(Of Double)
		Get
			Return Me._TRANS
		End Get
		Set
			If (Me._TRANS.Equals(value) = false) Then
				Me.OnTRANSChanging(value)
				Me.SendPropertyChanging
				Me._TRANS = value
				Me.SendPropertyChanged("TRANS")
				Me.OnTRANSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NETBROK_P", DbType:="Float")>  _
	Public Property NETBROK_P() As System.Nullable(Of Double)
		Get
			Return Me._NETBROK_P
		End Get
		Set
			If (Me._NETBROK_P.Equals(value) = false) Then
				Me.OnNETBROK_PChanging(value)
				Me.SendPropertyChanging
				Me._NETBROK_P = value
				Me.SendPropertyChanged("NETBROK_P")
				Me.OnNETBROK_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIN_P", DbType:="Float")>  _
	Public Property ORIN_P() As System.Nullable(Of Double)
		Get
			Return Me._ORIN_P
		End Get
		Set
			If (Me._ORIN_P.Equals(value) = false) Then
				Me.OnORIN_PChanging(value)
				Me.SendPropertyChanging
				Me._ORIN_P = value
				Me.SendPropertyChanged("ORIN_P")
				Me.OnORIN_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ1_P", DbType:="Float")>  _
	Public Property ADMININ1_P() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ1_P
		End Get
		Set
			If (Me._ADMININ1_P.Equals(value) = false) Then
				Me.OnADMININ1_PChanging(value)
				Me.SendPropertyChanging
				Me._ADMININ1_P = value
				Me.SendPropertyChanged("ADMININ1_P")
				Me.OnADMININ1_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMININ2_P", DbType:="Float")>  _
	Public Property ADMININ2_P() As System.Nullable(Of Double)
		Get
			Return Me._ADMININ2_P
		End Get
		Set
			If (Me._ADMININ2_P.Equals(value) = false) Then
				Me.OnADMININ2_PChanging(value)
				Me.SendPropertyChanging
				Me._ADMININ2_P = value
				Me.SendPropertyChanged("ADMININ2_P")
				Me.OnADMININ2_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMIN", DbType:="Float")>  _
	Public Property COMMIN() As System.Nullable(Of Double)
		Get
			Return Me._COMMIN
		End Get
		Set
			If (Me._COMMIN.Equals(value) = false) Then
				Me.OnCOMMINChanging(value)
				Me.SendPropertyChanging
				Me._COMMIN = value
				Me.SendPropertyChanged("COMMIN")
				Me.OnCOMMINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMIN_P", DbType:="Float")>  _
	Public Property COMMIN_P() As System.Nullable(Of Double)
		Get
			Return Me._COMMIN_P
		End Get
		Set
			If (Me._COMMIN_P.Equals(value) = false) Then
				Me.OnCOMMIN_PChanging(value)
				Me.SendPropertyChanging
				Me._COMMIN_P = value
				Me.SendPropertyChanged("COMMIN_P")
				Me.OnCOMMIN_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASAT", DbType:="VarChar(50)")>  _
	Public Property ASAT() As String
		Get
			Return Me._ASAT
		End Get
		Set
			If (String.Equals(Me._ASAT, value) = false) Then
				Me.OnASATChanging(value)
				Me.SendPropertyChanging
				Me._ASAT = value
				Me.SendPropertyChanged("ASAT")
				Me.OnASATChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblReport_VIEWs_Field")>  _
Partial Public Class tblReport_VIEWs_Field
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FIELD_ID As Integer
	
	Private _FIELD_CAPTION As String
	
	Private _FIELD_NAME As String
	
	Private _SummaryType As System.Nullable(Of Integer)
	
	Private _CellFormat_FormatType As System.Nullable(Of Integer)
	
	Private _CellFormat_FormatString As String
	
	Private _GroupInterval As System.Nullable(Of Integer)
	
	Private _VIEW_ID As Integer
	
	Private _UnboundExpressionMode As System.Nullable(Of Integer)
	
	Private _UnboundExpression As String
	
	Private _UnboundColumnType As System.Nullable(Of Integer)
	
	Private _tblReportMaster_Templates As EntitySet(Of tblReportMaster_Template)
	
	Private _tblReportUser_Templates As EntitySet(Of tblReportUser_Template)
	
	Private _tblReport_VIEW As EntityRef(Of tblReport_VIEW)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFIELD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFIELD_IDChanged()
    End Sub
    Partial Private Sub OnFIELD_CAPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnFIELD_CAPTIONChanged()
    End Sub
    Partial Private Sub OnFIELD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFIELD_NAMEChanged()
    End Sub
    Partial Private Sub OnSummaryTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSummaryTypeChanged()
    End Sub
    Partial Private Sub OnCellFormat_FormatTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCellFormat_FormatTypeChanged()
    End Sub
    Partial Private Sub OnCellFormat_FormatStringChanging(value As String)
    End Sub
    Partial Private Sub OnCellFormat_FormatStringChanged()
    End Sub
    Partial Private Sub OnGroupIntervalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGroupIntervalChanged()
    End Sub
    Partial Private Sub OnVIEW_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnVIEW_IDChanged()
    End Sub
    Partial Private Sub OnUnboundExpressionModeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUnboundExpressionModeChanged()
    End Sub
    Partial Private Sub OnUnboundExpressionChanging(value As String)
    End Sub
    Partial Private Sub OnUnboundExpressionChanged()
    End Sub
    Partial Private Sub OnUnboundColumnTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUnboundColumnTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblReportMaster_Templates = New EntitySet(Of tblReportMaster_Template)(AddressOf Me.attach_tblReportMaster_Templates, AddressOf Me.detach_tblReportMaster_Templates)
		Me._tblReportUser_Templates = New EntitySet(Of tblReportUser_Template)(AddressOf Me.attach_tblReportUser_Templates, AddressOf Me.detach_tblReportUser_Templates)
		Me._tblReport_VIEW = CType(Nothing, EntityRef(Of tblReport_VIEW))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property FIELD_ID() As Integer
		Get
			Return Me._FIELD_ID
		End Get
		Set
			If ((Me._FIELD_ID = value)  _
						= false) Then
				Me.OnFIELD_IDChanging(value)
				Me.SendPropertyChanging
				Me._FIELD_ID = value
				Me.SendPropertyChanged("FIELD_ID")
				Me.OnFIELD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_CAPTION", DbType:="VarChar(50)")>  _
	Public Property FIELD_CAPTION() As String
		Get
			Return Me._FIELD_CAPTION
		End Get
		Set
			If (String.Equals(Me._FIELD_CAPTION, value) = false) Then
				Me.OnFIELD_CAPTIONChanging(value)
				Me.SendPropertyChanging
				Me._FIELD_CAPTION = value
				Me.SendPropertyChanged("FIELD_CAPTION")
				Me.OnFIELD_CAPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_NAME", DbType:="VarChar(50)")>  _
	Public Property FIELD_NAME() As String
		Get
			Return Me._FIELD_NAME
		End Get
		Set
			If (String.Equals(Me._FIELD_NAME, value) = false) Then
				Me.OnFIELD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FIELD_NAME = value
				Me.SendPropertyChanged("FIELD_NAME")
				Me.OnFIELD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SummaryType", DbType:="Int")>  _
	Public Property SummaryType() As System.Nullable(Of Integer)
		Get
			Return Me._SummaryType
		End Get
		Set
			If (Me._SummaryType.Equals(value) = false) Then
				Me.OnSummaryTypeChanging(value)
				Me.SendPropertyChanging
				Me._SummaryType = value
				Me.SendPropertyChanged("SummaryType")
				Me.OnSummaryTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CellFormat_FormatType", DbType:="Int")>  _
	Public Property CellFormat_FormatType() As System.Nullable(Of Integer)
		Get
			Return Me._CellFormat_FormatType
		End Get
		Set
			If (Me._CellFormat_FormatType.Equals(value) = false) Then
				Me.OnCellFormat_FormatTypeChanging(value)
				Me.SendPropertyChanging
				Me._CellFormat_FormatType = value
				Me.SendPropertyChanged("CellFormat_FormatType")
				Me.OnCellFormat_FormatTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CellFormat_FormatString", DbType:="VarChar(10)")>  _
	Public Property CellFormat_FormatString() As String
		Get
			Return Me._CellFormat_FormatString
		End Get
		Set
			If (String.Equals(Me._CellFormat_FormatString, value) = false) Then
				Me.OnCellFormat_FormatStringChanging(value)
				Me.SendPropertyChanging
				Me._CellFormat_FormatString = value
				Me.SendPropertyChanged("CellFormat_FormatString")
				Me.OnCellFormat_FormatStringChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupInterval", DbType:="Int")>  _
	Public Property GroupInterval() As System.Nullable(Of Integer)
		Get
			Return Me._GroupInterval
		End Get
		Set
			If (Me._GroupInterval.Equals(value) = false) Then
				Me.OnGroupIntervalChanging(value)
				Me.SendPropertyChanging
				Me._GroupInterval = value
				Me.SendPropertyChanged("GroupInterval")
				Me.OnGroupIntervalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIEW_ID", DbType:="Int NOT NULL")>  _
	Public Property VIEW_ID() As Integer
		Get
			Return Me._VIEW_ID
		End Get
		Set
			If ((Me._VIEW_ID = value)  _
						= false) Then
				If Me._tblReport_VIEW.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnVIEW_IDChanging(value)
				Me.SendPropertyChanging
				Me._VIEW_ID = value
				Me.SendPropertyChanged("VIEW_ID")
				Me.OnVIEW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnboundExpressionMode", DbType:="Int")>  _
	Public Property UnboundExpressionMode() As System.Nullable(Of Integer)
		Get
			Return Me._UnboundExpressionMode
		End Get
		Set
			If (Me._UnboundExpressionMode.Equals(value) = false) Then
				Me.OnUnboundExpressionModeChanging(value)
				Me.SendPropertyChanging
				Me._UnboundExpressionMode = value
				Me.SendPropertyChanged("UnboundExpressionMode")
				Me.OnUnboundExpressionModeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnboundExpression", DbType:="VarChar(255)")>  _
	Public Property UnboundExpression() As String
		Get
			Return Me._UnboundExpression
		End Get
		Set
			If (String.Equals(Me._UnboundExpression, value) = false) Then
				Me.OnUnboundExpressionChanging(value)
				Me.SendPropertyChanging
				Me._UnboundExpression = value
				Me.SendPropertyChanged("UnboundExpression")
				Me.OnUnboundExpressionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnboundColumnType", DbType:="Int")>  _
	Public Property UnboundColumnType() As System.Nullable(Of Integer)
		Get
			Return Me._UnboundColumnType
		End Get
		Set
			If (Me._UnboundColumnType.Equals(value) = false) Then
				Me.OnUnboundColumnTypeChanging(value)
				Me.SendPropertyChanging
				Me._UnboundColumnType = value
				Me.SendPropertyChanged("UnboundColumnType")
				Me.OnUnboundColumnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEWs_Field_tblReportMaster_Template", Storage:="_tblReportMaster_Templates", ThisKey:="FIELD_ID", OtherKey:="FIELD_ID")>  _
	Public Property tblReportMaster_Templates() As EntitySet(Of tblReportMaster_Template)
		Get
			Return Me._tblReportMaster_Templates
		End Get
		Set
			Me._tblReportMaster_Templates.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEWs_Field_tblReportUser_Template", Storage:="_tblReportUser_Templates", ThisKey:="FIELD_ID", OtherKey:="FIELD_ID")>  _
	Public Property tblReportUser_Templates() As EntitySet(Of tblReportUser_Template)
		Get
			Return Me._tblReportUser_Templates
		End Get
		Set
			Me._tblReportUser_Templates.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblReport_VIEW_tblReport_VIEWs_Field", Storage:="_tblReport_VIEW", ThisKey:="VIEW_ID", OtherKey:="VIEW_ID", IsForeignKey:=true)>  _
	Public Property tblReport_VIEW() As tblReport_VIEW
		Get
			Return Me._tblReport_VIEW.Entity
		End Get
		Set
			Dim previousValue As tblReport_VIEW = Me._tblReport_VIEW.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblReport_VIEW.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblReport_VIEW.Entity = Nothing
					previousValue.tblReport_VIEWs_Fields.Remove(Me)
				End If
				Me._tblReport_VIEW.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblReport_VIEWs_Fields.Add(Me)
					Me._VIEW_ID = value.VIEW_ID
				Else
					Me._VIEW_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("tblReport_VIEW")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblReportMaster_Templates(ByVal entity As tblReportMaster_Template)
		Me.SendPropertyChanging
		entity.tblReport_VIEWs_Field = Me
	End Sub
	
	Private Sub detach_tblReportMaster_Templates(ByVal entity As tblReportMaster_Template)
		Me.SendPropertyChanging
		entity.tblReport_VIEWs_Field = Nothing
	End Sub
	
	Private Sub attach_tblReportUser_Templates(ByVal entity As tblReportUser_Template)
		Me.SendPropertyChanging
		entity.tblReport_VIEWs_Field = Me
	End Sub
	
	Private Sub detach_tblReportUser_Templates(ByVal entity As tblReportUser_Template)
		Me.SendPropertyChanging
		entity.tblReport_VIEWs_Field = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Nissan")>  _
Partial Public Class V_Nissan
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AppID As Integer
	
	Private _CusName As String
	
	Private _CusSurname As String
	
	Private _CusIDCard As String
	
	Private _CusAddress1 As String
	
	Private _CusAddress2 As String
	
	Private _CusMobile As String
	
	Private _CusHomePhone As String
	
	Private _CusOfficePhone As System.Nullable(Of Integer)
	
	Private _CarEngineNo As String
	
	Private _CarChassisNo As String
	
	Private _CarPlantNo As String
	
	Private _DateEffective As System.Nullable(Of Date)
	
	Private _DateExpired As String
	
	Private _DateNotification As System.Nullable(Of Date)
	
	Private _AppStatus As Integer
	
	Private _AppIsActive As System.Nullable(Of Integer)
	
	Private _ClientCode As String
	
	Private _CmiBuying As System.Nullable(Of Integer)
	
	Private _AppBeneficiary As String
	
	Private _LeasingID As System.Nullable(Of Integer)
	
	Private _ClosingDate As System.Nullable(Of Date)
	
	Private _ClosingMonth As System.Nullable(Of Date)
	
	Private _ClosingDay As System.Nullable(Of Date)
	
	Private _AppStatusRecived As System.Nullable(Of Integer)
	
	Private _ProjectID As System.Nullable(Of Integer)
	
	Private _NotifyName As String
	
	Private _CusTitle As String
	
	Private _CarGroupID As System.Nullable(Of Integer)
	
	Private _CarGroupName As String
	
	Private _CarBrandName As String
	
	Private _CarModelName As String
	
	Private _CarTypeName As String
	
	Private _CarTypeNameFull As String
	
	Private _CarModelCode As String
	
	Private _CarGroupNameM2 As String
	
	Private _DealerNameEn As String
	
	Private _NLTDealerCode As String
	
	Private _NLTArea As String
	
	Private _InsurerNameTh As String
	
	Private _InsurerCodeSibis As String
	
	Private _InsurerNameEn As String
	
	Private _InsurerCode As String
	
	Private _LeasID As System.Nullable(Of Integer)
	
	Private _LeasName As String
	
	Private _LeasNameAbbr As String
	
	Private _LeasNameShort As String
	
	Private _ModelNameM2 As String
	
	Private _NLTBookingDate As System.Nullable(Of Date)
	
	Private _SchemeCode As String
	
	Private _VmiNetPremium As System.Nullable(Of Decimal)
	
	Private _VmiStamp As System.Nullable(Of Decimal)
	
	Private _VmiVat As System.Nullable(Of Decimal)
	
	Private _VmiTotalPremium As System.Nullable(Of Decimal)
	
	Private _CmiNetPremium As System.Nullable(Of Decimal)
	
	Private _CmiStamp As System.Nullable(Of Decimal)
	
	Private _CmiVat As System.Nullable(Of Decimal)
	
	Private _CmiTotalPremium As System.Nullable(Of Decimal)
	
	Private _ClassOfRiskVMI As String
	
	Private _ClassOfRiskCMI As String
	
	Private _ShowroomID As System.Nullable(Of Integer)
	
	Private _ShowroomName As String
	
	Private _DealerID As System.Nullable(Of Integer)
	
	Private _ShorwoomNameEn As String
	
	Private _CarTypeNameM2 As String
	
	Private _TypeInsID As System.Nullable(Of Integer)
	
	Private _TypeInsName As String
	
	Private _TypeInsStatus As System.Nullable(Of Integer)
	
	Private _TypeInsReportToNLTH As System.Nullable(Of Integer)
	
	Private _TypeInsIsFree As System.Nullable(Of Integer)
	
	Private _UserAddedTel As String
	
	Private _UserAddedType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAppIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnAppIDChanged()
    End Sub
    Partial Private Sub OnCusNameChanging(value As String)
    End Sub
    Partial Private Sub OnCusNameChanged()
    End Sub
    Partial Private Sub OnCusSurnameChanging(value As String)
    End Sub
    Partial Private Sub OnCusSurnameChanged()
    End Sub
    Partial Private Sub OnCusIDCardChanging(value As String)
    End Sub
    Partial Private Sub OnCusIDCardChanged()
    End Sub
    Partial Private Sub OnCusAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnCusAddress1Changed()
    End Sub
    Partial Private Sub OnCusAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnCusAddress2Changed()
    End Sub
    Partial Private Sub OnCusMobileChanging(value As String)
    End Sub
    Partial Private Sub OnCusMobileChanged()
    End Sub
    Partial Private Sub OnCusHomePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnCusHomePhoneChanged()
    End Sub
    Partial Private Sub OnCusOfficePhoneChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCusOfficePhoneChanged()
    End Sub
    Partial Private Sub OnCarEngineNoChanging(value As String)
    End Sub
    Partial Private Sub OnCarEngineNoChanged()
    End Sub
    Partial Private Sub OnCarChassisNoChanging(value As String)
    End Sub
    Partial Private Sub OnCarChassisNoChanged()
    End Sub
    Partial Private Sub OnCarPlantNoChanging(value As String)
    End Sub
    Partial Private Sub OnCarPlantNoChanged()
    End Sub
    Partial Private Sub OnDateEffectiveChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateEffectiveChanged()
    End Sub
    Partial Private Sub OnDateExpiredChanging(value As String)
    End Sub
    Partial Private Sub OnDateExpiredChanged()
    End Sub
    Partial Private Sub OnDateNotificationChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateNotificationChanged()
    End Sub
    Partial Private Sub OnAppStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnAppStatusChanged()
    End Sub
    Partial Private Sub OnAppIsActiveChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAppIsActiveChanged()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnCmiBuyingChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCmiBuyingChanged()
    End Sub
    Partial Private Sub OnAppBeneficiaryChanging(value As String)
    End Sub
    Partial Private Sub OnAppBeneficiaryChanged()
    End Sub
    Partial Private Sub OnLeasingIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLeasingIDChanged()
    End Sub
    Partial Private Sub OnClosingDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnClosingDateChanged()
    End Sub
    Partial Private Sub OnClosingMonthChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnClosingMonthChanged()
    End Sub
    Partial Private Sub OnClosingDayChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnClosingDayChanged()
    End Sub
    Partial Private Sub OnAppStatusRecivedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAppStatusRecivedChanged()
    End Sub
    Partial Private Sub OnProjectIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProjectIDChanged()
    End Sub
    Partial Private Sub OnNotifyNameChanging(value As String)
    End Sub
    Partial Private Sub OnNotifyNameChanged()
    End Sub
    Partial Private Sub OnCusTitleChanging(value As String)
    End Sub
    Partial Private Sub OnCusTitleChanged()
    End Sub
    Partial Private Sub OnCarGroupIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarGroupIDChanged()
    End Sub
    Partial Private Sub OnCarGroupNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarGroupNameChanged()
    End Sub
    Partial Private Sub OnCarBrandNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarBrandNameChanged()
    End Sub
    Partial Private Sub OnCarModelNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarModelNameChanged()
    End Sub
    Partial Private Sub OnCarTypeNameChanging(value As String)
    End Sub
    Partial Private Sub OnCarTypeNameChanged()
    End Sub
    Partial Private Sub OnCarTypeNameFullChanging(value As String)
    End Sub
    Partial Private Sub OnCarTypeNameFullChanged()
    End Sub
    Partial Private Sub OnCarModelCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCarModelCodeChanged()
    End Sub
    Partial Private Sub OnCarGroupNameM2Changing(value As String)
    End Sub
    Partial Private Sub OnCarGroupNameM2Changed()
    End Sub
    Partial Private Sub OnDealerNameEnChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameEnChanged()
    End Sub
    Partial Private Sub OnNLTDealerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnNLTDealerCodeChanged()
    End Sub
    Partial Private Sub OnNLTAreaChanging(value As String)
    End Sub
    Partial Private Sub OnNLTAreaChanged()
    End Sub
    Partial Private Sub OnInsurerNameThChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerNameThChanged()
    End Sub
    Partial Private Sub OnInsurerCodeSibisChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerCodeSibisChanged()
    End Sub
    Partial Private Sub OnInsurerNameEnChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerNameEnChanged()
    End Sub
    Partial Private Sub OnInsurerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerCodeChanged()
    End Sub
    Partial Private Sub OnLeasIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLeasIDChanged()
    End Sub
    Partial Private Sub OnLeasNameChanging(value As String)
    End Sub
    Partial Private Sub OnLeasNameChanged()
    End Sub
    Partial Private Sub OnLeasNameAbbrChanging(value As String)
    End Sub
    Partial Private Sub OnLeasNameAbbrChanged()
    End Sub
    Partial Private Sub OnLeasNameShortChanging(value As String)
    End Sub
    Partial Private Sub OnLeasNameShortChanged()
    End Sub
    Partial Private Sub OnModelNameM2Changing(value As String)
    End Sub
    Partial Private Sub OnModelNameM2Changed()
    End Sub
    Partial Private Sub OnNLTBookingDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNLTBookingDateChanged()
    End Sub
    Partial Private Sub OnSchemeCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSchemeCodeChanged()
    End Sub
    Partial Private Sub OnVmiNetPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVmiNetPremiumChanged()
    End Sub
    Partial Private Sub OnVmiStampChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVmiStampChanged()
    End Sub
    Partial Private Sub OnVmiVatChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVmiVatChanged()
    End Sub
    Partial Private Sub OnVmiTotalPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVmiTotalPremiumChanged()
    End Sub
    Partial Private Sub OnCmiNetPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCmiNetPremiumChanged()
    End Sub
    Partial Private Sub OnCmiStampChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCmiStampChanged()
    End Sub
    Partial Private Sub OnCmiVatChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCmiVatChanged()
    End Sub
    Partial Private Sub OnCmiTotalPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCmiTotalPremiumChanged()
    End Sub
    Partial Private Sub OnClassOfRiskVMIChanging(value As String)
    End Sub
    Partial Private Sub OnClassOfRiskVMIChanged()
    End Sub
    Partial Private Sub OnClassOfRiskCMIChanging(value As String)
    End Sub
    Partial Private Sub OnClassOfRiskCMIChanged()
    End Sub
    Partial Private Sub OnShowroomIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnShowroomIDChanged()
    End Sub
    Partial Private Sub OnShowroomNameChanging(value As String)
    End Sub
    Partial Private Sub OnShowroomNameChanged()
    End Sub
    Partial Private Sub OnDealerIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDealerIDChanged()
    End Sub
    Partial Private Sub OnShorwoomNameEnChanging(value As String)
    End Sub
    Partial Private Sub OnShorwoomNameEnChanged()
    End Sub
    Partial Private Sub OnCarTypeNameM2Changing(value As String)
    End Sub
    Partial Private Sub OnCarTypeNameM2Changed()
    End Sub
    Partial Private Sub OnTypeInsIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTypeInsIDChanged()
    End Sub
    Partial Private Sub OnTypeInsNameChanging(value As String)
    End Sub
    Partial Private Sub OnTypeInsNameChanged()
    End Sub
    Partial Private Sub OnTypeInsStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTypeInsStatusChanged()
    End Sub
    Partial Private Sub OnTypeInsReportToNLTHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTypeInsReportToNLTHChanged()
    End Sub
    Partial Private Sub OnTypeInsIsFreeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTypeInsIsFreeChanged()
    End Sub
    Partial Private Sub OnUserAddedTelChanging(value As String)
    End Sub
    Partial Private Sub OnUserAddedTelChanged()
    End Sub
    Partial Private Sub OnUserAddedTypeChanging(value As String)
    End Sub
    Partial Private Sub OnUserAddedTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property AppID() As Integer
		Get
			Return Me._AppID
		End Get
		Set
			If ((Me._AppID = value)  _
						= false) Then
				Me.OnAppIDChanging(value)
				Me.SendPropertyChanging
				Me._AppID = value
				Me.SendPropertyChanged("AppID")
				Me.OnAppIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CusName", DbType:="VarChar(50)")>  _
	Public Property CusName() As String
		Get
			Return Me._CusName
		End Get
		Set
			If (String.Equals(Me._CusName, value) = false) Then
				Me.OnCusNameChanging(value)
				Me.SendPropertyChanging
				Me._CusName = value
				Me.SendPropertyChanged("CusName")
				Me.OnCusNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CusSurname", DbType:="VarChar(50)")>  _
	Public Property CusSurname() As String
		Get
			Return Me._CusSurname
		End Get
		Set
			If (String.Equals(Me._CusSurname, value) = false) Then
				Me.OnCusSurnameChanging(value)
				Me.SendPropertyChanging
				Me._CusSurname = value
				Me.SendPropertyChanged("CusSurname")
				Me.OnCusSurnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CusIDCard", DbType:="VarChar(50)")>  _
	Public Property CusIDCard() As String
		Get
			Return Me._CusIDCard
		End Get
		Set
			If (String.Equals(Me._CusIDCard, value) = false) Then
				Me.OnCusIDCardChanging(value)
				Me.SendPropertyChanging
				Me._CusIDCard = value
				Me.SendPropertyChanged("CusIDCard")
				Me.OnCusIDCardChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CusAddress1", DbType:="NVarChar(255)")>  _
	Public Property CusAddress1() As String
		Get
			Return Me._CusAddress1
		End Get
		Set
			If (String.Equals(Me._CusAddress1, value) = false) Then
				Me.OnCusAddress1Changing(value)
				Me.SendPropertyChanging
				Me._CusAddress1 = value
				Me.SendPropertyChanged("CusAddress1")
				Me.OnCusAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CusAddress2", DbType:="NVarChar(255)")>  _
	Public Property CusAddress2() As String
		Get
			Return Me._CusAddress2
		End Get
		Set
			If (String.Equals(Me._CusAddress2, value) = false) Then
				Me.OnCusAddress2Changing(value)
				Me.SendPropertyChanging
				Me._CusAddress2 = value
				Me.SendPropertyChanged("CusAddress2")
				Me.OnCusAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CusMobile", DbType:="VarChar(50)")>  _
	Public Property CusMobile() As String
		Get
			Return Me._CusMobile
		End Get
		Set
			If (String.Equals(Me._CusMobile, value) = false) Then
				Me.OnCusMobileChanging(value)
				Me.SendPropertyChanging
				Me._CusMobile = value
				Me.SendPropertyChanged("CusMobile")
				Me.OnCusMobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CusHomePhone", DbType:="VarChar(50)")>  _
	Public Property CusHomePhone() As String
		Get
			Return Me._CusHomePhone
		End Get
		Set
			If (String.Equals(Me._CusHomePhone, value) = false) Then
				Me.OnCusHomePhoneChanging(value)
				Me.SendPropertyChanging
				Me._CusHomePhone = value
				Me.SendPropertyChanged("CusHomePhone")
				Me.OnCusHomePhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CusOfficePhone", DbType:="Int")>  _
	Public Property CusOfficePhone() As System.Nullable(Of Integer)
		Get
			Return Me._CusOfficePhone
		End Get
		Set
			If (Me._CusOfficePhone.Equals(value) = false) Then
				Me.OnCusOfficePhoneChanging(value)
				Me.SendPropertyChanging
				Me._CusOfficePhone = value
				Me.SendPropertyChanged("CusOfficePhone")
				Me.OnCusOfficePhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarEngineNo", DbType:="NVarChar(255)")>  _
	Public Property CarEngineNo() As String
		Get
			Return Me._CarEngineNo
		End Get
		Set
			If (String.Equals(Me._CarEngineNo, value) = false) Then
				Me.OnCarEngineNoChanging(value)
				Me.SendPropertyChanging
				Me._CarEngineNo = value
				Me.SendPropertyChanged("CarEngineNo")
				Me.OnCarEngineNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarChassisNo", DbType:="VarChar(50)")>  _
	Public Property CarChassisNo() As String
		Get
			Return Me._CarChassisNo
		End Get
		Set
			If (String.Equals(Me._CarChassisNo, value) = false) Then
				Me.OnCarChassisNoChanging(value)
				Me.SendPropertyChanging
				Me._CarChassisNo = value
				Me.SendPropertyChanged("CarChassisNo")
				Me.OnCarChassisNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarPlantNo", DbType:="NVarChar(255)")>  _
	Public Property CarPlantNo() As String
		Get
			Return Me._CarPlantNo
		End Get
		Set
			If (String.Equals(Me._CarPlantNo, value) = false) Then
				Me.OnCarPlantNoChanging(value)
				Me.SendPropertyChanging
				Me._CarPlantNo = value
				Me.SendPropertyChanged("CarPlantNo")
				Me.OnCarPlantNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateEffective", DbType:="DateTime")>  _
	Public Property DateEffective() As System.Nullable(Of Date)
		Get
			Return Me._DateEffective
		End Get
		Set
			If (Me._DateEffective.Equals(value) = false) Then
				Me.OnDateEffectiveChanging(value)
				Me.SendPropertyChanging
				Me._DateEffective = value
				Me.SendPropertyChanged("DateEffective")
				Me.OnDateEffectiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateExpired", DbType:="VarChar(50)")>  _
	Public Property DateExpired() As String
		Get
			Return Me._DateExpired
		End Get
		Set
			If (String.Equals(Me._DateExpired, value) = false) Then
				Me.OnDateExpiredChanging(value)
				Me.SendPropertyChanging
				Me._DateExpired = value
				Me.SendPropertyChanged("DateExpired")
				Me.OnDateExpiredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateNotification", DbType:="DateTime")>  _
	Public Property DateNotification() As System.Nullable(Of Date)
		Get
			Return Me._DateNotification
		End Get
		Set
			If (Me._DateNotification.Equals(value) = false) Then
				Me.OnDateNotificationChanging(value)
				Me.SendPropertyChanging
				Me._DateNotification = value
				Me.SendPropertyChanged("DateNotification")
				Me.OnDateNotificationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppStatus", DbType:="Int NOT NULL")>  _
	Public Property AppStatus() As Integer
		Get
			Return Me._AppStatus
		End Get
		Set
			If ((Me._AppStatus = value)  _
						= false) Then
				Me.OnAppStatusChanging(value)
				Me.SendPropertyChanging
				Me._AppStatus = value
				Me.SendPropertyChanged("AppStatus")
				Me.OnAppStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppIsActive", DbType:="Int")>  _
	Public Property AppIsActive() As System.Nullable(Of Integer)
		Get
			Return Me._AppIsActive
		End Get
		Set
			If (Me._AppIsActive.Equals(value) = false) Then
				Me.OnAppIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._AppIsActive = value
				Me.SendPropertyChanged("AppIsActive")
				Me.OnAppIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="NVarChar(50)")>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CmiBuying", DbType:="Int")>  _
	Public Property CmiBuying() As System.Nullable(Of Integer)
		Get
			Return Me._CmiBuying
		End Get
		Set
			If (Me._CmiBuying.Equals(value) = false) Then
				Me.OnCmiBuyingChanging(value)
				Me.SendPropertyChanging
				Me._CmiBuying = value
				Me.SendPropertyChanged("CmiBuying")
				Me.OnCmiBuyingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppBeneficiary", DbType:="NVarChar(100)")>  _
	Public Property AppBeneficiary() As String
		Get
			Return Me._AppBeneficiary
		End Get
		Set
			If (String.Equals(Me._AppBeneficiary, value) = false) Then
				Me.OnAppBeneficiaryChanging(value)
				Me.SendPropertyChanging
				Me._AppBeneficiary = value
				Me.SendPropertyChanged("AppBeneficiary")
				Me.OnAppBeneficiaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeasingID", DbType:="Int")>  _
	Public Property LeasingID() As System.Nullable(Of Integer)
		Get
			Return Me._LeasingID
		End Get
		Set
			If (Me._LeasingID.Equals(value) = false) Then
				Me.OnLeasingIDChanging(value)
				Me.SendPropertyChanging
				Me._LeasingID = value
				Me.SendPropertyChanged("LeasingID")
				Me.OnLeasingIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingDate", DbType:="DateTime")>  _
	Public Property ClosingDate() As System.Nullable(Of Date)
		Get
			Return Me._ClosingDate
		End Get
		Set
			If (Me._ClosingDate.Equals(value) = false) Then
				Me.OnClosingDateChanging(value)
				Me.SendPropertyChanging
				Me._ClosingDate = value
				Me.SendPropertyChanged("ClosingDate")
				Me.OnClosingDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingMonth", DbType:="DateTime")>  _
	Public Property ClosingMonth() As System.Nullable(Of Date)
		Get
			Return Me._ClosingMonth
		End Get
		Set
			If (Me._ClosingMonth.Equals(value) = false) Then
				Me.OnClosingMonthChanging(value)
				Me.SendPropertyChanging
				Me._ClosingMonth = value
				Me.SendPropertyChanged("ClosingMonth")
				Me.OnClosingMonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingDay", DbType:="DateTime")>  _
	Public Property ClosingDay() As System.Nullable(Of Date)
		Get
			Return Me._ClosingDay
		End Get
		Set
			If (Me._ClosingDay.Equals(value) = false) Then
				Me.OnClosingDayChanging(value)
				Me.SendPropertyChanging
				Me._ClosingDay = value
				Me.SendPropertyChanged("ClosingDay")
				Me.OnClosingDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppStatusRecived", DbType:="Int")>  _
	Public Property AppStatusRecived() As System.Nullable(Of Integer)
		Get
			Return Me._AppStatusRecived
		End Get
		Set
			If (Me._AppStatusRecived.Equals(value) = false) Then
				Me.OnAppStatusRecivedChanging(value)
				Me.SendPropertyChanging
				Me._AppStatusRecived = value
				Me.SendPropertyChanged("AppStatusRecived")
				Me.OnAppStatusRecivedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectID", DbType:="Int")>  _
	Public Property ProjectID() As System.Nullable(Of Integer)
		Get
			Return Me._ProjectID
		End Get
		Set
			If (Me._ProjectID.Equals(value) = false) Then
				Me.OnProjectIDChanging(value)
				Me.SendPropertyChanging
				Me._ProjectID = value
				Me.SendPropertyChanged("ProjectID")
				Me.OnProjectIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotifyName", DbType:="VarChar(50)")>  _
	Public Property NotifyName() As String
		Get
			Return Me._NotifyName
		End Get
		Set
			If (String.Equals(Me._NotifyName, value) = false) Then
				Me.OnNotifyNameChanging(value)
				Me.SendPropertyChanging
				Me._NotifyName = value
				Me.SendPropertyChanged("NotifyName")
				Me.OnNotifyNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CusTitle", DbType:="VarChar(32)")>  _
	Public Property CusTitle() As String
		Get
			Return Me._CusTitle
		End Get
		Set
			If (String.Equals(Me._CusTitle, value) = false) Then
				Me.OnCusTitleChanging(value)
				Me.SendPropertyChanging
				Me._CusTitle = value
				Me.SendPropertyChanged("CusTitle")
				Me.OnCusTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarGroupID", DbType:="Int")>  _
	Public Property CarGroupID() As System.Nullable(Of Integer)
		Get
			Return Me._CarGroupID
		End Get
		Set
			If (Me._CarGroupID.Equals(value) = false) Then
				Me.OnCarGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._CarGroupID = value
				Me.SendPropertyChanged("CarGroupID")
				Me.OnCarGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarGroupName", DbType:="VarChar(128)")>  _
	Public Property CarGroupName() As String
		Get
			Return Me._CarGroupName
		End Get
		Set
			If (String.Equals(Me._CarGroupName, value) = false) Then
				Me.OnCarGroupNameChanging(value)
				Me.SendPropertyChanging
				Me._CarGroupName = value
				Me.SendPropertyChanged("CarGroupName")
				Me.OnCarGroupNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrandName", DbType:="VarChar(150)")>  _
	Public Property CarBrandName() As String
		Get
			Return Me._CarBrandName
		End Get
		Set
			If (String.Equals(Me._CarBrandName, value) = false) Then
				Me.OnCarBrandNameChanging(value)
				Me.SendPropertyChanging
				Me._CarBrandName = value
				Me.SendPropertyChanged("CarBrandName")
				Me.OnCarBrandNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModelName", DbType:="VarChar(255)")>  _
	Public Property CarModelName() As String
		Get
			Return Me._CarModelName
		End Get
		Set
			If (String.Equals(Me._CarModelName, value) = false) Then
				Me.OnCarModelNameChanging(value)
				Me.SendPropertyChanging
				Me._CarModelName = value
				Me.SendPropertyChanged("CarModelName")
				Me.OnCarModelNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarTypeName", DbType:="VarChar(255)")>  _
	Public Property CarTypeName() As String
		Get
			Return Me._CarTypeName
		End Get
		Set
			If (String.Equals(Me._CarTypeName, value) = false) Then
				Me.OnCarTypeNameChanging(value)
				Me.SendPropertyChanging
				Me._CarTypeName = value
				Me.SendPropertyChanged("CarTypeName")
				Me.OnCarTypeNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarTypeNameFull", DbType:="VarChar(255)")>  _
	Public Property CarTypeNameFull() As String
		Get
			Return Me._CarTypeNameFull
		End Get
		Set
			If (String.Equals(Me._CarTypeNameFull, value) = false) Then
				Me.OnCarTypeNameFullChanging(value)
				Me.SendPropertyChanging
				Me._CarTypeNameFull = value
				Me.SendPropertyChanged("CarTypeNameFull")
				Me.OnCarTypeNameFullChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModelCode", DbType:="VarChar(64)")>  _
	Public Property CarModelCode() As String
		Get
			Return Me._CarModelCode
		End Get
		Set
			If (String.Equals(Me._CarModelCode, value) = false) Then
				Me.OnCarModelCodeChanging(value)
				Me.SendPropertyChanging
				Me._CarModelCode = value
				Me.SendPropertyChanged("CarModelCode")
				Me.OnCarModelCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarGroupNameM2", DbType:="NVarChar(255)")>  _
	Public Property CarGroupNameM2() As String
		Get
			Return Me._CarGroupNameM2
		End Get
		Set
			If (String.Equals(Me._CarGroupNameM2, value) = false) Then
				Me.OnCarGroupNameM2Changing(value)
				Me.SendPropertyChanging
				Me._CarGroupNameM2 = value
				Me.SendPropertyChanged("CarGroupNameM2")
				Me.OnCarGroupNameM2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerNameEn", DbType:="VarChar(100)")>  _
	Public Property DealerNameEn() As String
		Get
			Return Me._DealerNameEn
		End Get
		Set
			If (String.Equals(Me._DealerNameEn, value) = false) Then
				Me.OnDealerNameEnChanging(value)
				Me.SendPropertyChanging
				Me._DealerNameEn = value
				Me.SendPropertyChanged("DealerNameEn")
				Me.OnDealerNameEnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLTDealerCode", DbType:="VarChar(50)")>  _
	Public Property NLTDealerCode() As String
		Get
			Return Me._NLTDealerCode
		End Get
		Set
			If (String.Equals(Me._NLTDealerCode, value) = false) Then
				Me.OnNLTDealerCodeChanging(value)
				Me.SendPropertyChanging
				Me._NLTDealerCode = value
				Me.SendPropertyChanged("NLTDealerCode")
				Me.OnNLTDealerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLTArea", DbType:="VarChar(50)")>  _
	Public Property NLTArea() As String
		Get
			Return Me._NLTArea
		End Get
		Set
			If (String.Equals(Me._NLTArea, value) = false) Then
				Me.OnNLTAreaChanging(value)
				Me.SendPropertyChanging
				Me._NLTArea = value
				Me.SendPropertyChanged("NLTArea")
				Me.OnNLTAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerNameTh", DbType:="NVarChar(255)")>  _
	Public Property InsurerNameTh() As String
		Get
			Return Me._InsurerNameTh
		End Get
		Set
			If (String.Equals(Me._InsurerNameTh, value) = false) Then
				Me.OnInsurerNameThChanging(value)
				Me.SendPropertyChanging
				Me._InsurerNameTh = value
				Me.SendPropertyChanged("InsurerNameTh")
				Me.OnInsurerNameThChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCodeSibis", DbType:="VarChar(50)")>  _
	Public Property InsurerCodeSibis() As String
		Get
			Return Me._InsurerCodeSibis
		End Get
		Set
			If (String.Equals(Me._InsurerCodeSibis, value) = false) Then
				Me.OnInsurerCodeSibisChanging(value)
				Me.SendPropertyChanging
				Me._InsurerCodeSibis = value
				Me.SendPropertyChanged("InsurerCodeSibis")
				Me.OnInsurerCodeSibisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerNameEn", DbType:="NVarChar(255)")>  _
	Public Property InsurerNameEn() As String
		Get
			Return Me._InsurerNameEn
		End Get
		Set
			If (String.Equals(Me._InsurerNameEn, value) = false) Then
				Me.OnInsurerNameEnChanging(value)
				Me.SendPropertyChanging
				Me._InsurerNameEn = value
				Me.SendPropertyChanged("InsurerNameEn")
				Me.OnInsurerNameEnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="VarChar(50)")>  _
	Public Property InsurerCode() As String
		Get
			Return Me._InsurerCode
		End Get
		Set
			If (String.Equals(Me._InsurerCode, value) = false) Then
				Me.OnInsurerCodeChanging(value)
				Me.SendPropertyChanging
				Me._InsurerCode = value
				Me.SendPropertyChanged("InsurerCode")
				Me.OnInsurerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeasID", DbType:="Int")>  _
	Public Property LeasID() As System.Nullable(Of Integer)
		Get
			Return Me._LeasID
		End Get
		Set
			If (Me._LeasID.Equals(value) = false) Then
				Me.OnLeasIDChanging(value)
				Me.SendPropertyChanging
				Me._LeasID = value
				Me.SendPropertyChanged("LeasID")
				Me.OnLeasIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeasName", DbType:="NVarChar(100)")>  _
	Public Property LeasName() As String
		Get
			Return Me._LeasName
		End Get
		Set
			If (String.Equals(Me._LeasName, value) = false) Then
				Me.OnLeasNameChanging(value)
				Me.SendPropertyChanging
				Me._LeasName = value
				Me.SendPropertyChanged("LeasName")
				Me.OnLeasNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeasNameAbbr", DbType:="VarChar(20)")>  _
	Public Property LeasNameAbbr() As String
		Get
			Return Me._LeasNameAbbr
		End Get
		Set
			If (String.Equals(Me._LeasNameAbbr, value) = false) Then
				Me.OnLeasNameAbbrChanging(value)
				Me.SendPropertyChanging
				Me._LeasNameAbbr = value
				Me.SendPropertyChanged("LeasNameAbbr")
				Me.OnLeasNameAbbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeasNameShort", DbType:="VarChar(20)")>  _
	Public Property LeasNameShort() As String
		Get
			Return Me._LeasNameShort
		End Get
		Set
			If (String.Equals(Me._LeasNameShort, value) = false) Then
				Me.OnLeasNameShortChanging(value)
				Me.SendPropertyChanging
				Me._LeasNameShort = value
				Me.SendPropertyChanged("LeasNameShort")
				Me.OnLeasNameShortChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelNameM2", DbType:="NVarChar(255)")>  _
	Public Property ModelNameM2() As String
		Get
			Return Me._ModelNameM2
		End Get
		Set
			If (String.Equals(Me._ModelNameM2, value) = false) Then
				Me.OnModelNameM2Changing(value)
				Me.SendPropertyChanging
				Me._ModelNameM2 = value
				Me.SendPropertyChanged("ModelNameM2")
				Me.OnModelNameM2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLTBookingDate", DbType:="DateTime")>  _
	Public Property NLTBookingDate() As System.Nullable(Of Date)
		Get
			Return Me._NLTBookingDate
		End Get
		Set
			If (Me._NLTBookingDate.Equals(value) = false) Then
				Me.OnNLTBookingDateChanging(value)
				Me.SendPropertyChanging
				Me._NLTBookingDate = value
				Me.SendPropertyChanged("NLTBookingDate")
				Me.OnNLTBookingDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchemeCode", DbType:="NVarChar(50)")>  _
	Public Property SchemeCode() As String
		Get
			Return Me._SchemeCode
		End Get
		Set
			If (String.Equals(Me._SchemeCode, value) = false) Then
				Me.OnSchemeCodeChanging(value)
				Me.SendPropertyChanging
				Me._SchemeCode = value
				Me.SendPropertyChanged("SchemeCode")
				Me.OnSchemeCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VmiNetPremium", DbType:="Decimal(18,2)")>  _
	Public Property VmiNetPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._VmiNetPremium
		End Get
		Set
			If (Me._VmiNetPremium.Equals(value) = false) Then
				Me.OnVmiNetPremiumChanging(value)
				Me.SendPropertyChanging
				Me._VmiNetPremium = value
				Me.SendPropertyChanged("VmiNetPremium")
				Me.OnVmiNetPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VmiStamp", DbType:="Decimal(18,2)")>  _
	Public Property VmiStamp() As System.Nullable(Of Decimal)
		Get
			Return Me._VmiStamp
		End Get
		Set
			If (Me._VmiStamp.Equals(value) = false) Then
				Me.OnVmiStampChanging(value)
				Me.SendPropertyChanging
				Me._VmiStamp = value
				Me.SendPropertyChanged("VmiStamp")
				Me.OnVmiStampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VmiVat", DbType:="Decimal(18,2)")>  _
	Public Property VmiVat() As System.Nullable(Of Decimal)
		Get
			Return Me._VmiVat
		End Get
		Set
			If (Me._VmiVat.Equals(value) = false) Then
				Me.OnVmiVatChanging(value)
				Me.SendPropertyChanging
				Me._VmiVat = value
				Me.SendPropertyChanged("VmiVat")
				Me.OnVmiVatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VmiTotalPremium", DbType:="Decimal(18,2)")>  _
	Public Property VmiTotalPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._VmiTotalPremium
		End Get
		Set
			If (Me._VmiTotalPremium.Equals(value) = false) Then
				Me.OnVmiTotalPremiumChanging(value)
				Me.SendPropertyChanging
				Me._VmiTotalPremium = value
				Me.SendPropertyChanged("VmiTotalPremium")
				Me.OnVmiTotalPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CmiNetPremium", DbType:="Decimal(18,2)")>  _
	Public Property CmiNetPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._CmiNetPremium
		End Get
		Set
			If (Me._CmiNetPremium.Equals(value) = false) Then
				Me.OnCmiNetPremiumChanging(value)
				Me.SendPropertyChanging
				Me._CmiNetPremium = value
				Me.SendPropertyChanged("CmiNetPremium")
				Me.OnCmiNetPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CmiStamp", DbType:="Decimal(18,2)")>  _
	Public Property CmiStamp() As System.Nullable(Of Decimal)
		Get
			Return Me._CmiStamp
		End Get
		Set
			If (Me._CmiStamp.Equals(value) = false) Then
				Me.OnCmiStampChanging(value)
				Me.SendPropertyChanging
				Me._CmiStamp = value
				Me.SendPropertyChanged("CmiStamp")
				Me.OnCmiStampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CmiVat", DbType:="Decimal(18,2)")>  _
	Public Property CmiVat() As System.Nullable(Of Decimal)
		Get
			Return Me._CmiVat
		End Get
		Set
			If (Me._CmiVat.Equals(value) = false) Then
				Me.OnCmiVatChanging(value)
				Me.SendPropertyChanging
				Me._CmiVat = value
				Me.SendPropertyChanged("CmiVat")
				Me.OnCmiVatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CmiTotalPremium", DbType:="Decimal(18,2)")>  _
	Public Property CmiTotalPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._CmiTotalPremium
		End Get
		Set
			If (Me._CmiTotalPremium.Equals(value) = false) Then
				Me.OnCmiTotalPremiumChanging(value)
				Me.SendPropertyChanging
				Me._CmiTotalPremium = value
				Me.SendPropertyChanged("CmiTotalPremium")
				Me.OnCmiTotalPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassOfRiskVMI", DbType:="Char(8)")>  _
	Public Property ClassOfRiskVMI() As String
		Get
			Return Me._ClassOfRiskVMI
		End Get
		Set
			If (String.Equals(Me._ClassOfRiskVMI, value) = false) Then
				Me.OnClassOfRiskVMIChanging(value)
				Me.SendPropertyChanging
				Me._ClassOfRiskVMI = value
				Me.SendPropertyChanged("ClassOfRiskVMI")
				Me.OnClassOfRiskVMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassOfRiskCMI", DbType:="Char(8)")>  _
	Public Property ClassOfRiskCMI() As String
		Get
			Return Me._ClassOfRiskCMI
		End Get
		Set
			If (String.Equals(Me._ClassOfRiskCMI, value) = false) Then
				Me.OnClassOfRiskCMIChanging(value)
				Me.SendPropertyChanging
				Me._ClassOfRiskCMI = value
				Me.SendPropertyChanged("ClassOfRiskCMI")
				Me.OnClassOfRiskCMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomID", DbType:="Int")>  _
	Public Property ShowroomID() As System.Nullable(Of Integer)
		Get
			Return Me._ShowroomID
		End Get
		Set
			If (Me._ShowroomID.Equals(value) = false) Then
				Me.OnShowroomIDChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomID = value
				Me.SendPropertyChanged("ShowroomID")
				Me.OnShowroomIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomName", DbType:="VarChar(150)")>  _
	Public Property ShowroomName() As String
		Get
			Return Me._ShowroomName
		End Get
		Set
			If (String.Equals(Me._ShowroomName, value) = false) Then
				Me.OnShowroomNameChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomName = value
				Me.SendPropertyChanged("ShowroomName")
				Me.OnShowroomNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerID", DbType:="Int")>  _
	Public Property DealerID() As System.Nullable(Of Integer)
		Get
			Return Me._DealerID
		End Get
		Set
			If (Me._DealerID.Equals(value) = false) Then
				Me.OnDealerIDChanging(value)
				Me.SendPropertyChanging
				Me._DealerID = value
				Me.SendPropertyChanged("DealerID")
				Me.OnDealerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShorwoomNameEn", DbType:="VarChar(100)")>  _
	Public Property ShorwoomNameEn() As String
		Get
			Return Me._ShorwoomNameEn
		End Get
		Set
			If (String.Equals(Me._ShorwoomNameEn, value) = false) Then
				Me.OnShorwoomNameEnChanging(value)
				Me.SendPropertyChanging
				Me._ShorwoomNameEn = value
				Me.SendPropertyChanged("ShorwoomNameEn")
				Me.OnShorwoomNameEnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarTypeNameM2", DbType:="NVarChar(50)")>  _
	Public Property CarTypeNameM2() As String
		Get
			Return Me._CarTypeNameM2
		End Get
		Set
			If (String.Equals(Me._CarTypeNameM2, value) = false) Then
				Me.OnCarTypeNameM2Changing(value)
				Me.SendPropertyChanging
				Me._CarTypeNameM2 = value
				Me.SendPropertyChanged("CarTypeNameM2")
				Me.OnCarTypeNameM2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeInsID", DbType:="Int")>  _
	Public Property TypeInsID() As System.Nullable(Of Integer)
		Get
			Return Me._TypeInsID
		End Get
		Set
			If (Me._TypeInsID.Equals(value) = false) Then
				Me.OnTypeInsIDChanging(value)
				Me.SendPropertyChanging
				Me._TypeInsID = value
				Me.SendPropertyChanged("TypeInsID")
				Me.OnTypeInsIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeInsName", DbType:="NVarChar(100)")>  _
	Public Property TypeInsName() As String
		Get
			Return Me._TypeInsName
		End Get
		Set
			If (String.Equals(Me._TypeInsName, value) = false) Then
				Me.OnTypeInsNameChanging(value)
				Me.SendPropertyChanging
				Me._TypeInsName = value
				Me.SendPropertyChanged("TypeInsName")
				Me.OnTypeInsNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeInsStatus", DbType:="Int")>  _
	Public Property TypeInsStatus() As System.Nullable(Of Integer)
		Get
			Return Me._TypeInsStatus
		End Get
		Set
			If (Me._TypeInsStatus.Equals(value) = false) Then
				Me.OnTypeInsStatusChanging(value)
				Me.SendPropertyChanging
				Me._TypeInsStatus = value
				Me.SendPropertyChanged("TypeInsStatus")
				Me.OnTypeInsStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeInsReportToNLTH", DbType:="Int")>  _
	Public Property TypeInsReportToNLTH() As System.Nullable(Of Integer)
		Get
			Return Me._TypeInsReportToNLTH
		End Get
		Set
			If (Me._TypeInsReportToNLTH.Equals(value) = false) Then
				Me.OnTypeInsReportToNLTHChanging(value)
				Me.SendPropertyChanging
				Me._TypeInsReportToNLTH = value
				Me.SendPropertyChanged("TypeInsReportToNLTH")
				Me.OnTypeInsReportToNLTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeInsIsFree", DbType:="Int")>  _
	Public Property TypeInsIsFree() As System.Nullable(Of Integer)
		Get
			Return Me._TypeInsIsFree
		End Get
		Set
			If (Me._TypeInsIsFree.Equals(value) = false) Then
				Me.OnTypeInsIsFreeChanging(value)
				Me.SendPropertyChanging
				Me._TypeInsIsFree = value
				Me.SendPropertyChanged("TypeInsIsFree")
				Me.OnTypeInsIsFreeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserAddedTel", DbType:="VarChar(64)")>  _
	Public Property UserAddedTel() As String
		Get
			Return Me._UserAddedTel
		End Get
		Set
			If (String.Equals(Me._UserAddedTel, value) = false) Then
				Me.OnUserAddedTelChanging(value)
				Me.SendPropertyChanging
				Me._UserAddedTel = value
				Me.SendPropertyChanged("UserAddedTel")
				Me.OnUserAddedTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserAddedType", DbType:="VarChar(16)")>  _
	Public Property UserAddedType() As String
		Get
			Return Me._UserAddedType
		End Get
		Set
			If (String.Equals(Me._UserAddedType, value) = false) Then
				Me.OnUserAddedTypeChanging(value)
				Me.SendPropertyChanging
				Me._UserAddedType = value
				Me.SendPropertyChanged("UserAddedType")
				Me.OnUserAddedTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblBudget_APD_NetIncome")>  _
Partial Public Class tblBudget_APD_NetIncome
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AccountExecutive As String
	
	Private _BudgetDate As String
	
	Private _DateBudget As System.Nullable(Of Date)
	
	Private _BudgetAmount As System.Nullable(Of Double)
	
	Private _ForcastAmount As System.Nullable(Of Double)
	
	Private _ActualAmount As System.Nullable(Of Double)
	
	Private _Remark As String
	
	Private _InvoiceNo As Integer
	
	Private _BusinessGroup As String
	
	Private _ClassGroup As String
	
	Private _AEGroupRunning As System.Nullable(Of Integer)
	
	Private _AESGroupRunning As System.Nullable(Of Integer)
	
	Private _AEGroupName As String
	
	Private _AESGroupName As String
	
	Private _Name As String
	
	Private _AExec As String
	
	Private _Billing As Date
	
	Private _TransType As String
	
	Private _Premium As Double
	
	Private _ExchangeRate As Double
	
	Private _Department As String
	
	Private _AdminCostLevy As Double
	
	Private _RiskGovernment As String
	
	Private _HeadingIII As String
	
	Private _CN As Integer
	
	Private _DN As Integer
	
	Private _GroupTypeB As String
	
	Private _GroupTypeC As String
	
	Private _AdminIn1 As System.Nullable(Of Decimal)
	
	Private _AdminIn2 As System.Nullable(Of Decimal)
	
	Private _AdminOut1 As System.Nullable(Of Decimal)
	
	Private _AdminOut2 As System.Nullable(Of Decimal)
	
	Private _RealBrok As System.Nullable(Of Decimal)
	
	Private _OROut As System.Nullable(Of Decimal)
	
	Private _ORIn As System.Nullable(Of Decimal)
	
	Private _CommOut As System.Nullable(Of Decimal)
	
	Private _Discount As System.Nullable(Of Decimal)
	
	Private _PremiumTHB As System.Nullable(Of Decimal)
	
	Private _PremiumCN As System.Nullable(Of Decimal)
	
	Private _PremiumDN As System.Nullable(Of Decimal)
	
	Private _TotalIncome As System.Nullable(Of Decimal)
	
	Private _NetIncome As System.Nullable(Of Decimal)
	
	Private _NetIncomeCN As System.Nullable(Of Decimal)
	
	Private _NetIncomeDN As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAccountExecutiveChanging(value As String)
    End Sub
    Partial Private Sub OnAccountExecutiveChanged()
    End Sub
    Partial Private Sub OnBudgetDateChanging(value As String)
    End Sub
    Partial Private Sub OnBudgetDateChanged()
    End Sub
    Partial Private Sub OnDateBudgetChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateBudgetChanged()
    End Sub
    Partial Private Sub OnBudgetAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBudgetAmountChanged()
    End Sub
    Partial Private Sub OnForcastAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnForcastAmountChanged()
    End Sub
    Partial Private Sub OnActualAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnActualAmountChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnInvoiceNoChanging(value As Integer)
    End Sub
    Partial Private Sub OnInvoiceNoChanged()
    End Sub
    Partial Private Sub OnBusinessGroupChanging(value As String)
    End Sub
    Partial Private Sub OnBusinessGroupChanged()
    End Sub
    Partial Private Sub OnClassGroupChanging(value As String)
    End Sub
    Partial Private Sub OnClassGroupChanged()
    End Sub
    Partial Private Sub OnAEGroupRunningChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAEGroupRunningChanged()
    End Sub
    Partial Private Sub OnAESGroupRunningChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAESGroupRunningChanged()
    End Sub
    Partial Private Sub OnAEGroupNameChanging(value As String)
    End Sub
    Partial Private Sub OnAEGroupNameChanged()
    End Sub
    Partial Private Sub OnAESGroupNameChanging(value As String)
    End Sub
    Partial Private Sub OnAESGroupNameChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnAExecChanging(value As String)
    End Sub
    Partial Private Sub OnAExecChanged()
    End Sub
    Partial Private Sub OnBillingChanging(value As Date)
    End Sub
    Partial Private Sub OnBillingChanged()
    End Sub
    Partial Private Sub OnTransTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTransTypeChanged()
    End Sub
    Partial Private Sub OnPremiumChanging(value As Double)
    End Sub
    Partial Private Sub OnPremiumChanged()
    End Sub
    Partial Private Sub OnExchangeRateChanging(value As Double)
    End Sub
    Partial Private Sub OnExchangeRateChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnAdminCostLevyChanging(value As Double)
    End Sub
    Partial Private Sub OnAdminCostLevyChanged()
    End Sub
    Partial Private Sub OnRiskGovernmentChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGovernmentChanged()
    End Sub
    Partial Private Sub OnHeadingIIIChanging(value As String)
    End Sub
    Partial Private Sub OnHeadingIIIChanged()
    End Sub
    Partial Private Sub OnCNChanging(value As Integer)
    End Sub
    Partial Private Sub OnCNChanged()
    End Sub
    Partial Private Sub OnDNChanging(value As Integer)
    End Sub
    Partial Private Sub OnDNChanged()
    End Sub
    Partial Private Sub OnGroupTypeBChanging(value As String)
    End Sub
    Partial Private Sub OnGroupTypeBChanged()
    End Sub
    Partial Private Sub OnGroupTypeCChanging(value As String)
    End Sub
    Partial Private Sub OnGroupTypeCChanged()
    End Sub
    Partial Private Sub OnAdminIn1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAdminIn1Changed()
    End Sub
    Partial Private Sub OnAdminIn2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAdminIn2Changed()
    End Sub
    Partial Private Sub OnAdminOut1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAdminOut1Changed()
    End Sub
    Partial Private Sub OnAdminOut2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAdminOut2Changed()
    End Sub
    Partial Private Sub OnRealBrokChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRealBrokChanged()
    End Sub
    Partial Private Sub OnOROutChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOROutChanged()
    End Sub
    Partial Private Sub OnORInChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnORInChanged()
    End Sub
    Partial Private Sub OnCommOutChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCommOutChanged()
    End Sub
    Partial Private Sub OnDiscountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountChanged()
    End Sub
    Partial Private Sub OnPremiumTHBChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPremiumTHBChanged()
    End Sub
    Partial Private Sub OnPremiumCNChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPremiumCNChanged()
    End Sub
    Partial Private Sub OnPremiumDNChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPremiumDNChanged()
    End Sub
    Partial Private Sub OnTotalIncomeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalIncomeChanged()
    End Sub
    Partial Private Sub OnNetIncomeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNetIncomeChanged()
    End Sub
    Partial Private Sub OnNetIncomeCNChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNetIncomeCNChanged()
    End Sub
    Partial Private Sub OnNetIncomeDNChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNetIncomeDNChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountExecutive", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AccountExecutive() As String
		Get
			Return Me._AccountExecutive
		End Get
		Set
			If (String.Equals(Me._AccountExecutive, value) = false) Then
				Me.OnAccountExecutiveChanging(value)
				Me.SendPropertyChanging
				Me._AccountExecutive = value
				Me.SendPropertyChanged("AccountExecutive")
				Me.OnAccountExecutiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetDate", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property BudgetDate() As String
		Get
			Return Me._BudgetDate
		End Get
		Set
			If (String.Equals(Me._BudgetDate, value) = false) Then
				Me.OnBudgetDateChanging(value)
				Me.SendPropertyChanging
				Me._BudgetDate = value
				Me.SendPropertyChanged("BudgetDate")
				Me.OnBudgetDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateBudget", DbType:="DateTime")>  _
	Public Property DateBudget() As System.Nullable(Of Date)
		Get
			Return Me._DateBudget
		End Get
		Set
			If (Me._DateBudget.Equals(value) = false) Then
				Me.OnDateBudgetChanging(value)
				Me.SendPropertyChanging
				Me._DateBudget = value
				Me.SendPropertyChanged("DateBudget")
				Me.OnDateBudgetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetAmount", DbType:="Float")>  _
	Public Property BudgetAmount() As System.Nullable(Of Double)
		Get
			Return Me._BudgetAmount
		End Get
		Set
			If (Me._BudgetAmount.Equals(value) = false) Then
				Me.OnBudgetAmountChanging(value)
				Me.SendPropertyChanging
				Me._BudgetAmount = value
				Me.SendPropertyChanged("BudgetAmount")
				Me.OnBudgetAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ForcastAmount", DbType:="Float")>  _
	Public Property ForcastAmount() As System.Nullable(Of Double)
		Get
			Return Me._ForcastAmount
		End Get
		Set
			If (Me._ForcastAmount.Equals(value) = false) Then
				Me.OnForcastAmountChanging(value)
				Me.SendPropertyChanging
				Me._ForcastAmount = value
				Me.SendPropertyChanged("ForcastAmount")
				Me.OnForcastAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActualAmount", DbType:="Float")>  _
	Public Property ActualAmount() As System.Nullable(Of Double)
		Get
			Return Me._ActualAmount
		End Get
		Set
			If (Me._ActualAmount.Equals(value) = false) Then
				Me.OnActualAmountChanging(value)
				Me.SendPropertyChanging
				Me._ActualAmount = value
				Me.SendPropertyChanged("ActualAmount")
				Me.OnActualAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(MAX)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InvoiceNo", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property InvoiceNo() As Integer
		Get
			Return Me._InvoiceNo
		End Get
		Set
			If ((Me._InvoiceNo = value)  _
						= false) Then
				Me.OnInvoiceNoChanging(value)
				Me.SendPropertyChanging
				Me._InvoiceNo = value
				Me.SendPropertyChanged("InvoiceNo")
				Me.OnInvoiceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BusinessGroup", DbType:="VarChar(50)")>  _
	Public Property BusinessGroup() As String
		Get
			Return Me._BusinessGroup
		End Get
		Set
			If (String.Equals(Me._BusinessGroup, value) = false) Then
				Me.OnBusinessGroupChanging(value)
				Me.SendPropertyChanging
				Me._BusinessGroup = value
				Me.SendPropertyChanged("BusinessGroup")
				Me.OnBusinessGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassGroup", DbType:="VarChar(50)")>  _
	Public Property ClassGroup() As String
		Get
			Return Me._ClassGroup
		End Get
		Set
			If (String.Equals(Me._ClassGroup, value) = false) Then
				Me.OnClassGroupChanging(value)
				Me.SendPropertyChanging
				Me._ClassGroup = value
				Me.SendPropertyChanged("ClassGroup")
				Me.OnClassGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AEGroupRunning", DbType:="Int")>  _
	Public Property AEGroupRunning() As System.Nullable(Of Integer)
		Get
			Return Me._AEGroupRunning
		End Get
		Set
			If (Me._AEGroupRunning.Equals(value) = false) Then
				Me.OnAEGroupRunningChanging(value)
				Me.SendPropertyChanging
				Me._AEGroupRunning = value
				Me.SendPropertyChanged("AEGroupRunning")
				Me.OnAEGroupRunningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AESGroupRunning", DbType:="Int")>  _
	Public Property AESGroupRunning() As System.Nullable(Of Integer)
		Get
			Return Me._AESGroupRunning
		End Get
		Set
			If (Me._AESGroupRunning.Equals(value) = false) Then
				Me.OnAESGroupRunningChanging(value)
				Me.SendPropertyChanging
				Me._AESGroupRunning = value
				Me.SendPropertyChanged("AESGroupRunning")
				Me.OnAESGroupRunningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AEGroupName", DbType:="VarChar(50)")>  _
	Public Property AEGroupName() As String
		Get
			Return Me._AEGroupName
		End Get
		Set
			If (String.Equals(Me._AEGroupName, value) = false) Then
				Me.OnAEGroupNameChanging(value)
				Me.SendPropertyChanging
				Me._AEGroupName = value
				Me.SendPropertyChanged("AEGroupName")
				Me.OnAEGroupNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AESGroupName", DbType:="VarChar(50)")>  _
	Public Property AESGroupName() As String
		Get
			Return Me._AESGroupName
		End Get
		Set
			If (String.Equals(Me._AESGroupName, value) = false) Then
				Me.OnAESGroupNameChanging(value)
				Me.SendPropertyChanging
				Me._AESGroupName = value
				Me.SendPropertyChanged("AESGroupName")
				Me.OnAESGroupNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(60)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AExec", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AExec() As String
		Get
			Return Me._AExec
		End Get
		Set
			If (String.Equals(Me._AExec, value) = false) Then
				Me.OnAExecChanging(value)
				Me.SendPropertyChanging
				Me._AExec = value
				Me.SendPropertyChanged("AExec")
				Me.OnAExecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Billing", DbType:="DateTime NOT NULL")>  _
	Public Property Billing() As Date
		Get
			Return Me._Billing
		End Get
		Set
			If ((Me._Billing = value)  _
						= false) Then
				Me.OnBillingChanging(value)
				Me.SendPropertyChanging
				Me._Billing = value
				Me.SendPropertyChanged("Billing")
				Me.OnBillingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransType", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property TransType() As String
		Get
			Return Me._TransType
		End Get
		Set
			If (String.Equals(Me._TransType, value) = false) Then
				Me.OnTransTypeChanging(value)
				Me.SendPropertyChanging
				Me._TransType = value
				Me.SendPropertyChanged("TransType")
				Me.OnTransTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Premium", DbType:="Float NOT NULL")>  _
	Public Property Premium() As Double
		Get
			Return Me._Premium
		End Get
		Set
			If ((Me._Premium = value)  _
						= false) Then
				Me.OnPremiumChanging(value)
				Me.SendPropertyChanging
				Me._Premium = value
				Me.SendPropertyChanged("Premium")
				Me.OnPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExchangeRate", DbType:="Float NOT NULL")>  _
	Public Property ExchangeRate() As Double
		Get
			Return Me._ExchangeRate
		End Get
		Set
			If ((Me._ExchangeRate = value)  _
						= false) Then
				Me.OnExchangeRateChanging(value)
				Me.SendPropertyChanging
				Me._ExchangeRate = value
				Me.SendPropertyChanged("ExchangeRate")
				Me.OnExchangeRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminCostLevy", DbType:="Float NOT NULL")>  _
	Public Property AdminCostLevy() As Double
		Get
			Return Me._AdminCostLevy
		End Get
		Set
			If ((Me._AdminCostLevy = value)  _
						= false) Then
				Me.OnAdminCostLevyChanging(value)
				Me.SendPropertyChanging
				Me._AdminCostLevy = value
				Me.SendPropertyChanged("AdminCostLevy")
				Me.OnAdminCostLevyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me.OnRiskGovernmentChanging(value)
				Me.SendPropertyChanging
				Me._RiskGovernment = value
				Me.SendPropertyChanged("RiskGovernment")
				Me.OnRiskGovernmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HeadingIII", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property HeadingIII() As String
		Get
			Return Me._HeadingIII
		End Get
		Set
			If (String.Equals(Me._HeadingIII, value) = false) Then
				Me.OnHeadingIIIChanging(value)
				Me.SendPropertyChanging
				Me._HeadingIII = value
				Me.SendPropertyChanged("HeadingIII")
				Me.OnHeadingIIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CN", DbType:="Int NOT NULL")>  _
	Public Property CN() As Integer
		Get
			Return Me._CN
		End Get
		Set
			If ((Me._CN = value)  _
						= false) Then
				Me.OnCNChanging(value)
				Me.SendPropertyChanging
				Me._CN = value
				Me.SendPropertyChanged("CN")
				Me.OnCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DN", DbType:="Int NOT NULL")>  _
	Public Property DN() As Integer
		Get
			Return Me._DN
		End Get
		Set
			If ((Me._DN = value)  _
						= false) Then
				Me.OnDNChanging(value)
				Me.SendPropertyChanging
				Me._DN = value
				Me.SendPropertyChanged("DN")
				Me.OnDNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupTypeB", DbType:="VarChar(50)")>  _
	Public Property GroupTypeB() As String
		Get
			Return Me._GroupTypeB
		End Get
		Set
			If (String.Equals(Me._GroupTypeB, value) = false) Then
				Me.OnGroupTypeBChanging(value)
				Me.SendPropertyChanging
				Me._GroupTypeB = value
				Me.SendPropertyChanged("GroupTypeB")
				Me.OnGroupTypeBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupTypeC", DbType:="VarChar(50)")>  _
	Public Property GroupTypeC() As String
		Get
			Return Me._GroupTypeC
		End Get
		Set
			If (String.Equals(Me._GroupTypeC, value) = false) Then
				Me.OnGroupTypeCChanging(value)
				Me.SendPropertyChanging
				Me._GroupTypeC = value
				Me.SendPropertyChanged("GroupTypeC")
				Me.OnGroupTypeCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminIn1", DbType:="Decimal(18,2)")>  _
	Public Property AdminIn1() As System.Nullable(Of Decimal)
		Get
			Return Me._AdminIn1
		End Get
		Set
			If (Me._AdminIn1.Equals(value) = false) Then
				Me.OnAdminIn1Changing(value)
				Me.SendPropertyChanging
				Me._AdminIn1 = value
				Me.SendPropertyChanged("AdminIn1")
				Me.OnAdminIn1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminIn2", DbType:="Decimal(18,2)")>  _
	Public Property AdminIn2() As System.Nullable(Of Decimal)
		Get
			Return Me._AdminIn2
		End Get
		Set
			If (Me._AdminIn2.Equals(value) = false) Then
				Me.OnAdminIn2Changing(value)
				Me.SendPropertyChanging
				Me._AdminIn2 = value
				Me.SendPropertyChanged("AdminIn2")
				Me.OnAdminIn2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1", DbType:="Decimal(18,2)")>  _
	Public Property AdminOut1() As System.Nullable(Of Decimal)
		Get
			Return Me._AdminOut1
		End Get
		Set
			If (Me._AdminOut1.Equals(value) = false) Then
				Me.OnAdminOut1Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut1 = value
				Me.SendPropertyChanged("AdminOut1")
				Me.OnAdminOut1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2", DbType:="Decimal(18,2)")>  _
	Public Property AdminOut2() As System.Nullable(Of Decimal)
		Get
			Return Me._AdminOut2
		End Get
		Set
			If (Me._AdminOut2.Equals(value) = false) Then
				Me.OnAdminOut2Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut2 = value
				Me.SendPropertyChanged("AdminOut2")
				Me.OnAdminOut2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RealBrok", DbType:="Decimal(18,2)")>  _
	Public Property RealBrok() As System.Nullable(Of Decimal)
		Get
			Return Me._RealBrok
		End Get
		Set
			If (Me._RealBrok.Equals(value) = false) Then
				Me.OnRealBrokChanging(value)
				Me.SendPropertyChanging
				Me._RealBrok = value
				Me.SendPropertyChanged("RealBrok")
				Me.OnRealBrokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut", DbType:="Decimal(18,2)")>  _
	Public Property OROut() As System.Nullable(Of Decimal)
		Get
			Return Me._OROut
		End Get
		Set
			If (Me._OROut.Equals(value) = false) Then
				Me.OnOROutChanging(value)
				Me.SendPropertyChanging
				Me._OROut = value
				Me.SendPropertyChanged("OROut")
				Me.OnOROutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIn", DbType:="Decimal(18,2)")>  _
	Public Property ORIn() As System.Nullable(Of Decimal)
		Get
			Return Me._ORIn
		End Get
		Set
			If (Me._ORIn.Equals(value) = false) Then
				Me.OnORInChanging(value)
				Me.SendPropertyChanging
				Me._ORIn = value
				Me.SendPropertyChanged("ORIn")
				Me.OnORInChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOut", DbType:="Decimal(18,2)")>  _
	Public Property CommOut() As System.Nullable(Of Decimal)
		Get
			Return Me._CommOut
		End Get
		Set
			If (Me._CommOut.Equals(value) = false) Then
				Me.OnCommOutChanging(value)
				Me.SendPropertyChanging
				Me._CommOut = value
				Me.SendPropertyChanged("CommOut")
				Me.OnCommOutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discount", DbType:="Decimal(18,2)")>  _
	Public Property Discount() As System.Nullable(Of Decimal)
		Get
			Return Me._Discount
		End Get
		Set
			If (Me._Discount.Equals(value) = false) Then
				Me.OnDiscountChanging(value)
				Me.SendPropertyChanging
				Me._Discount = value
				Me.SendPropertyChanged("Discount")
				Me.OnDiscountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumTHB", DbType:="Decimal(18,2)")>  _
	Public Property PremiumTHB() As System.Nullable(Of Decimal)
		Get
			Return Me._PremiumTHB
		End Get
		Set
			If (Me._PremiumTHB.Equals(value) = false) Then
				Me.OnPremiumTHBChanging(value)
				Me.SendPropertyChanging
				Me._PremiumTHB = value
				Me.SendPropertyChanged("PremiumTHB")
				Me.OnPremiumTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumCN", DbType:="Decimal(18,2)")>  _
	Public Property PremiumCN() As System.Nullable(Of Decimal)
		Get
			Return Me._PremiumCN
		End Get
		Set
			If (Me._PremiumCN.Equals(value) = false) Then
				Me.OnPremiumCNChanging(value)
				Me.SendPropertyChanging
				Me._PremiumCN = value
				Me.SendPropertyChanged("PremiumCN")
				Me.OnPremiumCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumDN", DbType:="Decimal(18,2)")>  _
	Public Property PremiumDN() As System.Nullable(Of Decimal)
		Get
			Return Me._PremiumDN
		End Get
		Set
			If (Me._PremiumDN.Equals(value) = false) Then
				Me.OnPremiumDNChanging(value)
				Me.SendPropertyChanging
				Me._PremiumDN = value
				Me.SendPropertyChanged("PremiumDN")
				Me.OnPremiumDNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalIncome", DbType:="Decimal(21,2)")>  _
	Public Property TotalIncome() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalIncome
		End Get
		Set
			If (Me._TotalIncome.Equals(value) = false) Then
				Me.OnTotalIncomeChanging(value)
				Me.SendPropertyChanging
				Me._TotalIncome = value
				Me.SendPropertyChanged("TotalIncome")
				Me.OnTotalIncomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncome", DbType:="Decimal(26,2)")>  _
	Public Property NetIncome() As System.Nullable(Of Decimal)
		Get
			Return Me._NetIncome
		End Get
		Set
			If (Me._NetIncome.Equals(value) = false) Then
				Me.OnNetIncomeChanging(value)
				Me.SendPropertyChanging
				Me._NetIncome = value
				Me.SendPropertyChanged("NetIncome")
				Me.OnNetIncomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncomeCN", DbType:="Decimal(26,2)")>  _
	Public Property NetIncomeCN() As System.Nullable(Of Decimal)
		Get
			Return Me._NetIncomeCN
		End Get
		Set
			If (Me._NetIncomeCN.Equals(value) = false) Then
				Me.OnNetIncomeCNChanging(value)
				Me.SendPropertyChanging
				Me._NetIncomeCN = value
				Me.SendPropertyChanged("NetIncomeCN")
				Me.OnNetIncomeCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncomeDN", DbType:="Decimal(26,2)")>  _
	Public Property NetIncomeDN() As System.Nullable(Of Decimal)
		Get
			Return Me._NetIncomeDN
		End Get
		Set
			If (Me._NetIncomeDN.Equals(value) = false) Then
				Me.OnNetIncomeDNChanging(value)
				Me.SendPropertyChanging
				Me._NetIncomeDN = value
				Me.SendPropertyChanged("NetIncomeDN")
				Me.OnNetIncomeDNChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMazdaClaim")>  _
Partial Public Class tblMazdaClaim
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _FullCustomerName As String
	
	Private _ChassisNo As String
	
	Private _GarageProvinceEN As String
	
	Private _AccidentDate As System.Nullable(Of Date)
	
	Private _AccidentDateStr As String
	
	Private _AccidentYear As String
	
	Private _AccidentMonth As String
	
	Private _AccidentDay As String
	
	Private _IndemnityGroup As System.Nullable(Of Integer)
	
	Private _ClaimCost As System.Nullable(Of Double)
	
	Private _IndemnityType As String
	
	Private _GarageType As String
	
	Private _Insurer As String
	
	Private _LotNo As System.Nullable(Of Integer)
	
	Private _CustType As String
	
	Private _ShowroomName As String
	
	Private _ModelGroup As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnFullCustomerNameChanging(value As String)
    End Sub
    Partial Private Sub OnFullCustomerNameChanged()
    End Sub
    Partial Private Sub OnChassisNoChanging(value As String)
    End Sub
    Partial Private Sub OnChassisNoChanged()
    End Sub
    Partial Private Sub OnGarageProvinceENChanging(value As String)
    End Sub
    Partial Private Sub OnGarageProvinceENChanged()
    End Sub
    Partial Private Sub OnAccidentDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAccidentDateChanged()
    End Sub
    Partial Private Sub OnAccidentDateStrChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentDateStrChanged()
    End Sub
    Partial Private Sub OnAccidentYearChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentYearChanged()
    End Sub
    Partial Private Sub OnAccidentMonthChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentMonthChanged()
    End Sub
    Partial Private Sub OnAccidentDayChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentDayChanged()
    End Sub
    Partial Private Sub OnIndemnityGroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIndemnityGroupChanged()
    End Sub
    Partial Private Sub OnClaimCostChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnClaimCostChanged()
    End Sub
    Partial Private Sub OnIndemnityTypeChanging(value As String)
    End Sub
    Partial Private Sub OnIndemnityTypeChanged()
    End Sub
    Partial Private Sub OnGarageTypeChanging(value As String)
    End Sub
    Partial Private Sub OnGarageTypeChanged()
    End Sub
    Partial Private Sub OnInsurerChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerChanged()
    End Sub
    Partial Private Sub OnLotNoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLotNoChanged()
    End Sub
    Partial Private Sub OnCustTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCustTypeChanged()
    End Sub
    Partial Private Sub OnShowroomNameChanging(value As String)
    End Sub
    Partial Private Sub OnShowroomNameChanged()
    End Sub
    Partial Private Sub OnModelGroupChanging(value As String)
    End Sub
    Partial Private Sub OnModelGroupChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullCustomerName", DbType:="NVarChar(255)")>  _
	Public Property FullCustomerName() As String
		Get
			Return Me._FullCustomerName
		End Get
		Set
			If (String.Equals(Me._FullCustomerName, value) = false) Then
				Me.OnFullCustomerNameChanging(value)
				Me.SendPropertyChanging
				Me._FullCustomerName = value
				Me.SendPropertyChanged("FullCustomerName")
				Me.OnFullCustomerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChassisNo", DbType:="NVarChar(255)")>  _
	Public Property ChassisNo() As String
		Get
			Return Me._ChassisNo
		End Get
		Set
			If (String.Equals(Me._ChassisNo, value) = false) Then
				Me.OnChassisNoChanging(value)
				Me.SendPropertyChanging
				Me._ChassisNo = value
				Me.SendPropertyChanged("ChassisNo")
				Me.OnChassisNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageProvinceEN", DbType:="NVarChar(255)")>  _
	Public Property GarageProvinceEN() As String
		Get
			Return Me._GarageProvinceEN
		End Get
		Set
			If (String.Equals(Me._GarageProvinceEN, value) = false) Then
				Me.OnGarageProvinceENChanging(value)
				Me.SendPropertyChanging
				Me._GarageProvinceEN = value
				Me.SendPropertyChanged("GarageProvinceEN")
				Me.OnGarageProvinceENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDate", DbType:="DateTime")>  _
	Public Property AccidentDate() As System.Nullable(Of Date)
		Get
			Return Me._AccidentDate
		End Get
		Set
			If (Me._AccidentDate.Equals(value) = false) Then
				Me.OnAccidentDateChanging(value)
				Me.SendPropertyChanging
				Me._AccidentDate = value
				Me.SendPropertyChanged("AccidentDate")
				Me.OnAccidentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDateStr", DbType:="NVarChar(255)")>  _
	Public Property AccidentDateStr() As String
		Get
			Return Me._AccidentDateStr
		End Get
		Set
			If (String.Equals(Me._AccidentDateStr, value) = false) Then
				Me.OnAccidentDateStrChanging(value)
				Me.SendPropertyChanging
				Me._AccidentDateStr = value
				Me.SendPropertyChanged("AccidentDateStr")
				Me.OnAccidentDateStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentYear", DbType:="NVarChar(4)")>  _
	Public Property AccidentYear() As String
		Get
			Return Me._AccidentYear
		End Get
		Set
			If (String.Equals(Me._AccidentYear, value) = false) Then
				Me.OnAccidentYearChanging(value)
				Me.SendPropertyChanging
				Me._AccidentYear = value
				Me.SendPropertyChanged("AccidentYear")
				Me.OnAccidentYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentMonth", DbType:="NVarChar(2)")>  _
	Public Property AccidentMonth() As String
		Get
			Return Me._AccidentMonth
		End Get
		Set
			If (String.Equals(Me._AccidentMonth, value) = false) Then
				Me.OnAccidentMonthChanging(value)
				Me.SendPropertyChanging
				Me._AccidentMonth = value
				Me.SendPropertyChanged("AccidentMonth")
				Me.OnAccidentMonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDay", DbType:="NVarChar(2)")>  _
	Public Property AccidentDay() As String
		Get
			Return Me._AccidentDay
		End Get
		Set
			If (String.Equals(Me._AccidentDay, value) = false) Then
				Me.OnAccidentDayChanging(value)
				Me.SendPropertyChanging
				Me._AccidentDay = value
				Me.SendPropertyChanged("AccidentDay")
				Me.OnAccidentDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IndemnityGroup", DbType:="Int")>  _
	Public Property IndemnityGroup() As System.Nullable(Of Integer)
		Get
			Return Me._IndemnityGroup
		End Get
		Set
			If (Me._IndemnityGroup.Equals(value) = false) Then
				Me.OnIndemnityGroupChanging(value)
				Me.SendPropertyChanging
				Me._IndemnityGroup = value
				Me.SendPropertyChanged("IndemnityGroup")
				Me.OnIndemnityGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimCost", DbType:="Float")>  _
	Public Property ClaimCost() As System.Nullable(Of Double)
		Get
			Return Me._ClaimCost
		End Get
		Set
			If (Me._ClaimCost.Equals(value) = false) Then
				Me.OnClaimCostChanging(value)
				Me.SendPropertyChanging
				Me._ClaimCost = value
				Me.SendPropertyChanged("ClaimCost")
				Me.OnClaimCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IndemnityType", DbType:="NVarChar(255)")>  _
	Public Property IndemnityType() As String
		Get
			Return Me._IndemnityType
		End Get
		Set
			If (String.Equals(Me._IndemnityType, value) = false) Then
				Me.OnIndemnityTypeChanging(value)
				Me.SendPropertyChanging
				Me._IndemnityType = value
				Me.SendPropertyChanged("IndemnityType")
				Me.OnIndemnityTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType", DbType:="NVarChar(255)")>  _
	Public Property GarageType() As String
		Get
			Return Me._GarageType
		End Get
		Set
			If (String.Equals(Me._GarageType, value) = false) Then
				Me.OnGarageTypeChanging(value)
				Me.SendPropertyChanging
				Me._GarageType = value
				Me.SendPropertyChanged("GarageType")
				Me.OnGarageTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insurer", DbType:="NVarChar(255)")>  _
	Public Property Insurer() As String
		Get
			Return Me._Insurer
		End Get
		Set
			If (String.Equals(Me._Insurer, value) = false) Then
				Me.OnInsurerChanging(value)
				Me.SendPropertyChanging
				Me._Insurer = value
				Me.SendPropertyChanged("Insurer")
				Me.OnInsurerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LotNo", DbType:="Int")>  _
	Public Property LotNo() As System.Nullable(Of Integer)
		Get
			Return Me._LotNo
		End Get
		Set
			If (Me._LotNo.Equals(value) = false) Then
				Me.OnLotNoChanging(value)
				Me.SendPropertyChanging
				Me._LotNo = value
				Me.SendPropertyChanged("LotNo")
				Me.OnLotNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustType", DbType:="NVarChar(255)")>  _
	Public Property CustType() As String
		Get
			Return Me._CustType
		End Get
		Set
			If (String.Equals(Me._CustType, value) = false) Then
				Me.OnCustTypeChanging(value)
				Me.SendPropertyChanging
				Me._CustType = value
				Me.SendPropertyChanged("CustType")
				Me.OnCustTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomName", DbType:="NVarChar(255)")>  _
	Public Property ShowroomName() As String
		Get
			Return Me._ShowroomName
		End Get
		Set
			If (String.Equals(Me._ShowroomName, value) = false) Then
				Me.OnShowroomNameChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomName = value
				Me.SendPropertyChanged("ShowroomName")
				Me.OnShowroomNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelGroup", DbType:="NVarChar(255)")>  _
	Public Property ModelGroup() As String
		Get
			Return Me._ModelGroup
		End Get
		Set
			If (String.Equals(Me._ModelGroup, value) = false) Then
				Me.OnModelGroupChanging(value)
				Me.SendPropertyChanging
				Me._ModelGroup = value
				Me.SendPropertyChanged("ModelGroup")
				Me.OnModelGroupChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMazdaNew")>  _
Partial Public Class tblMazdaNew
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ClientCode As String
	
	Private _ClientName As String
	
	Private _CHASSISNO As String
	
	Private _ENGINENO As String
	
	Private _EFFECTIVEDATE As System.Nullable(Of Date)
	
	Private _EFFYEAR As String
	
	Private _EFFMONTH As String
	
	Private _EFFDAY As String
	
	Private _Year As System.Nullable(Of Integer)
	
	Private _EFFECTIVEDay As System.Nullable(Of Integer)
	
	Private _InsuranceType As String
	
	Private _Status As String
	
	Private _ModelGroup As String
	
	Private _VehicleType As System.Nullable(Of Integer)
	
	Private _Beneficiary As String
	
	Private _Dealer As String
	
	Private _Province As String
	
	Private _Region As String
	
	Private _Insurer As String
	
	Private _BillingChannel As String
	
	Private _SumInsure As System.Nullable(Of Double)
	
	Private _GrossPremium As System.Nullable(Of Double)
	
	Private _TotalPremium As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnClientNameChanging(value As String)
    End Sub
    Partial Private Sub OnClientNameChanged()
    End Sub
    Partial Private Sub OnCHASSISNOChanging(value As String)
    End Sub
    Partial Private Sub OnCHASSISNOChanged()
    End Sub
    Partial Private Sub OnENGINENOChanging(value As String)
    End Sub
    Partial Private Sub OnENGINENOChanged()
    End Sub
    Partial Private Sub OnEFFECTIVEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEFFECTIVEDATEChanged()
    End Sub
    Partial Private Sub OnEFFYEARChanging(value As String)
    End Sub
    Partial Private Sub OnEFFYEARChanged()
    End Sub
    Partial Private Sub OnEFFMONTHChanging(value As String)
    End Sub
    Partial Private Sub OnEFFMONTHChanged()
    End Sub
    Partial Private Sub OnEFFDAYChanging(value As String)
    End Sub
    Partial Private Sub OnEFFDAYChanged()
    End Sub
    Partial Private Sub OnYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYearChanged()
    End Sub
    Partial Private Sub OnEFFECTIVEDayChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEFFECTIVEDayChanged()
    End Sub
    Partial Private Sub OnInsuranceTypeChanging(value As String)
    End Sub
    Partial Private Sub OnInsuranceTypeChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnModelGroupChanging(value As String)
    End Sub
    Partial Private Sub OnModelGroupChanged()
    End Sub
    Partial Private Sub OnVehicleTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVehicleTypeChanged()
    End Sub
    Partial Private Sub OnBeneficiaryChanging(value As String)
    End Sub
    Partial Private Sub OnBeneficiaryChanged()
    End Sub
    Partial Private Sub OnDealerChanging(value As String)
    End Sub
    Partial Private Sub OnDealerChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnInsurerChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerChanged()
    End Sub
    Partial Private Sub OnBillingChannelChanging(value As String)
    End Sub
    Partial Private Sub OnBillingChannelChanged()
    End Sub
    Partial Private Sub OnSumInsureChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSumInsureChanged()
    End Sub
    Partial Private Sub OnGrossPremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGrossPremiumChanged()
    End Sub
    Partial Private Sub OnTotalPremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalPremiumChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="NVarChar(255)")>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientName", DbType:="NVarChar(255)")>  _
	Public Property ClientName() As String
		Get
			Return Me._ClientName
		End Get
		Set
			If (String.Equals(Me._ClientName, value) = false) Then
				Me.OnClientNameChanging(value)
				Me.SendPropertyChanging
				Me._ClientName = value
				Me.SendPropertyChanged("ClientName")
				Me.OnClientNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHASSISNO", DbType:="NVarChar(255)")>  _
	Public Property CHASSISNO() As String
		Get
			Return Me._CHASSISNO
		End Get
		Set
			If (String.Equals(Me._CHASSISNO, value) = false) Then
				Me.OnCHASSISNOChanging(value)
				Me.SendPropertyChanging
				Me._CHASSISNO = value
				Me.SendPropertyChanged("CHASSISNO")
				Me.OnCHASSISNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENGINENO", DbType:="NVarChar(255)")>  _
	Public Property ENGINENO() As String
		Get
			Return Me._ENGINENO
		End Get
		Set
			If (String.Equals(Me._ENGINENO, value) = false) Then
				Me.OnENGINENOChanging(value)
				Me.SendPropertyChanging
				Me._ENGINENO = value
				Me.SendPropertyChanged("ENGINENO")
				Me.OnENGINENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFFECTIVEDATE", DbType:="DateTime")>  _
	Public Property EFFECTIVEDATE() As System.Nullable(Of Date)
		Get
			Return Me._EFFECTIVEDATE
		End Get
		Set
			If (Me._EFFECTIVEDATE.Equals(value) = false) Then
				Me.OnEFFECTIVEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EFFECTIVEDATE = value
				Me.SendPropertyChanged("EFFECTIVEDATE")
				Me.OnEFFECTIVEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFFYEAR", DbType:="VarChar(4)")>  _
	Public Property EFFYEAR() As String
		Get
			Return Me._EFFYEAR
		End Get
		Set
			If (String.Equals(Me._EFFYEAR, value) = false) Then
				Me.OnEFFYEARChanging(value)
				Me.SendPropertyChanging
				Me._EFFYEAR = value
				Me.SendPropertyChanged("EFFYEAR")
				Me.OnEFFYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFFMONTH", DbType:="VarChar(2)")>  _
	Public Property EFFMONTH() As String
		Get
			Return Me._EFFMONTH
		End Get
		Set
			If (String.Equals(Me._EFFMONTH, value) = false) Then
				Me.OnEFFMONTHChanging(value)
				Me.SendPropertyChanging
				Me._EFFMONTH = value
				Me.SendPropertyChanged("EFFMONTH")
				Me.OnEFFMONTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFFDAY", DbType:="VarChar(2)")>  _
	Public Property EFFDAY() As String
		Get
			Return Me._EFFDAY
		End Get
		Set
			If (String.Equals(Me._EFFDAY, value) = false) Then
				Me.OnEFFDAYChanging(value)
				Me.SendPropertyChanging
				Me._EFFDAY = value
				Me.SendPropertyChanged("EFFDAY")
				Me.OnEFFDAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="Int")>  _
	Public Property Year() As System.Nullable(Of Integer)
		Get
			Return Me._Year
		End Get
		Set
			If (Me._Year.Equals(value) = false) Then
				Me.OnYearChanging(value)
				Me.SendPropertyChanging
				Me._Year = value
				Me.SendPropertyChanged("Year")
				Me.OnYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFFECTIVEDay", DbType:="Int")>  _
	Public Property EFFECTIVEDay() As System.Nullable(Of Integer)
		Get
			Return Me._EFFECTIVEDay
		End Get
		Set
			If (Me._EFFECTIVEDay.Equals(value) = false) Then
				Me.OnEFFECTIVEDayChanging(value)
				Me.SendPropertyChanging
				Me._EFFECTIVEDay = value
				Me.SendPropertyChanged("EFFECTIVEDay")
				Me.OnEFFECTIVEDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceType", DbType:="NVarChar(255)")>  _
	Public Property InsuranceType() As String
		Get
			Return Me._InsuranceType
		End Get
		Set
			If (String.Equals(Me._InsuranceType, value) = false) Then
				Me.OnInsuranceTypeChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceType = value
				Me.SendPropertyChanged("InsuranceType")
				Me.OnInsuranceTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(255)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelGroup", DbType:="NVarChar(255)")>  _
	Public Property ModelGroup() As String
		Get
			Return Me._ModelGroup
		End Get
		Set
			If (String.Equals(Me._ModelGroup, value) = false) Then
				Me.OnModelGroupChanging(value)
				Me.SendPropertyChanging
				Me._ModelGroup = value
				Me.SendPropertyChanged("ModelGroup")
				Me.OnModelGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VehicleType", DbType:="Int")>  _
	Public Property VehicleType() As System.Nullable(Of Integer)
		Get
			Return Me._VehicleType
		End Get
		Set
			If (Me._VehicleType.Equals(value) = false) Then
				Me.OnVehicleTypeChanging(value)
				Me.SendPropertyChanging
				Me._VehicleType = value
				Me.SendPropertyChanged("VehicleType")
				Me.OnVehicleTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficiary", DbType:="NVarChar(255)")>  _
	Public Property Beneficiary() As String
		Get
			Return Me._Beneficiary
		End Get
		Set
			If (String.Equals(Me._Beneficiary, value) = false) Then
				Me.OnBeneficiaryChanging(value)
				Me.SendPropertyChanging
				Me._Beneficiary = value
				Me.SendPropertyChanged("Beneficiary")
				Me.OnBeneficiaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dealer", DbType:="NVarChar(255)")>  _
	Public Property Dealer() As String
		Get
			Return Me._Dealer
		End Get
		Set
			If (String.Equals(Me._Dealer, value) = false) Then
				Me.OnDealerChanging(value)
				Me.SendPropertyChanging
				Me._Dealer = value
				Me.SendPropertyChanged("Dealer")
				Me.OnDealerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="NVarChar(255)")>  _
	Public Property Province() As String
		Get
			Return Me._Province
		End Get
		Set
			If (String.Equals(Me._Province, value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="NVarChar(255)")>  _
	Public Property Region() As String
		Get
			Return Me._Region
		End Get
		Set
			If (String.Equals(Me._Region, value) = false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insurer", DbType:="NVarChar(255)")>  _
	Public Property Insurer() As String
		Get
			Return Me._Insurer
		End Get
		Set
			If (String.Equals(Me._Insurer, value) = false) Then
				Me.OnInsurerChanging(value)
				Me.SendPropertyChanging
				Me._Insurer = value
				Me.SendPropertyChanged("Insurer")
				Me.OnInsurerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingChannel", DbType:="NVarChar(255)")>  _
	Public Property BillingChannel() As String
		Get
			Return Me._BillingChannel
		End Get
		Set
			If (String.Equals(Me._BillingChannel, value) = false) Then
				Me.OnBillingChannelChanging(value)
				Me.SendPropertyChanging
				Me._BillingChannel = value
				Me.SendPropertyChanged("BillingChannel")
				Me.OnBillingChannelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsure", DbType:="Float")>  _
	Public Property SumInsure() As System.Nullable(Of Double)
		Get
			Return Me._SumInsure
		End Get
		Set
			If (Me._SumInsure.Equals(value) = false) Then
				Me.OnSumInsureChanging(value)
				Me.SendPropertyChanging
				Me._SumInsure = value
				Me.SendPropertyChanged("SumInsure")
				Me.OnSumInsureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossPremium", DbType:="Float")>  _
	Public Property GrossPremium() As System.Nullable(Of Double)
		Get
			Return Me._GrossPremium
		End Get
		Set
			If (Me._GrossPremium.Equals(value) = false) Then
				Me.OnGrossPremiumChanging(value)
				Me.SendPropertyChanging
				Me._GrossPremium = value
				Me.SendPropertyChanged("GrossPremium")
				Me.OnGrossPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPremium", DbType:="Float")>  _
	Public Property TotalPremium() As System.Nullable(Of Double)
		Get
			Return Me._TotalPremium
		End Get
		Set
			If (Me._TotalPremium.Equals(value) = false) Then
				Me.OnTotalPremiumChanging(value)
				Me.SendPropertyChanging
				Me._TotalPremium = value
				Me.SendPropertyChanged("TotalPremium")
				Me.OnTotalPremiumChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SummitRawData")>  _
Partial Public Class SummitRawData
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SummitID As Integer
	
	Private _AgentCode As String
	
	Private _InsureTypeCode As String
	
	Private _InsureTypeName As String
	
	Private _CarBrand As String
	
	Private _ClientCode As String
	
	Private _Title As String
	
	Private _InsuredName As String
	
	Private _IDCard As String
	
	Private _Address As String
	
	Private _Telephone As String
	
	Private _DealerName As String
	
	Private _Insuerer As String
	
	Private _CarModel As String
	
	Private _CarBody As String
	
	Private _Chassis As String
	
	Private _CarPlate As String
	
	Private _CarCode As String
	
	Private _CarRegYear As String
	
	Private _Period As System.Nullable(Of Double)
	
	Private _EffectiveDate As System.Nullable(Of Date)
	
	Private _ExpiryDate As System.Nullable(Of Date)
	
	Private _CarPrice As System.Nullable(Of Double)
	
	Private _Suminsured1Y As System.Nullable(Of Double)
	
	Private _Suminsured2Y As System.Nullable(Of Double)
	
	Private _Suminsured3Y As System.Nullable(Of Double)
	
	Private _GrossPremium As System.Nullable(Of Double)
	
	Private _Stamp As System.Nullable(Of Double)
	
	Private _VAT As System.Nullable(Of Double)
	
	Private _NetPremium As System.Nullable(Of Double)
	
	Private _ClassOfRisk As String
	
	Private _BuyType As String
	
	Private _ReceiveCode As String
	
	Private _CertificateNo As String
	
	Private _PolicyNo As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _Benefitialy As String
	
	Private _Coverage As String
	
	Private _Status As String
	
	Private _Status1 As String
	
	Private _Insuerer2 As String
	
	Private _Benefitialy2 As String
	
	Private _CreateYear As String
	
	Private _CreateMonth As String
	
	Private _EffectiveYear As String
	
	Private _EffectiveMonth As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSummitIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSummitIDChanged()
    End Sub
    Partial Private Sub OnAgentCodeChanging(value As String)
    End Sub
    Partial Private Sub OnAgentCodeChanged()
    End Sub
    Partial Private Sub OnInsureTypeCodeChanging(value As String)
    End Sub
    Partial Private Sub OnInsureTypeCodeChanged()
    End Sub
    Partial Private Sub OnInsureTypeNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsureTypeNameChanged()
    End Sub
    Partial Private Sub OnCarBrandChanging(value As String)
    End Sub
    Partial Private Sub OnCarBrandChanged()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnInsuredNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsuredNameChanged()
    End Sub
    Partial Private Sub OnIDCardChanging(value As String)
    End Sub
    Partial Private Sub OnIDCardChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnTelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnTelephoneChanged()
    End Sub
    Partial Private Sub OnDealerNameChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameChanged()
    End Sub
    Partial Private Sub OnInsuererChanging(value As String)
    End Sub
    Partial Private Sub OnInsuererChanged()
    End Sub
    Partial Private Sub OnCarModelChanging(value As String)
    End Sub
    Partial Private Sub OnCarModelChanged()
    End Sub
    Partial Private Sub OnCarBodyChanging(value As String)
    End Sub
    Partial Private Sub OnCarBodyChanged()
    End Sub
    Partial Private Sub OnChassisChanging(value As String)
    End Sub
    Partial Private Sub OnChassisChanged()
    End Sub
    Partial Private Sub OnCarPlateChanging(value As String)
    End Sub
    Partial Private Sub OnCarPlateChanged()
    End Sub
    Partial Private Sub OnCarCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCarCodeChanged()
    End Sub
    Partial Private Sub OnCarRegYearChanging(value As String)
    End Sub
    Partial Private Sub OnCarRegYearChanged()
    End Sub
    Partial Private Sub OnPeriodChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPeriodChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnCarPriceChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCarPriceChanged()
    End Sub
    Partial Private Sub OnSuminsured1YChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSuminsured1YChanged()
    End Sub
    Partial Private Sub OnSuminsured2YChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSuminsured2YChanged()
    End Sub
    Partial Private Sub OnSuminsured3YChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSuminsured3YChanged()
    End Sub
    Partial Private Sub OnGrossPremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGrossPremiumChanged()
    End Sub
    Partial Private Sub OnStampChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnStampChanged()
    End Sub
    Partial Private Sub OnVATChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVATChanged()
    End Sub
    Partial Private Sub OnNetPremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetPremiumChanged()
    End Sub
    Partial Private Sub OnClassOfRiskChanging(value As String)
    End Sub
    Partial Private Sub OnClassOfRiskChanged()
    End Sub
    Partial Private Sub OnBuyTypeChanging(value As String)
    End Sub
    Partial Private Sub OnBuyTypeChanged()
    End Sub
    Partial Private Sub OnReceiveCodeChanging(value As String)
    End Sub
    Partial Private Sub OnReceiveCodeChanged()
    End Sub
    Partial Private Sub OnCertificateNoChanging(value As String)
    End Sub
    Partial Private Sub OnCertificateNoChanged()
    End Sub
    Partial Private Sub OnPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyNoChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnBenefitialyChanging(value As String)
    End Sub
    Partial Private Sub OnBenefitialyChanged()
    End Sub
    Partial Private Sub OnCoverageChanging(value As String)
    End Sub
    Partial Private Sub OnCoverageChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnStatus1Changing(value As String)
    End Sub
    Partial Private Sub OnStatus1Changed()
    End Sub
    Partial Private Sub OnInsuerer2Changing(value As String)
    End Sub
    Partial Private Sub OnInsuerer2Changed()
    End Sub
    Partial Private Sub OnBenefitialy2Changing(value As String)
    End Sub
    Partial Private Sub OnBenefitialy2Changed()
    End Sub
    Partial Private Sub OnCreateYearChanging(value As String)
    End Sub
    Partial Private Sub OnCreateYearChanged()
    End Sub
    Partial Private Sub OnCreateMonthChanging(value As String)
    End Sub
    Partial Private Sub OnCreateMonthChanged()
    End Sub
    Partial Private Sub OnEffectiveYearChanging(value As String)
    End Sub
    Partial Private Sub OnEffectiveYearChanged()
    End Sub
    Partial Private Sub OnEffectiveMonthChanging(value As String)
    End Sub
    Partial Private Sub OnEffectiveMonthChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SummitID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SummitID() As Integer
		Get
			Return Me._SummitID
		End Get
		Set
			If ((Me._SummitID = value)  _
						= false) Then
				Me.OnSummitIDChanging(value)
				Me.SendPropertyChanging
				Me._SummitID = value
				Me.SendPropertyChanged("SummitID")
				Me.OnSummitIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="NVarChar(255)")>  _
	Public Property AgentCode() As String
		Get
			Return Me._AgentCode
		End Get
		Set
			If (String.Equals(Me._AgentCode, value) = false) Then
				Me.OnAgentCodeChanging(value)
				Me.SendPropertyChanging
				Me._AgentCode = value
				Me.SendPropertyChanged("AgentCode")
				Me.OnAgentCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsureTypeCode", DbType:="NVarChar(255)")>  _
	Public Property InsureTypeCode() As String
		Get
			Return Me._InsureTypeCode
		End Get
		Set
			If (String.Equals(Me._InsureTypeCode, value) = false) Then
				Me.OnInsureTypeCodeChanging(value)
				Me.SendPropertyChanging
				Me._InsureTypeCode = value
				Me.SendPropertyChanged("InsureTypeCode")
				Me.OnInsureTypeCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsureTypeName", DbType:="NVarChar(255)")>  _
	Public Property InsureTypeName() As String
		Get
			Return Me._InsureTypeName
		End Get
		Set
			If (String.Equals(Me._InsureTypeName, value) = false) Then
				Me.OnInsureTypeNameChanging(value)
				Me.SendPropertyChanging
				Me._InsureTypeName = value
				Me.SendPropertyChanged("InsureTypeName")
				Me.OnInsureTypeNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrand", DbType:="NVarChar(255)")>  _
	Public Property CarBrand() As String
		Get
			Return Me._CarBrand
		End Get
		Set
			If (String.Equals(Me._CarBrand, value) = false) Then
				Me.OnCarBrandChanging(value)
				Me.SendPropertyChanging
				Me._CarBrand = value
				Me.SendPropertyChanged("CarBrand")
				Me.OnCarBrandChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="NVarChar(255)")>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(255)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuredName", DbType:="NVarChar(255)")>  _
	Public Property InsuredName() As String
		Get
			Return Me._InsuredName
		End Get
		Set
			If (String.Equals(Me._InsuredName, value) = false) Then
				Me.OnInsuredNameChanging(value)
				Me.SendPropertyChanging
				Me._InsuredName = value
				Me.SendPropertyChanged("InsuredName")
				Me.OnInsuredNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCard", DbType:="NVarChar(255)")>  _
	Public Property IDCard() As String
		Get
			Return Me._IDCard
		End Get
		Set
			If (String.Equals(Me._IDCard, value) = false) Then
				Me.OnIDCardChanging(value)
				Me.SendPropertyChanging
				Me._IDCard = value
				Me.SendPropertyChanged("IDCard")
				Me.OnIDCardChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(255)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telephone", DbType:="NVarChar(255)")>  _
	Public Property Telephone() As String
		Get
			Return Me._Telephone
		End Get
		Set
			If (String.Equals(Me._Telephone, value) = false) Then
				Me.OnTelephoneChanging(value)
				Me.SendPropertyChanging
				Me._Telephone = value
				Me.SendPropertyChanged("Telephone")
				Me.OnTelephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerName", DbType:="NVarChar(255)")>  _
	Public Property DealerName() As String
		Get
			Return Me._DealerName
		End Get
		Set
			If (String.Equals(Me._DealerName, value) = false) Then
				Me.OnDealerNameChanging(value)
				Me.SendPropertyChanging
				Me._DealerName = value
				Me.SendPropertyChanged("DealerName")
				Me.OnDealerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insuerer", DbType:="NVarChar(255)")>  _
	Public Property Insuerer() As String
		Get
			Return Me._Insuerer
		End Get
		Set
			If (String.Equals(Me._Insuerer, value) = false) Then
				Me.OnInsuererChanging(value)
				Me.SendPropertyChanging
				Me._Insuerer = value
				Me.SendPropertyChanged("Insuerer")
				Me.OnInsuererChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModel", DbType:="NVarChar(255)")>  _
	Public Property CarModel() As String
		Get
			Return Me._CarModel
		End Get
		Set
			If (String.Equals(Me._CarModel, value) = false) Then
				Me.OnCarModelChanging(value)
				Me.SendPropertyChanging
				Me._CarModel = value
				Me.SendPropertyChanged("CarModel")
				Me.OnCarModelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBody", DbType:="NVarChar(255)")>  _
	Public Property CarBody() As String
		Get
			Return Me._CarBody
		End Get
		Set
			If (String.Equals(Me._CarBody, value) = false) Then
				Me.OnCarBodyChanging(value)
				Me.SendPropertyChanging
				Me._CarBody = value
				Me.SendPropertyChanged("CarBody")
				Me.OnCarBodyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chassis", DbType:="NVarChar(255)")>  _
	Public Property Chassis() As String
		Get
			Return Me._Chassis
		End Get
		Set
			If (String.Equals(Me._Chassis, value) = false) Then
				Me.OnChassisChanging(value)
				Me.SendPropertyChanging
				Me._Chassis = value
				Me.SendPropertyChanged("Chassis")
				Me.OnChassisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarPlate", DbType:="NVarChar(255)")>  _
	Public Property CarPlate() As String
		Get
			Return Me._CarPlate
		End Get
		Set
			If (String.Equals(Me._CarPlate, value) = false) Then
				Me.OnCarPlateChanging(value)
				Me.SendPropertyChanging
				Me._CarPlate = value
				Me.SendPropertyChanged("CarPlate")
				Me.OnCarPlateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarCode", DbType:="NVarChar(255)")>  _
	Public Property CarCode() As String
		Get
			Return Me._CarCode
		End Get
		Set
			If (String.Equals(Me._CarCode, value) = false) Then
				Me.OnCarCodeChanging(value)
				Me.SendPropertyChanging
				Me._CarCode = value
				Me.SendPropertyChanged("CarCode")
				Me.OnCarCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarRegYear", DbType:="NVarChar(255)")>  _
	Public Property CarRegYear() As String
		Get
			Return Me._CarRegYear
		End Get
		Set
			If (String.Equals(Me._CarRegYear, value) = false) Then
				Me.OnCarRegYearChanging(value)
				Me.SendPropertyChanging
				Me._CarRegYear = value
				Me.SendPropertyChanged("CarRegYear")
				Me.OnCarRegYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Period", DbType:="Float")>  _
	Public Property Period() As System.Nullable(Of Double)
		Get
			Return Me._Period
		End Get
		Set
			If (Me._Period.Equals(value) = false) Then
				Me.OnPeriodChanging(value)
				Me.SendPropertyChanging
				Me._Period = value
				Me.SendPropertyChanged("Period")
				Me.OnPeriodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="DateTime")>  _
	Public Property EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (Me._EffectiveDate.Equals(value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="DateTime")>  _
	Public Property ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (Me._ExpiryDate.Equals(value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarPrice", DbType:="Float")>  _
	Public Property CarPrice() As System.Nullable(Of Double)
		Get
			Return Me._CarPrice
		End Get
		Set
			If (Me._CarPrice.Equals(value) = false) Then
				Me.OnCarPriceChanging(value)
				Me.SendPropertyChanging
				Me._CarPrice = value
				Me.SendPropertyChanged("CarPrice")
				Me.OnCarPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Suminsured1Y", DbType:="Float")>  _
	Public Property Suminsured1Y() As System.Nullable(Of Double)
		Get
			Return Me._Suminsured1Y
		End Get
		Set
			If (Me._Suminsured1Y.Equals(value) = false) Then
				Me.OnSuminsured1YChanging(value)
				Me.SendPropertyChanging
				Me._Suminsured1Y = value
				Me.SendPropertyChanged("Suminsured1Y")
				Me.OnSuminsured1YChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Suminsured2Y", DbType:="Float")>  _
	Public Property Suminsured2Y() As System.Nullable(Of Double)
		Get
			Return Me._Suminsured2Y
		End Get
		Set
			If (Me._Suminsured2Y.Equals(value) = false) Then
				Me.OnSuminsured2YChanging(value)
				Me.SendPropertyChanging
				Me._Suminsured2Y = value
				Me.SendPropertyChanged("Suminsured2Y")
				Me.OnSuminsured2YChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Suminsured3Y", DbType:="Float")>  _
	Public Property Suminsured3Y() As System.Nullable(Of Double)
		Get
			Return Me._Suminsured3Y
		End Get
		Set
			If (Me._Suminsured3Y.Equals(value) = false) Then
				Me.OnSuminsured3YChanging(value)
				Me.SendPropertyChanging
				Me._Suminsured3Y = value
				Me.SendPropertyChanged("Suminsured3Y")
				Me.OnSuminsured3YChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossPremium", DbType:="Float")>  _
	Public Property GrossPremium() As System.Nullable(Of Double)
		Get
			Return Me._GrossPremium
		End Get
		Set
			If (Me._GrossPremium.Equals(value) = false) Then
				Me.OnGrossPremiumChanging(value)
				Me.SendPropertyChanging
				Me._GrossPremium = value
				Me.SendPropertyChanged("GrossPremium")
				Me.OnGrossPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stamp", DbType:="Float")>  _
	Public Property Stamp() As System.Nullable(Of Double)
		Get
			Return Me._Stamp
		End Get
		Set
			If (Me._Stamp.Equals(value) = false) Then
				Me.OnStampChanging(value)
				Me.SendPropertyChanging
				Me._Stamp = value
				Me.SendPropertyChanged("Stamp")
				Me.OnStampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT", DbType:="Float")>  _
	Public Property VAT() As System.Nullable(Of Double)
		Get
			Return Me._VAT
		End Get
		Set
			If (Me._VAT.Equals(value) = false) Then
				Me.OnVATChanging(value)
				Me.SendPropertyChanging
				Me._VAT = value
				Me.SendPropertyChanged("VAT")
				Me.OnVATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetPremium", DbType:="Float")>  _
	Public Property NetPremium() As System.Nullable(Of Double)
		Get
			Return Me._NetPremium
		End Get
		Set
			If (Me._NetPremium.Equals(value) = false) Then
				Me.OnNetPremiumChanging(value)
				Me.SendPropertyChanging
				Me._NetPremium = value
				Me.SendPropertyChanged("NetPremium")
				Me.OnNetPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassOfRisk", DbType:="NVarChar(255)")>  _
	Public Property ClassOfRisk() As String
		Get
			Return Me._ClassOfRisk
		End Get
		Set
			If (String.Equals(Me._ClassOfRisk, value) = false) Then
				Me.OnClassOfRiskChanging(value)
				Me.SendPropertyChanging
				Me._ClassOfRisk = value
				Me.SendPropertyChanged("ClassOfRisk")
				Me.OnClassOfRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BuyType", DbType:="NVarChar(255)")>  _
	Public Property BuyType() As String
		Get
			Return Me._BuyType
		End Get
		Set
			If (String.Equals(Me._BuyType, value) = false) Then
				Me.OnBuyTypeChanging(value)
				Me.SendPropertyChanging
				Me._BuyType = value
				Me.SendPropertyChanged("BuyType")
				Me.OnBuyTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReceiveCode", DbType:="NVarChar(255)")>  _
	Public Property ReceiveCode() As String
		Get
			Return Me._ReceiveCode
		End Get
		Set
			If (String.Equals(Me._ReceiveCode, value) = false) Then
				Me.OnReceiveCodeChanging(value)
				Me.SendPropertyChanging
				Me._ReceiveCode = value
				Me.SendPropertyChanged("ReceiveCode")
				Me.OnReceiveCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CertificateNo", DbType:="NVarChar(255)")>  _
	Public Property CertificateNo() As String
		Get
			Return Me._CertificateNo
		End Get
		Set
			If (String.Equals(Me._CertificateNo, value) = false) Then
				Me.OnCertificateNoChanging(value)
				Me.SendPropertyChanging
				Me._CertificateNo = value
				Me.SendPropertyChanged("CertificateNo")
				Me.OnCertificateNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="NVarChar(255)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me.OnPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._PolicyNo = value
				Me.SendPropertyChanged("PolicyNo")
				Me.OnPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Benefitialy", DbType:="NVarChar(255)")>  _
	Public Property Benefitialy() As String
		Get
			Return Me._Benefitialy
		End Get
		Set
			If (String.Equals(Me._Benefitialy, value) = false) Then
				Me.OnBenefitialyChanging(value)
				Me.SendPropertyChanging
				Me._Benefitialy = value
				Me.SendPropertyChanged("Benefitialy")
				Me.OnBenefitialyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coverage", DbType:="NVarChar(255)")>  _
	Public Property Coverage() As String
		Get
			Return Me._Coverage
		End Get
		Set
			If (String.Equals(Me._Coverage, value) = false) Then
				Me.OnCoverageChanging(value)
				Me.SendPropertyChanging
				Me._Coverage = value
				Me.SendPropertyChanged("Coverage")
				Me.OnCoverageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(255)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status1", DbType:="NVarChar(255)")>  _
	Public Property Status1() As String
		Get
			Return Me._Status1
		End Get
		Set
			If (String.Equals(Me._Status1, value) = false) Then
				Me.OnStatus1Changing(value)
				Me.SendPropertyChanging
				Me._Status1 = value
				Me.SendPropertyChanged("Status1")
				Me.OnStatus1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insuerer2", DbType:="NVarChar(255)")>  _
	Public Property Insuerer2() As String
		Get
			Return Me._Insuerer2
		End Get
		Set
			If (String.Equals(Me._Insuerer2, value) = false) Then
				Me.OnInsuerer2Changing(value)
				Me.SendPropertyChanging
				Me._Insuerer2 = value
				Me.SendPropertyChanged("Insuerer2")
				Me.OnInsuerer2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Benefitialy2", DbType:="NVarChar(255)")>  _
	Public Property Benefitialy2() As String
		Get
			Return Me._Benefitialy2
		End Get
		Set
			If (String.Equals(Me._Benefitialy2, value) = false) Then
				Me.OnBenefitialy2Changing(value)
				Me.SendPropertyChanging
				Me._Benefitialy2 = value
				Me.SendPropertyChanged("Benefitialy2")
				Me.OnBenefitialy2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateYear", DbType:="VarChar(50)")>  _
	Public Property CreateYear() As String
		Get
			Return Me._CreateYear
		End Get
		Set
			If (String.Equals(Me._CreateYear, value) = false) Then
				Me.OnCreateYearChanging(value)
				Me.SendPropertyChanging
				Me._CreateYear = value
				Me.SendPropertyChanged("CreateYear")
				Me.OnCreateYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateMonth", DbType:="VarChar(50)")>  _
	Public Property CreateMonth() As String
		Get
			Return Me._CreateMonth
		End Get
		Set
			If (String.Equals(Me._CreateMonth, value) = false) Then
				Me.OnCreateMonthChanging(value)
				Me.SendPropertyChanging
				Me._CreateMonth = value
				Me.SendPropertyChanged("CreateMonth")
				Me.OnCreateMonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveYear", DbType:="VarChar(50)")>  _
	Public Property EffectiveYear() As String
		Get
			Return Me._EffectiveYear
		End Get
		Set
			If (String.Equals(Me._EffectiveYear, value) = false) Then
				Me.OnEffectiveYearChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveYear = value
				Me.SendPropertyChanged("EffectiveYear")
				Me.OnEffectiveYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveMonth", DbType:="VarChar(50)")>  _
	Public Property EffectiveMonth() As String
		Get
			Return Me._EffectiveMonth
		End Get
		Set
			If (String.Equals(Me._EffectiveMonth, value) = false) Then
				Me.OnEffectiveMonthChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveMonth = value
				Me.SendPropertyChanged("EffectiveMonth")
				Me.OnEffectiveMonthChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMazdaRawData")>  _
Partial Public Class tblMazdaRawData
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _No_Of_Policy As System.Nullable(Of Integer)
	
	Private _CHASSIS_NO As String
	
	Private _GarageProvince As String
	
	Private _AccidentPlace As String
	
	Private _GarageProvince2 As String
	
	Private _AccidentPlace2 As String
	
	Private _AccidentPlace3 As String
	
	Private _Type_BP_Shop_Garage_Province2 As String
	
	Private _Type_BP_Shop As String
	
	Private _AccidentPlace_F As String
	
	Private _RegionGarage As String
	
	Private _RegionPlace As String
	
	Private _RegionGarage2 As String
	
	Private _RegionPlace2 As String
	
	Private _AccidentDateStr As String
	
	Private _No_Of_Claims As System.Nullable(Of Double)
	
	Private _SpartPartCost As System.Nullable(Of Double)
	
	Private _LabourCost As System.Nullable(Of Double)
	
	Private _Claims_Incurred As System.Nullable(Of Double)
	
	Private _Labour As System.Nullable(Of Double)
	
	Private _Spare_Part As System.Nullable(Of Double)
	
	Private _Labour_F As System.Nullable(Of Double)
	
	Private _Spare_Part_F As System.Nullable(Of Double)
	
	Private _Claims_Paid As System.Nullable(Of Double)
	
	Private _Claims_Paid_Count As System.Nullable(Of Double)
	
	Private _BP_Authorize As System.Nullable(Of Double)
	
	Private _Non_BP As System.Nullable(Of Double)
	
	Private _BP_Only As System.Nullable(Of Double)
	
	Private _BP_Shop_Count As System.Nullable(Of Double)
	
	Private _Non_BP_2 As System.Nullable(Of Double)
	
	Private _BP_Only_A As System.Nullable(Of Double)
	
	Private _BP_Only_C As System.Nullable(Of Double)
	
	Private _Non_BP_A As System.Nullable(Of Double)
	
	Private _Non_BP_C As System.Nullable(Of Double)
	
	Private _GarageType As String
	
	Private _Insurer As String
	
	Private _LotNo As String
	
	Private _Business_Type As String
	
	Private _DealerName As String
	
	Private _Dealer_Group As String
	
	Private _Capacity As System.Nullable(Of Double)
	
	Private _DealerGarage As String
	
	Private _Model As String
	
	Private _Type As String
	
	Private _Gross_Premium As System.Nullable(Of Double)
	
	Private _Total_Premium As System.Nullable(Of Double)
	
	Private _Claim_Frequency_P As System.Nullable(Of Double)
	
	Private _BP_Utilization_PA As System.Nullable(Of Double)
	
	Private _Loss_Ratio_P As System.Nullable(Of Double)
	
	Private _BP_Utilization_PC As System.Nullable(Of Double)
	
	Private _Claims_Incured_NotPaid As System.Nullable(Of Double)
	
	Private _Aftersales_Opportunity As System.Nullable(Of Double)
	
	Private _Labour_P As System.Nullable(Of Double)
	
	Private _Spare_Part_P As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNo_Of_PolicyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNo_Of_PolicyChanged()
    End Sub
    Partial Private Sub OnCHASSIS_NOChanging(value As String)
    End Sub
    Partial Private Sub OnCHASSIS_NOChanged()
    End Sub
    Partial Private Sub OnGarageProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnGarageProvinceChanged()
    End Sub
    Partial Private Sub OnAccidentPlaceChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentPlaceChanged()
    End Sub
    Partial Private Sub OnGarageProvince2Changing(value As String)
    End Sub
    Partial Private Sub OnGarageProvince2Changed()
    End Sub
    Partial Private Sub OnAccidentPlace2Changing(value As String)
    End Sub
    Partial Private Sub OnAccidentPlace2Changed()
    End Sub
    Partial Private Sub OnAccidentPlace3Changing(value As String)
    End Sub
    Partial Private Sub OnAccidentPlace3Changed()
    End Sub
    Partial Private Sub OnType_BP_Shop_Garage_Province2Changing(value As String)
    End Sub
    Partial Private Sub OnType_BP_Shop_Garage_Province2Changed()
    End Sub
    Partial Private Sub OnType_BP_ShopChanging(value As String)
    End Sub
    Partial Private Sub OnType_BP_ShopChanged()
    End Sub
    Partial Private Sub OnAccidentPlace_FChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentPlace_FChanged()
    End Sub
    Partial Private Sub OnRegionGarageChanging(value As String)
    End Sub
    Partial Private Sub OnRegionGarageChanged()
    End Sub
    Partial Private Sub OnRegionPlaceChanging(value As String)
    End Sub
    Partial Private Sub OnRegionPlaceChanged()
    End Sub
    Partial Private Sub OnRegionGarage2Changing(value As String)
    End Sub
    Partial Private Sub OnRegionGarage2Changed()
    End Sub
    Partial Private Sub OnRegionPlace2Changing(value As String)
    End Sub
    Partial Private Sub OnRegionPlace2Changed()
    End Sub
    Partial Private Sub OnAccidentDateStrChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentDateStrChanged()
    End Sub
    Partial Private Sub OnNo_Of_ClaimsChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNo_Of_ClaimsChanged()
    End Sub
    Partial Private Sub OnSpartPartCostChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSpartPartCostChanged()
    End Sub
    Partial Private Sub OnLabourCostChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLabourCostChanged()
    End Sub
    Partial Private Sub OnClaims_IncurredChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnClaims_IncurredChanged()
    End Sub
    Partial Private Sub OnLabourChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLabourChanged()
    End Sub
    Partial Private Sub OnSpare_PartChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSpare_PartChanged()
    End Sub
    Partial Private Sub OnLabour_FChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLabour_FChanged()
    End Sub
    Partial Private Sub OnSpare_Part_FChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSpare_Part_FChanged()
    End Sub
    Partial Private Sub OnClaims_PaidChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnClaims_PaidChanged()
    End Sub
    Partial Private Sub OnClaims_Paid_CountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnClaims_Paid_CountChanged()
    End Sub
    Partial Private Sub OnBP_AuthorizeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBP_AuthorizeChanged()
    End Sub
    Partial Private Sub OnNon_BPChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNon_BPChanged()
    End Sub
    Partial Private Sub OnBP_OnlyChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBP_OnlyChanged()
    End Sub
    Partial Private Sub OnBP_Shop_CountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBP_Shop_CountChanged()
    End Sub
    Partial Private Sub OnNon_BP_2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNon_BP_2Changed()
    End Sub
    Partial Private Sub OnBP_Only_AChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBP_Only_AChanged()
    End Sub
    Partial Private Sub OnBP_Only_CChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBP_Only_CChanged()
    End Sub
    Partial Private Sub OnNon_BP_AChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNon_BP_AChanged()
    End Sub
    Partial Private Sub OnNon_BP_CChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNon_BP_CChanged()
    End Sub
    Partial Private Sub OnGarageTypeChanging(value As String)
    End Sub
    Partial Private Sub OnGarageTypeChanged()
    End Sub
    Partial Private Sub OnInsurerChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerChanged()
    End Sub
    Partial Private Sub OnLotNoChanging(value As String)
    End Sub
    Partial Private Sub OnLotNoChanged()
    End Sub
    Partial Private Sub OnBusiness_TypeChanging(value As String)
    End Sub
    Partial Private Sub OnBusiness_TypeChanged()
    End Sub
    Partial Private Sub OnDealerNameChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameChanged()
    End Sub
    Partial Private Sub OnDealer_GroupChanging(value As String)
    End Sub
    Partial Private Sub OnDealer_GroupChanged()
    End Sub
    Partial Private Sub OnCapacityChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCapacityChanged()
    End Sub
    Partial Private Sub OnDealerGarageChanging(value As String)
    End Sub
    Partial Private Sub OnDealerGarageChanged()
    End Sub
    Partial Private Sub OnModelChanging(value As String)
    End Sub
    Partial Private Sub OnModelChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnGross_PremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGross_PremiumChanged()
    End Sub
    Partial Private Sub OnTotal_PremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotal_PremiumChanged()
    End Sub
    Partial Private Sub OnClaim_Frequency_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnClaim_Frequency_PChanged()
    End Sub
    Partial Private Sub OnBP_Utilization_PAChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBP_Utilization_PAChanged()
    End Sub
    Partial Private Sub OnLoss_Ratio_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLoss_Ratio_PChanged()
    End Sub
    Partial Private Sub OnBP_Utilization_PCChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBP_Utilization_PCChanged()
    End Sub
    Partial Private Sub OnClaims_Incured_NotPaidChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnClaims_Incured_NotPaidChanged()
    End Sub
    Partial Private Sub OnAftersales_OpportunityChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAftersales_OpportunityChanged()
    End Sub
    Partial Private Sub OnLabour_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLabour_PChanged()
    End Sub
    Partial Private Sub OnSpare_Part_PChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSpare_Part_PChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No_Of_Policy", DbType:="Int")>  _
	Public Property No_Of_Policy() As System.Nullable(Of Integer)
		Get
			Return Me._No_Of_Policy
		End Get
		Set
			If (Me._No_Of_Policy.Equals(value) = false) Then
				Me.OnNo_Of_PolicyChanging(value)
				Me.SendPropertyChanging
				Me._No_Of_Policy = value
				Me.SendPropertyChanged("No_Of_Policy")
				Me.OnNo_Of_PolicyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHASSIS_NO", DbType:="NVarChar(255)")>  _
	Public Property CHASSIS_NO() As String
		Get
			Return Me._CHASSIS_NO
		End Get
		Set
			If (String.Equals(Me._CHASSIS_NO, value) = false) Then
				Me.OnCHASSIS_NOChanging(value)
				Me.SendPropertyChanging
				Me._CHASSIS_NO = value
				Me.SendPropertyChanged("CHASSIS_NO")
				Me.OnCHASSIS_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageProvince", DbType:="NVarChar(255)")>  _
	Public Property GarageProvince() As String
		Get
			Return Me._GarageProvince
		End Get
		Set
			If (String.Equals(Me._GarageProvince, value) = false) Then
				Me.OnGarageProvinceChanging(value)
				Me.SendPropertyChanging
				Me._GarageProvince = value
				Me.SendPropertyChanged("GarageProvince")
				Me.OnGarageProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace", DbType:="NVarChar(255)")>  _
	Public Property AccidentPlace() As String
		Get
			Return Me._AccidentPlace
		End Get
		Set
			If (String.Equals(Me._AccidentPlace, value) = false) Then
				Me.OnAccidentPlaceChanging(value)
				Me.SendPropertyChanging
				Me._AccidentPlace = value
				Me.SendPropertyChanged("AccidentPlace")
				Me.OnAccidentPlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageProvince2", DbType:="NVarChar(255)")>  _
	Public Property GarageProvince2() As String
		Get
			Return Me._GarageProvince2
		End Get
		Set
			If (String.Equals(Me._GarageProvince2, value) = false) Then
				Me.OnGarageProvince2Changing(value)
				Me.SendPropertyChanging
				Me._GarageProvince2 = value
				Me.SendPropertyChanged("GarageProvince2")
				Me.OnGarageProvince2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace2", DbType:="NVarChar(255)")>  _
	Public Property AccidentPlace2() As String
		Get
			Return Me._AccidentPlace2
		End Get
		Set
			If (String.Equals(Me._AccidentPlace2, value) = false) Then
				Me.OnAccidentPlace2Changing(value)
				Me.SendPropertyChanging
				Me._AccidentPlace2 = value
				Me.SendPropertyChanged("AccidentPlace2")
				Me.OnAccidentPlace2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace3", DbType:="NVarChar(255)")>  _
	Public Property AccidentPlace3() As String
		Get
			Return Me._AccidentPlace3
		End Get
		Set
			If (String.Equals(Me._AccidentPlace3, value) = false) Then
				Me.OnAccidentPlace3Changing(value)
				Me.SendPropertyChanging
				Me._AccidentPlace3 = value
				Me.SendPropertyChanged("AccidentPlace3")
				Me.OnAccidentPlace3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type_BP_Shop_Garage_Province2", DbType:="NVarChar(255)")>  _
	Public Property Type_BP_Shop_Garage_Province2() As String
		Get
			Return Me._Type_BP_Shop_Garage_Province2
		End Get
		Set
			If (String.Equals(Me._Type_BP_Shop_Garage_Province2, value) = false) Then
				Me.OnType_BP_Shop_Garage_Province2Changing(value)
				Me.SendPropertyChanging
				Me._Type_BP_Shop_Garage_Province2 = value
				Me.SendPropertyChanged("Type_BP_Shop_Garage_Province2")
				Me.OnType_BP_Shop_Garage_Province2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type_BP_Shop", DbType:="NVarChar(255)")>  _
	Public Property Type_BP_Shop() As String
		Get
			Return Me._Type_BP_Shop
		End Get
		Set
			If (String.Equals(Me._Type_BP_Shop, value) = false) Then
				Me.OnType_BP_ShopChanging(value)
				Me.SendPropertyChanging
				Me._Type_BP_Shop = value
				Me.SendPropertyChanged("Type_BP_Shop")
				Me.OnType_BP_ShopChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace_F", DbType:="NVarChar(255)")>  _
	Public Property AccidentPlace_F() As String
		Get
			Return Me._AccidentPlace_F
		End Get
		Set
			If (String.Equals(Me._AccidentPlace_F, value) = false) Then
				Me.OnAccidentPlace_FChanging(value)
				Me.SendPropertyChanging
				Me._AccidentPlace_F = value
				Me.SendPropertyChanged("AccidentPlace_F")
				Me.OnAccidentPlace_FChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionGarage", DbType:="NVarChar(255)")>  _
	Public Property RegionGarage() As String
		Get
			Return Me._RegionGarage
		End Get
		Set
			If (String.Equals(Me._RegionGarage, value) = false) Then
				Me.OnRegionGarageChanging(value)
				Me.SendPropertyChanging
				Me._RegionGarage = value
				Me.SendPropertyChanged("RegionGarage")
				Me.OnRegionGarageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionPlace", DbType:="NVarChar(255)")>  _
	Public Property RegionPlace() As String
		Get
			Return Me._RegionPlace
		End Get
		Set
			If (String.Equals(Me._RegionPlace, value) = false) Then
				Me.OnRegionPlaceChanging(value)
				Me.SendPropertyChanging
				Me._RegionPlace = value
				Me.SendPropertyChanged("RegionPlace")
				Me.OnRegionPlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionGarage2", DbType:="NVarChar(255)")>  _
	Public Property RegionGarage2() As String
		Get
			Return Me._RegionGarage2
		End Get
		Set
			If (String.Equals(Me._RegionGarage2, value) = false) Then
				Me.OnRegionGarage2Changing(value)
				Me.SendPropertyChanging
				Me._RegionGarage2 = value
				Me.SendPropertyChanged("RegionGarage2")
				Me.OnRegionGarage2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionPlace2", DbType:="NVarChar(255)")>  _
	Public Property RegionPlace2() As String
		Get
			Return Me._RegionPlace2
		End Get
		Set
			If (String.Equals(Me._RegionPlace2, value) = false) Then
				Me.OnRegionPlace2Changing(value)
				Me.SendPropertyChanging
				Me._RegionPlace2 = value
				Me.SendPropertyChanged("RegionPlace2")
				Me.OnRegionPlace2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDateStr", DbType:="NVarChar(255)")>  _
	Public Property AccidentDateStr() As String
		Get
			Return Me._AccidentDateStr
		End Get
		Set
			If (String.Equals(Me._AccidentDateStr, value) = false) Then
				Me.OnAccidentDateStrChanging(value)
				Me.SendPropertyChanging
				Me._AccidentDateStr = value
				Me.SendPropertyChanged("AccidentDateStr")
				Me.OnAccidentDateStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No_Of_Claims", DbType:="Float")>  _
	Public Property No_Of_Claims() As System.Nullable(Of Double)
		Get
			Return Me._No_Of_Claims
		End Get
		Set
			If (Me._No_Of_Claims.Equals(value) = false) Then
				Me.OnNo_Of_ClaimsChanging(value)
				Me.SendPropertyChanging
				Me._No_Of_Claims = value
				Me.SendPropertyChanged("No_Of_Claims")
				Me.OnNo_Of_ClaimsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpartPartCost", DbType:="Float")>  _
	Public Property SpartPartCost() As System.Nullable(Of Double)
		Get
			Return Me._SpartPartCost
		End Get
		Set
			If (Me._SpartPartCost.Equals(value) = false) Then
				Me.OnSpartPartCostChanging(value)
				Me.SendPropertyChanging
				Me._SpartPartCost = value
				Me.SendPropertyChanged("SpartPartCost")
				Me.OnSpartPartCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LabourCost", DbType:="Float")>  _
	Public Property LabourCost() As System.Nullable(Of Double)
		Get
			Return Me._LabourCost
		End Get
		Set
			If (Me._LabourCost.Equals(value) = false) Then
				Me.OnLabourCostChanging(value)
				Me.SendPropertyChanging
				Me._LabourCost = value
				Me.SendPropertyChanged("LabourCost")
				Me.OnLabourCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Claims_Incurred", DbType:="Float")>  _
	Public Property Claims_Incurred() As System.Nullable(Of Double)
		Get
			Return Me._Claims_Incurred
		End Get
		Set
			If (Me._Claims_Incurred.Equals(value) = false) Then
				Me.OnClaims_IncurredChanging(value)
				Me.SendPropertyChanging
				Me._Claims_Incurred = value
				Me.SendPropertyChanged("Claims_Incurred")
				Me.OnClaims_IncurredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Labour", DbType:="Float")>  _
	Public Property Labour() As System.Nullable(Of Double)
		Get
			Return Me._Labour
		End Get
		Set
			If (Me._Labour.Equals(value) = false) Then
				Me.OnLabourChanging(value)
				Me.SendPropertyChanging
				Me._Labour = value
				Me.SendPropertyChanged("Labour")
				Me.OnLabourChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare_Part", DbType:="Float")>  _
	Public Property Spare_Part() As System.Nullable(Of Double)
		Get
			Return Me._Spare_Part
		End Get
		Set
			If (Me._Spare_Part.Equals(value) = false) Then
				Me.OnSpare_PartChanging(value)
				Me.SendPropertyChanging
				Me._Spare_Part = value
				Me.SendPropertyChanged("Spare_Part")
				Me.OnSpare_PartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Labour_F", DbType:="Float")>  _
	Public Property Labour_F() As System.Nullable(Of Double)
		Get
			Return Me._Labour_F
		End Get
		Set
			If (Me._Labour_F.Equals(value) = false) Then
				Me.OnLabour_FChanging(value)
				Me.SendPropertyChanging
				Me._Labour_F = value
				Me.SendPropertyChanged("Labour_F")
				Me.OnLabour_FChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare_Part_F", DbType:="Float")>  _
	Public Property Spare_Part_F() As System.Nullable(Of Double)
		Get
			Return Me._Spare_Part_F
		End Get
		Set
			If (Me._Spare_Part_F.Equals(value) = false) Then
				Me.OnSpare_Part_FChanging(value)
				Me.SendPropertyChanging
				Me._Spare_Part_F = value
				Me.SendPropertyChanged("Spare_Part_F")
				Me.OnSpare_Part_FChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Claims_Paid", DbType:="Float")>  _
	Public Property Claims_Paid() As System.Nullable(Of Double)
		Get
			Return Me._Claims_Paid
		End Get
		Set
			If (Me._Claims_Paid.Equals(value) = false) Then
				Me.OnClaims_PaidChanging(value)
				Me.SendPropertyChanging
				Me._Claims_Paid = value
				Me.SendPropertyChanged("Claims_Paid")
				Me.OnClaims_PaidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Claims_Paid_Count", DbType:="Float")>  _
	Public Property Claims_Paid_Count() As System.Nullable(Of Double)
		Get
			Return Me._Claims_Paid_Count
		End Get
		Set
			If (Me._Claims_Paid_Count.Equals(value) = false) Then
				Me.OnClaims_Paid_CountChanging(value)
				Me.SendPropertyChanging
				Me._Claims_Paid_Count = value
				Me.SendPropertyChanged("Claims_Paid_Count")
				Me.OnClaims_Paid_CountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BP_Authorize", DbType:="Float")>  _
	Public Property BP_Authorize() As System.Nullable(Of Double)
		Get
			Return Me._BP_Authorize
		End Get
		Set
			If (Me._BP_Authorize.Equals(value) = false) Then
				Me.OnBP_AuthorizeChanging(value)
				Me.SendPropertyChanging
				Me._BP_Authorize = value
				Me.SendPropertyChanged("BP_Authorize")
				Me.OnBP_AuthorizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Non_BP", DbType:="Float")>  _
	Public Property Non_BP() As System.Nullable(Of Double)
		Get
			Return Me._Non_BP
		End Get
		Set
			If (Me._Non_BP.Equals(value) = false) Then
				Me.OnNon_BPChanging(value)
				Me.SendPropertyChanging
				Me._Non_BP = value
				Me.SendPropertyChanged("Non_BP")
				Me.OnNon_BPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BP_Only", DbType:="Float")>  _
	Public Property BP_Only() As System.Nullable(Of Double)
		Get
			Return Me._BP_Only
		End Get
		Set
			If (Me._BP_Only.Equals(value) = false) Then
				Me.OnBP_OnlyChanging(value)
				Me.SendPropertyChanging
				Me._BP_Only = value
				Me.SendPropertyChanged("BP_Only")
				Me.OnBP_OnlyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BP_Shop_Count", DbType:="Float")>  _
	Public Property BP_Shop_Count() As System.Nullable(Of Double)
		Get
			Return Me._BP_Shop_Count
		End Get
		Set
			If (Me._BP_Shop_Count.Equals(value) = false) Then
				Me.OnBP_Shop_CountChanging(value)
				Me.SendPropertyChanging
				Me._BP_Shop_Count = value
				Me.SendPropertyChanged("BP_Shop_Count")
				Me.OnBP_Shop_CountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Non_BP_2", DbType:="Float")>  _
	Public Property Non_BP_2() As System.Nullable(Of Double)
		Get
			Return Me._Non_BP_2
		End Get
		Set
			If (Me._Non_BP_2.Equals(value) = false) Then
				Me.OnNon_BP_2Changing(value)
				Me.SendPropertyChanging
				Me._Non_BP_2 = value
				Me.SendPropertyChanged("Non_BP_2")
				Me.OnNon_BP_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BP_Only_A", DbType:="Float")>  _
	Public Property BP_Only_A() As System.Nullable(Of Double)
		Get
			Return Me._BP_Only_A
		End Get
		Set
			If (Me._BP_Only_A.Equals(value) = false) Then
				Me.OnBP_Only_AChanging(value)
				Me.SendPropertyChanging
				Me._BP_Only_A = value
				Me.SendPropertyChanged("BP_Only_A")
				Me.OnBP_Only_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BP_Only_C", DbType:="Float")>  _
	Public Property BP_Only_C() As System.Nullable(Of Double)
		Get
			Return Me._BP_Only_C
		End Get
		Set
			If (Me._BP_Only_C.Equals(value) = false) Then
				Me.OnBP_Only_CChanging(value)
				Me.SendPropertyChanging
				Me._BP_Only_C = value
				Me.SendPropertyChanged("BP_Only_C")
				Me.OnBP_Only_CChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Non_BP_A", DbType:="Float")>  _
	Public Property Non_BP_A() As System.Nullable(Of Double)
		Get
			Return Me._Non_BP_A
		End Get
		Set
			If (Me._Non_BP_A.Equals(value) = false) Then
				Me.OnNon_BP_AChanging(value)
				Me.SendPropertyChanging
				Me._Non_BP_A = value
				Me.SendPropertyChanged("Non_BP_A")
				Me.OnNon_BP_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Non_BP_C", DbType:="Float")>  _
	Public Property Non_BP_C() As System.Nullable(Of Double)
		Get
			Return Me._Non_BP_C
		End Get
		Set
			If (Me._Non_BP_C.Equals(value) = false) Then
				Me.OnNon_BP_CChanging(value)
				Me.SendPropertyChanging
				Me._Non_BP_C = value
				Me.SendPropertyChanged("Non_BP_C")
				Me.OnNon_BP_CChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType", DbType:="NVarChar(255)")>  _
	Public Property GarageType() As String
		Get
			Return Me._GarageType
		End Get
		Set
			If (String.Equals(Me._GarageType, value) = false) Then
				Me.OnGarageTypeChanging(value)
				Me.SendPropertyChanging
				Me._GarageType = value
				Me.SendPropertyChanged("GarageType")
				Me.OnGarageTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insurer", DbType:="NVarChar(255)")>  _
	Public Property Insurer() As String
		Get
			Return Me._Insurer
		End Get
		Set
			If (String.Equals(Me._Insurer, value) = false) Then
				Me.OnInsurerChanging(value)
				Me.SendPropertyChanging
				Me._Insurer = value
				Me.SendPropertyChanged("Insurer")
				Me.OnInsurerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LotNo", DbType:="NVarChar(255)")>  _
	Public Property LotNo() As String
		Get
			Return Me._LotNo
		End Get
		Set
			If (String.Equals(Me._LotNo, value) = false) Then
				Me.OnLotNoChanging(value)
				Me.SendPropertyChanging
				Me._LotNo = value
				Me.SendPropertyChanged("LotNo")
				Me.OnLotNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Business_Type", DbType:="NVarChar(255)")>  _
	Public Property Business_Type() As String
		Get
			Return Me._Business_Type
		End Get
		Set
			If (String.Equals(Me._Business_Type, value) = false) Then
				Me.OnBusiness_TypeChanging(value)
				Me.SendPropertyChanging
				Me._Business_Type = value
				Me.SendPropertyChanged("Business_Type")
				Me.OnBusiness_TypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerName", DbType:="NVarChar(255)")>  _
	Public Property DealerName() As String
		Get
			Return Me._DealerName
		End Get
		Set
			If (String.Equals(Me._DealerName, value) = false) Then
				Me.OnDealerNameChanging(value)
				Me.SendPropertyChanging
				Me._DealerName = value
				Me.SendPropertyChanged("DealerName")
				Me.OnDealerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dealer_Group", DbType:="NVarChar(255)")>  _
	Public Property Dealer_Group() As String
		Get
			Return Me._Dealer_Group
		End Get
		Set
			If (String.Equals(Me._Dealer_Group, value) = false) Then
				Me.OnDealer_GroupChanging(value)
				Me.SendPropertyChanging
				Me._Dealer_Group = value
				Me.SendPropertyChanged("Dealer_Group")
				Me.OnDealer_GroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Capacity", DbType:="Float")>  _
	Public Property Capacity() As System.Nullable(Of Double)
		Get
			Return Me._Capacity
		End Get
		Set
			If (Me._Capacity.Equals(value) = false) Then
				Me.OnCapacityChanging(value)
				Me.SendPropertyChanging
				Me._Capacity = value
				Me.SendPropertyChanged("Capacity")
				Me.OnCapacityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerGarage", DbType:="NVarChar(255)")>  _
	Public Property DealerGarage() As String
		Get
			Return Me._DealerGarage
		End Get
		Set
			If (String.Equals(Me._DealerGarage, value) = false) Then
				Me.OnDealerGarageChanging(value)
				Me.SendPropertyChanging
				Me._DealerGarage = value
				Me.SendPropertyChanged("DealerGarage")
				Me.OnDealerGarageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="NVarChar(255)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me.OnModelChanging(value)
				Me.SendPropertyChanging
				Me._Model = value
				Me.SendPropertyChanged("Model")
				Me.OnModelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="NVarChar(255)")>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gross_Premium", DbType:="Float")>  _
	Public Property Gross_Premium() As System.Nullable(Of Double)
		Get
			Return Me._Gross_Premium
		End Get
		Set
			If (Me._Gross_Premium.Equals(value) = false) Then
				Me.OnGross_PremiumChanging(value)
				Me.SendPropertyChanging
				Me._Gross_Premium = value
				Me.SendPropertyChanged("Gross_Premium")
				Me.OnGross_PremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total_Premium", DbType:="Float")>  _
	Public Property Total_Premium() As System.Nullable(Of Double)
		Get
			Return Me._Total_Premium
		End Get
		Set
			If (Me._Total_Premium.Equals(value) = false) Then
				Me.OnTotal_PremiumChanging(value)
				Me.SendPropertyChanging
				Me._Total_Premium = value
				Me.SendPropertyChanged("Total_Premium")
				Me.OnTotal_PremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Claim_Frequency_P", DbType:="Float")>  _
	Public Property Claim_Frequency_P() As System.Nullable(Of Double)
		Get
			Return Me._Claim_Frequency_P
		End Get
		Set
			If (Me._Claim_Frequency_P.Equals(value) = false) Then
				Me.OnClaim_Frequency_PChanging(value)
				Me.SendPropertyChanging
				Me._Claim_Frequency_P = value
				Me.SendPropertyChanged("Claim_Frequency_P")
				Me.OnClaim_Frequency_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BP_Utilization_PA", DbType:="Float")>  _
	Public Property BP_Utilization_PA() As System.Nullable(Of Double)
		Get
			Return Me._BP_Utilization_PA
		End Get
		Set
			If (Me._BP_Utilization_PA.Equals(value) = false) Then
				Me.OnBP_Utilization_PAChanging(value)
				Me.SendPropertyChanging
				Me._BP_Utilization_PA = value
				Me.SendPropertyChanged("BP_Utilization_PA")
				Me.OnBP_Utilization_PAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Loss_Ratio_P", DbType:="Float")>  _
	Public Property Loss_Ratio_P() As System.Nullable(Of Double)
		Get
			Return Me._Loss_Ratio_P
		End Get
		Set
			If (Me._Loss_Ratio_P.Equals(value) = false) Then
				Me.OnLoss_Ratio_PChanging(value)
				Me.SendPropertyChanging
				Me._Loss_Ratio_P = value
				Me.SendPropertyChanged("Loss_Ratio_P")
				Me.OnLoss_Ratio_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BP_Utilization_PC", DbType:="Float")>  _
	Public Property BP_Utilization_PC() As System.Nullable(Of Double)
		Get
			Return Me._BP_Utilization_PC
		End Get
		Set
			If (Me._BP_Utilization_PC.Equals(value) = false) Then
				Me.OnBP_Utilization_PCChanging(value)
				Me.SendPropertyChanging
				Me._BP_Utilization_PC = value
				Me.SendPropertyChanged("BP_Utilization_PC")
				Me.OnBP_Utilization_PCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Claims_Incured_NotPaid", DbType:="Float")>  _
	Public Property Claims_Incured_NotPaid() As System.Nullable(Of Double)
		Get
			Return Me._Claims_Incured_NotPaid
		End Get
		Set
			If (Me._Claims_Incured_NotPaid.Equals(value) = false) Then
				Me.OnClaims_Incured_NotPaidChanging(value)
				Me.SendPropertyChanging
				Me._Claims_Incured_NotPaid = value
				Me.SendPropertyChanged("Claims_Incured_NotPaid")
				Me.OnClaims_Incured_NotPaidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aftersales_Opportunity", DbType:="Float")>  _
	Public Property Aftersales_Opportunity() As System.Nullable(Of Double)
		Get
			Return Me._Aftersales_Opportunity
		End Get
		Set
			If (Me._Aftersales_Opportunity.Equals(value) = false) Then
				Me.OnAftersales_OpportunityChanging(value)
				Me.SendPropertyChanging
				Me._Aftersales_Opportunity = value
				Me.SendPropertyChanged("Aftersales_Opportunity")
				Me.OnAftersales_OpportunityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Labour_P", DbType:="Float")>  _
	Public Property Labour_P() As System.Nullable(Of Double)
		Get
			Return Me._Labour_P
		End Get
		Set
			If (Me._Labour_P.Equals(value) = false) Then
				Me.OnLabour_PChanging(value)
				Me.SendPropertyChanging
				Me._Labour_P = value
				Me.SendPropertyChanged("Labour_P")
				Me.OnLabour_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare_Part_P", DbType:="Float")>  _
	Public Property Spare_Part_P() As System.Nullable(Of Double)
		Get
			Return Me._Spare_Part_P
		End Get
		Set
			If (Me._Spare_Part_P.Equals(value) = false) Then
				Me.OnSpare_Part_PChanging(value)
				Me.SendPropertyChanging
				Me._Spare_Part_P = value
				Me.SendPropertyChanged("Spare_Part_P")
				Me.OnSpare_Part_PChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_CustomDashBoard01")>  _
Partial Public Class V_CustomDashBoard01
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AccidentPlace_F As String
	
	Private _Latitude As System.Nullable(Of Double)
	
	Private _Longitude As System.Nullable(Of Double)
	
	Private _Non_BP_C As System.Nullable(Of Double)
	
	Private _Non_BP_A As System.Nullable(Of Double)
	
	Private _Claims_Incured_NotPaid As System.Nullable(Of Double)
	
	Private _Aftersales_Opportunity As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAccidentPlace_FChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentPlace_FChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnNon_BP_CChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNon_BP_CChanged()
    End Sub
    Partial Private Sub OnNon_BP_AChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNon_BP_AChanged()
    End Sub
    Partial Private Sub OnClaims_Incured_NotPaidChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnClaims_Incured_NotPaidChanged()
    End Sub
    Partial Private Sub OnAftersales_OpportunityChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAftersales_OpportunityChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace_F", DbType:="NVarChar(255)", IsPrimaryKey:=true)>  _
	Public Property AccidentPlace_F() As String
		Get
			Return Me._AccidentPlace_F
		End Get
		Set
			If (String.Equals(Me._AccidentPlace_F, value) = false) Then
				Me.OnAccidentPlace_FChanging(value)
				Me.SendPropertyChanging
				Me._AccidentPlace_F = value
				Me.SendPropertyChanged("AccidentPlace_F")
				Me.OnAccidentPlace_FChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")>  _
	Public Property Latitude() As System.Nullable(Of Double)
		Get
			Return Me._Latitude
		End Get
		Set
			If (Me._Latitude.Equals(value) = false) Then
				Me.OnLatitudeChanging(value)
				Me.SendPropertyChanging
				Me._Latitude = value
				Me.SendPropertyChanged("Latitude")
				Me.OnLatitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")>  _
	Public Property Longitude() As System.Nullable(Of Double)
		Get
			Return Me._Longitude
		End Get
		Set
			If (Me._Longitude.Equals(value) = false) Then
				Me.OnLongitudeChanging(value)
				Me.SendPropertyChanging
				Me._Longitude = value
				Me.SendPropertyChanged("Longitude")
				Me.OnLongitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Non_BP_C", DbType:="Float")>  _
	Public Property Non_BP_C() As System.Nullable(Of Double)
		Get
			Return Me._Non_BP_C
		End Get
		Set
			If (Me._Non_BP_C.Equals(value) = false) Then
				Me.OnNon_BP_CChanging(value)
				Me.SendPropertyChanging
				Me._Non_BP_C = value
				Me.SendPropertyChanged("Non_BP_C")
				Me.OnNon_BP_CChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Non_BP_A", DbType:="Float")>  _
	Public Property Non_BP_A() As System.Nullable(Of Double)
		Get
			Return Me._Non_BP_A
		End Get
		Set
			If (Me._Non_BP_A.Equals(value) = false) Then
				Me.OnNon_BP_AChanging(value)
				Me.SendPropertyChanging
				Me._Non_BP_A = value
				Me.SendPropertyChanged("Non_BP_A")
				Me.OnNon_BP_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Claims_Incured_NotPaid", DbType:="Float")>  _
	Public Property Claims_Incured_NotPaid() As System.Nullable(Of Double)
		Get
			Return Me._Claims_Incured_NotPaid
		End Get
		Set
			If (Me._Claims_Incured_NotPaid.Equals(value) = false) Then
				Me.OnClaims_Incured_NotPaidChanging(value)
				Me.SendPropertyChanging
				Me._Claims_Incured_NotPaid = value
				Me.SendPropertyChanged("Claims_Incured_NotPaid")
				Me.OnClaims_Incured_NotPaidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aftersales_Opportunity", DbType:="Float")>  _
	Public Property Aftersales_Opportunity() As System.Nullable(Of Double)
		Get
			Return Me._Aftersales_Opportunity
		End Get
		Set
			If (Me._Aftersales_Opportunity.Equals(value) = false) Then
				Me.OnAftersales_OpportunityChanging(value)
				Me.SendPropertyChanging
				Me._Aftersales_Opportunity = value
				Me.SendPropertyChanged("Aftersales_Opportunity")
				Me.OnAftersales_OpportunityChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RawDataProduction")>  _
Partial Public Class RawDataProduction
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Client As String
	
	Private _Class As String
	
	Private _Folio As System.Nullable(Of Integer)
	
	Private _Year As System.Nullable(Of Integer)
	
	Private _Version As System.Nullable(Of Integer)
	
	Private _Underwriter As String
	
	Private _AExec As String
	
	Private _TransType As String
	
	Private _Invoiceno As Integer
	
	Private _Effective As System.Nullable(Of Date)
	
	Private _PeriodFrom As System.Nullable(Of Date)
	
	Private _PeriodTo As System.Nullable(Of Date)
	
	Private _PolicyNo As String
	
	Private _BillingDate As System.Nullable(Of Date)
	
	Private _Currency As String
	
	Private _ExchangeRate As System.Nullable(Of Double)
	
	Private _SumInsuredTHB As System.Nullable(Of Double)
	
	Private _PremiumTHB As System.Nullable(Of Double)
	
	Private _StampTHB As System.Nullable(Of Double)
	
	Private _VATTHB As System.Nullable(Of Double)
	
	Private _BrokerageTHB As System.Nullable(Of Double)
	
	Private _ORInTHB As System.Nullable(Of Double)
	
	Private _AdminFeeIn1THB As System.Nullable(Of Double)
	
	Private _AdminFeeIn2THB As System.Nullable(Of Double)
	
	Private _DiscountTHB As System.Nullable(Of Double)
	
	Private _CommissionOutTHB As System.Nullable(Of Double)
	
	Private _OROutTHB As System.Nullable(Of Double)
	
	Private _AdminFeeOut1THB As System.Nullable(Of Double)
	
	Private _AdminFeeOut2THB As System.Nullable(Of Double)
	
	Private _BriefDescription As String
	
	Private _BriefII As String
	
	Private _BriefIII As String
	
	Private _Location As String
	
	Private _ReinsuranceInfo As String
	
	Private _Remarks As String
	
	Private _PPWFromClient As System.Nullable(Of Date)
	
	Private _PPWToUW As System.Nullable(Of Date)
	
	Private _CoInsuranceNo As System.Nullable(Of Integer)
	
	Private _RenewFlag As String
	
	Private _AEProduction As String
	
	Private _ErrorFlag As String
	
	Private _UpfrontFlag As System.Nullable(Of Double)
	
	Private _EntryBy As String
	
	Private _EntryDate As System.Nullable(Of Date)
	
	Private _AEName As String
	
	Private _AEGroupRunning As System.Nullable(Of Integer)
	
	Private _AEGroupName As String
	
	Private _AESGroupRunning As System.Nullable(Of Integer)
	
	Private _AESGroupName As String
	
	Private _Owner As String
	
	Private _BusinessGroup As String
	
	Private _ClassGroup As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskGovernment As String
	
	Private _RiskShortDesc As String
	
	Private _BillingKey As String
	
	Private _AgentStaff As String
	
	Private _AgentName As String
	
	Private _Department As String
	
	Private _ClientName As String
	
	Private _SourceCode As String
	
	Private _SourceName As String
	
	Private _GroupName As String
	
	Private _ClientType As String
	
	Private _IndustryEng As String
	
	Private _IndustryThai As String
	
	Private _TotalPremiumTHB As System.Nullable(Of Double)
	
	Private _TotalIncome As System.Nullable(Of Double)
	
	Private _NetIncome As System.Nullable(Of Double)
	
	Private _UWName As String
	
	Private _UWNameEng As String
	
	Private _UWCrossRef As String
	
	Private _Division As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClientChanging(value As String)
    End Sub
    Partial Private Sub OnClientChanged()
    End Sub
    Partial Private Sub OnClassChanging(value As String)
    End Sub
    Partial Private Sub OnClassChanged()
    End Sub
    Partial Private Sub OnFolioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFolioChanged()
    End Sub
    Partial Private Sub OnYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYearChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnUnderwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUnderwriterChanged()
    End Sub
    Partial Private Sub OnAExecChanging(value As String)
    End Sub
    Partial Private Sub OnAExecChanged()
    End Sub
    Partial Private Sub OnTransTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTransTypeChanged()
    End Sub
    Partial Private Sub OnInvoicenoChanging(value As Integer)
    End Sub
    Partial Private Sub OnInvoicenoChanged()
    End Sub
    Partial Private Sub OnEffectiveChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEffectiveChanged()
    End Sub
    Partial Private Sub OnPeriodFromChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPeriodFromChanged()
    End Sub
    Partial Private Sub OnPeriodToChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPeriodToChanged()
    End Sub
    Partial Private Sub OnPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyNoChanged()
    End Sub
    Partial Private Sub OnBillingDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBillingDateChanged()
    End Sub
    Partial Private Sub OnCurrencyChanging(value As String)
    End Sub
    Partial Private Sub OnCurrencyChanged()
    End Sub
    Partial Private Sub OnExchangeRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnExchangeRateChanged()
    End Sub
    Partial Private Sub OnSumInsuredTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSumInsuredTHBChanged()
    End Sub
    Partial Private Sub OnPremiumTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPremiumTHBChanged()
    End Sub
    Partial Private Sub OnStampTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnStampTHBChanged()
    End Sub
    Partial Private Sub OnVATTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVATTHBChanged()
    End Sub
    Partial Private Sub OnBrokerageTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBrokerageTHBChanged()
    End Sub
    Partial Private Sub OnORInTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnORInTHBChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn1THBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminFeeIn1THBChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn2THBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminFeeIn2THBChanged()
    End Sub
    Partial Private Sub OnDiscountTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDiscountTHBChanged()
    End Sub
    Partial Private Sub OnCommissionOutTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCommissionOutTHBChanged()
    End Sub
    Partial Private Sub OnOROutTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOROutTHBChanged()
    End Sub
    Partial Private Sub OnAdminFeeOut1THBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminFeeOut1THBChanged()
    End Sub
    Partial Private Sub OnAdminFeeOut2THBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAdminFeeOut2THBChanged()
    End Sub
    Partial Private Sub OnBriefDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnBriefDescriptionChanged()
    End Sub
    Partial Private Sub OnBriefIIChanging(value As String)
    End Sub
    Partial Private Sub OnBriefIIChanged()
    End Sub
    Partial Private Sub OnBriefIIIChanging(value As String)
    End Sub
    Partial Private Sub OnBriefIIIChanged()
    End Sub
    Partial Private Sub OnLocationChanging(value As String)
    End Sub
    Partial Private Sub OnLocationChanged()
    End Sub
    Partial Private Sub OnReinsuranceInfoChanging(value As String)
    End Sub
    Partial Private Sub OnReinsuranceInfoChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnPPWFromClientChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPPWFromClientChanged()
    End Sub
    Partial Private Sub OnPPWToUWChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPPWToUWChanged()
    End Sub
    Partial Private Sub OnCoInsuranceNoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCoInsuranceNoChanged()
    End Sub
    Partial Private Sub OnRenewFlagChanging(value As String)
    End Sub
    Partial Private Sub OnRenewFlagChanged()
    End Sub
    Partial Private Sub OnAEProductionChanging(value As String)
    End Sub
    Partial Private Sub OnAEProductionChanged()
    End Sub
    Partial Private Sub OnErrorFlagChanging(value As String)
    End Sub
    Partial Private Sub OnErrorFlagChanged()
    End Sub
    Partial Private Sub OnUpfrontFlagChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnUpfrontFlagChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnAENameChanging(value As String)
    End Sub
    Partial Private Sub OnAENameChanged()
    End Sub
    Partial Private Sub OnAEGroupRunningChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAEGroupRunningChanged()
    End Sub
    Partial Private Sub OnAEGroupNameChanging(value As String)
    End Sub
    Partial Private Sub OnAEGroupNameChanged()
    End Sub
    Partial Private Sub OnAESGroupRunningChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAESGroupRunningChanged()
    End Sub
    Partial Private Sub OnAESGroupNameChanging(value As String)
    End Sub
    Partial Private Sub OnAESGroupNameChanged()
    End Sub
    Partial Private Sub OnOwnerChanging(value As String)
    End Sub
    Partial Private Sub OnOwnerChanged()
    End Sub
    Partial Private Sub OnBusinessGroupChanging(value As String)
    End Sub
    Partial Private Sub OnBusinessGroupChanged()
    End Sub
    Partial Private Sub OnClassGroupChanging(value As String)
    End Sub
    Partial Private Sub OnClassGroupChanged()
    End Sub
    Partial Private Sub OnRiskGroupIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIChanged()
    End Sub
    Partial Private Sub OnRiskGroupIIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIIChanged()
    End Sub
    Partial Private Sub OnRiskGovernmentChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGovernmentChanged()
    End Sub
    Partial Private Sub OnRiskShortDescChanging(value As String)
    End Sub
    Partial Private Sub OnRiskShortDescChanged()
    End Sub
    Partial Private Sub OnBillingKeyChanging(value As String)
    End Sub
    Partial Private Sub OnBillingKeyChanged()
    End Sub
    Partial Private Sub OnAgentStaffChanging(value As String)
    End Sub
    Partial Private Sub OnAgentStaffChanged()
    End Sub
    Partial Private Sub OnAgentNameChanging(value As String)
    End Sub
    Partial Private Sub OnAgentNameChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnClientNameChanging(value As String)
    End Sub
    Partial Private Sub OnClientNameChanged()
    End Sub
    Partial Private Sub OnSourceCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSourceCodeChanged()
    End Sub
    Partial Private Sub OnSourceNameChanging(value As String)
    End Sub
    Partial Private Sub OnSourceNameChanged()
    End Sub
    Partial Private Sub OnGroupNameChanging(value As String)
    End Sub
    Partial Private Sub OnGroupNameChanged()
    End Sub
    Partial Private Sub OnClientTypeChanging(value As String)
    End Sub
    Partial Private Sub OnClientTypeChanged()
    End Sub
    Partial Private Sub OnIndustryEngChanging(value As String)
    End Sub
    Partial Private Sub OnIndustryEngChanged()
    End Sub
    Partial Private Sub OnIndustryThaiChanging(value As String)
    End Sub
    Partial Private Sub OnIndustryThaiChanged()
    End Sub
    Partial Private Sub OnTotalPremiumTHBChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalPremiumTHBChanged()
    End Sub
    Partial Private Sub OnTotalIncomeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalIncomeChanged()
    End Sub
    Partial Private Sub OnNetIncomeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNetIncomeChanged()
    End Sub
    Partial Private Sub OnUWNameChanging(value As String)
    End Sub
    Partial Private Sub OnUWNameChanged()
    End Sub
    Partial Private Sub OnUWNameEngChanging(value As String)
    End Sub
    Partial Private Sub OnUWNameEngChanged()
    End Sub
    Partial Private Sub OnUWCrossRefChanging(value As String)
    End Sub
    Partial Private Sub OnUWCrossRefChanged()
    End Sub
    Partial Private Sub OnDivisionChanging(value As String)
    End Sub
    Partial Private Sub OnDivisionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Client", DbType:="VarChar(50)")>  _
	Public Property Client() As String
		Get
			Return Me._Client
		End Get
		Set
			If (String.Equals(Me._Client, value) = false) Then
				Me.OnClientChanging(value)
				Me.SendPropertyChanging
				Me._Client = value
				Me.SendPropertyChanged("Client")
				Me.OnClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Class", Storage:="_Class", DbType:="VarChar(50)")>  _
	Public Property [Class]() As String
		Get
			Return Me._Class
		End Get
		Set
			If (String.Equals(Me._Class, value) = false) Then
				Me.OnClassChanging(value)
				Me.SendPropertyChanging
				Me._Class = value
				Me.SendPropertyChanged("[Class]")
				Me.OnClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Folio", DbType:="Int")>  _
	Public Property Folio() As System.Nullable(Of Integer)
		Get
			Return Me._Folio
		End Get
		Set
			If (Me._Folio.Equals(value) = false) Then
				Me.OnFolioChanging(value)
				Me.SendPropertyChanging
				Me._Folio = value
				Me.SendPropertyChanged("Folio")
				Me.OnFolioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="Int")>  _
	Public Property Year() As System.Nullable(Of Integer)
		Get
			Return Me._Year
		End Get
		Set
			If (Me._Year.Equals(value) = false) Then
				Me.OnYearChanging(value)
				Me.SendPropertyChanging
				Me._Year = value
				Me.SendPropertyChanged("Year")
				Me.OnYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version", DbType:="Int")>  _
	Public Property Version() As System.Nullable(Of Integer)
		Get
			Return Me._Version
		End Get
		Set
			If (Me._Version.Equals(value) = false) Then
				Me.OnVersionChanging(value)
				Me.SendPropertyChanging
				Me._Version = value
				Me.SendPropertyChanged("Version")
				Me.OnVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="VarChar(50)")>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me.OnUnderwriterChanging(value)
				Me.SendPropertyChanging
				Me._Underwriter = value
				Me.SendPropertyChanged("Underwriter")
				Me.OnUnderwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AExec", DbType:="VarChar(50)")>  _
	Public Property AExec() As String
		Get
			Return Me._AExec
		End Get
		Set
			If (String.Equals(Me._AExec, value) = false) Then
				Me.OnAExecChanging(value)
				Me.SendPropertyChanging
				Me._AExec = value
				Me.SendPropertyChanged("AExec")
				Me.OnAExecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransType", DbType:="VarChar(2)")>  _
	Public Property TransType() As String
		Get
			Return Me._TransType
		End Get
		Set
			If (String.Equals(Me._TransType, value) = false) Then
				Me.OnTransTypeChanging(value)
				Me.SendPropertyChanging
				Me._TransType = value
				Me.SendPropertyChanged("TransType")
				Me.OnTransTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Invoiceno", DbType:="Int", IsPrimaryKey:=true)>  _
	Public Property Invoiceno() As Integer
		Get
			Return Me._Invoiceno
		End Get
		Set
			If ((Me._Invoiceno = value)  _
						= false) Then
				Me.OnInvoicenoChanging(value)
				Me.SendPropertyChanging
				Me._Invoiceno = value
				Me.SendPropertyChanged("Invoiceno")
				Me.OnInvoicenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Effective", DbType:="DateTime")>  _
	Public Property Effective() As System.Nullable(Of Date)
		Get
			Return Me._Effective
		End Get
		Set
			If (Me._Effective.Equals(value) = false) Then
				Me.OnEffectiveChanging(value)
				Me.SendPropertyChanging
				Me._Effective = value
				Me.SendPropertyChanged("Effective")
				Me.OnEffectiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodFrom", DbType:="DateTime")>  _
	Public Property PeriodFrom() As System.Nullable(Of Date)
		Get
			Return Me._PeriodFrom
		End Get
		Set
			If (Me._PeriodFrom.Equals(value) = false) Then
				Me.OnPeriodFromChanging(value)
				Me.SendPropertyChanging
				Me._PeriodFrom = value
				Me.SendPropertyChanged("PeriodFrom")
				Me.OnPeriodFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodTo", DbType:="DateTime")>  _
	Public Property PeriodTo() As System.Nullable(Of Date)
		Get
			Return Me._PeriodTo
		End Get
		Set
			If (Me._PeriodTo.Equals(value) = false) Then
				Me.OnPeriodToChanging(value)
				Me.SendPropertyChanging
				Me._PeriodTo = value
				Me.SendPropertyChanged("PeriodTo")
				Me.OnPeriodToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="VarChar(70)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me.OnPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._PolicyNo = value
				Me.SendPropertyChanged("PolicyNo")
				Me.OnPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingDate", DbType:="DateTime")>  _
	Public Property BillingDate() As System.Nullable(Of Date)
		Get
			Return Me._BillingDate
		End Get
		Set
			If (Me._BillingDate.Equals(value) = false) Then
				Me.OnBillingDateChanging(value)
				Me.SendPropertyChanging
				Me._BillingDate = value
				Me.SendPropertyChanged("BillingDate")
				Me.OnBillingDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Currency", DbType:="VarChar(50)")>  _
	Public Property Currency() As String
		Get
			Return Me._Currency
		End Get
		Set
			If (String.Equals(Me._Currency, value) = false) Then
				Me.OnCurrencyChanging(value)
				Me.SendPropertyChanging
				Me._Currency = value
				Me.SendPropertyChanged("Currency")
				Me.OnCurrencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExchangeRate", DbType:="Float")>  _
	Public Property ExchangeRate() As System.Nullable(Of Double)
		Get
			Return Me._ExchangeRate
		End Get
		Set
			If (Me._ExchangeRate.Equals(value) = false) Then
				Me.OnExchangeRateChanging(value)
				Me.SendPropertyChanging
				Me._ExchangeRate = value
				Me.SendPropertyChanged("ExchangeRate")
				Me.OnExchangeRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsuredTHB", DbType:="Float")>  _
	Public Property SumInsuredTHB() As System.Nullable(Of Double)
		Get
			Return Me._SumInsuredTHB
		End Get
		Set
			If (Me._SumInsuredTHB.Equals(value) = false) Then
				Me.OnSumInsuredTHBChanging(value)
				Me.SendPropertyChanging
				Me._SumInsuredTHB = value
				Me.SendPropertyChanged("SumInsuredTHB")
				Me.OnSumInsuredTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumTHB", DbType:="Float")>  _
	Public Property PremiumTHB() As System.Nullable(Of Double)
		Get
			Return Me._PremiumTHB
		End Get
		Set
			If (Me._PremiumTHB.Equals(value) = false) Then
				Me.OnPremiumTHBChanging(value)
				Me.SendPropertyChanging
				Me._PremiumTHB = value
				Me.SendPropertyChanged("PremiumTHB")
				Me.OnPremiumTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StampTHB", DbType:="Float")>  _
	Public Property StampTHB() As System.Nullable(Of Double)
		Get
			Return Me._StampTHB
		End Get
		Set
			If (Me._StampTHB.Equals(value) = false) Then
				Me.OnStampTHBChanging(value)
				Me.SendPropertyChanging
				Me._StampTHB = value
				Me.SendPropertyChanged("StampTHB")
				Me.OnStampTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATTHB", DbType:="Float")>  _
	Public Property VATTHB() As System.Nullable(Of Double)
		Get
			Return Me._VATTHB
		End Get
		Set
			If (Me._VATTHB.Equals(value) = false) Then
				Me.OnVATTHBChanging(value)
				Me.SendPropertyChanging
				Me._VATTHB = value
				Me.SendPropertyChanged("VATTHB")
				Me.OnVATTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrokerageTHB", DbType:="Float")>  _
	Public Property BrokerageTHB() As System.Nullable(Of Double)
		Get
			Return Me._BrokerageTHB
		End Get
		Set
			If (Me._BrokerageTHB.Equals(value) = false) Then
				Me.OnBrokerageTHBChanging(value)
				Me.SendPropertyChanging
				Me._BrokerageTHB = value
				Me.SendPropertyChanged("BrokerageTHB")
				Me.OnBrokerageTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORInTHB", DbType:="Float")>  _
	Public Property ORInTHB() As System.Nullable(Of Double)
		Get
			Return Me._ORInTHB
		End Get
		Set
			If (Me._ORInTHB.Equals(value) = false) Then
				Me.OnORInTHBChanging(value)
				Me.SendPropertyChanging
				Me._ORInTHB = value
				Me.SendPropertyChanged("ORInTHB")
				Me.OnORInTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1THB", DbType:="Float")>  _
	Public Property AdminFeeIn1THB() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn1THB
		End Get
		Set
			If (Me._AdminFeeIn1THB.Equals(value) = false) Then
				Me.OnAdminFeeIn1THBChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1THB = value
				Me.SendPropertyChanged("AdminFeeIn1THB")
				Me.OnAdminFeeIn1THBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2THB", DbType:="Float")>  _
	Public Property AdminFeeIn2THB() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeIn2THB
		End Get
		Set
			If (Me._AdminFeeIn2THB.Equals(value) = false) Then
				Me.OnAdminFeeIn2THBChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2THB = value
				Me.SendPropertyChanged("AdminFeeIn2THB")
				Me.OnAdminFeeIn2THBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountTHB", DbType:="Float")>  _
	Public Property DiscountTHB() As System.Nullable(Of Double)
		Get
			Return Me._DiscountTHB
		End Get
		Set
			If (Me._DiscountTHB.Equals(value) = false) Then
				Me.OnDiscountTHBChanging(value)
				Me.SendPropertyChanging
				Me._DiscountTHB = value
				Me.SendPropertyChanged("DiscountTHB")
				Me.OnDiscountTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOutTHB", DbType:="Float")>  _
	Public Property CommissionOutTHB() As System.Nullable(Of Double)
		Get
			Return Me._CommissionOutTHB
		End Get
		Set
			If (Me._CommissionOutTHB.Equals(value) = false) Then
				Me.OnCommissionOutTHBChanging(value)
				Me.SendPropertyChanging
				Me._CommissionOutTHB = value
				Me.SendPropertyChanged("CommissionOutTHB")
				Me.OnCommissionOutTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutTHB", DbType:="Float")>  _
	Public Property OROutTHB() As System.Nullable(Of Double)
		Get
			Return Me._OROutTHB
		End Get
		Set
			If (Me._OROutTHB.Equals(value) = false) Then
				Me.OnOROutTHBChanging(value)
				Me.SendPropertyChanging
				Me._OROutTHB = value
				Me.SendPropertyChanged("OROutTHB")
				Me.OnOROutTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeOut1THB", DbType:="Float")>  _
	Public Property AdminFeeOut1THB() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeOut1THB
		End Get
		Set
			If (Me._AdminFeeOut1THB.Equals(value) = false) Then
				Me.OnAdminFeeOut1THBChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeOut1THB = value
				Me.SendPropertyChanged("AdminFeeOut1THB")
				Me.OnAdminFeeOut1THBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeOut2THB", DbType:="Float")>  _
	Public Property AdminFeeOut2THB() As System.Nullable(Of Double)
		Get
			Return Me._AdminFeeOut2THB
		End Get
		Set
			If (Me._AdminFeeOut2THB.Equals(value) = false) Then
				Me.OnAdminFeeOut2THBChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeOut2THB = value
				Me.SendPropertyChanged("AdminFeeOut2THB")
				Me.OnAdminFeeOut2THBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BriefDescription", DbType:="VarChar(80)")>  _
	Public Property BriefDescription() As String
		Get
			Return Me._BriefDescription
		End Get
		Set
			If (String.Equals(Me._BriefDescription, value) = false) Then
				Me.OnBriefDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._BriefDescription = value
				Me.SendPropertyChanged("BriefDescription")
				Me.OnBriefDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BriefII", DbType:="VarChar(80)")>  _
	Public Property BriefII() As String
		Get
			Return Me._BriefII
		End Get
		Set
			If (String.Equals(Me._BriefII, value) = false) Then
				Me.OnBriefIIChanging(value)
				Me.SendPropertyChanging
				Me._BriefII = value
				Me.SendPropertyChanged("BriefII")
				Me.OnBriefIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BriefIII", DbType:="VarChar(80)")>  _
	Public Property BriefIII() As String
		Get
			Return Me._BriefIII
		End Get
		Set
			If (String.Equals(Me._BriefIII, value) = false) Then
				Me.OnBriefIIIChanging(value)
				Me.SendPropertyChanging
				Me._BriefIII = value
				Me.SendPropertyChanged("BriefIII")
				Me.OnBriefIIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="VarChar(100)")>  _
	Public Property Location() As String
		Get
			Return Me._Location
		End Get
		Set
			If (String.Equals(Me._Location, value) = false) Then
				Me.OnLocationChanging(value)
				Me.SendPropertyChanging
				Me._Location = value
				Me.SendPropertyChanged("Location")
				Me.OnLocationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReinsuranceInfo", DbType:="VarChar(100)")>  _
	Public Property ReinsuranceInfo() As String
		Get
			Return Me._ReinsuranceInfo
		End Get
		Set
			If (String.Equals(Me._ReinsuranceInfo, value) = false) Then
				Me.OnReinsuranceInfoChanging(value)
				Me.SendPropertyChanging
				Me._ReinsuranceInfo = value
				Me.SendPropertyChanged("ReinsuranceInfo")
				Me.OnReinsuranceInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="VarChar(100)")>  _
	Public Property Remarks() As String
		Get
			Return Me._Remarks
		End Get
		Set
			If (String.Equals(Me._Remarks, value) = false) Then
				Me.OnRemarksChanging(value)
				Me.SendPropertyChanging
				Me._Remarks = value
				Me.SendPropertyChanged("Remarks")
				Me.OnRemarksChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPWFromClient", DbType:="DateTime")>  _
	Public Property PPWFromClient() As System.Nullable(Of Date)
		Get
			Return Me._PPWFromClient
		End Get
		Set
			If (Me._PPWFromClient.Equals(value) = false) Then
				Me.OnPPWFromClientChanging(value)
				Me.SendPropertyChanging
				Me._PPWFromClient = value
				Me.SendPropertyChanged("PPWFromClient")
				Me.OnPPWFromClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPWToUW", DbType:="DateTime")>  _
	Public Property PPWToUW() As System.Nullable(Of Date)
		Get
			Return Me._PPWToUW
		End Get
		Set
			If (Me._PPWToUW.Equals(value) = false) Then
				Me.OnPPWToUWChanging(value)
				Me.SendPropertyChanging
				Me._PPWToUW = value
				Me.SendPropertyChanged("PPWToUW")
				Me.OnPPWToUWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoInsuranceNo", DbType:="Int")>  _
	Public Property CoInsuranceNo() As System.Nullable(Of Integer)
		Get
			Return Me._CoInsuranceNo
		End Get
		Set
			If (Me._CoInsuranceNo.Equals(value) = false) Then
				Me.OnCoInsuranceNoChanging(value)
				Me.SendPropertyChanging
				Me._CoInsuranceNo = value
				Me.SendPropertyChanged("CoInsuranceNo")
				Me.OnCoInsuranceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenewFlag", DbType:="VarChar(2)")>  _
	Public Property RenewFlag() As String
		Get
			Return Me._RenewFlag
		End Get
		Set
			If (String.Equals(Me._RenewFlag, value) = false) Then
				Me.OnRenewFlagChanging(value)
				Me.SendPropertyChanging
				Me._RenewFlag = value
				Me.SendPropertyChanged("RenewFlag")
				Me.OnRenewFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AEProduction", DbType:="VarChar(50)")>  _
	Public Property AEProduction() As String
		Get
			Return Me._AEProduction
		End Get
		Set
			If (String.Equals(Me._AEProduction, value) = false) Then
				Me.OnAEProductionChanging(value)
				Me.SendPropertyChanging
				Me._AEProduction = value
				Me.SendPropertyChanged("AEProduction")
				Me.OnAEProductionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorFlag", DbType:="VarChar(6)")>  _
	Public Property ErrorFlag() As String
		Get
			Return Me._ErrorFlag
		End Get
		Set
			If (String.Equals(Me._ErrorFlag, value) = false) Then
				Me.OnErrorFlagChanging(value)
				Me.SendPropertyChanging
				Me._ErrorFlag = value
				Me.SendPropertyChanged("ErrorFlag")
				Me.OnErrorFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpfrontFlag", DbType:="Float")>  _
	Public Property UpfrontFlag() As System.Nullable(Of Double)
		Get
			Return Me._UpfrontFlag
		End Get
		Set
			If (Me._UpfrontFlag.Equals(value) = false) Then
				Me.OnUpfrontFlagChanging(value)
				Me.SendPropertyChanging
				Me._UpfrontFlag = value
				Me.SendPropertyChanged("UpfrontFlag")
				Me.OnUpfrontFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="VarChar(50)")>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime")>  _
	Public Property EntryDate() As System.Nullable(Of Date)
		Get
			Return Me._EntryDate
		End Get
		Set
			If (Me._EntryDate.Equals(value) = false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AEName", DbType:="VarChar(60)")>  _
	Public Property AEName() As String
		Get
			Return Me._AEName
		End Get
		Set
			If (String.Equals(Me._AEName, value) = false) Then
				Me.OnAENameChanging(value)
				Me.SendPropertyChanging
				Me._AEName = value
				Me.SendPropertyChanged("AEName")
				Me.OnAENameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AEGroupRunning", DbType:="Int")>  _
	Public Property AEGroupRunning() As System.Nullable(Of Integer)
		Get
			Return Me._AEGroupRunning
		End Get
		Set
			If (Me._AEGroupRunning.Equals(value) = false) Then
				Me.OnAEGroupRunningChanging(value)
				Me.SendPropertyChanging
				Me._AEGroupRunning = value
				Me.SendPropertyChanged("AEGroupRunning")
				Me.OnAEGroupRunningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AEGroupName", DbType:="VarChar(50)")>  _
	Public Property AEGroupName() As String
		Get
			Return Me._AEGroupName
		End Get
		Set
			If (String.Equals(Me._AEGroupName, value) = false) Then
				Me.OnAEGroupNameChanging(value)
				Me.SendPropertyChanging
				Me._AEGroupName = value
				Me.SendPropertyChanged("AEGroupName")
				Me.OnAEGroupNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AESGroupRunning", DbType:="Int")>  _
	Public Property AESGroupRunning() As System.Nullable(Of Integer)
		Get
			Return Me._AESGroupRunning
		End Get
		Set
			If (Me._AESGroupRunning.Equals(value) = false) Then
				Me.OnAESGroupRunningChanging(value)
				Me.SendPropertyChanging
				Me._AESGroupRunning = value
				Me.SendPropertyChanged("AESGroupRunning")
				Me.OnAESGroupRunningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AESGroupName", DbType:="VarChar(50)")>  _
	Public Property AESGroupName() As String
		Get
			Return Me._AESGroupName
		End Get
		Set
			If (String.Equals(Me._AESGroupName, value) = false) Then
				Me.OnAESGroupNameChanging(value)
				Me.SendPropertyChanging
				Me._AESGroupName = value
				Me.SendPropertyChanged("AESGroupName")
				Me.OnAESGroupNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Owner", DbType:="VarChar(50)")>  _
	Public Property Owner() As String
		Get
			Return Me._Owner
		End Get
		Set
			If (String.Equals(Me._Owner, value) = false) Then
				Me.OnOwnerChanging(value)
				Me.SendPropertyChanging
				Me._Owner = value
				Me.SendPropertyChanged("Owner")
				Me.OnOwnerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BusinessGroup", DbType:="VarChar(50)")>  _
	Public Property BusinessGroup() As String
		Get
			Return Me._BusinessGroup
		End Get
		Set
			If (String.Equals(Me._BusinessGroup, value) = false) Then
				Me.OnBusinessGroupChanging(value)
				Me.SendPropertyChanging
				Me._BusinessGroup = value
				Me.SendPropertyChanged("BusinessGroup")
				Me.OnBusinessGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassGroup", DbType:="VarChar(50)")>  _
	Public Property ClassGroup() As String
		Get
			Return Me._ClassGroup
		End Get
		Set
			If (String.Equals(Me._ClassGroup, value) = false) Then
				Me.OnClassGroupChanging(value)
				Me.SendPropertyChanging
				Me._ClassGroup = value
				Me.SendPropertyChanged("ClassGroup")
				Me.OnClassGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="VarChar(50)")>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me.OnRiskGroupIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupI = value
				Me.SendPropertyChanged("RiskGroupI")
				Me.OnRiskGroupIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="VarChar(50)")>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me.OnRiskGroupIIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupII = value
				Me.SendPropertyChanged("RiskGroupII")
				Me.OnRiskGroupIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="VarChar(50)")>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me.OnRiskGovernmentChanging(value)
				Me.SendPropertyChanging
				Me._RiskGovernment = value
				Me.SendPropertyChanged("RiskGovernment")
				Me.OnRiskGovernmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="VarChar(50)")>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me.OnRiskShortDescChanging(value)
				Me.SendPropertyChanging
				Me._RiskShortDesc = value
				Me.SendPropertyChanged("RiskShortDesc")
				Me.OnRiskShortDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingKey", DbType:="VarChar(8)")>  _
	Public Property BillingKey() As String
		Get
			Return Me._BillingKey
		End Get
		Set
			If (String.Equals(Me._BillingKey, value) = false) Then
				Me.OnBillingKeyChanging(value)
				Me.SendPropertyChanging
				Me._BillingKey = value
				Me.SendPropertyChanged("BillingKey")
				Me.OnBillingKeyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentStaff", DbType:="VarChar(50)")>  _
	Public Property AgentStaff() As String
		Get
			Return Me._AgentStaff
		End Get
		Set
			If (String.Equals(Me._AgentStaff, value) = false) Then
				Me.OnAgentStaffChanging(value)
				Me.SendPropertyChanging
				Me._AgentStaff = value
				Me.SendPropertyChanged("AgentStaff")
				Me.OnAgentStaffChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentName", DbType:="VarChar(50)")>  _
	Public Property AgentName() As String
		Get
			Return Me._AgentName
		End Get
		Set
			If (String.Equals(Me._AgentName, value) = false) Then
				Me.OnAgentNameChanging(value)
				Me.SendPropertyChanging
				Me._AgentName = value
				Me.SendPropertyChanged("AgentName")
				Me.OnAgentNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientName", DbType:="VarChar(100)")>  _
	Public Property ClientName() As String
		Get
			Return Me._ClientName
		End Get
		Set
			If (String.Equals(Me._ClientName, value) = false) Then
				Me.OnClientNameChanging(value)
				Me.SendPropertyChanging
				Me._ClientName = value
				Me.SendPropertyChanged("ClientName")
				Me.OnClientNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SourceCode", DbType:="VarChar(50)")>  _
	Public Property SourceCode() As String
		Get
			Return Me._SourceCode
		End Get
		Set
			If (String.Equals(Me._SourceCode, value) = false) Then
				Me.OnSourceCodeChanging(value)
				Me.SendPropertyChanging
				Me._SourceCode = value
				Me.SendPropertyChanged("SourceCode")
				Me.OnSourceCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SourceName", DbType:="VarChar(50)")>  _
	Public Property SourceName() As String
		Get
			Return Me._SourceName
		End Get
		Set
			If (String.Equals(Me._SourceName, value) = false) Then
				Me.OnSourceNameChanging(value)
				Me.SendPropertyChanging
				Me._SourceName = value
				Me.SendPropertyChanged("SourceName")
				Me.OnSourceNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupName", DbType:="VarChar(50)")>  _
	Public Property GroupName() As String
		Get
			Return Me._GroupName
		End Get
		Set
			If (String.Equals(Me._GroupName, value) = false) Then
				Me.OnGroupNameChanging(value)
				Me.SendPropertyChanging
				Me._GroupName = value
				Me.SendPropertyChanged("GroupName")
				Me.OnGroupNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientType", DbType:="VarChar(50)")>  _
	Public Property ClientType() As String
		Get
			Return Me._ClientType
		End Get
		Set
			If (String.Equals(Me._ClientType, value) = false) Then
				Me.OnClientTypeChanging(value)
				Me.SendPropertyChanging
				Me._ClientType = value
				Me.SendPropertyChanged("ClientType")
				Me.OnClientTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IndustryEng", DbType:="VarChar(50)")>  _
	Public Property IndustryEng() As String
		Get
			Return Me._IndustryEng
		End Get
		Set
			If (String.Equals(Me._IndustryEng, value) = false) Then
				Me.OnIndustryEngChanging(value)
				Me.SendPropertyChanging
				Me._IndustryEng = value
				Me.SendPropertyChanged("IndustryEng")
				Me.OnIndustryEngChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IndustryThai", DbType:="VarChar(50)")>  _
	Public Property IndustryThai() As String
		Get
			Return Me._IndustryThai
		End Get
		Set
			If (String.Equals(Me._IndustryThai, value) = false) Then
				Me.OnIndustryThaiChanging(value)
				Me.SendPropertyChanging
				Me._IndustryThai = value
				Me.SendPropertyChanged("IndustryThai")
				Me.OnIndustryThaiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPremiumTHB", DbType:="Float")>  _
	Public Property TotalPremiumTHB() As System.Nullable(Of Double)
		Get
			Return Me._TotalPremiumTHB
		End Get
		Set
			If (Me._TotalPremiumTHB.Equals(value) = false) Then
				Me.OnTotalPremiumTHBChanging(value)
				Me.SendPropertyChanging
				Me._TotalPremiumTHB = value
				Me.SendPropertyChanged("TotalPremiumTHB")
				Me.OnTotalPremiumTHBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalIncome", DbType:="Float")>  _
	Public Property TotalIncome() As System.Nullable(Of Double)
		Get
			Return Me._TotalIncome
		End Get
		Set
			If (Me._TotalIncome.Equals(value) = false) Then
				Me.OnTotalIncomeChanging(value)
				Me.SendPropertyChanging
				Me._TotalIncome = value
				Me.SendPropertyChanged("TotalIncome")
				Me.OnTotalIncomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NetIncome", DbType:="Float")>  _
	Public Property NetIncome() As System.Nullable(Of Double)
		Get
			Return Me._NetIncome
		End Get
		Set
			If (Me._NetIncome.Equals(value) = false) Then
				Me.OnNetIncomeChanging(value)
				Me.SendPropertyChanging
				Me._NetIncome = value
				Me.SendPropertyChanged("NetIncome")
				Me.OnNetIncomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWName", DbType:="VarChar(100)")>  _
	Public Property UWName() As String
		Get
			Return Me._UWName
		End Get
		Set
			If (String.Equals(Me._UWName, value) = false) Then
				Me.OnUWNameChanging(value)
				Me.SendPropertyChanging
				Me._UWName = value
				Me.SendPropertyChanged("UWName")
				Me.OnUWNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWNameEng", DbType:="VarChar(70)")>  _
	Public Property UWNameEng() As String
		Get
			Return Me._UWNameEng
		End Get
		Set
			If (String.Equals(Me._UWNameEng, value) = false) Then
				Me.OnUWNameEngChanging(value)
				Me.SendPropertyChanging
				Me._UWNameEng = value
				Me.SendPropertyChanged("UWNameEng")
				Me.OnUWNameEngChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWCrossRef", DbType:="VarChar(50)")>  _
	Public Property UWCrossRef() As String
		Get
			Return Me._UWCrossRef
		End Get
		Set
			If (String.Equals(Me._UWCrossRef, value) = false) Then
				Me.OnUWCrossRefChanging(value)
				Me.SendPropertyChanging
				Me._UWCrossRef = value
				Me.SendPropertyChanged("UWCrossRef")
				Me.OnUWCrossRefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Division", DbType:="VarChar(8)")>  _
	Public Property Division() As String
		Get
			Return Me._Division
		End Get
		Set
			If (String.Equals(Me._Division, value) = false) Then
				Me.OnDivisionChanging(value)
				Me.SendPropertyChanging
				Me._Division = value
				Me.SendPropertyChanged("Division")
				Me.OnDivisionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
