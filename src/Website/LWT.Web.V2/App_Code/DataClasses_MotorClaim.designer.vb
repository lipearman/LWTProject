'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="MotorClaim")>  _
Partial Public Class DataClasses_MotorClaimDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblClaimTransaction_Data(instance As tblClaimTransaction_Data)
    End Sub
  Partial Private Sub UpdatetblClaimTransaction_Data(instance As tblClaimTransaction_Data)
    End Sub
  Partial Private Sub DeletetblClaimTransaction_Data(instance As tblClaimTransaction_Data)
    End Sub
  Partial Private Sub InserttblClaimTransaction_Result(instance As tblClaimTransaction_Result)
    End Sub
  Partial Private Sub UpdatetblClaimTransaction_Result(instance As tblClaimTransaction_Result)
    End Sub
  Partial Private Sub DeletetblClaimTransaction_Result(instance As tblClaimTransaction_Result)
    End Sub
  Partial Private Sub InsertRunning(instance As Running)
    End Sub
  Partial Private Sub UpdateRunning(instance As Running)
    End Sub
  Partial Private Sub DeleteRunning(instance As Running)
    End Sub
  Partial Private Sub InserttblGarage(instance As tblGarage)
    End Sub
  Partial Private Sub UpdatetblGarage(instance As tblGarage)
    End Sub
  Partial Private Sub DeletetblGarage(instance As tblGarage)
    End Sub
  Partial Private Sub InserttblShowRoom(instance As tblShowRoom)
    End Sub
  Partial Private Sub UpdatetblShowRoom(instance As tblShowRoom)
    End Sub
  Partial Private Sub DeletetblShowRoom(instance As tblShowRoom)
    End Sub
  Partial Private Sub InserttblShowRoomCode(instance As tblShowRoomCode)
    End Sub
  Partial Private Sub UpdatetblShowRoomCode(instance As tblShowRoomCode)
    End Sub
  Partial Private Sub DeletetblShowRoomCode(instance As tblShowRoomCode)
    End Sub
  Partial Private Sub InsertV_ClaimTransactionData(instance As V_ClaimTransactionData)
    End Sub
  Partial Private Sub UpdateV_ClaimTransactionData(instance As V_ClaimTransactionData)
    End Sub
  Partial Private Sub DeleteV_ClaimTransactionData(instance As V_ClaimTransactionData)
    End Sub
  Partial Private Sub InsertPortal_User(instance As Portal_User)
    End Sub
  Partial Private Sub UpdatePortal_User(instance As Portal_User)
    End Sub
  Partial Private Sub DeletePortal_User(instance As Portal_User)
    End Sub
  Partial Private Sub InserttblClaimNoticeDetail(instance As tblClaimNoticeDetail)
    End Sub
  Partial Private Sub UpdatetblClaimNoticeDetail(instance As tblClaimNoticeDetail)
    End Sub
  Partial Private Sub DeletetblClaimNoticeDetail(instance As tblClaimNoticeDetail)
    End Sub
  Partial Private Sub InserttblClaimNoticeHeader(instance As tblClaimNoticeHeader)
    End Sub
  Partial Private Sub UpdatetblClaimNoticeHeader(instance As tblClaimNoticeHeader)
    End Sub
  Partial Private Sub DeletetblClaimNoticeHeader(instance As tblClaimNoticeHeader)
    End Sub
  Partial Private Sub InsertMailNotification(instance As MailNotification)
    End Sub
  Partial Private Sub UpdateMailNotification(instance As MailNotification)
    End Sub
  Partial Private Sub DeleteMailNotification(instance As MailNotification)
    End Sub
  Partial Private Sub InserttblDealer(instance As tblDealer)
    End Sub
  Partial Private Sub UpdatetblDealer(instance As tblDealer)
    End Sub
  Partial Private Sub DeletetblDealer(instance As tblDealer)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("PortalConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblClaimTransaction_Datas() As System.Data.Linq.Table(Of tblClaimTransaction_Data)
		Get
			Return Me.GetTable(Of tblClaimTransaction_Data)
		End Get
	End Property
	
	Public ReadOnly Property tblClaimTransaction_Results() As System.Data.Linq.Table(Of tblClaimTransaction_Result)
		Get
			Return Me.GetTable(Of tblClaimTransaction_Result)
		End Get
	End Property
	
	Public ReadOnly Property Runnings() As System.Data.Linq.Table(Of Running)
		Get
			Return Me.GetTable(Of Running)
		End Get
	End Property
	
	Public ReadOnly Property tblGarages() As System.Data.Linq.Table(Of tblGarage)
		Get
			Return Me.GetTable(Of tblGarage)
		End Get
	End Property
	
	Public ReadOnly Property tblShowRooms() As System.Data.Linq.Table(Of tblShowRoom)
		Get
			Return Me.GetTable(Of tblShowRoom)
		End Get
	End Property
	
	Public ReadOnly Property tblShowRoomCodes() As System.Data.Linq.Table(Of tblShowRoomCode)
		Get
			Return Me.GetTable(Of tblShowRoomCode)
		End Get
	End Property
	
	Public ReadOnly Property V_ClaimTransactionDatas() As System.Data.Linq.Table(Of V_ClaimTransactionData)
		Get
			Return Me.GetTable(Of V_ClaimTransactionData)
		End Get
	End Property
	
	Public ReadOnly Property V_ClaimTransactionData_Notices() As System.Data.Linq.Table(Of V_ClaimTransactionData_Notice)
		Get
			Return Me.GetTable(Of V_ClaimTransactionData_Notice)
		End Get
	End Property
	
	Public ReadOnly Property Portal_Users() As System.Data.Linq.Table(Of Portal_User)
		Get
			Return Me.GetTable(Of Portal_User)
		End Get
	End Property
	
	Public ReadOnly Property V_ClaimDailyNotifications() As System.Data.Linq.Table(Of V_ClaimDailyNotification)
		Get
			Return Me.GetTable(Of V_ClaimDailyNotification)
		End Get
	End Property
	
	Public ReadOnly Property V_NissanDailyClaim_Headers() As System.Data.Linq.Table(Of V_NissanDailyClaim_Header)
		Get
			Return Me.GetTable(Of V_NissanDailyClaim_Header)
		End Get
	End Property
	
	Public ReadOnly Property tblClaimNoticeDetails() As System.Data.Linq.Table(Of tblClaimNoticeDetail)
		Get
			Return Me.GetTable(Of tblClaimNoticeDetail)
		End Get
	End Property
	
	Public ReadOnly Property tblClaimNoticeHeaders() As System.Data.Linq.Table(Of tblClaimNoticeHeader)
		Get
			Return Me.GetTable(Of tblClaimNoticeHeader)
		End Get
	End Property
	
	Public ReadOnly Property V_NissanDailyClaim_Details() As System.Data.Linq.Table(Of V_NissanDailyClaim_Detail)
		Get
			Return Me.GetTable(Of V_NissanDailyClaim_Detail)
		End Get
	End Property
	
	Public ReadOnly Property MailNotifications() As System.Data.Linq.Table(Of MailNotification)
		Get
			Return Me.GetTable(Of MailNotification)
		End Get
	End Property
	
	Public ReadOnly Property V_ClaimDaily_00_Notice_Dailies() As System.Data.Linq.Table(Of V_ClaimDaily_00_Notice_Daily)
		Get
			Return Me.GetTable(Of V_ClaimDaily_00_Notice_Daily)
		End Get
	End Property
	
	Public ReadOnly Property tblDealers() As System.Data.Linq.Table(Of tblDealer)
		Get
			Return Me.GetTable(Of tblDealer)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.Running_GetByRunningCode")>  _
	Public Function Running_GetByRunningCode(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RunningCode", DbType:="VarChar(20)")> ByVal runningCode As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NewCode", DbType:="VarChar(20)")> ByRef newCode As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), runningCode, newCode)
		newCode = CType(result.GetParameterValue(1),String)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClaimTransaction_Data")>  _
Partial Public Class tblClaimTransaction_Data
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TRID As Integer
	
	Private _TRNo As String
	
	Private _ClaimStatus As String
	
	Private _TempPolicy As String
	
	Private _RefNo As String
	
	Private _Version As System.Nullable(Of Integer)
	
	Private _PolicyNo As String
	
	Private _PolicyYear As System.Nullable(Of Integer)
	
	Private _ClaimNo As String
	
	Private _TransactionDate As String
	
	Private _Unwriter As String
	
	Private _InsuredName As String
	
	Private _EffectiveDate As String
	
	Private _ExpiryDate As String
	
	Private _Beneficiary As String
	
	Private _CarBrand As String
	
	Private _CarModel As String
	
	Private _CarLicense As String
	
	Private _CarYear As String
	
	Private _ChassisNo As String
	
	Private _ShowRoomName As String
	
	Private _ShowRoomCode As String
	
	Private _ClaimNoticeDate As String
	
	Private _ClaimNoticeTime As String
	
	Private _ClaimDetails As String
	
	Private _ClaimType As System.Nullable(Of Integer)
	
	Private _ClaimResult As System.Nullable(Of Integer)
	
	Private _ClaimDamageDetails As String
	
	Private _CallCenter As String
	
	Private _AccidentDate As String
	
	Private _AccidentTime As String
	
	Private _AccidentPlace As String
	
	Private _AccidentTumbon As String
	
	Private _AccidentAmphur As String
	
	Private _AccidentProvince As String
	
	Private _AccidentZipcode As String
	
	Private _DriverName As String
	
	Private _DriverTel As String
	
	Private _NoticeName As String
	
	Private _NoticeTel As String
	
	Private _GarageType As System.Nullable(Of Integer)
	
	Private _GarageCode As String
	
	Private _GarageName As String
	
	Private _GaragePlace As String
	
	Private _GarageTumbon As String
	
	Private _GarageAmphur As String
	
	Private _GarageProvince As String
	
	Private _GarageZipcode As String
	
	Private _CarRepairDate As String
	
	Private _CarReceiveDate As String
	
	Private _ConsentFormNo As String
	
	Private _PartsDealerName As String
	
	Private _PaymentDetails As String
	
	Private _Amount1 As System.Nullable(Of Double)
	
	Private _Amount2 As System.Nullable(Of Double)
	
	Private _Amount3 As System.Nullable(Of Double)
	
	Private _Remark As String
	
	Private _FileUpload As String
	
	Private _GUID As String
	
	Private _SubmitDate As System.Nullable(Of Date)
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _IsPost As System.Nullable(Of Boolean)
	
	Private _ip As String
	
	Private _PostDate As System.Nullable(Of Date)
	
	Private _tblClaimTransaction_Results As EntitySet(Of tblClaimTransaction_Result)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTRIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRIDChanged()
    End Sub
    Partial Private Sub OnTRNoChanging(value As String)
    End Sub
    Partial Private Sub OnTRNoChanged()
    End Sub
    Partial Private Sub OnClaimStatusChanging(value As String)
    End Sub
    Partial Private Sub OnClaimStatusChanged()
    End Sub
    Partial Private Sub OnTempPolicyChanging(value As String)
    End Sub
    Partial Private Sub OnTempPolicyChanged()
    End Sub
    Partial Private Sub OnRefNoChanging(value As String)
    End Sub
    Partial Private Sub OnRefNoChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyNoChanged()
    End Sub
    Partial Private Sub OnPolicyYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPolicyYearChanged()
    End Sub
    Partial Private Sub OnClaimNoChanging(value As String)
    End Sub
    Partial Private Sub OnClaimNoChanged()
    End Sub
    Partial Private Sub OnTransactionDateChanging(value As String)
    End Sub
    Partial Private Sub OnTransactionDateChanged()
    End Sub
    Partial Private Sub OnUnwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUnwriterChanged()
    End Sub
    Partial Private Sub OnInsuredNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsuredNameChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As String)
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As String)
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnBeneficiaryChanging(value As String)
    End Sub
    Partial Private Sub OnBeneficiaryChanged()
    End Sub
    Partial Private Sub OnCarBrandChanging(value As String)
    End Sub
    Partial Private Sub OnCarBrandChanged()
    End Sub
    Partial Private Sub OnCarModelChanging(value As String)
    End Sub
    Partial Private Sub OnCarModelChanged()
    End Sub
    Partial Private Sub OnCarLicenseChanging(value As String)
    End Sub
    Partial Private Sub OnCarLicenseChanged()
    End Sub
    Partial Private Sub OnCarYearChanging(value As String)
    End Sub
    Partial Private Sub OnCarYearChanged()
    End Sub
    Partial Private Sub OnChassisNoChanging(value As String)
    End Sub
    Partial Private Sub OnChassisNoChanged()
    End Sub
    Partial Private Sub OnShowRoomNameChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomNameChanged()
    End Sub
    Partial Private Sub OnShowRoomCodeChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomCodeChanged()
    End Sub
    Partial Private Sub OnClaimNoticeDateChanging(value As String)
    End Sub
    Partial Private Sub OnClaimNoticeDateChanged()
    End Sub
    Partial Private Sub OnClaimNoticeTimeChanging(value As String)
    End Sub
    Partial Private Sub OnClaimNoticeTimeChanged()
    End Sub
    Partial Private Sub OnClaimDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnClaimDetailsChanged()
    End Sub
    Partial Private Sub OnClaimTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClaimTypeChanged()
    End Sub
    Partial Private Sub OnClaimResultChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClaimResultChanged()
    End Sub
    Partial Private Sub OnClaimDamageDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnClaimDamageDetailsChanged()
    End Sub
    Partial Private Sub OnCallCenterChanging(value As String)
    End Sub
    Partial Private Sub OnCallCenterChanged()
    End Sub
    Partial Private Sub OnAccidentDateChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentDateChanged()
    End Sub
    Partial Private Sub OnAccidentTimeChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentTimeChanged()
    End Sub
    Partial Private Sub OnAccidentPlaceChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentPlaceChanged()
    End Sub
    Partial Private Sub OnAccidentTumbonChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentTumbonChanged()
    End Sub
    Partial Private Sub OnAccidentAmphurChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentAmphurChanged()
    End Sub
    Partial Private Sub OnAccidentProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentProvinceChanged()
    End Sub
    Partial Private Sub OnAccidentZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentZipcodeChanged()
    End Sub
    Partial Private Sub OnDriverNameChanging(value As String)
    End Sub
    Partial Private Sub OnDriverNameChanged()
    End Sub
    Partial Private Sub OnDriverTelChanging(value As String)
    End Sub
    Partial Private Sub OnDriverTelChanged()
    End Sub
    Partial Private Sub OnNoticeNameChanging(value As String)
    End Sub
    Partial Private Sub OnNoticeNameChanged()
    End Sub
    Partial Private Sub OnNoticeTelChanging(value As String)
    End Sub
    Partial Private Sub OnNoticeTelChanged()
    End Sub
    Partial Private Sub OnGarageTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGarageTypeChanged()
    End Sub
    Partial Private Sub OnGarageCodeChanging(value As String)
    End Sub
    Partial Private Sub OnGarageCodeChanged()
    End Sub
    Partial Private Sub OnGarageNameChanging(value As String)
    End Sub
    Partial Private Sub OnGarageNameChanged()
    End Sub
    Partial Private Sub OnGaragePlaceChanging(value As String)
    End Sub
    Partial Private Sub OnGaragePlaceChanged()
    End Sub
    Partial Private Sub OnGarageTumbonChanging(value As String)
    End Sub
    Partial Private Sub OnGarageTumbonChanged()
    End Sub
    Partial Private Sub OnGarageAmphurChanging(value As String)
    End Sub
    Partial Private Sub OnGarageAmphurChanged()
    End Sub
    Partial Private Sub OnGarageProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnGarageProvinceChanged()
    End Sub
    Partial Private Sub OnGarageZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnGarageZipcodeChanged()
    End Sub
    Partial Private Sub OnCarRepairDateChanging(value As String)
    End Sub
    Partial Private Sub OnCarRepairDateChanged()
    End Sub
    Partial Private Sub OnCarReceiveDateChanging(value As String)
    End Sub
    Partial Private Sub OnCarReceiveDateChanged()
    End Sub
    Partial Private Sub OnConsentFormNoChanging(value As String)
    End Sub
    Partial Private Sub OnConsentFormNoChanged()
    End Sub
    Partial Private Sub OnPartsDealerNameChanging(value As String)
    End Sub
    Partial Private Sub OnPartsDealerNameChanged()
    End Sub
    Partial Private Sub OnPaymentDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnPaymentDetailsChanged()
    End Sub
    Partial Private Sub OnAmount1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAmount1Changed()
    End Sub
    Partial Private Sub OnAmount2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAmount2Changed()
    End Sub
    Partial Private Sub OnAmount3Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAmount3Changed()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnFileUploadChanging(value As String)
    End Sub
    Partial Private Sub OnFileUploadChanged()
    End Sub
    Partial Private Sub OnGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnGUIDChanged()
    End Sub
    Partial Private Sub OnSubmitDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitDateChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnIsPostChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsPostChanged()
    End Sub
    Partial Private Sub OnipChanging(value As String)
    End Sub
    Partial Private Sub OnipChanged()
    End Sub
    Partial Private Sub OnPostDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPostDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblClaimTransaction_Results = New EntitySet(Of tblClaimTransaction_Result)(AddressOf Me.attach_tblClaimTransaction_Results, AddressOf Me.detach_tblClaimTransaction_Results)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TRID() As Integer
		Get
			Return Me._TRID
		End Get
		Set
			If ((Me._TRID = value)  _
						= false) Then
				Me.OnTRIDChanging(value)
				Me.SendPropertyChanging
				Me._TRID = value
				Me.SendPropertyChanged("TRID")
				Me.OnTRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNo", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property TRNo() As String
		Get
			Return Me._TRNo
		End Get
		Set
			If (String.Equals(Me._TRNo, value) = false) Then
				Me.OnTRNoChanging(value)
				Me.SendPropertyChanging
				Me._TRNo = value
				Me.SendPropertyChanged("TRNo")
				Me.OnTRNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimStatus", DbType:="VarChar(50)")>  _
	Public Property ClaimStatus() As String
		Get
			Return Me._ClaimStatus
		End Get
		Set
			If (String.Equals(Me._ClaimStatus, value) = false) Then
				Me.OnClaimStatusChanging(value)
				Me.SendPropertyChanging
				Me._ClaimStatus = value
				Me.SendPropertyChanged("ClaimStatus")
				Me.OnClaimStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TempPolicy", DbType:="VarChar(100)")>  _
	Public Property TempPolicy() As String
		Get
			Return Me._TempPolicy
		End Get
		Set
			If (String.Equals(Me._TempPolicy, value) = false) Then
				Me.OnTempPolicyChanging(value)
				Me.SendPropertyChanging
				Me._TempPolicy = value
				Me.SendPropertyChanged("TempPolicy")
				Me.OnTempPolicyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefNo", DbType:="VarChar(100)")>  _
	Public Property RefNo() As String
		Get
			Return Me._RefNo
		End Get
		Set
			If (String.Equals(Me._RefNo, value) = false) Then
				Me.OnRefNoChanging(value)
				Me.SendPropertyChanging
				Me._RefNo = value
				Me.SendPropertyChanged("RefNo")
				Me.OnRefNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version", DbType:="Int")>  _
	Public Property Version() As System.Nullable(Of Integer)
		Get
			Return Me._Version
		End Get
		Set
			If (Me._Version.Equals(value) = false) Then
				Me.OnVersionChanging(value)
				Me.SendPropertyChanging
				Me._Version = value
				Me.SendPropertyChanged("Version")
				Me.OnVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="VarChar(100)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me.OnPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._PolicyNo = value
				Me.SendPropertyChanged("PolicyNo")
				Me.OnPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyYear", DbType:="Int")>  _
	Public Property PolicyYear() As System.Nullable(Of Integer)
		Get
			Return Me._PolicyYear
		End Get
		Set
			If (Me._PolicyYear.Equals(value) = false) Then
				Me.OnPolicyYearChanging(value)
				Me.SendPropertyChanging
				Me._PolicyYear = value
				Me.SendPropertyChanged("PolicyYear")
				Me.OnPolicyYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNo", DbType:="VarChar(100)")>  _
	Public Property ClaimNo() As String
		Get
			Return Me._ClaimNo
		End Get
		Set
			If (String.Equals(Me._ClaimNo, value) = false) Then
				Me.OnClaimNoChanging(value)
				Me.SendPropertyChanging
				Me._ClaimNo = value
				Me.SendPropertyChanged("ClaimNo")
				Me.OnClaimNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionDate", DbType:="VarChar(10)")>  _
	Public Property TransactionDate() As String
		Get
			Return Me._TransactionDate
		End Get
		Set
			If (String.Equals(Me._TransactionDate, value) = false) Then
				Me.OnTransactionDateChanging(value)
				Me.SendPropertyChanging
				Me._TransactionDate = value
				Me.SendPropertyChanged("TransactionDate")
				Me.OnTransactionDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unwriter", DbType:="VarChar(10)")>  _
	Public Property Unwriter() As String
		Get
			Return Me._Unwriter
		End Get
		Set
			If (String.Equals(Me._Unwriter, value) = false) Then
				Me.OnUnwriterChanging(value)
				Me.SendPropertyChanging
				Me._Unwriter = value
				Me.SendPropertyChanged("Unwriter")
				Me.OnUnwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuredName", DbType:="VarChar(255)")>  _
	Public Property InsuredName() As String
		Get
			Return Me._InsuredName
		End Get
		Set
			If (String.Equals(Me._InsuredName, value) = false) Then
				Me.OnInsuredNameChanging(value)
				Me.SendPropertyChanging
				Me._InsuredName = value
				Me.SendPropertyChanged("InsuredName")
				Me.OnInsuredNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="VarChar(10)")>  _
	Public Property EffectiveDate() As String
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (String.Equals(Me._EffectiveDate, value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="VarChar(10)")>  _
	Public Property ExpiryDate() As String
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (String.Equals(Me._ExpiryDate, value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficiary", DbType:="VarChar(255)")>  _
	Public Property Beneficiary() As String
		Get
			Return Me._Beneficiary
		End Get
		Set
			If (String.Equals(Me._Beneficiary, value) = false) Then
				Me.OnBeneficiaryChanging(value)
				Me.SendPropertyChanging
				Me._Beneficiary = value
				Me.SendPropertyChanged("Beneficiary")
				Me.OnBeneficiaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrand", DbType:="VarChar(50)")>  _
	Public Property CarBrand() As String
		Get
			Return Me._CarBrand
		End Get
		Set
			If (String.Equals(Me._CarBrand, value) = false) Then
				Me.OnCarBrandChanging(value)
				Me.SendPropertyChanging
				Me._CarBrand = value
				Me.SendPropertyChanged("CarBrand")
				Me.OnCarBrandChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModel", DbType:="VarChar(100)")>  _
	Public Property CarModel() As String
		Get
			Return Me._CarModel
		End Get
		Set
			If (String.Equals(Me._CarModel, value) = false) Then
				Me.OnCarModelChanging(value)
				Me.SendPropertyChanging
				Me._CarModel = value
				Me.SendPropertyChanged("CarModel")
				Me.OnCarModelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarLicense", DbType:="VarChar(50)")>  _
	Public Property CarLicense() As String
		Get
			Return Me._CarLicense
		End Get
		Set
			If (String.Equals(Me._CarLicense, value) = false) Then
				Me.OnCarLicenseChanging(value)
				Me.SendPropertyChanging
				Me._CarLicense = value
				Me.SendPropertyChanged("CarLicense")
				Me.OnCarLicenseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarYear", DbType:="VarChar(50)")>  _
	Public Property CarYear() As String
		Get
			Return Me._CarYear
		End Get
		Set
			If (String.Equals(Me._CarYear, value) = false) Then
				Me.OnCarYearChanging(value)
				Me.SendPropertyChanging
				Me._CarYear = value
				Me.SendPropertyChanged("CarYear")
				Me.OnCarYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChassisNo", DbType:="VarChar(50)")>  _
	Public Property ChassisNo() As String
		Get
			Return Me._ChassisNo
		End Get
		Set
			If (String.Equals(Me._ChassisNo, value) = false) Then
				Me.OnChassisNoChanging(value)
				Me.SendPropertyChanging
				Me._ChassisNo = value
				Me.SendPropertyChanged("ChassisNo")
				Me.OnChassisNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomName", DbType:="VarChar(100)")>  _
	Public Property ShowRoomName() As String
		Get
			Return Me._ShowRoomName
		End Get
		Set
			If (String.Equals(Me._ShowRoomName, value) = false) Then
				Me.OnShowRoomNameChanging(value)
				Me.SendPropertyChanging
				Me._ShowRoomName = value
				Me.SendPropertyChanged("ShowRoomName")
				Me.OnShowRoomNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(10)")>  _
	Public Property ShowRoomCode() As String
		Get
			Return Me._ShowRoomCode
		End Get
		Set
			If (String.Equals(Me._ShowRoomCode, value) = false) Then
				Me.OnShowRoomCodeChanging(value)
				Me.SendPropertyChanging
				Me._ShowRoomCode = value
				Me.SendPropertyChanged("ShowRoomCode")
				Me.OnShowRoomCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeDate", DbType:="VarChar(10)")>  _
	Public Property ClaimNoticeDate() As String
		Get
			Return Me._ClaimNoticeDate
		End Get
		Set
			If (String.Equals(Me._ClaimNoticeDate, value) = false) Then
				Me.OnClaimNoticeDateChanging(value)
				Me.SendPropertyChanging
				Me._ClaimNoticeDate = value
				Me.SendPropertyChanged("ClaimNoticeDate")
				Me.OnClaimNoticeDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeTime", DbType:="VarChar(10)")>  _
	Public Property ClaimNoticeTime() As String
		Get
			Return Me._ClaimNoticeTime
		End Get
		Set
			If (String.Equals(Me._ClaimNoticeTime, value) = false) Then
				Me.OnClaimNoticeTimeChanging(value)
				Me.SendPropertyChanging
				Me._ClaimNoticeTime = value
				Me.SendPropertyChanged("ClaimNoticeTime")
				Me.OnClaimNoticeTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimDetails", DbType:="VarChar(255)")>  _
	Public Property ClaimDetails() As String
		Get
			Return Me._ClaimDetails
		End Get
		Set
			If (String.Equals(Me._ClaimDetails, value) = false) Then
				Me.OnClaimDetailsChanging(value)
				Me.SendPropertyChanging
				Me._ClaimDetails = value
				Me.SendPropertyChanged("ClaimDetails")
				Me.OnClaimDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimType", DbType:="Int")>  _
	Public Property ClaimType() As System.Nullable(Of Integer)
		Get
			Return Me._ClaimType
		End Get
		Set
			If (Me._ClaimType.Equals(value) = false) Then
				Me.OnClaimTypeChanging(value)
				Me.SendPropertyChanging
				Me._ClaimType = value
				Me.SendPropertyChanged("ClaimType")
				Me.OnClaimTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimResult", DbType:="Int")>  _
	Public Property ClaimResult() As System.Nullable(Of Integer)
		Get
			Return Me._ClaimResult
		End Get
		Set
			If (Me._ClaimResult.Equals(value) = false) Then
				Me.OnClaimResultChanging(value)
				Me.SendPropertyChanging
				Me._ClaimResult = value
				Me.SendPropertyChanged("ClaimResult")
				Me.OnClaimResultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimDamageDetails", DbType:="VarChar(MAX)")>  _
	Public Property ClaimDamageDetails() As String
		Get
			Return Me._ClaimDamageDetails
		End Get
		Set
			If (String.Equals(Me._ClaimDamageDetails, value) = false) Then
				Me.OnClaimDamageDetailsChanging(value)
				Me.SendPropertyChanging
				Me._ClaimDamageDetails = value
				Me.SendPropertyChanged("ClaimDamageDetails")
				Me.OnClaimDamageDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CallCenter", DbType:="VarChar(50)")>  _
	Public Property CallCenter() As String
		Get
			Return Me._CallCenter
		End Get
		Set
			If (String.Equals(Me._CallCenter, value) = false) Then
				Me.OnCallCenterChanging(value)
				Me.SendPropertyChanging
				Me._CallCenter = value
				Me.SendPropertyChanged("CallCenter")
				Me.OnCallCenterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDate", DbType:="VarChar(10)")>  _
	Public Property AccidentDate() As String
		Get
			Return Me._AccidentDate
		End Get
		Set
			If (String.Equals(Me._AccidentDate, value) = false) Then
				Me.OnAccidentDateChanging(value)
				Me.SendPropertyChanging
				Me._AccidentDate = value
				Me.SendPropertyChanged("AccidentDate")
				Me.OnAccidentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentTime", DbType:="VarChar(10)")>  _
	Public Property AccidentTime() As String
		Get
			Return Me._AccidentTime
		End Get
		Set
			If (String.Equals(Me._AccidentTime, value) = false) Then
				Me.OnAccidentTimeChanging(value)
				Me.SendPropertyChanging
				Me._AccidentTime = value
				Me.SendPropertyChanged("AccidentTime")
				Me.OnAccidentTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace", DbType:="VarChar(255)")>  _
	Public Property AccidentPlace() As String
		Get
			Return Me._AccidentPlace
		End Get
		Set
			If (String.Equals(Me._AccidentPlace, value) = false) Then
				Me.OnAccidentPlaceChanging(value)
				Me.SendPropertyChanging
				Me._AccidentPlace = value
				Me.SendPropertyChanged("AccidentPlace")
				Me.OnAccidentPlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentTumbon", DbType:="VarChar(255)")>  _
	Public Property AccidentTumbon() As String
		Get
			Return Me._AccidentTumbon
		End Get
		Set
			If (String.Equals(Me._AccidentTumbon, value) = false) Then
				Me.OnAccidentTumbonChanging(value)
				Me.SendPropertyChanging
				Me._AccidentTumbon = value
				Me.SendPropertyChanged("AccidentTumbon")
				Me.OnAccidentTumbonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentAmphur", DbType:="VarChar(255)")>  _
	Public Property AccidentAmphur() As String
		Get
			Return Me._AccidentAmphur
		End Get
		Set
			If (String.Equals(Me._AccidentAmphur, value) = false) Then
				Me.OnAccidentAmphurChanging(value)
				Me.SendPropertyChanging
				Me._AccidentAmphur = value
				Me.SendPropertyChanged("AccidentAmphur")
				Me.OnAccidentAmphurChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentProvince", DbType:="VarChar(255)")>  _
	Public Property AccidentProvince() As String
		Get
			Return Me._AccidentProvince
		End Get
		Set
			If (String.Equals(Me._AccidentProvince, value) = false) Then
				Me.OnAccidentProvinceChanging(value)
				Me.SendPropertyChanging
				Me._AccidentProvince = value
				Me.SendPropertyChanged("AccidentProvince")
				Me.OnAccidentProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentZipcode", DbType:="VarChar(5)")>  _
	Public Property AccidentZipcode() As String
		Get
			Return Me._AccidentZipcode
		End Get
		Set
			If (String.Equals(Me._AccidentZipcode, value) = false) Then
				Me.OnAccidentZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._AccidentZipcode = value
				Me.SendPropertyChanged("AccidentZipcode")
				Me.OnAccidentZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverName", DbType:="VarChar(255)")>  _
	Public Property DriverName() As String
		Get
			Return Me._DriverName
		End Get
		Set
			If (String.Equals(Me._DriverName, value) = false) Then
				Me.OnDriverNameChanging(value)
				Me.SendPropertyChanging
				Me._DriverName = value
				Me.SendPropertyChanged("DriverName")
				Me.OnDriverNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverTel", DbType:="VarChar(100)")>  _
	Public Property DriverTel() As String
		Get
			Return Me._DriverTel
		End Get
		Set
			If (String.Equals(Me._DriverTel, value) = false) Then
				Me.OnDriverTelChanging(value)
				Me.SendPropertyChanging
				Me._DriverTel = value
				Me.SendPropertyChanged("DriverTel")
				Me.OnDriverTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeName", DbType:="VarChar(255)")>  _
	Public Property NoticeName() As String
		Get
			Return Me._NoticeName
		End Get
		Set
			If (String.Equals(Me._NoticeName, value) = false) Then
				Me.OnNoticeNameChanging(value)
				Me.SendPropertyChanging
				Me._NoticeName = value
				Me.SendPropertyChanged("NoticeName")
				Me.OnNoticeNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeTel", DbType:="VarChar(100)")>  _
	Public Property NoticeTel() As String
		Get
			Return Me._NoticeTel
		End Get
		Set
			If (String.Equals(Me._NoticeTel, value) = false) Then
				Me.OnNoticeTelChanging(value)
				Me.SendPropertyChanging
				Me._NoticeTel = value
				Me.SendPropertyChanged("NoticeTel")
				Me.OnNoticeTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType", DbType:="Int")>  _
	Public Property GarageType() As System.Nullable(Of Integer)
		Get
			Return Me._GarageType
		End Get
		Set
			If (Me._GarageType.Equals(value) = false) Then
				Me.OnGarageTypeChanging(value)
				Me.SendPropertyChanging
				Me._GarageType = value
				Me.SendPropertyChanged("GarageType")
				Me.OnGarageTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageCode", DbType:="VarChar(10)")>  _
	Public Property GarageCode() As String
		Get
			Return Me._GarageCode
		End Get
		Set
			If (String.Equals(Me._GarageCode, value) = false) Then
				Me.OnGarageCodeChanging(value)
				Me.SendPropertyChanging
				Me._GarageCode = value
				Me.SendPropertyChanged("GarageCode")
				Me.OnGarageCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageName", DbType:="VarChar(100)")>  _
	Public Property GarageName() As String
		Get
			Return Me._GarageName
		End Get
		Set
			If (String.Equals(Me._GarageName, value) = false) Then
				Me.OnGarageNameChanging(value)
				Me.SendPropertyChanging
				Me._GarageName = value
				Me.SendPropertyChanged("GarageName")
				Me.OnGarageNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GaragePlace", DbType:="VarChar(255)")>  _
	Public Property GaragePlace() As String
		Get
			Return Me._GaragePlace
		End Get
		Set
			If (String.Equals(Me._GaragePlace, value) = false) Then
				Me.OnGaragePlaceChanging(value)
				Me.SendPropertyChanging
				Me._GaragePlace = value
				Me.SendPropertyChanged("GaragePlace")
				Me.OnGaragePlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageTumbon", DbType:="VarChar(255)")>  _
	Public Property GarageTumbon() As String
		Get
			Return Me._GarageTumbon
		End Get
		Set
			If (String.Equals(Me._GarageTumbon, value) = false) Then
				Me.OnGarageTumbonChanging(value)
				Me.SendPropertyChanging
				Me._GarageTumbon = value
				Me.SendPropertyChanged("GarageTumbon")
				Me.OnGarageTumbonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageAmphur", DbType:="VarChar(255)")>  _
	Public Property GarageAmphur() As String
		Get
			Return Me._GarageAmphur
		End Get
		Set
			If (String.Equals(Me._GarageAmphur, value) = false) Then
				Me.OnGarageAmphurChanging(value)
				Me.SendPropertyChanging
				Me._GarageAmphur = value
				Me.SendPropertyChanged("GarageAmphur")
				Me.OnGarageAmphurChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageProvince", DbType:="VarChar(255)")>  _
	Public Property GarageProvince() As String
		Get
			Return Me._GarageProvince
		End Get
		Set
			If (String.Equals(Me._GarageProvince, value) = false) Then
				Me.OnGarageProvinceChanging(value)
				Me.SendPropertyChanging
				Me._GarageProvince = value
				Me.SendPropertyChanged("GarageProvince")
				Me.OnGarageProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageZipcode", DbType:="VarChar(5)")>  _
	Public Property GarageZipcode() As String
		Get
			Return Me._GarageZipcode
		End Get
		Set
			If (String.Equals(Me._GarageZipcode, value) = false) Then
				Me.OnGarageZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._GarageZipcode = value
				Me.SendPropertyChanged("GarageZipcode")
				Me.OnGarageZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarRepairDate", DbType:="VarChar(10)")>  _
	Public Property CarRepairDate() As String
		Get
			Return Me._CarRepairDate
		End Get
		Set
			If (String.Equals(Me._CarRepairDate, value) = false) Then
				Me.OnCarRepairDateChanging(value)
				Me.SendPropertyChanging
				Me._CarRepairDate = value
				Me.SendPropertyChanged("CarRepairDate")
				Me.OnCarRepairDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarReceiveDate", DbType:="VarChar(10)")>  _
	Public Property CarReceiveDate() As String
		Get
			Return Me._CarReceiveDate
		End Get
		Set
			If (String.Equals(Me._CarReceiveDate, value) = false) Then
				Me.OnCarReceiveDateChanging(value)
				Me.SendPropertyChanging
				Me._CarReceiveDate = value
				Me.SendPropertyChanged("CarReceiveDate")
				Me.OnCarReceiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConsentFormNo", DbType:="VarChar(50)")>  _
	Public Property ConsentFormNo() As String
		Get
			Return Me._ConsentFormNo
		End Get
		Set
			If (String.Equals(Me._ConsentFormNo, value) = false) Then
				Me.OnConsentFormNoChanging(value)
				Me.SendPropertyChanging
				Me._ConsentFormNo = value
				Me.SendPropertyChanged("ConsentFormNo")
				Me.OnConsentFormNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartsDealerName", DbType:="VarChar(255)")>  _
	Public Property PartsDealerName() As String
		Get
			Return Me._PartsDealerName
		End Get
		Set
			If (String.Equals(Me._PartsDealerName, value) = false) Then
				Me.OnPartsDealerNameChanging(value)
				Me.SendPropertyChanging
				Me._PartsDealerName = value
				Me.SendPropertyChanged("PartsDealerName")
				Me.OnPartsDealerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentDetails", DbType:="VarChar(MAX)")>  _
	Public Property PaymentDetails() As String
		Get
			Return Me._PaymentDetails
		End Get
		Set
			If (String.Equals(Me._PaymentDetails, value) = false) Then
				Me.OnPaymentDetailsChanging(value)
				Me.SendPropertyChanging
				Me._PaymentDetails = value
				Me.SendPropertyChanged("PaymentDetails")
				Me.OnPaymentDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount1", DbType:="Float")>  _
	Public Property Amount1() As System.Nullable(Of Double)
		Get
			Return Me._Amount1
		End Get
		Set
			If (Me._Amount1.Equals(value) = false) Then
				Me.OnAmount1Changing(value)
				Me.SendPropertyChanging
				Me._Amount1 = value
				Me.SendPropertyChanged("Amount1")
				Me.OnAmount1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount2", DbType:="Float")>  _
	Public Property Amount2() As System.Nullable(Of Double)
		Get
			Return Me._Amount2
		End Get
		Set
			If (Me._Amount2.Equals(value) = false) Then
				Me.OnAmount2Changing(value)
				Me.SendPropertyChanging
				Me._Amount2 = value
				Me.SendPropertyChanged("Amount2")
				Me.OnAmount2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount3", DbType:="Float")>  _
	Public Property Amount3() As System.Nullable(Of Double)
		Get
			Return Me._Amount3
		End Get
		Set
			If (Me._Amount3.Equals(value) = false) Then
				Me.OnAmount3Changing(value)
				Me.SendPropertyChanging
				Me._Amount3 = value
				Me.SendPropertyChanged("Amount3")
				Me.OnAmount3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileUpload", DbType:="VarChar(255)")>  _
	Public Property FileUpload() As String
		Get
			Return Me._FileUpload
		End Get
		Set
			If (String.Equals(Me._FileUpload, value) = false) Then
				Me.OnFileUploadChanging(value)
				Me.SendPropertyChanging
				Me._FileUpload = value
				Me.SendPropertyChanged("FileUpload")
				Me.OnFileUploadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GUID", DbType:="VarChar(255)")>  _
	Public Property GUID() As String
		Get
			Return Me._GUID
		End Get
		Set
			If (String.Equals(Me._GUID, value) = false) Then
				Me.OnGUIDChanging(value)
				Me.SendPropertyChanging
				Me._GUID = value
				Me.SendPropertyChanged("GUID")
				Me.OnGUIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitDate", DbType:="DateTime")>  _
	Public Property SubmitDate() As System.Nullable(Of Date)
		Get
			Return Me._SubmitDate
		End Get
		Set
			If (Me._SubmitDate.Equals(value) = false) Then
				Me.OnSubmitDateChanging(value)
				Me.SendPropertyChanging
				Me._SubmitDate = value
				Me.SendPropertyChanged("SubmitDate")
				Me.OnSubmitDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsPost", DbType:="Bit")>  _
	Public Property IsPost() As System.Nullable(Of Boolean)
		Get
			Return Me._IsPost
		End Get
		Set
			If (Me._IsPost.Equals(value) = false) Then
				Me.OnIsPostChanging(value)
				Me.SendPropertyChanging
				Me._IsPost = value
				Me.SendPropertyChanged("IsPost")
				Me.OnIsPostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ip", DbType:="VarChar(50)")>  _
	Public Property ip() As String
		Get
			Return Me._ip
		End Get
		Set
			If (String.Equals(Me._ip, value) = false) Then
				Me.OnipChanging(value)
				Me.SendPropertyChanging
				Me._ip = value
				Me.SendPropertyChanged("ip")
				Me.OnipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostDate", DbType:="DateTime")>  _
	Public Property PostDate() As System.Nullable(Of Date)
		Get
			Return Me._PostDate
		End Get
		Set
			If (Me._PostDate.Equals(value) = false) Then
				Me.OnPostDateChanging(value)
				Me.SendPropertyChanging
				Me._PostDate = value
				Me.SendPropertyChanged("PostDate")
				Me.OnPostDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblClaimTransaction_Data_tblClaimTransaction_Result", Storage:="_tblClaimTransaction_Results", ThisKey:="TRID", OtherKey:="TRID")>  _
	Public Property tblClaimTransaction_Results() As EntitySet(Of tblClaimTransaction_Result)
		Get
			Return Me._tblClaimTransaction_Results
		End Get
		Set
			Me._tblClaimTransaction_Results.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblClaimTransaction_Results(ByVal entity As tblClaimTransaction_Result)
		Me.SendPropertyChanging
		entity.tblClaimTransaction_Data = Me
	End Sub
	
	Private Sub detach_tblClaimTransaction_Results(ByVal entity As tblClaimTransaction_Result)
		Me.SendPropertyChanging
		entity.tblClaimTransaction_Data = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClaimTransaction_Result")>  _
Partial Public Class tblClaimTransaction_Result
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _TRID As System.Nullable(Of Integer)
	
	Private _GUID As String
	
	Private _ResultNo As String
	
	Private _ResultCode As String
	
	Private _ResultMessage As String
	
	Private _SubmitDate As System.Nullable(Of Date)
	
	Private _tblClaimTransaction_Data As EntityRef(Of tblClaimTransaction_Data)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTRIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRIDChanged()
    End Sub
    Partial Private Sub OnGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnGUIDChanged()
    End Sub
    Partial Private Sub OnResultNoChanging(value As String)
    End Sub
    Partial Private Sub OnResultNoChanged()
    End Sub
    Partial Private Sub OnResultCodeChanging(value As String)
    End Sub
    Partial Private Sub OnResultCodeChanged()
    End Sub
    Partial Private Sub OnResultMessageChanging(value As String)
    End Sub
    Partial Private Sub OnResultMessageChanged()
    End Sub
    Partial Private Sub OnSubmitDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblClaimTransaction_Data = CType(Nothing, EntityRef(Of tblClaimTransaction_Data))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRID", DbType:="Int")>  _
	Public Property TRID() As System.Nullable(Of Integer)
		Get
			Return Me._TRID
		End Get
		Set
			If (Me._TRID.Equals(value) = false) Then
				If Me._tblClaimTransaction_Data.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnTRIDChanging(value)
				Me.SendPropertyChanging
				Me._TRID = value
				Me.SendPropertyChanged("TRID")
				Me.OnTRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GUID", DbType:="VarChar(255)")>  _
	Public Property GUID() As String
		Get
			Return Me._GUID
		End Get
		Set
			If (String.Equals(Me._GUID, value) = false) Then
				Me.OnGUIDChanging(value)
				Me.SendPropertyChanging
				Me._GUID = value
				Me.SendPropertyChanged("GUID")
				Me.OnGUIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResultNo", DbType:="VarChar(255)")>  _
	Public Property ResultNo() As String
		Get
			Return Me._ResultNo
		End Get
		Set
			If (String.Equals(Me._ResultNo, value) = false) Then
				Me.OnResultNoChanging(value)
				Me.SendPropertyChanging
				Me._ResultNo = value
				Me.SendPropertyChanged("ResultNo")
				Me.OnResultNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResultCode", DbType:="VarChar(255)")>  _
	Public Property ResultCode() As String
		Get
			Return Me._ResultCode
		End Get
		Set
			If (String.Equals(Me._ResultCode, value) = false) Then
				Me.OnResultCodeChanging(value)
				Me.SendPropertyChanging
				Me._ResultCode = value
				Me.SendPropertyChanged("ResultCode")
				Me.OnResultCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResultMessage", DbType:="VarChar(255)")>  _
	Public Property ResultMessage() As String
		Get
			Return Me._ResultMessage
		End Get
		Set
			If (String.Equals(Me._ResultMessage, value) = false) Then
				Me.OnResultMessageChanging(value)
				Me.SendPropertyChanging
				Me._ResultMessage = value
				Me.SendPropertyChanged("ResultMessage")
				Me.OnResultMessageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitDate", DbType:="DateTime")>  _
	Public Property SubmitDate() As System.Nullable(Of Date)
		Get
			Return Me._SubmitDate
		End Get
		Set
			If (Me._SubmitDate.Equals(value) = false) Then
				Me.OnSubmitDateChanging(value)
				Me.SendPropertyChanging
				Me._SubmitDate = value
				Me.SendPropertyChanged("SubmitDate")
				Me.OnSubmitDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblClaimTransaction_Data_tblClaimTransaction_Result", Storage:="_tblClaimTransaction_Data", ThisKey:="TRID", OtherKey:="TRID", IsForeignKey:=true)>  _
	Public Property tblClaimTransaction_Data() As tblClaimTransaction_Data
		Get
			Return Me._tblClaimTransaction_Data.Entity
		End Get
		Set
			Dim previousValue As tblClaimTransaction_Data = Me._tblClaimTransaction_Data.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblClaimTransaction_Data.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblClaimTransaction_Data.Entity = Nothing
					previousValue.tblClaimTransaction_Results.Remove(Me)
				End If
				Me._tblClaimTransaction_Data.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblClaimTransaction_Results.Add(Me)
					Me._TRID = value.TRID
				Else
					Me._TRID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("tblClaimTransaction_Data")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Running")>  _
Partial Public Class Running
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RID As Integer
	
	Private _UWCode As String
	
	Private _UWName As String
	
	Private _RunningCode As String
	
	Private _RunningPrefix As String
	
	Private _RunningPrefixYear As System.Nullable(Of Integer)
	
	Private _RunningYear As System.Nullable(Of Integer)
	
	Private _RunningNo As System.Nullable(Of Integer)
	
	Private _RunningDigit As System.Nullable(Of Integer)
	
	Private _GUID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRIDChanged()
    End Sub
    Partial Private Sub OnUWCodeChanging(value As String)
    End Sub
    Partial Private Sub OnUWCodeChanged()
    End Sub
    Partial Private Sub OnUWNameChanging(value As String)
    End Sub
    Partial Private Sub OnUWNameChanged()
    End Sub
    Partial Private Sub OnRunningCodeChanging(value As String)
    End Sub
    Partial Private Sub OnRunningCodeChanged()
    End Sub
    Partial Private Sub OnRunningPrefixChanging(value As String)
    End Sub
    Partial Private Sub OnRunningPrefixChanged()
    End Sub
    Partial Private Sub OnRunningPrefixYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRunningPrefixYearChanged()
    End Sub
    Partial Private Sub OnRunningYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRunningYearChanged()
    End Sub
    Partial Private Sub OnRunningNoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRunningNoChanged()
    End Sub
    Partial Private Sub OnRunningDigitChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRunningDigitChanged()
    End Sub
    Partial Private Sub OnGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnGUIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me.OnRIDChanging(value)
				Me.SendPropertyChanging
				Me._RID = value
				Me.SendPropertyChanged("RID")
				Me.OnRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWCode", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property UWCode() As String
		Get
			Return Me._UWCode
		End Get
		Set
			If (String.Equals(Me._UWCode, value) = false) Then
				Me.OnUWCodeChanging(value)
				Me.SendPropertyChanging
				Me._UWCode = value
				Me.SendPropertyChanged("UWCode")
				Me.OnUWCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWName", DbType:="VarChar(100)")>  _
	Public Property UWName() As String
		Get
			Return Me._UWName
		End Get
		Set
			If (String.Equals(Me._UWName, value) = false) Then
				Me.OnUWNameChanging(value)
				Me.SendPropertyChanging
				Me._UWName = value
				Me.SendPropertyChanged("UWName")
				Me.OnUWNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunningCode", DbType:="VarChar(20)")>  _
	Public Property RunningCode() As String
		Get
			Return Me._RunningCode
		End Get
		Set
			If (String.Equals(Me._RunningCode, value) = false) Then
				Me.OnRunningCodeChanging(value)
				Me.SendPropertyChanging
				Me._RunningCode = value
				Me.SendPropertyChanged("RunningCode")
				Me.OnRunningCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunningPrefix", DbType:="VarChar(5)")>  _
	Public Property RunningPrefix() As String
		Get
			Return Me._RunningPrefix
		End Get
		Set
			If (String.Equals(Me._RunningPrefix, value) = false) Then
				Me.OnRunningPrefixChanging(value)
				Me.SendPropertyChanging
				Me._RunningPrefix = value
				Me.SendPropertyChanged("RunningPrefix")
				Me.OnRunningPrefixChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunningPrefixYear", DbType:="Int")>  _
	Public Property RunningPrefixYear() As System.Nullable(Of Integer)
		Get
			Return Me._RunningPrefixYear
		End Get
		Set
			If (Me._RunningPrefixYear.Equals(value) = false) Then
				Me.OnRunningPrefixYearChanging(value)
				Me.SendPropertyChanging
				Me._RunningPrefixYear = value
				Me.SendPropertyChanged("RunningPrefixYear")
				Me.OnRunningPrefixYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunningYear", DbType:="Int")>  _
	Public Property RunningYear() As System.Nullable(Of Integer)
		Get
			Return Me._RunningYear
		End Get
		Set
			If (Me._RunningYear.Equals(value) = false) Then
				Me.OnRunningYearChanging(value)
				Me.SendPropertyChanging
				Me._RunningYear = value
				Me.SendPropertyChanged("RunningYear")
				Me.OnRunningYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunningNo", DbType:="Int")>  _
	Public Property RunningNo() As System.Nullable(Of Integer)
		Get
			Return Me._RunningNo
		End Get
		Set
			If (Me._RunningNo.Equals(value) = false) Then
				Me.OnRunningNoChanging(value)
				Me.SendPropertyChanging
				Me._RunningNo = value
				Me.SendPropertyChanged("RunningNo")
				Me.OnRunningNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunningDigit", DbType:="Int")>  _
	Public Property RunningDigit() As System.Nullable(Of Integer)
		Get
			Return Me._RunningDigit
		End Get
		Set
			If (Me._RunningDigit.Equals(value) = false) Then
				Me.OnRunningDigitChanging(value)
				Me.SendPropertyChanging
				Me._RunningDigit = value
				Me.SendPropertyChanged("RunningDigit")
				Me.OnRunningDigitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GUID", DbType:="VarChar(255)")>  _
	Public Property GUID() As String
		Get
			Return Me._GUID
		End Get
		Set
			If (String.Equals(Me._GUID, value) = false) Then
				Me.OnGUIDChanging(value)
				Me.SendPropertyChanging
				Me._GUID = value
				Me.SendPropertyChanged("GUID")
				Me.OnGUIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblGarage")>  _
Partial Public Class tblGarage
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _GarageCode As String
	
	Private _GarageName As String
	
	Private _Address As String
	
	Private _Province As String
	
	Private _Zipcode As String
	
	Private _TelCode As String
	
	Private _TelNo As String
	
	Private _FaxNo As String
	
	Private _Region As String
	
	Private _SalesArea As String
	
	Private _GarageType As System.Nullable(Of Integer)
	
	Private _Longitude As System.Nullable(Of Double)
	
	Private _Latitude As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnGarageCodeChanging(value As String)
    End Sub
    Partial Private Sub OnGarageCodeChanged()
    End Sub
    Partial Private Sub OnGarageNameChanging(value As String)
    End Sub
    Partial Private Sub OnGarageNameChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnZipcodeChanged()
    End Sub
    Partial Private Sub OnTelCodeChanging(value As String)
    End Sub
    Partial Private Sub OnTelCodeChanged()
    End Sub
    Partial Private Sub OnTelNoChanging(value As String)
    End Sub
    Partial Private Sub OnTelNoChanged()
    End Sub
    Partial Private Sub OnFaxNoChanging(value As String)
    End Sub
    Partial Private Sub OnFaxNoChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnSalesAreaChanging(value As String)
    End Sub
    Partial Private Sub OnSalesAreaChanged()
    End Sub
    Partial Private Sub OnGarageTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGarageTypeChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageCode", DbType:="VarChar(50)")>  _
	Public Property GarageCode() As String
		Get
			Return Me._GarageCode
		End Get
		Set
			If (String.Equals(Me._GarageCode, value) = false) Then
				Me.OnGarageCodeChanging(value)
				Me.SendPropertyChanging
				Me._GarageCode = value
				Me.SendPropertyChanged("GarageCode")
				Me.OnGarageCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageName", DbType:="VarChar(100)")>  _
	Public Property GarageName() As String
		Get
			Return Me._GarageName
		End Get
		Set
			If (String.Equals(Me._GarageName, value) = false) Then
				Me.OnGarageNameChanging(value)
				Me.SendPropertyChanging
				Me._GarageName = value
				Me.SendPropertyChanged("GarageName")
				Me.OnGarageNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(255)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="VarChar(50)")>  _
	Public Property Province() As String
		Get
			Return Me._Province
		End Get
		Set
			If (String.Equals(Me._Province, value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zipcode", DbType:="VarChar(5)")>  _
	Public Property Zipcode() As String
		Get
			Return Me._Zipcode
		End Get
		Set
			If (String.Equals(Me._Zipcode, value) = false) Then
				Me.OnZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._Zipcode = value
				Me.SendPropertyChanged("Zipcode")
				Me.OnZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelCode", DbType:="VarChar(10)")>  _
	Public Property TelCode() As String
		Get
			Return Me._TelCode
		End Get
		Set
			If (String.Equals(Me._TelCode, value) = false) Then
				Me.OnTelCodeChanging(value)
				Me.SendPropertyChanging
				Me._TelCode = value
				Me.SendPropertyChanged("TelCode")
				Me.OnTelCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelNo", DbType:="VarChar(100)")>  _
	Public Property TelNo() As String
		Get
			Return Me._TelNo
		End Get
		Set
			If (String.Equals(Me._TelNo, value) = false) Then
				Me.OnTelNoChanging(value)
				Me.SendPropertyChanging
				Me._TelNo = value
				Me.SendPropertyChanged("TelNo")
				Me.OnTelNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxNo", DbType:="VarChar(100)")>  _
	Public Property FaxNo() As String
		Get
			Return Me._FaxNo
		End Get
		Set
			If (String.Equals(Me._FaxNo, value) = false) Then
				Me.OnFaxNoChanging(value)
				Me.SendPropertyChanging
				Me._FaxNo = value
				Me.SendPropertyChanged("FaxNo")
				Me.OnFaxNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="VarChar(50)")>  _
	Public Property Region() As String
		Get
			Return Me._Region
		End Get
		Set
			If (String.Equals(Me._Region, value) = false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalesArea", DbType:="VarChar(50)")>  _
	Public Property SalesArea() As String
		Get
			Return Me._SalesArea
		End Get
		Set
			If (String.Equals(Me._SalesArea, value) = false) Then
				Me.OnSalesAreaChanging(value)
				Me.SendPropertyChanging
				Me._SalesArea = value
				Me.SendPropertyChanged("SalesArea")
				Me.OnSalesAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType", DbType:="Int")>  _
	Public Property GarageType() As System.Nullable(Of Integer)
		Get
			Return Me._GarageType
		End Get
		Set
			If (Me._GarageType.Equals(value) = false) Then
				Me.OnGarageTypeChanging(value)
				Me.SendPropertyChanging
				Me._GarageType = value
				Me.SendPropertyChanged("GarageType")
				Me.OnGarageTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")>  _
	Public Property Longitude() As System.Nullable(Of Double)
		Get
			Return Me._Longitude
		End Get
		Set
			If (Me._Longitude.Equals(value) = false) Then
				Me.OnLongitudeChanging(value)
				Me.SendPropertyChanging
				Me._Longitude = value
				Me.SendPropertyChanged("Longitude")
				Me.OnLongitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")>  _
	Public Property Latitude() As System.Nullable(Of Double)
		Get
			Return Me._Latitude
		End Get
		Set
			If (Me._Latitude.Equals(value) = false) Then
				Me.OnLatitudeChanging(value)
				Me.SendPropertyChanging
				Me._Latitude = value
				Me.SendPropertyChanged("Latitude")
				Me.OnLatitudeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblShowRoom")>  _
Partial Public Class tblShowRoom
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ShowRoomCode As String
	
	Private _DealerCode As String
	
	Private _BranchCode As String
	
	Private _PartsOrderCode As String
	
	Private _ShowRoomName As String
	
	Private _BranchName As String
	
	Private _Address As String
	
	Private _Province As String
	
	Private _Zipcode As String
	
	Private _TelCode As String
	
	Private _TelNo As String
	
	Private _FaxNo As String
	
	Private _Email As String
	
	Private _ShowRoomNameEN As String
	
	Private _BranchNameEN As String
	
	Private _AddressEN As String
	
	Private _ProvinceEN As String
	
	Private _Region As String
	
	Private _SalesArea As String
	
	Private _Type As String
	
	Private _BP As String
	
	Private _Longitude As System.Nullable(Of Double)
	
	Private _Latitude As System.Nullable(Of Double)
	
	Private _SPDeptCode As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ShowroomID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnShowRoomCodeChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomCodeChanged()
    End Sub
    Partial Private Sub OnDealerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDealerCodeChanged()
    End Sub
    Partial Private Sub OnBranchCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBranchCodeChanged()
    End Sub
    Partial Private Sub OnPartsOrderCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPartsOrderCodeChanged()
    End Sub
    Partial Private Sub OnShowRoomNameChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomNameChanged()
    End Sub
    Partial Private Sub OnBranchNameChanging(value As String)
    End Sub
    Partial Private Sub OnBranchNameChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnZipcodeChanged()
    End Sub
    Partial Private Sub OnTelCodeChanging(value As String)
    End Sub
    Partial Private Sub OnTelCodeChanged()
    End Sub
    Partial Private Sub OnTelNoChanging(value As String)
    End Sub
    Partial Private Sub OnTelNoChanged()
    End Sub
    Partial Private Sub OnFaxNoChanging(value As String)
    End Sub
    Partial Private Sub OnFaxNoChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnShowRoomNameENChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomNameENChanged()
    End Sub
    Partial Private Sub OnBranchNameENChanging(value As String)
    End Sub
    Partial Private Sub OnBranchNameENChanged()
    End Sub
    Partial Private Sub OnAddressENChanging(value As String)
    End Sub
    Partial Private Sub OnAddressENChanged()
    End Sub
    Partial Private Sub OnProvinceENChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceENChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnSalesAreaChanging(value As String)
    End Sub
    Partial Private Sub OnSalesAreaChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnBPChanging(value As String)
    End Sub
    Partial Private Sub OnBPChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    Partial Private Sub OnSPDeptCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSPDeptCodeChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnShowroomIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnShowroomIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(50)")>  _
	Public Property ShowRoomCode() As String
		Get
			Return Me._ShowRoomCode
		End Get
		Set
			If (String.Equals(Me._ShowRoomCode, value) = false) Then
				Me.OnShowRoomCodeChanging(value)
				Me.SendPropertyChanging
				Me._ShowRoomCode = value
				Me.SendPropertyChanged("ShowRoomCode")
				Me.OnShowRoomCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerCode", DbType:="VarChar(50)")>  _
	Public Property DealerCode() As String
		Get
			Return Me._DealerCode
		End Get
		Set
			If (String.Equals(Me._DealerCode, value) = false) Then
				Me.OnDealerCodeChanging(value)
				Me.SendPropertyChanging
				Me._DealerCode = value
				Me.SendPropertyChanged("DealerCode")
				Me.OnDealerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchCode", DbType:="VarChar(50)")>  _
	Public Property BranchCode() As String
		Get
			Return Me._BranchCode
		End Get
		Set
			If (String.Equals(Me._BranchCode, value) = false) Then
				Me.OnBranchCodeChanging(value)
				Me.SendPropertyChanging
				Me._BranchCode = value
				Me.SendPropertyChanged("BranchCode")
				Me.OnBranchCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartsOrderCode", DbType:="VarChar(50)")>  _
	Public Property PartsOrderCode() As String
		Get
			Return Me._PartsOrderCode
		End Get
		Set
			If (String.Equals(Me._PartsOrderCode, value) = false) Then
				Me.OnPartsOrderCodeChanging(value)
				Me.SendPropertyChanging
				Me._PartsOrderCode = value
				Me.SendPropertyChanged("PartsOrderCode")
				Me.OnPartsOrderCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomName", DbType:="VarChar(100)")>  _
	Public Property ShowRoomName() As String
		Get
			Return Me._ShowRoomName
		End Get
		Set
			If (String.Equals(Me._ShowRoomName, value) = false) Then
				Me.OnShowRoomNameChanging(value)
				Me.SendPropertyChanging
				Me._ShowRoomName = value
				Me.SendPropertyChanged("ShowRoomName")
				Me.OnShowRoomNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchName", DbType:="VarChar(100)")>  _
	Public Property BranchName() As String
		Get
			Return Me._BranchName
		End Get
		Set
			If (String.Equals(Me._BranchName, value) = false) Then
				Me.OnBranchNameChanging(value)
				Me.SendPropertyChanging
				Me._BranchName = value
				Me.SendPropertyChanged("BranchName")
				Me.OnBranchNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(255)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="VarChar(50)")>  _
	Public Property Province() As String
		Get
			Return Me._Province
		End Get
		Set
			If (String.Equals(Me._Province, value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zipcode", DbType:="VarChar(5)")>  _
	Public Property Zipcode() As String
		Get
			Return Me._Zipcode
		End Get
		Set
			If (String.Equals(Me._Zipcode, value) = false) Then
				Me.OnZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._Zipcode = value
				Me.SendPropertyChanged("Zipcode")
				Me.OnZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelCode", DbType:="VarChar(10)")>  _
	Public Property TelCode() As String
		Get
			Return Me._TelCode
		End Get
		Set
			If (String.Equals(Me._TelCode, value) = false) Then
				Me.OnTelCodeChanging(value)
				Me.SendPropertyChanging
				Me._TelCode = value
				Me.SendPropertyChanged("TelCode")
				Me.OnTelCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelNo", DbType:="VarChar(100)")>  _
	Public Property TelNo() As String
		Get
			Return Me._TelNo
		End Get
		Set
			If (String.Equals(Me._TelNo, value) = false) Then
				Me.OnTelNoChanging(value)
				Me.SendPropertyChanging
				Me._TelNo = value
				Me.SendPropertyChanged("TelNo")
				Me.OnTelNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxNo", DbType:="VarChar(100)")>  _
	Public Property FaxNo() As String
		Get
			Return Me._FaxNo
		End Get
		Set
			If (String.Equals(Me._FaxNo, value) = false) Then
				Me.OnFaxNoChanging(value)
				Me.SendPropertyChanging
				Me._FaxNo = value
				Me.SendPropertyChanged("FaxNo")
				Me.OnFaxNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomNameEN", DbType:="VarChar(100)")>  _
	Public Property ShowRoomNameEN() As String
		Get
			Return Me._ShowRoomNameEN
		End Get
		Set
			If (String.Equals(Me._ShowRoomNameEN, value) = false) Then
				Me.OnShowRoomNameENChanging(value)
				Me.SendPropertyChanging
				Me._ShowRoomNameEN = value
				Me.SendPropertyChanged("ShowRoomNameEN")
				Me.OnShowRoomNameENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchNameEN", DbType:="VarChar(100)")>  _
	Public Property BranchNameEN() As String
		Get
			Return Me._BranchNameEN
		End Get
		Set
			If (String.Equals(Me._BranchNameEN, value) = false) Then
				Me.OnBranchNameENChanging(value)
				Me.SendPropertyChanging
				Me._BranchNameEN = value
				Me.SendPropertyChanged("BranchNameEN")
				Me.OnBranchNameENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddressEN", DbType:="VarChar(255)")>  _
	Public Property AddressEN() As String
		Get
			Return Me._AddressEN
		End Get
		Set
			If (String.Equals(Me._AddressEN, value) = false) Then
				Me.OnAddressENChanging(value)
				Me.SendPropertyChanging
				Me._AddressEN = value
				Me.SendPropertyChanged("AddressEN")
				Me.OnAddressENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProvinceEN", DbType:="VarChar(50)")>  _
	Public Property ProvinceEN() As String
		Get
			Return Me._ProvinceEN
		End Get
		Set
			If (String.Equals(Me._ProvinceEN, value) = false) Then
				Me.OnProvinceENChanging(value)
				Me.SendPropertyChanging
				Me._ProvinceEN = value
				Me.SendPropertyChanged("ProvinceEN")
				Me.OnProvinceENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="VarChar(50)")>  _
	Public Property Region() As String
		Get
			Return Me._Region
		End Get
		Set
			If (String.Equals(Me._Region, value) = false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalesArea", DbType:="VarChar(50)")>  _
	Public Property SalesArea() As String
		Get
			Return Me._SalesArea
		End Get
		Set
			If (String.Equals(Me._SalesArea, value) = false) Then
				Me.OnSalesAreaChanging(value)
				Me.SendPropertyChanging
				Me._SalesArea = value
				Me.SendPropertyChanged("SalesArea")
				Me.OnSalesAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="VarChar(5)")>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BP", DbType:="VarChar(5)")>  _
	Public Property BP() As String
		Get
			Return Me._BP
		End Get
		Set
			If (String.Equals(Me._BP, value) = false) Then
				Me.OnBPChanging(value)
				Me.SendPropertyChanging
				Me._BP = value
				Me.SendPropertyChanged("BP")
				Me.OnBPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")>  _
	Public Property Longitude() As System.Nullable(Of Double)
		Get
			Return Me._Longitude
		End Get
		Set
			If (Me._Longitude.Equals(value) = false) Then
				Me.OnLongitudeChanging(value)
				Me.SendPropertyChanging
				Me._Longitude = value
				Me.SendPropertyChanged("Longitude")
				Me.OnLongitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")>  _
	Public Property Latitude() As System.Nullable(Of Double)
		Get
			Return Me._Latitude
		End Get
		Set
			If (Me._Latitude.Equals(value) = false) Then
				Me.OnLatitudeChanging(value)
				Me.SendPropertyChanging
				Me._Latitude = value
				Me.SendPropertyChanged("Latitude")
				Me.OnLatitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPDeptCode", DbType:="VarChar(10)")>  _
	Public Property SPDeptCode() As String
		Get
			Return Me._SPDeptCode
		End Get
		Set
			If (String.Equals(Me._SPDeptCode, value) = false) Then
				Me.OnSPDeptCodeChanging(value)
				Me.SendPropertyChanging
				Me._SPDeptCode = value
				Me.SendPropertyChanged("SPDeptCode")
				Me.OnSPDeptCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomID", DbType:="Int")>  _
	Public Property ShowroomID() As System.Nullable(Of Integer)
		Get
			Return Me._ShowroomID
		End Get
		Set
			If (Me._ShowroomID.Equals(value) = false) Then
				Me.OnShowroomIDChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomID = value
				Me.SendPropertyChanged("ShowroomID")
				Me.OnShowroomIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblShowRoomCode")>  _
Partial Public Class tblShowRoomCode
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ShowRoomCode As String
	
	Private _ShowroomID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnShowRoomCodeChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomCodeChanged()
    End Sub
    Partial Private Sub OnShowroomIDChanging(value As String)
    End Sub
    Partial Private Sub OnShowroomIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ShowRoomCode() As String
		Get
			Return Me._ShowRoomCode
		End Get
		Set
			If (String.Equals(Me._ShowRoomCode, value) = false) Then
				Me.OnShowRoomCodeChanging(value)
				Me.SendPropertyChanging
				Me._ShowRoomCode = value
				Me.SendPropertyChanged("ShowRoomCode")
				Me.OnShowRoomCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomID", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ShowroomID() As String
		Get
			Return Me._ShowroomID
		End Get
		Set
			If (String.Equals(Me._ShowroomID, value) = false) Then
				Me.OnShowroomIDChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomID = value
				Me.SendPropertyChanged("ShowroomID")
				Me.OnShowroomIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClaimTransactionData")>  _
Partial Public Class V_ClaimTransactionData
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TRID As Integer
	
	Private _TRNo As String
	
	Private _ClaimStatus As String
	
	Private _TempPolicy As String
	
	Private _RefNo As String
	
	Private _Version As System.Nullable(Of Integer)
	
	Private _PolicyNo As String
	
	Private _PolicyYear As System.Nullable(Of Integer)
	
	Private _ClaimNo As String
	
	Private _TransactionDate As String
	
	Private _Unwriter As String
	
	Private _InsuredName As String
	
	Private _EffectiveDate As String
	
	Private _ExpiryDate As String
	
	Private _Beneficiary As String
	
	Private _CarBrand As String
	
	Private _CarModel As String
	
	Private _CarLicense As String
	
	Private _CarYear As String
	
	Private _ChassisNo As String
	
	Private _DealerCode As String
	
	Private _ShowRoomName As String
	
	Private _ShowRoomCode As String
	
	Private _ClaimNoticeDate As String
	
	Private _ClaimNoticeTime As String
	
	Private _ClaimDetails As String
	
	Private _ClaimType As System.Nullable(Of Integer)
	
	Private _ClaimResult As System.Nullable(Of Integer)
	
	Private _ClaimDamageDetails As String
	
	Private _CallCenter As String
	
	Private _AccidentDate As String
	
	Private _AccidentTime As String
	
	Private _AccidentPlace As String
	
	Private _AccidentTumbon As String
	
	Private _AccidentAmphur As String
	
	Private _AccidentProvince As String
	
	Private _AccidentZipcode As String
	
	Private _DriverName As String
	
	Private _DriverTel As String
	
	Private _NoticeName As String
	
	Private _NoticeTel As String
	
	Private _GarageType As System.Nullable(Of Integer)
	
	Private _GarageCode As String
	
	Private _GarageName As String
	
	Private _GaragePlace As String
	
	Private _GarageTumbon As String
	
	Private _GarageAmphur As String
	
	Private _GarageProvince As String
	
	Private _GarageZipcode As String
	
	Private _CarRepairDate As String
	
	Private _CarReceiveDate As String
	
	Private _ConsentFormNo As String
	
	Private _PartsDealerName As String
	
	Private _PaymentDetails As String
	
	Private _Amount1 As System.Nullable(Of Double)
	
	Private _Amount2 As System.Nullable(Of Double)
	
	Private _Amount3 As System.Nullable(Of Double)
	
	Private _Remark As String
	
	Private _FileUpload As String
	
	Private _GUID As String
	
	Private _SubmitDate As System.Nullable(Of Date)
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _IsPost As System.Nullable(Of Boolean)
	
	Private _ip As String
	
	Private _ResultMessage As String
	
	Private _RankNo As System.Nullable(Of Long)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTRIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRIDChanged()
    End Sub
    Partial Private Sub OnTRNoChanging(value As String)
    End Sub
    Partial Private Sub OnTRNoChanged()
    End Sub
    Partial Private Sub OnClaimStatusChanging(value As String)
    End Sub
    Partial Private Sub OnClaimStatusChanged()
    End Sub
    Partial Private Sub OnTempPolicyChanging(value As String)
    End Sub
    Partial Private Sub OnTempPolicyChanged()
    End Sub
    Partial Private Sub OnRefNoChanging(value As String)
    End Sub
    Partial Private Sub OnRefNoChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyNoChanged()
    End Sub
    Partial Private Sub OnPolicyYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPolicyYearChanged()
    End Sub
    Partial Private Sub OnClaimNoChanging(value As String)
    End Sub
    Partial Private Sub OnClaimNoChanged()
    End Sub
    Partial Private Sub OnTransactionDateChanging(value As String)
    End Sub
    Partial Private Sub OnTransactionDateChanged()
    End Sub
    Partial Private Sub OnUnwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUnwriterChanged()
    End Sub
    Partial Private Sub OnInsuredNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsuredNameChanged()
    End Sub
    Partial Private Sub OnEffectiveDateChanging(value As String)
    End Sub
    Partial Private Sub OnEffectiveDateChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As String)
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub OnBeneficiaryChanging(value As String)
    End Sub
    Partial Private Sub OnBeneficiaryChanged()
    End Sub
    Partial Private Sub OnCarBrandChanging(value As String)
    End Sub
    Partial Private Sub OnCarBrandChanged()
    End Sub
    Partial Private Sub OnCarModelChanging(value As String)
    End Sub
    Partial Private Sub OnCarModelChanged()
    End Sub
    Partial Private Sub OnCarLicenseChanging(value As String)
    End Sub
    Partial Private Sub OnCarLicenseChanged()
    End Sub
    Partial Private Sub OnCarYearChanging(value As String)
    End Sub
    Partial Private Sub OnCarYearChanged()
    End Sub
    Partial Private Sub OnChassisNoChanging(value As String)
    End Sub
    Partial Private Sub OnChassisNoChanged()
    End Sub
    Partial Private Sub OnDealerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDealerCodeChanged()
    End Sub
    Partial Private Sub OnShowRoomNameChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomNameChanged()
    End Sub
    Partial Private Sub OnShowRoomCodeChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomCodeChanged()
    End Sub
    Partial Private Sub OnClaimNoticeDateChanging(value As String)
    End Sub
    Partial Private Sub OnClaimNoticeDateChanged()
    End Sub
    Partial Private Sub OnClaimNoticeTimeChanging(value As String)
    End Sub
    Partial Private Sub OnClaimNoticeTimeChanged()
    End Sub
    Partial Private Sub OnClaimDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnClaimDetailsChanged()
    End Sub
    Partial Private Sub OnClaimTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClaimTypeChanged()
    End Sub
    Partial Private Sub OnClaimResultChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClaimResultChanged()
    End Sub
    Partial Private Sub OnClaimDamageDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnClaimDamageDetailsChanged()
    End Sub
    Partial Private Sub OnCallCenterChanging(value As String)
    End Sub
    Partial Private Sub OnCallCenterChanged()
    End Sub
    Partial Private Sub OnAccidentDateChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentDateChanged()
    End Sub
    Partial Private Sub OnAccidentTimeChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentTimeChanged()
    End Sub
    Partial Private Sub OnAccidentPlaceChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentPlaceChanged()
    End Sub
    Partial Private Sub OnAccidentTumbonChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentTumbonChanged()
    End Sub
    Partial Private Sub OnAccidentAmphurChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentAmphurChanged()
    End Sub
    Partial Private Sub OnAccidentProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentProvinceChanged()
    End Sub
    Partial Private Sub OnAccidentZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnAccidentZipcodeChanged()
    End Sub
    Partial Private Sub OnDriverNameChanging(value As String)
    End Sub
    Partial Private Sub OnDriverNameChanged()
    End Sub
    Partial Private Sub OnDriverTelChanging(value As String)
    End Sub
    Partial Private Sub OnDriverTelChanged()
    End Sub
    Partial Private Sub OnNoticeNameChanging(value As String)
    End Sub
    Partial Private Sub OnNoticeNameChanged()
    End Sub
    Partial Private Sub OnNoticeTelChanging(value As String)
    End Sub
    Partial Private Sub OnNoticeTelChanged()
    End Sub
    Partial Private Sub OnGarageTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGarageTypeChanged()
    End Sub
    Partial Private Sub OnGarageCodeChanging(value As String)
    End Sub
    Partial Private Sub OnGarageCodeChanged()
    End Sub
    Partial Private Sub OnGarageNameChanging(value As String)
    End Sub
    Partial Private Sub OnGarageNameChanged()
    End Sub
    Partial Private Sub OnGaragePlaceChanging(value As String)
    End Sub
    Partial Private Sub OnGaragePlaceChanged()
    End Sub
    Partial Private Sub OnGarageTumbonChanging(value As String)
    End Sub
    Partial Private Sub OnGarageTumbonChanged()
    End Sub
    Partial Private Sub OnGarageAmphurChanging(value As String)
    End Sub
    Partial Private Sub OnGarageAmphurChanged()
    End Sub
    Partial Private Sub OnGarageProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnGarageProvinceChanged()
    End Sub
    Partial Private Sub OnGarageZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnGarageZipcodeChanged()
    End Sub
    Partial Private Sub OnCarRepairDateChanging(value As String)
    End Sub
    Partial Private Sub OnCarRepairDateChanged()
    End Sub
    Partial Private Sub OnCarReceiveDateChanging(value As String)
    End Sub
    Partial Private Sub OnCarReceiveDateChanged()
    End Sub
    Partial Private Sub OnConsentFormNoChanging(value As String)
    End Sub
    Partial Private Sub OnConsentFormNoChanged()
    End Sub
    Partial Private Sub OnPartsDealerNameChanging(value As String)
    End Sub
    Partial Private Sub OnPartsDealerNameChanged()
    End Sub
    Partial Private Sub OnPaymentDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnPaymentDetailsChanged()
    End Sub
    Partial Private Sub OnAmount1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAmount1Changed()
    End Sub
    Partial Private Sub OnAmount2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAmount2Changed()
    End Sub
    Partial Private Sub OnAmount3Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAmount3Changed()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnFileUploadChanging(value As String)
    End Sub
    Partial Private Sub OnFileUploadChanged()
    End Sub
    Partial Private Sub OnGUIDChanging(value As String)
    End Sub
    Partial Private Sub OnGUIDChanged()
    End Sub
    Partial Private Sub OnSubmitDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmitDateChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnIsPostChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsPostChanged()
    End Sub
    Partial Private Sub OnipChanging(value As String)
    End Sub
    Partial Private Sub OnipChanged()
    End Sub
    Partial Private Sub OnResultMessageChanging(value As String)
    End Sub
    Partial Private Sub OnResultMessageChanged()
    End Sub
    Partial Private Sub OnRankNoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnRankNoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property TRID() As Integer
		Get
			Return Me._TRID
		End Get
		Set
			If ((Me._TRID = value)  _
						= false) Then
				Me.OnTRIDChanging(value)
				Me.SendPropertyChanging
				Me._TRID = value
				Me.SendPropertyChanged("TRID")
				Me.OnTRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNo", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property TRNo() As String
		Get
			Return Me._TRNo
		End Get
		Set
			If (String.Equals(Me._TRNo, value) = false) Then
				Me.OnTRNoChanging(value)
				Me.SendPropertyChanging
				Me._TRNo = value
				Me.SendPropertyChanged("TRNo")
				Me.OnTRNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimStatus", DbType:="VarChar(50)")>  _
	Public Property ClaimStatus() As String
		Get
			Return Me._ClaimStatus
		End Get
		Set
			If (String.Equals(Me._ClaimStatus, value) = false) Then
				Me.OnClaimStatusChanging(value)
				Me.SendPropertyChanging
				Me._ClaimStatus = value
				Me.SendPropertyChanged("ClaimStatus")
				Me.OnClaimStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TempPolicy", DbType:="VarChar(100)")>  _
	Public Property TempPolicy() As String
		Get
			Return Me._TempPolicy
		End Get
		Set
			If (String.Equals(Me._TempPolicy, value) = false) Then
				Me.OnTempPolicyChanging(value)
				Me.SendPropertyChanging
				Me._TempPolicy = value
				Me.SendPropertyChanged("TempPolicy")
				Me.OnTempPolicyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefNo", DbType:="VarChar(100)")>  _
	Public Property RefNo() As String
		Get
			Return Me._RefNo
		End Get
		Set
			If (String.Equals(Me._RefNo, value) = false) Then
				Me.OnRefNoChanging(value)
				Me.SendPropertyChanging
				Me._RefNo = value
				Me.SendPropertyChanged("RefNo")
				Me.OnRefNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version", DbType:="Int")>  _
	Public Property Version() As System.Nullable(Of Integer)
		Get
			Return Me._Version
		End Get
		Set
			If (Me._Version.Equals(value) = false) Then
				Me.OnVersionChanging(value)
				Me.SendPropertyChanging
				Me._Version = value
				Me.SendPropertyChanged("Version")
				Me.OnVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="VarChar(100)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me.OnPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._PolicyNo = value
				Me.SendPropertyChanged("PolicyNo")
				Me.OnPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyYear", DbType:="Int")>  _
	Public Property PolicyYear() As System.Nullable(Of Integer)
		Get
			Return Me._PolicyYear
		End Get
		Set
			If (Me._PolicyYear.Equals(value) = false) Then
				Me.OnPolicyYearChanging(value)
				Me.SendPropertyChanging
				Me._PolicyYear = value
				Me.SendPropertyChanged("PolicyYear")
				Me.OnPolicyYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNo", DbType:="VarChar(100)")>  _
	Public Property ClaimNo() As String
		Get
			Return Me._ClaimNo
		End Get
		Set
			If (String.Equals(Me._ClaimNo, value) = false) Then
				Me.OnClaimNoChanging(value)
				Me.SendPropertyChanging
				Me._ClaimNo = value
				Me.SendPropertyChanged("ClaimNo")
				Me.OnClaimNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionDate", DbType:="VarChar(10)")>  _
	Public Property TransactionDate() As String
		Get
			Return Me._TransactionDate
		End Get
		Set
			If (String.Equals(Me._TransactionDate, value) = false) Then
				Me.OnTransactionDateChanging(value)
				Me.SendPropertyChanging
				Me._TransactionDate = value
				Me.SendPropertyChanged("TransactionDate")
				Me.OnTransactionDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unwriter", DbType:="VarChar(10)")>  _
	Public Property Unwriter() As String
		Get
			Return Me._Unwriter
		End Get
		Set
			If (String.Equals(Me._Unwriter, value) = false) Then
				Me.OnUnwriterChanging(value)
				Me.SendPropertyChanging
				Me._Unwriter = value
				Me.SendPropertyChanged("Unwriter")
				Me.OnUnwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuredName", DbType:="VarChar(255)")>  _
	Public Property InsuredName() As String
		Get
			Return Me._InsuredName
		End Get
		Set
			If (String.Equals(Me._InsuredName, value) = false) Then
				Me.OnInsuredNameChanging(value)
				Me.SendPropertyChanging
				Me._InsuredName = value
				Me.SendPropertyChanged("InsuredName")
				Me.OnInsuredNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="VarChar(10)")>  _
	Public Property EffectiveDate() As String
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (String.Equals(Me._EffectiveDate, value) = false) Then
				Me.OnEffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._EffectiveDate = value
				Me.SendPropertyChanged("EffectiveDate")
				Me.OnEffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="VarChar(10)")>  _
	Public Property ExpiryDate() As String
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (String.Equals(Me._ExpiryDate, value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficiary", DbType:="VarChar(255)")>  _
	Public Property Beneficiary() As String
		Get
			Return Me._Beneficiary
		End Get
		Set
			If (String.Equals(Me._Beneficiary, value) = false) Then
				Me.OnBeneficiaryChanging(value)
				Me.SendPropertyChanging
				Me._Beneficiary = value
				Me.SendPropertyChanged("Beneficiary")
				Me.OnBeneficiaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrand", DbType:="VarChar(50)")>  _
	Public Property CarBrand() As String
		Get
			Return Me._CarBrand
		End Get
		Set
			If (String.Equals(Me._CarBrand, value) = false) Then
				Me.OnCarBrandChanging(value)
				Me.SendPropertyChanging
				Me._CarBrand = value
				Me.SendPropertyChanged("CarBrand")
				Me.OnCarBrandChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModel", DbType:="VarChar(100)")>  _
	Public Property CarModel() As String
		Get
			Return Me._CarModel
		End Get
		Set
			If (String.Equals(Me._CarModel, value) = false) Then
				Me.OnCarModelChanging(value)
				Me.SendPropertyChanging
				Me._CarModel = value
				Me.SendPropertyChanged("CarModel")
				Me.OnCarModelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarLicense", DbType:="VarChar(50)")>  _
	Public Property CarLicense() As String
		Get
			Return Me._CarLicense
		End Get
		Set
			If (String.Equals(Me._CarLicense, value) = false) Then
				Me.OnCarLicenseChanging(value)
				Me.SendPropertyChanging
				Me._CarLicense = value
				Me.SendPropertyChanged("CarLicense")
				Me.OnCarLicenseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarYear", DbType:="VarChar(50)")>  _
	Public Property CarYear() As String
		Get
			Return Me._CarYear
		End Get
		Set
			If (String.Equals(Me._CarYear, value) = false) Then
				Me.OnCarYearChanging(value)
				Me.SendPropertyChanging
				Me._CarYear = value
				Me.SendPropertyChanged("CarYear")
				Me.OnCarYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChassisNo", DbType:="VarChar(50)")>  _
	Public Property ChassisNo() As String
		Get
			Return Me._ChassisNo
		End Get
		Set
			If (String.Equals(Me._ChassisNo, value) = false) Then
				Me.OnChassisNoChanging(value)
				Me.SendPropertyChanging
				Me._ChassisNo = value
				Me.SendPropertyChanged("ChassisNo")
				Me.OnChassisNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerCode", DbType:="VarChar(5)")>  _
	Public Property DealerCode() As String
		Get
			Return Me._DealerCode
		End Get
		Set
			If (String.Equals(Me._DealerCode, value) = false) Then
				Me.OnDealerCodeChanging(value)
				Me.SendPropertyChanging
				Me._DealerCode = value
				Me.SendPropertyChanged("DealerCode")
				Me.OnDealerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomName", DbType:="VarChar(100)")>  _
	Public Property ShowRoomName() As String
		Get
			Return Me._ShowRoomName
		End Get
		Set
			If (String.Equals(Me._ShowRoomName, value) = false) Then
				Me.OnShowRoomNameChanging(value)
				Me.SendPropertyChanging
				Me._ShowRoomName = value
				Me.SendPropertyChanged("ShowRoomName")
				Me.OnShowRoomNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(50)")>  _
	Public Property ShowRoomCode() As String
		Get
			Return Me._ShowRoomCode
		End Get
		Set
			If (String.Equals(Me._ShowRoomCode, value) = false) Then
				Me.OnShowRoomCodeChanging(value)
				Me.SendPropertyChanging
				Me._ShowRoomCode = value
				Me.SendPropertyChanged("ShowRoomCode")
				Me.OnShowRoomCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeDate", DbType:="VarChar(10)")>  _
	Public Property ClaimNoticeDate() As String
		Get
			Return Me._ClaimNoticeDate
		End Get
		Set
			If (String.Equals(Me._ClaimNoticeDate, value) = false) Then
				Me.OnClaimNoticeDateChanging(value)
				Me.SendPropertyChanging
				Me._ClaimNoticeDate = value
				Me.SendPropertyChanged("ClaimNoticeDate")
				Me.OnClaimNoticeDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeTime", DbType:="VarChar(10)")>  _
	Public Property ClaimNoticeTime() As String
		Get
			Return Me._ClaimNoticeTime
		End Get
		Set
			If (String.Equals(Me._ClaimNoticeTime, value) = false) Then
				Me.OnClaimNoticeTimeChanging(value)
				Me.SendPropertyChanging
				Me._ClaimNoticeTime = value
				Me.SendPropertyChanged("ClaimNoticeTime")
				Me.OnClaimNoticeTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimDetails", DbType:="VarChar(255)")>  _
	Public Property ClaimDetails() As String
		Get
			Return Me._ClaimDetails
		End Get
		Set
			If (String.Equals(Me._ClaimDetails, value) = false) Then
				Me.OnClaimDetailsChanging(value)
				Me.SendPropertyChanging
				Me._ClaimDetails = value
				Me.SendPropertyChanged("ClaimDetails")
				Me.OnClaimDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimType", DbType:="Int")>  _
	Public Property ClaimType() As System.Nullable(Of Integer)
		Get
			Return Me._ClaimType
		End Get
		Set
			If (Me._ClaimType.Equals(value) = false) Then
				Me.OnClaimTypeChanging(value)
				Me.SendPropertyChanging
				Me._ClaimType = value
				Me.SendPropertyChanged("ClaimType")
				Me.OnClaimTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimResult", DbType:="Int")>  _
	Public Property ClaimResult() As System.Nullable(Of Integer)
		Get
			Return Me._ClaimResult
		End Get
		Set
			If (Me._ClaimResult.Equals(value) = false) Then
				Me.OnClaimResultChanging(value)
				Me.SendPropertyChanging
				Me._ClaimResult = value
				Me.SendPropertyChanged("ClaimResult")
				Me.OnClaimResultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimDamageDetails", DbType:="VarChar(MAX)")>  _
	Public Property ClaimDamageDetails() As String
		Get
			Return Me._ClaimDamageDetails
		End Get
		Set
			If (String.Equals(Me._ClaimDamageDetails, value) = false) Then
				Me.OnClaimDamageDetailsChanging(value)
				Me.SendPropertyChanging
				Me._ClaimDamageDetails = value
				Me.SendPropertyChanged("ClaimDamageDetails")
				Me.OnClaimDamageDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CallCenter", DbType:="VarChar(50)")>  _
	Public Property CallCenter() As String
		Get
			Return Me._CallCenter
		End Get
		Set
			If (String.Equals(Me._CallCenter, value) = false) Then
				Me.OnCallCenterChanging(value)
				Me.SendPropertyChanging
				Me._CallCenter = value
				Me.SendPropertyChanged("CallCenter")
				Me.OnCallCenterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDate", DbType:="VarChar(10)")>  _
	Public Property AccidentDate() As String
		Get
			Return Me._AccidentDate
		End Get
		Set
			If (String.Equals(Me._AccidentDate, value) = false) Then
				Me.OnAccidentDateChanging(value)
				Me.SendPropertyChanging
				Me._AccidentDate = value
				Me.SendPropertyChanged("AccidentDate")
				Me.OnAccidentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentTime", DbType:="VarChar(10)")>  _
	Public Property AccidentTime() As String
		Get
			Return Me._AccidentTime
		End Get
		Set
			If (String.Equals(Me._AccidentTime, value) = false) Then
				Me.OnAccidentTimeChanging(value)
				Me.SendPropertyChanging
				Me._AccidentTime = value
				Me.SendPropertyChanged("AccidentTime")
				Me.OnAccidentTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace", DbType:="VarChar(255)")>  _
	Public Property AccidentPlace() As String
		Get
			Return Me._AccidentPlace
		End Get
		Set
			If (String.Equals(Me._AccidentPlace, value) = false) Then
				Me.OnAccidentPlaceChanging(value)
				Me.SendPropertyChanging
				Me._AccidentPlace = value
				Me.SendPropertyChanged("AccidentPlace")
				Me.OnAccidentPlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentTumbon", DbType:="VarChar(255)")>  _
	Public Property AccidentTumbon() As String
		Get
			Return Me._AccidentTumbon
		End Get
		Set
			If (String.Equals(Me._AccidentTumbon, value) = false) Then
				Me.OnAccidentTumbonChanging(value)
				Me.SendPropertyChanging
				Me._AccidentTumbon = value
				Me.SendPropertyChanged("AccidentTumbon")
				Me.OnAccidentTumbonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentAmphur", DbType:="VarChar(255)")>  _
	Public Property AccidentAmphur() As String
		Get
			Return Me._AccidentAmphur
		End Get
		Set
			If (String.Equals(Me._AccidentAmphur, value) = false) Then
				Me.OnAccidentAmphurChanging(value)
				Me.SendPropertyChanging
				Me._AccidentAmphur = value
				Me.SendPropertyChanged("AccidentAmphur")
				Me.OnAccidentAmphurChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentProvince", DbType:="VarChar(255)")>  _
	Public Property AccidentProvince() As String
		Get
			Return Me._AccidentProvince
		End Get
		Set
			If (String.Equals(Me._AccidentProvince, value) = false) Then
				Me.OnAccidentProvinceChanging(value)
				Me.SendPropertyChanging
				Me._AccidentProvince = value
				Me.SendPropertyChanged("AccidentProvince")
				Me.OnAccidentProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentZipcode", DbType:="VarChar(5)")>  _
	Public Property AccidentZipcode() As String
		Get
			Return Me._AccidentZipcode
		End Get
		Set
			If (String.Equals(Me._AccidentZipcode, value) = false) Then
				Me.OnAccidentZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._AccidentZipcode = value
				Me.SendPropertyChanged("AccidentZipcode")
				Me.OnAccidentZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverName", DbType:="VarChar(255)")>  _
	Public Property DriverName() As String
		Get
			Return Me._DriverName
		End Get
		Set
			If (String.Equals(Me._DriverName, value) = false) Then
				Me.OnDriverNameChanging(value)
				Me.SendPropertyChanging
				Me._DriverName = value
				Me.SendPropertyChanged("DriverName")
				Me.OnDriverNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverTel", DbType:="VarChar(100)")>  _
	Public Property DriverTel() As String
		Get
			Return Me._DriverTel
		End Get
		Set
			If (String.Equals(Me._DriverTel, value) = false) Then
				Me.OnDriverTelChanging(value)
				Me.SendPropertyChanging
				Me._DriverTel = value
				Me.SendPropertyChanged("DriverTel")
				Me.OnDriverTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeName", DbType:="VarChar(255)")>  _
	Public Property NoticeName() As String
		Get
			Return Me._NoticeName
		End Get
		Set
			If (String.Equals(Me._NoticeName, value) = false) Then
				Me.OnNoticeNameChanging(value)
				Me.SendPropertyChanging
				Me._NoticeName = value
				Me.SendPropertyChanged("NoticeName")
				Me.OnNoticeNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeTel", DbType:="VarChar(100)")>  _
	Public Property NoticeTel() As String
		Get
			Return Me._NoticeTel
		End Get
		Set
			If (String.Equals(Me._NoticeTel, value) = false) Then
				Me.OnNoticeTelChanging(value)
				Me.SendPropertyChanging
				Me._NoticeTel = value
				Me.SendPropertyChanged("NoticeTel")
				Me.OnNoticeTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType", DbType:="Int")>  _
	Public Property GarageType() As System.Nullable(Of Integer)
		Get
			Return Me._GarageType
		End Get
		Set
			If (Me._GarageType.Equals(value) = false) Then
				Me.OnGarageTypeChanging(value)
				Me.SendPropertyChanging
				Me._GarageType = value
				Me.SendPropertyChanged("GarageType")
				Me.OnGarageTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageCode", DbType:="VarChar(10)")>  _
	Public Property GarageCode() As String
		Get
			Return Me._GarageCode
		End Get
		Set
			If (String.Equals(Me._GarageCode, value) = false) Then
				Me.OnGarageCodeChanging(value)
				Me.SendPropertyChanging
				Me._GarageCode = value
				Me.SendPropertyChanged("GarageCode")
				Me.OnGarageCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageName", DbType:="VarChar(100)")>  _
	Public Property GarageName() As String
		Get
			Return Me._GarageName
		End Get
		Set
			If (String.Equals(Me._GarageName, value) = false) Then
				Me.OnGarageNameChanging(value)
				Me.SendPropertyChanging
				Me._GarageName = value
				Me.SendPropertyChanged("GarageName")
				Me.OnGarageNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GaragePlace", DbType:="VarChar(255)")>  _
	Public Property GaragePlace() As String
		Get
			Return Me._GaragePlace
		End Get
		Set
			If (String.Equals(Me._GaragePlace, value) = false) Then
				Me.OnGaragePlaceChanging(value)
				Me.SendPropertyChanging
				Me._GaragePlace = value
				Me.SendPropertyChanged("GaragePlace")
				Me.OnGaragePlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageTumbon", DbType:="VarChar(255)")>  _
	Public Property GarageTumbon() As String
		Get
			Return Me._GarageTumbon
		End Get
		Set
			If (String.Equals(Me._GarageTumbon, value) = false) Then
				Me.OnGarageTumbonChanging(value)
				Me.SendPropertyChanging
				Me._GarageTumbon = value
				Me.SendPropertyChanged("GarageTumbon")
				Me.OnGarageTumbonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageAmphur", DbType:="VarChar(255)")>  _
	Public Property GarageAmphur() As String
		Get
			Return Me._GarageAmphur
		End Get
		Set
			If (String.Equals(Me._GarageAmphur, value) = false) Then
				Me.OnGarageAmphurChanging(value)
				Me.SendPropertyChanging
				Me._GarageAmphur = value
				Me.SendPropertyChanged("GarageAmphur")
				Me.OnGarageAmphurChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageProvince", DbType:="VarChar(255)")>  _
	Public Property GarageProvince() As String
		Get
			Return Me._GarageProvince
		End Get
		Set
			If (String.Equals(Me._GarageProvince, value) = false) Then
				Me.OnGarageProvinceChanging(value)
				Me.SendPropertyChanging
				Me._GarageProvince = value
				Me.SendPropertyChanged("GarageProvince")
				Me.OnGarageProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageZipcode", DbType:="VarChar(5)")>  _
	Public Property GarageZipcode() As String
		Get
			Return Me._GarageZipcode
		End Get
		Set
			If (String.Equals(Me._GarageZipcode, value) = false) Then
				Me.OnGarageZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._GarageZipcode = value
				Me.SendPropertyChanged("GarageZipcode")
				Me.OnGarageZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarRepairDate", DbType:="VarChar(10)")>  _
	Public Property CarRepairDate() As String
		Get
			Return Me._CarRepairDate
		End Get
		Set
			If (String.Equals(Me._CarRepairDate, value) = false) Then
				Me.OnCarRepairDateChanging(value)
				Me.SendPropertyChanging
				Me._CarRepairDate = value
				Me.SendPropertyChanged("CarRepairDate")
				Me.OnCarRepairDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarReceiveDate", DbType:="VarChar(10)")>  _
	Public Property CarReceiveDate() As String
		Get
			Return Me._CarReceiveDate
		End Get
		Set
			If (String.Equals(Me._CarReceiveDate, value) = false) Then
				Me.OnCarReceiveDateChanging(value)
				Me.SendPropertyChanging
				Me._CarReceiveDate = value
				Me.SendPropertyChanged("CarReceiveDate")
				Me.OnCarReceiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConsentFormNo", DbType:="VarChar(50)")>  _
	Public Property ConsentFormNo() As String
		Get
			Return Me._ConsentFormNo
		End Get
		Set
			If (String.Equals(Me._ConsentFormNo, value) = false) Then
				Me.OnConsentFormNoChanging(value)
				Me.SendPropertyChanging
				Me._ConsentFormNo = value
				Me.SendPropertyChanged("ConsentFormNo")
				Me.OnConsentFormNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartsDealerName", DbType:="VarChar(255)")>  _
	Public Property PartsDealerName() As String
		Get
			Return Me._PartsDealerName
		End Get
		Set
			If (String.Equals(Me._PartsDealerName, value) = false) Then
				Me.OnPartsDealerNameChanging(value)
				Me.SendPropertyChanging
				Me._PartsDealerName = value
				Me.SendPropertyChanged("PartsDealerName")
				Me.OnPartsDealerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentDetails", DbType:="VarChar(MAX)")>  _
	Public Property PaymentDetails() As String
		Get
			Return Me._PaymentDetails
		End Get
		Set
			If (String.Equals(Me._PaymentDetails, value) = false) Then
				Me.OnPaymentDetailsChanging(value)
				Me.SendPropertyChanging
				Me._PaymentDetails = value
				Me.SendPropertyChanged("PaymentDetails")
				Me.OnPaymentDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount1", DbType:="Float")>  _
	Public Property Amount1() As System.Nullable(Of Double)
		Get
			Return Me._Amount1
		End Get
		Set
			If (Me._Amount1.Equals(value) = false) Then
				Me.OnAmount1Changing(value)
				Me.SendPropertyChanging
				Me._Amount1 = value
				Me.SendPropertyChanged("Amount1")
				Me.OnAmount1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount2", DbType:="Float")>  _
	Public Property Amount2() As System.Nullable(Of Double)
		Get
			Return Me._Amount2
		End Get
		Set
			If (Me._Amount2.Equals(value) = false) Then
				Me.OnAmount2Changing(value)
				Me.SendPropertyChanging
				Me._Amount2 = value
				Me.SendPropertyChanged("Amount2")
				Me.OnAmount2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount3", DbType:="Float")>  _
	Public Property Amount3() As System.Nullable(Of Double)
		Get
			Return Me._Amount3
		End Get
		Set
			If (Me._Amount3.Equals(value) = false) Then
				Me.OnAmount3Changing(value)
				Me.SendPropertyChanging
				Me._Amount3 = value
				Me.SendPropertyChanged("Amount3")
				Me.OnAmount3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileUpload", DbType:="VarChar(255)")>  _
	Public Property FileUpload() As String
		Get
			Return Me._FileUpload
		End Get
		Set
			If (String.Equals(Me._FileUpload, value) = false) Then
				Me.OnFileUploadChanging(value)
				Me.SendPropertyChanging
				Me._FileUpload = value
				Me.SendPropertyChanged("FileUpload")
				Me.OnFileUploadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GUID", DbType:="VarChar(255)")>  _
	Public Property GUID() As String
		Get
			Return Me._GUID
		End Get
		Set
			If (String.Equals(Me._GUID, value) = false) Then
				Me.OnGUIDChanging(value)
				Me.SendPropertyChanging
				Me._GUID = value
				Me.SendPropertyChanged("GUID")
				Me.OnGUIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitDate", DbType:="DateTime")>  _
	Public Property SubmitDate() As System.Nullable(Of Date)
		Get
			Return Me._SubmitDate
		End Get
		Set
			If (Me._SubmitDate.Equals(value) = false) Then
				Me.OnSubmitDateChanging(value)
				Me.SendPropertyChanging
				Me._SubmitDate = value
				Me.SendPropertyChanged("SubmitDate")
				Me.OnSubmitDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsPost", DbType:="Bit")>  _
	Public Property IsPost() As System.Nullable(Of Boolean)
		Get
			Return Me._IsPost
		End Get
		Set
			If (Me._IsPost.Equals(value) = false) Then
				Me.OnIsPostChanging(value)
				Me.SendPropertyChanging
				Me._IsPost = value
				Me.SendPropertyChanged("IsPost")
				Me.OnIsPostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ip", DbType:="VarChar(50)")>  _
	Public Property ip() As String
		Get
			Return Me._ip
		End Get
		Set
			If (String.Equals(Me._ip, value) = false) Then
				Me.OnipChanging(value)
				Me.SendPropertyChanging
				Me._ip = value
				Me.SendPropertyChanged("ip")
				Me.OnipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResultMessage", DbType:="NVarChar(MAX)")>  _
	Public Property ResultMessage() As String
		Get
			Return Me._ResultMessage
		End Get
		Set
			If (String.Equals(Me._ResultMessage, value) = false) Then
				Me.OnResultMessageChanging(value)
				Me.SendPropertyChanging
				Me._ResultMessage = value
				Me.SendPropertyChanged("ResultMessage")
				Me.OnResultMessageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RankNo", DbType:="BigInt")>  _
	Public Property RankNo() As System.Nullable(Of Long)
		Get
			Return Me._RankNo
		End Get
		Set
			If (Me._RankNo.Equals(value) = false) Then
				Me.OnRankNoChanging(value)
				Me.SendPropertyChanging
				Me._RankNo = value
				Me.SendPropertyChanged("RankNo")
				Me.OnRankNoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClaimTransactionData_Notice")>  _
Partial Public Class V_ClaimTransactionData_Notice
	
	Private _TRID As Integer
	
	Private _DealerName As String
	
	Private _DealerCode As String
	
	Private _Email As String
	
	Private _InsuredName As String
	
	Private _ChassisNo As String
	
	Private _PolicyNo As String
	
	Private _ClaimNo As String
	
	Private _AccidentDate As String
	
	Private _AccidentTime As String
	
	Private _AccidentPlace As String
	
	Private _EffectiveDate As String
	
	Private _Beneficiary As String
	
	Private _UWName As String
	
	Private _ClaimNoticeDate As String
	
	Private _ClaimNoticeTime As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRID", DbType:="Int NOT NULL")>  _
	Public Property TRID() As Integer
		Get
			Return Me._TRID
		End Get
		Set
			If ((Me._TRID = value)  _
						= false) Then
				Me._TRID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property DealerName() As String
		Get
			Return Me._DealerName
		End Get
		Set
			If (String.Equals(Me._DealerName, value) = false) Then
				Me._DealerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerCode", DbType:="VarChar(50)")>  _
	Public Property DealerCode() As String
		Get
			Return Me._DealerCode
		End Get
		Set
			If (String.Equals(Me._DealerCode, value) = false) Then
				Me._DealerCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuredName", DbType:="VarChar(255)")>  _
	Public Property InsuredName() As String
		Get
			Return Me._InsuredName
		End Get
		Set
			If (String.Equals(Me._InsuredName, value) = false) Then
				Me._InsuredName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChassisNo", DbType:="VarChar(50)")>  _
	Public Property ChassisNo() As String
		Get
			Return Me._ChassisNo
		End Get
		Set
			If (String.Equals(Me._ChassisNo, value) = false) Then
				Me._ChassisNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="VarChar(100)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me._PolicyNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNo", DbType:="VarChar(100)")>  _
	Public Property ClaimNo() As String
		Get
			Return Me._ClaimNo
		End Get
		Set
			If (String.Equals(Me._ClaimNo, value) = false) Then
				Me._ClaimNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDate", DbType:="VarChar(10)")>  _
	Public Property AccidentDate() As String
		Get
			Return Me._AccidentDate
		End Get
		Set
			If (String.Equals(Me._AccidentDate, value) = false) Then
				Me._AccidentDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentTime", DbType:="VarChar(10)")>  _
	Public Property AccidentTime() As String
		Get
			Return Me._AccidentTime
		End Get
		Set
			If (String.Equals(Me._AccidentTime, value) = false) Then
				Me._AccidentTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace", DbType:="VarChar(1000)")>  _
	Public Property AccidentPlace() As String
		Get
			Return Me._AccidentPlace
		End Get
		Set
			If (String.Equals(Me._AccidentPlace, value) = false) Then
				Me._AccidentPlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="VarChar(10)")>  _
	Public Property EffectiveDate() As String
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (String.Equals(Me._EffectiveDate, value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficiary", DbType:="VarChar(255)")>  _
	Public Property Beneficiary() As String
		Get
			Return Me._Beneficiary
		End Get
		Set
			If (String.Equals(Me._Beneficiary, value) = false) Then
				Me._Beneficiary = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWName", DbType:="VarChar(100)")>  _
	Public Property UWName() As String
		Get
			Return Me._UWName
		End Get
		Set
			If (String.Equals(Me._UWName, value) = false) Then
				Me._UWName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeDate", DbType:="VarChar(10)")>  _
	Public Property ClaimNoticeDate() As String
		Get
			Return Me._ClaimNoticeDate
		End Get
		Set
			If (String.Equals(Me._ClaimNoticeDate, value) = false) Then
				Me._ClaimNoticeDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeTime", DbType:="VarChar(10)")>  _
	Public Property ClaimNoticeTime() As String
		Get
			Return Me._ClaimNoticeTime
		End Get
		Set
			If (String.Equals(Me._ClaimNoticeTime, value) = false) Then
				Me._ClaimNoticeTime = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Portal_Users")>  _
Partial Public Class Portal_User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UserID As Integer
	
	Private _UserName As String
	
	Private _Password As String
	
	Private _Email As String
	
	Private _Comment As String
	
	Private _PasswordQuestion As String
	
	Private _PasswordAnswer As String
	
	Private _IsApproved As System.Nullable(Of Boolean)
	
	Private _LastActivityDate As System.Nullable(Of Date)
	
	Private _LastLoginDate As System.Nullable(Of Date)
	
	Private _LastPasswordChangedDate As System.Nullable(Of Date)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _IsLocked As System.Nullable(Of Boolean)
	
	Private _LastLockOutDate As System.Nullable(Of Date)
	
	Private _FailedPasswordAttemptCount As System.Nullable(Of Integer)
	
	Private _FailedPasswordAttemptWindowStart As System.Nullable(Of Date)
	
	Private _FailedPasswordAnswerAttemptCount As System.Nullable(Of Integer)
	
	Private _FailedPasswordAnswerAttemptWindowStart As System.Nullable(Of Date)
	
	Private _ExpiredDate As System.Nullable(Of Date)
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _MobilePhone As String
	
	Private _OTP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnPasswordQuestionChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordQuestionChanged()
    End Sub
    Partial Private Sub OnPasswordAnswerChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordAnswerChanged()
    End Sub
    Partial Private Sub OnIsApprovedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsApprovedChanged()
    End Sub
    Partial Private Sub OnLastActivityDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastActivityDateChanged()
    End Sub
    Partial Private Sub OnLastLoginDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastLoginDateChanged()
    End Sub
    Partial Private Sub OnLastPasswordChangedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastPasswordChangedDateChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnIsLockedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsLockedChanged()
    End Sub
    Partial Private Sub OnLastLockOutDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastLockOutDateChanged()
    End Sub
    Partial Private Sub OnFailedPasswordAttemptCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFailedPasswordAttemptCountChanged()
    End Sub
    Partial Private Sub OnFailedPasswordAttemptWindowStartChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFailedPasswordAttemptWindowStartChanged()
    End Sub
    Partial Private Sub OnFailedPasswordAnswerAttemptCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFailedPasswordAnswerAttemptCountChanged()
    End Sub
    Partial Private Sub OnFailedPasswordAnswerAttemptWindowStartChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFailedPasswordAnswerAttemptWindowStartChanged()
    End Sub
    Partial Private Sub OnExpiredDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnExpiredDateChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnMobilePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnMobilePhoneChanged()
    End Sub
    Partial Private Sub OnOTPChanging(value As String)
    End Sub
    Partial Private Sub OnOTPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property UserID() As Integer
		Get
			Return Me._UserID
		End Get
		Set
			If ((Me._UserID = value)  _
						= false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="NVarChar(128)")>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Comment() As String
		Get
			Return Me._Comment
		End Get
		Set
			If (String.Equals(Me._Comment, value) = false) Then
				Me.OnCommentChanging(value)
				Me.SendPropertyChanging
				Me._Comment = value
				Me.SendPropertyChanged("Comment")
				Me.OnCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PasswordQuestion", DbType:="NVarChar(256)")>  _
	Public Property PasswordQuestion() As String
		Get
			Return Me._PasswordQuestion
		End Get
		Set
			If (String.Equals(Me._PasswordQuestion, value) = false) Then
				Me.OnPasswordQuestionChanging(value)
				Me.SendPropertyChanging
				Me._PasswordQuestion = value
				Me.SendPropertyChanged("PasswordQuestion")
				Me.OnPasswordQuestionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PasswordAnswer", DbType:="NVarChar(128)")>  _
	Public Property PasswordAnswer() As String
		Get
			Return Me._PasswordAnswer
		End Get
		Set
			If (String.Equals(Me._PasswordAnswer, value) = false) Then
				Me.OnPasswordAnswerChanging(value)
				Me.SendPropertyChanging
				Me._PasswordAnswer = value
				Me.SendPropertyChanged("PasswordAnswer")
				Me.OnPasswordAnswerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsApproved", DbType:="Bit")>  _
	Public Property IsApproved() As System.Nullable(Of Boolean)
		Get
			Return Me._IsApproved
		End Get
		Set
			If (Me._IsApproved.Equals(value) = false) Then
				Me.OnIsApprovedChanging(value)
				Me.SendPropertyChanging
				Me._IsApproved = value
				Me.SendPropertyChanged("IsApproved")
				Me.OnIsApprovedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastActivityDate", DbType:="DateTime")>  _
	Public Property LastActivityDate() As System.Nullable(Of Date)
		Get
			Return Me._LastActivityDate
		End Get
		Set
			If (Me._LastActivityDate.Equals(value) = false) Then
				Me.OnLastActivityDateChanging(value)
				Me.SendPropertyChanging
				Me._LastActivityDate = value
				Me.SendPropertyChanged("LastActivityDate")
				Me.OnLastActivityDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastLoginDate", DbType:="DateTime")>  _
	Public Property LastLoginDate() As System.Nullable(Of Date)
		Get
			Return Me._LastLoginDate
		End Get
		Set
			If (Me._LastLoginDate.Equals(value) = false) Then
				Me.OnLastLoginDateChanging(value)
				Me.SendPropertyChanging
				Me._LastLoginDate = value
				Me.SendPropertyChanged("LastLoginDate")
				Me.OnLastLoginDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastPasswordChangedDate", DbType:="DateTime")>  _
	Public Property LastPasswordChangedDate() As System.Nullable(Of Date)
		Get
			Return Me._LastPasswordChangedDate
		End Get
		Set
			If (Me._LastPasswordChangedDate.Equals(value) = false) Then
				Me.OnLastPasswordChangedDateChanging(value)
				Me.SendPropertyChanging
				Me._LastPasswordChangedDate = value
				Me.SendPropertyChanged("LastPasswordChangedDate")
				Me.OnLastPasswordChangedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsLocked", DbType:="Bit")>  _
	Public Property IsLocked() As System.Nullable(Of Boolean)
		Get
			Return Me._IsLocked
		End Get
		Set
			If (Me._IsLocked.Equals(value) = false) Then
				Me.OnIsLockedChanging(value)
				Me.SendPropertyChanging
				Me._IsLocked = value
				Me.SendPropertyChanged("IsLocked")
				Me.OnIsLockedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastLockOutDate", DbType:="DateTime")>  _
	Public Property LastLockOutDate() As System.Nullable(Of Date)
		Get
			Return Me._LastLockOutDate
		End Get
		Set
			If (Me._LastLockOutDate.Equals(value) = false) Then
				Me.OnLastLockOutDateChanging(value)
				Me.SendPropertyChanging
				Me._LastLockOutDate = value
				Me.SendPropertyChanged("LastLockOutDate")
				Me.OnLastLockOutDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FailedPasswordAttemptCount", DbType:="Int")>  _
	Public Property FailedPasswordAttemptCount() As System.Nullable(Of Integer)
		Get
			Return Me._FailedPasswordAttemptCount
		End Get
		Set
			If (Me._FailedPasswordAttemptCount.Equals(value) = false) Then
				Me.OnFailedPasswordAttemptCountChanging(value)
				Me.SendPropertyChanging
				Me._FailedPasswordAttemptCount = value
				Me.SendPropertyChanged("FailedPasswordAttemptCount")
				Me.OnFailedPasswordAttemptCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FailedPasswordAttemptWindowStart", DbType:="DateTime")>  _
	Public Property FailedPasswordAttemptWindowStart() As System.Nullable(Of Date)
		Get
			Return Me._FailedPasswordAttemptWindowStart
		End Get
		Set
			If (Me._FailedPasswordAttemptWindowStart.Equals(value) = false) Then
				Me.OnFailedPasswordAttemptWindowStartChanging(value)
				Me.SendPropertyChanging
				Me._FailedPasswordAttemptWindowStart = value
				Me.SendPropertyChanged("FailedPasswordAttemptWindowStart")
				Me.OnFailedPasswordAttemptWindowStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FailedPasswordAnswerAttemptCount", DbType:="Int")>  _
	Public Property FailedPasswordAnswerAttemptCount() As System.Nullable(Of Integer)
		Get
			Return Me._FailedPasswordAnswerAttemptCount
		End Get
		Set
			If (Me._FailedPasswordAnswerAttemptCount.Equals(value) = false) Then
				Me.OnFailedPasswordAnswerAttemptCountChanging(value)
				Me.SendPropertyChanging
				Me._FailedPasswordAnswerAttemptCount = value
				Me.SendPropertyChanged("FailedPasswordAnswerAttemptCount")
				Me.OnFailedPasswordAnswerAttemptCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FailedPasswordAnswerAttemptWindowStart", DbType:="DateTime")>  _
	Public Property FailedPasswordAnswerAttemptWindowStart() As System.Nullable(Of Date)
		Get
			Return Me._FailedPasswordAnswerAttemptWindowStart
		End Get
		Set
			If (Me._FailedPasswordAnswerAttemptWindowStart.Equals(value) = false) Then
				Me.OnFailedPasswordAnswerAttemptWindowStartChanging(value)
				Me.SendPropertyChanging
				Me._FailedPasswordAnswerAttemptWindowStart = value
				Me.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart")
				Me.OnFailedPasswordAnswerAttemptWindowStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiredDate", DbType:="DateTime")>  _
	Public Property ExpiredDate() As System.Nullable(Of Date)
		Get
			Return Me._ExpiredDate
		End Get
		Set
			If (Me._ExpiredDate.Equals(value) = false) Then
				Me.OnExpiredDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiredDate = value
				Me.SendPropertyChanged("ExpiredDate")
				Me.OnExpiredDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilePhone", DbType:="NVarChar(50)")>  _
	Public Property MobilePhone() As String
		Get
			Return Me._MobilePhone
		End Get
		Set
			If (String.Equals(Me._MobilePhone, value) = false) Then
				Me.OnMobilePhoneChanging(value)
				Me.SendPropertyChanging
				Me._MobilePhone = value
				Me.SendPropertyChanged("MobilePhone")
				Me.OnMobilePhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTP", DbType:="NVarChar(50)")>  _
	Public Property OTP() As String
		Get
			Return Me._OTP
		End Get
		Set
			If (String.Equals(Me._OTP, value) = false) Then
				Me.OnOTPChanging(value)
				Me.SendPropertyChanging
				Me._OTP = value
				Me.SendPropertyChanged("OTP")
				Me.OnOTPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClaimDailyNotification")>  _
Partial Public Class V_ClaimDailyNotification
	
	Private _NoticeID As Integer
	
	Private _ShowRoomCode As String
	
	Private _ShowRoomName As String
	
	Private _Email As String
	
	Private _Records As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeID", DbType:="Int NOT NULL")>  _
	Public Property NoticeID() As Integer
		Get
			Return Me._NoticeID
		End Get
		Set
			If ((Me._NoticeID = value)  _
						= false) Then
				Me._NoticeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(50)")>  _
	Public Property ShowRoomCode() As String
		Get
			Return Me._ShowRoomCode
		End Get
		Set
			If (String.Equals(Me._ShowRoomCode, value) = false) Then
				Me._ShowRoomCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomName", DbType:="VarChar(100)")>  _
	Public Property ShowRoomName() As String
		Get
			Return Me._ShowRoomName
		End Get
		Set
			If (String.Equals(Me._ShowRoomName, value) = false) Then
				Me._ShowRoomName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Records", DbType:="Int")>  _
	Public Property Records() As System.Nullable(Of Integer)
		Get
			Return Me._Records
		End Get
		Set
			If (Me._Records.Equals(value) = false) Then
				Me._Records = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_NissanDailyClaim_Header")>  _
Partial Public Class V_NissanDailyClaim_Header
	
	Private _ClaimNo As String
	
	Private _ShowRoomCode As String
	
	Private _ShowRoomName As String
	
	Private _DealerCode As String
	
	Private _Email As String
	
	Private _AccidentDate As String
	
	Private _Records As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNo", DbType:="VarChar(100)")>  _
	Public Property ClaimNo() As String
		Get
			Return Me._ClaimNo
		End Get
		Set
			If (String.Equals(Me._ClaimNo, value) = false) Then
				Me._ClaimNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(50)")>  _
	Public Property ShowRoomCode() As String
		Get
			Return Me._ShowRoomCode
		End Get
		Set
			If (String.Equals(Me._ShowRoomCode, value) = false) Then
				Me._ShowRoomCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomName", DbType:="VarChar(100)")>  _
	Public Property ShowRoomName() As String
		Get
			Return Me._ShowRoomName
		End Get
		Set
			If (String.Equals(Me._ShowRoomName, value) = false) Then
				Me._ShowRoomName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerCode", DbType:="VarChar(50)")>  _
	Public Property DealerCode() As String
		Get
			Return Me._DealerCode
		End Get
		Set
			If (String.Equals(Me._DealerCode, value) = false) Then
				Me._DealerCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDate", DbType:="VarChar(30)")>  _
	Public Property AccidentDate() As String
		Get
			Return Me._AccidentDate
		End Get
		Set
			If (String.Equals(Me._AccidentDate, value) = false) Then
				Me._AccidentDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Records", DbType:="Int")>  _
	Public Property Records() As System.Nullable(Of Integer)
		Get
			Return Me._Records
		End Get
		Set
			If (Me._Records.Equals(value) = false) Then
				Me._Records = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClaimNoticeDetail")>  _
Partial Public Class tblClaimNoticeDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NoticeDataID As Integer
	
	Private _NoticeID As Integer
	
	Private _Code As String
	
	Private _SendDate As System.Nullable(Of Date)
	
	Private _f01 As String
	
	Private _f02 As String
	
	Private _f03 As String
	
	Private _f04 As String
	
	Private _f05 As String
	
	Private _f06 As String
	
	Private _f07 As String
	
	Private _f08 As String
	
	Private _f09 As String
	
	Private _f10 As String
	
	Private _f11 As String
	
	Private _f12 As String
	
	Private _f13 As String
	
	Private _f14 As String
	
	Private _f15 As String
	
	Private _f16 As String
	
	Private _f17 As String
	
	Private _f18 As String
	
	Private _f19 As String
	
	Private _f20 As String
	
	Private _TRID As Integer
	
	Private _tblClaimNoticeHeader As EntityRef(Of tblClaimNoticeHeader)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNoticeDataIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNoticeDataIDChanged()
    End Sub
    Partial Private Sub OnNoticeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNoticeIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnSendDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSendDateChanged()
    End Sub
    Partial Private Sub Onf01Changing(value As String)
    End Sub
    Partial Private Sub Onf01Changed()
    End Sub
    Partial Private Sub Onf02Changing(value As String)
    End Sub
    Partial Private Sub Onf02Changed()
    End Sub
    Partial Private Sub Onf03Changing(value As String)
    End Sub
    Partial Private Sub Onf03Changed()
    End Sub
    Partial Private Sub Onf04Changing(value As String)
    End Sub
    Partial Private Sub Onf04Changed()
    End Sub
    Partial Private Sub Onf05Changing(value As String)
    End Sub
    Partial Private Sub Onf05Changed()
    End Sub
    Partial Private Sub Onf06Changing(value As String)
    End Sub
    Partial Private Sub Onf06Changed()
    End Sub
    Partial Private Sub Onf07Changing(value As String)
    End Sub
    Partial Private Sub Onf07Changed()
    End Sub
    Partial Private Sub Onf08Changing(value As String)
    End Sub
    Partial Private Sub Onf08Changed()
    End Sub
    Partial Private Sub Onf09Changing(value As String)
    End Sub
    Partial Private Sub Onf09Changed()
    End Sub
    Partial Private Sub Onf10Changing(value As String)
    End Sub
    Partial Private Sub Onf10Changed()
    End Sub
    Partial Private Sub Onf11Changing(value As String)
    End Sub
    Partial Private Sub Onf11Changed()
    End Sub
    Partial Private Sub Onf12Changing(value As String)
    End Sub
    Partial Private Sub Onf12Changed()
    End Sub
    Partial Private Sub Onf13Changing(value As String)
    End Sub
    Partial Private Sub Onf13Changed()
    End Sub
    Partial Private Sub Onf14Changing(value As String)
    End Sub
    Partial Private Sub Onf14Changed()
    End Sub
    Partial Private Sub Onf15Changing(value As String)
    End Sub
    Partial Private Sub Onf15Changed()
    End Sub
    Partial Private Sub Onf16Changing(value As String)
    End Sub
    Partial Private Sub Onf16Changed()
    End Sub
    Partial Private Sub Onf17Changing(value As String)
    End Sub
    Partial Private Sub Onf17Changed()
    End Sub
    Partial Private Sub Onf18Changing(value As String)
    End Sub
    Partial Private Sub Onf18Changed()
    End Sub
    Partial Private Sub Onf19Changing(value As String)
    End Sub
    Partial Private Sub Onf19Changed()
    End Sub
    Partial Private Sub Onf20Changing(value As String)
    End Sub
    Partial Private Sub Onf20Changed()
    End Sub
    Partial Private Sub OnTRIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblClaimNoticeHeader = CType(Nothing, EntityRef(Of tblClaimNoticeHeader))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeDataID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NoticeDataID() As Integer
		Get
			Return Me._NoticeDataID
		End Get
		Set
			If ((Me._NoticeDataID = value)  _
						= false) Then
				Me.OnNoticeDataIDChanging(value)
				Me.SendPropertyChanging
				Me._NoticeDataID = value
				Me.SendPropertyChanged("NoticeDataID")
				Me.OnNoticeDataIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeID", DbType:="Int NOT NULL")>  _
	Public Property NoticeID() As Integer
		Get
			Return Me._NoticeID
		End Get
		Set
			If ((Me._NoticeID = value)  _
						= false) Then
				If Me._tblClaimNoticeHeader.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnNoticeIDChanging(value)
				Me.SendPropertyChanging
				Me._NoticeID = value
				Me.SendPropertyChanged("NoticeID")
				Me.OnNoticeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendDate", DbType:="DateTime")>  _
	Public Property SendDate() As System.Nullable(Of Date)
		Get
			Return Me._SendDate
		End Get
		Set
			If (Me._SendDate.Equals(value) = false) Then
				Me.OnSendDateChanging(value)
				Me.SendPropertyChanging
				Me._SendDate = value
				Me.SendPropertyChanged("SendDate")
				Me.OnSendDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f01", DbType:="VarChar(MAX)")>  _
	Public Property f01() As String
		Get
			Return Me._f01
		End Get
		Set
			If (String.Equals(Me._f01, value) = false) Then
				Me.Onf01Changing(value)
				Me.SendPropertyChanging
				Me._f01 = value
				Me.SendPropertyChanged("f01")
				Me.Onf01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f02", DbType:="VarChar(MAX)")>  _
	Public Property f02() As String
		Get
			Return Me._f02
		End Get
		Set
			If (String.Equals(Me._f02, value) = false) Then
				Me.Onf02Changing(value)
				Me.SendPropertyChanging
				Me._f02 = value
				Me.SendPropertyChanged("f02")
				Me.Onf02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f03", DbType:="VarChar(MAX)")>  _
	Public Property f03() As String
		Get
			Return Me._f03
		End Get
		Set
			If (String.Equals(Me._f03, value) = false) Then
				Me.Onf03Changing(value)
				Me.SendPropertyChanging
				Me._f03 = value
				Me.SendPropertyChanged("f03")
				Me.Onf03Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f04", DbType:="VarChar(MAX)")>  _
	Public Property f04() As String
		Get
			Return Me._f04
		End Get
		Set
			If (String.Equals(Me._f04, value) = false) Then
				Me.Onf04Changing(value)
				Me.SendPropertyChanging
				Me._f04 = value
				Me.SendPropertyChanged("f04")
				Me.Onf04Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f05", DbType:="VarChar(MAX)")>  _
	Public Property f05() As String
		Get
			Return Me._f05
		End Get
		Set
			If (String.Equals(Me._f05, value) = false) Then
				Me.Onf05Changing(value)
				Me.SendPropertyChanging
				Me._f05 = value
				Me.SendPropertyChanged("f05")
				Me.Onf05Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f06", DbType:="VarChar(MAX)")>  _
	Public Property f06() As String
		Get
			Return Me._f06
		End Get
		Set
			If (String.Equals(Me._f06, value) = false) Then
				Me.Onf06Changing(value)
				Me.SendPropertyChanging
				Me._f06 = value
				Me.SendPropertyChanged("f06")
				Me.Onf06Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f07", DbType:="VarChar(MAX)")>  _
	Public Property f07() As String
		Get
			Return Me._f07
		End Get
		Set
			If (String.Equals(Me._f07, value) = false) Then
				Me.Onf07Changing(value)
				Me.SendPropertyChanging
				Me._f07 = value
				Me.SendPropertyChanged("f07")
				Me.Onf07Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f08", DbType:="VarChar(MAX)")>  _
	Public Property f08() As String
		Get
			Return Me._f08
		End Get
		Set
			If (String.Equals(Me._f08, value) = false) Then
				Me.Onf08Changing(value)
				Me.SendPropertyChanging
				Me._f08 = value
				Me.SendPropertyChanged("f08")
				Me.Onf08Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f09", DbType:="VarChar(MAX)")>  _
	Public Property f09() As String
		Get
			Return Me._f09
		End Get
		Set
			If (String.Equals(Me._f09, value) = false) Then
				Me.Onf09Changing(value)
				Me.SendPropertyChanging
				Me._f09 = value
				Me.SendPropertyChanged("f09")
				Me.Onf09Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f10", DbType:="VarChar(MAX)")>  _
	Public Property f10() As String
		Get
			Return Me._f10
		End Get
		Set
			If (String.Equals(Me._f10, value) = false) Then
				Me.Onf10Changing(value)
				Me.SendPropertyChanging
				Me._f10 = value
				Me.SendPropertyChanged("f10")
				Me.Onf10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f11", DbType:="VarChar(MAX)")>  _
	Public Property f11() As String
		Get
			Return Me._f11
		End Get
		Set
			If (String.Equals(Me._f11, value) = false) Then
				Me.Onf11Changing(value)
				Me.SendPropertyChanging
				Me._f11 = value
				Me.SendPropertyChanged("f11")
				Me.Onf11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f12", DbType:="VarChar(MAX)")>  _
	Public Property f12() As String
		Get
			Return Me._f12
		End Get
		Set
			If (String.Equals(Me._f12, value) = false) Then
				Me.Onf12Changing(value)
				Me.SendPropertyChanging
				Me._f12 = value
				Me.SendPropertyChanged("f12")
				Me.Onf12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f13", DbType:="VarChar(MAX)")>  _
	Public Property f13() As String
		Get
			Return Me._f13
		End Get
		Set
			If (String.Equals(Me._f13, value) = false) Then
				Me.Onf13Changing(value)
				Me.SendPropertyChanging
				Me._f13 = value
				Me.SendPropertyChanged("f13")
				Me.Onf13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f14", DbType:="VarChar(MAX)")>  _
	Public Property f14() As String
		Get
			Return Me._f14
		End Get
		Set
			If (String.Equals(Me._f14, value) = false) Then
				Me.Onf14Changing(value)
				Me.SendPropertyChanging
				Me._f14 = value
				Me.SendPropertyChanged("f14")
				Me.Onf14Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f15", DbType:="VarChar(MAX)")>  _
	Public Property f15() As String
		Get
			Return Me._f15
		End Get
		Set
			If (String.Equals(Me._f15, value) = false) Then
				Me.Onf15Changing(value)
				Me.SendPropertyChanging
				Me._f15 = value
				Me.SendPropertyChanged("f15")
				Me.Onf15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f16", DbType:="VarChar(MAX)")>  _
	Public Property f16() As String
		Get
			Return Me._f16
		End Get
		Set
			If (String.Equals(Me._f16, value) = false) Then
				Me.Onf16Changing(value)
				Me.SendPropertyChanging
				Me._f16 = value
				Me.SendPropertyChanged("f16")
				Me.Onf16Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f17", DbType:="VarChar(MAX)")>  _
	Public Property f17() As String
		Get
			Return Me._f17
		End Get
		Set
			If (String.Equals(Me._f17, value) = false) Then
				Me.Onf17Changing(value)
				Me.SendPropertyChanging
				Me._f17 = value
				Me.SendPropertyChanged("f17")
				Me.Onf17Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f18", DbType:="VarChar(MAX)")>  _
	Public Property f18() As String
		Get
			Return Me._f18
		End Get
		Set
			If (String.Equals(Me._f18, value) = false) Then
				Me.Onf18Changing(value)
				Me.SendPropertyChanging
				Me._f18 = value
				Me.SendPropertyChanged("f18")
				Me.Onf18Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f19", DbType:="VarChar(MAX)")>  _
	Public Property f19() As String
		Get
			Return Me._f19
		End Get
		Set
			If (String.Equals(Me._f19, value) = false) Then
				Me.Onf19Changing(value)
				Me.SendPropertyChanging
				Me._f19 = value
				Me.SendPropertyChanged("f19")
				Me.Onf19Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_f20", DbType:="VarChar(MAX)")>  _
	Public Property f20() As String
		Get
			Return Me._f20
		End Get
		Set
			If (String.Equals(Me._f20, value) = false) Then
				Me.Onf20Changing(value)
				Me.SendPropertyChanging
				Me._f20 = value
				Me.SendPropertyChanged("f20")
				Me.Onf20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRID", DbType:="Int NOT NULL")>  _
	Public Property TRID() As Integer
		Get
			Return Me._TRID
		End Get
		Set
			If ((Me._TRID = value)  _
						= false) Then
				Me.OnTRIDChanging(value)
				Me.SendPropertyChanging
				Me._TRID = value
				Me.SendPropertyChanged("TRID")
				Me.OnTRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblClaimNoticeHeader_tblClaimNoticeDetail", Storage:="_tblClaimNoticeHeader", ThisKey:="NoticeID", OtherKey:="NoticeID", IsForeignKey:=true)>  _
	Public Property tblClaimNoticeHeader() As tblClaimNoticeHeader
		Get
			Return Me._tblClaimNoticeHeader.Entity
		End Get
		Set
			Dim previousValue As tblClaimNoticeHeader = Me._tblClaimNoticeHeader.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tblClaimNoticeHeader.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tblClaimNoticeHeader.Entity = Nothing
					previousValue.tblClaimNoticeDetails.Remove(Me)
				End If
				Me._tblClaimNoticeHeader.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tblClaimNoticeDetails.Add(Me)
					Me._NoticeID = value.NoticeID
				Else
					Me._NoticeID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("tblClaimNoticeHeader")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblClaimNoticeHeader")>  _
Partial Public Class tblClaimNoticeHeader
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _NoticeID As Integer
	
	Private _NoticeTitle As String
	
	Private _NoticeCode As String
	
	Private _NoticeDate As System.Nullable(Of Date)
	
	Private _DueDate As System.Nullable(Of Date)
	
	Private _CreationBy As String
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _ModifyBy As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _SendBy As String
	
	Private _SendDate As System.Nullable(Of Date)
	
	Private _ReSendBy As String
	
	Private _ReSendDate As System.Nullable(Of Date)
	
	Private _tblClaimNoticeDetails As EntitySet(Of tblClaimNoticeDetail)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNoticeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNoticeIDChanged()
    End Sub
    Partial Private Sub OnNoticeTitleChanging(value As String)
    End Sub
    Partial Private Sub OnNoticeTitleChanged()
    End Sub
    Partial Private Sub OnNoticeCodeChanging(value As String)
    End Sub
    Partial Private Sub OnNoticeCodeChanged()
    End Sub
    Partial Private Sub OnNoticeDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNoticeDateChanged()
    End Sub
    Partial Private Sub OnDueDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDueDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnSendByChanging(value As String)
    End Sub
    Partial Private Sub OnSendByChanged()
    End Sub
    Partial Private Sub OnSendDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSendDateChanged()
    End Sub
    Partial Private Sub OnReSendByChanging(value As String)
    End Sub
    Partial Private Sub OnReSendByChanged()
    End Sub
    Partial Private Sub OnReSendDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReSendDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tblClaimNoticeDetails = New EntitySet(Of tblClaimNoticeDetail)(AddressOf Me.attach_tblClaimNoticeDetails, AddressOf Me.detach_tblClaimNoticeDetails)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property NoticeID() As Integer
		Get
			Return Me._NoticeID
		End Get
		Set
			If ((Me._NoticeID = value)  _
						= false) Then
				Me.OnNoticeIDChanging(value)
				Me.SendPropertyChanging
				Me._NoticeID = value
				Me.SendPropertyChanged("NoticeID")
				Me.OnNoticeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeTitle", DbType:="VarChar(255)")>  _
	Public Property NoticeTitle() As String
		Get
			Return Me._NoticeTitle
		End Get
		Set
			If (String.Equals(Me._NoticeTitle, value) = false) Then
				Me.OnNoticeTitleChanging(value)
				Me.SendPropertyChanging
				Me._NoticeTitle = value
				Me.SendPropertyChanged("NoticeTitle")
				Me.OnNoticeTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeCode", DbType:="VarChar(8)")>  _
	Public Property NoticeCode() As String
		Get
			Return Me._NoticeCode
		End Get
		Set
			If (String.Equals(Me._NoticeCode, value) = false) Then
				Me.OnNoticeCodeChanging(value)
				Me.SendPropertyChanging
				Me._NoticeCode = value
				Me.SendPropertyChanged("NoticeCode")
				Me.OnNoticeCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeDate", DbType:="DateTime")>  _
	Public Property NoticeDate() As System.Nullable(Of Date)
		Get
			Return Me._NoticeDate
		End Get
		Set
			If (Me._NoticeDate.Equals(value) = false) Then
				Me.OnNoticeDateChanging(value)
				Me.SendPropertyChanging
				Me._NoticeDate = value
				Me.SendPropertyChanged("NoticeDate")
				Me.OnNoticeDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DueDate", DbType:="DateTime")>  _
	Public Property DueDate() As System.Nullable(Of Date)
		Get
			Return Me._DueDate
		End Get
		Set
			If (Me._DueDate.Equals(value) = false) Then
				Me.OnDueDateChanging(value)
				Me.SendPropertyChanging
				Me._DueDate = value
				Me.SendPropertyChanged("DueDate")
				Me.OnDueDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")>  _
	Public Property CreationBy() As String
		Get
			Return Me._CreationBy
		End Get
		Set
			If (String.Equals(Me._CreationBy, value) = false) Then
				Me.OnCreationByChanging(value)
				Me.SendPropertyChanging
				Me._CreationBy = value
				Me.SendPropertyChanged("CreationBy")
				Me.OnCreationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")>  _
	Public Property ModifyBy() As String
		Get
			Return Me._ModifyBy
		End Get
		Set
			If (String.Equals(Me._ModifyBy, value) = false) Then
				Me.OnModifyByChanging(value)
				Me.SendPropertyChanging
				Me._ModifyBy = value
				Me.SendPropertyChanged("ModifyBy")
				Me.OnModifyByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me.OnModifyDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifyDate = value
				Me.SendPropertyChanged("ModifyDate")
				Me.OnModifyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendBy", DbType:="VarChar(50)")>  _
	Public Property SendBy() As String
		Get
			Return Me._SendBy
		End Get
		Set
			If (String.Equals(Me._SendBy, value) = false) Then
				Me.OnSendByChanging(value)
				Me.SendPropertyChanging
				Me._SendBy = value
				Me.SendPropertyChanged("SendBy")
				Me.OnSendByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendDate", DbType:="DateTime")>  _
	Public Property SendDate() As System.Nullable(Of Date)
		Get
			Return Me._SendDate
		End Get
		Set
			If (Me._SendDate.Equals(value) = false) Then
				Me.OnSendDateChanging(value)
				Me.SendPropertyChanging
				Me._SendDate = value
				Me.SendPropertyChanged("SendDate")
				Me.OnSendDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReSendBy", DbType:="VarChar(50)")>  _
	Public Property ReSendBy() As String
		Get
			Return Me._ReSendBy
		End Get
		Set
			If (String.Equals(Me._ReSendBy, value) = false) Then
				Me.OnReSendByChanging(value)
				Me.SendPropertyChanging
				Me._ReSendBy = value
				Me.SendPropertyChanged("ReSendBy")
				Me.OnReSendByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReSendDate", DbType:="DateTime")>  _
	Public Property ReSendDate() As System.Nullable(Of Date)
		Get
			Return Me._ReSendDate
		End Get
		Set
			If (Me._ReSendDate.Equals(value) = false) Then
				Me.OnReSendDateChanging(value)
				Me.SendPropertyChanging
				Me._ReSendDate = value
				Me.SendPropertyChanged("ReSendDate")
				Me.OnReSendDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tblClaimNoticeHeader_tblClaimNoticeDetail", Storage:="_tblClaimNoticeDetails", ThisKey:="NoticeID", OtherKey:="NoticeID")>  _
	Public Property tblClaimNoticeDetails() As EntitySet(Of tblClaimNoticeDetail)
		Get
			Return Me._tblClaimNoticeDetails
		End Get
		Set
			Me._tblClaimNoticeDetails.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tblClaimNoticeDetails(ByVal entity As tblClaimNoticeDetail)
		Me.SendPropertyChanging
		entity.tblClaimNoticeHeader = Me
	End Sub
	
	Private Sub detach_tblClaimNoticeDetails(ByVal entity As tblClaimNoticeDetail)
		Me.SendPropertyChanging
		entity.tblClaimNoticeHeader = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_NissanDailyClaim_Details")>  _
Partial Public Class V_NissanDailyClaim_Detail
	
	Private _App_TempPolicyNo As String
	
	Private _FullCustomerName As String
	
	Private _ChassisNo As String
	
	Private _CarLicense As String
	
	Private _PolicyNo As String
	
	Private _ClaimNo As String
	
	Private _AccidentDate As String
	
	Private _AccidentPlace As String
	
	Private _InsurerName As String
	
	Private _InsurerCode As String
	
	Private _ShowRoomCode As String
	
	Private _ShowRoomName As String
	
	Private _DealerCode As String
	
	Private _IsPost As System.Nullable(Of Boolean)
	
	Private _TRID As Integer
	
	Private _EffectiveDate As String
	
	Private _Beneficiary As String
	
	Private _NoticeName As String
	
	Private _NoticeTel As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_App_TempPolicyNo", DbType:="VarChar(100)")>  _
	Public Property App_TempPolicyNo() As String
		Get
			Return Me._App_TempPolicyNo
		End Get
		Set
			If (String.Equals(Me._App_TempPolicyNo, value) = false) Then
				Me._App_TempPolicyNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullCustomerName", DbType:="VarChar(255)")>  _
	Public Property FullCustomerName() As String
		Get
			Return Me._FullCustomerName
		End Get
		Set
			If (String.Equals(Me._FullCustomerName, value) = false) Then
				Me._FullCustomerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChassisNo", DbType:="VarChar(50)")>  _
	Public Property ChassisNo() As String
		Get
			Return Me._ChassisNo
		End Get
		Set
			If (String.Equals(Me._ChassisNo, value) = false) Then
				Me._ChassisNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarLicense", DbType:="VarChar(50)")>  _
	Public Property CarLicense() As String
		Get
			Return Me._CarLicense
		End Get
		Set
			If (String.Equals(Me._CarLicense, value) = false) Then
				Me._CarLicense = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="VarChar(100)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me._PolicyNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNo", DbType:="VarChar(100)")>  _
	Public Property ClaimNo() As String
		Get
			Return Me._ClaimNo
		End Get
		Set
			If (String.Equals(Me._ClaimNo, value) = false) Then
				Me._ClaimNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDate", DbType:="VarChar(10)")>  _
	Public Property AccidentDate() As String
		Get
			Return Me._AccidentDate
		End Get
		Set
			If (String.Equals(Me._AccidentDate, value) = false) Then
				Me._AccidentDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace", DbType:="VarChar(255)")>  _
	Public Property AccidentPlace() As String
		Get
			Return Me._AccidentPlace
		End Get
		Set
			If (String.Equals(Me._AccidentPlace, value) = false) Then
				Me._AccidentPlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerName", DbType:="VarChar(100)")>  _
	Public Property InsurerName() As String
		Get
			Return Me._InsurerName
		End Get
		Set
			If (String.Equals(Me._InsurerName, value) = false) Then
				Me._InsurerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property InsurerCode() As String
		Get
			Return Me._InsurerCode
		End Get
		Set
			If (String.Equals(Me._InsurerCode, value) = false) Then
				Me._InsurerCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(50)")>  _
	Public Property ShowRoomCode() As String
		Get
			Return Me._ShowRoomCode
		End Get
		Set
			If (String.Equals(Me._ShowRoomCode, value) = false) Then
				Me._ShowRoomCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomName", DbType:="VarChar(100)")>  _
	Public Property ShowRoomName() As String
		Get
			Return Me._ShowRoomName
		End Get
		Set
			If (String.Equals(Me._ShowRoomName, value) = false) Then
				Me._ShowRoomName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerCode", DbType:="VarChar(50)")>  _
	Public Property DealerCode() As String
		Get
			Return Me._DealerCode
		End Get
		Set
			If (String.Equals(Me._DealerCode, value) = false) Then
				Me._DealerCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsPost", DbType:="Bit")>  _
	Public Property IsPost() As System.Nullable(Of Boolean)
		Get
			Return Me._IsPost
		End Get
		Set
			If (Me._IsPost.Equals(value) = false) Then
				Me._IsPost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRID", DbType:="Int NOT NULL")>  _
	Public Property TRID() As Integer
		Get
			Return Me._TRID
		End Get
		Set
			If ((Me._TRID = value)  _
						= false) Then
				Me._TRID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="VarChar(10)")>  _
	Public Property EffectiveDate() As String
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (String.Equals(Me._EffectiveDate, value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficiary", DbType:="VarChar(255)")>  _
	Public Property Beneficiary() As String
		Get
			Return Me._Beneficiary
		End Get
		Set
			If (String.Equals(Me._Beneficiary, value) = false) Then
				Me._Beneficiary = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeName", DbType:="VarChar(255)")>  _
	Public Property NoticeName() As String
		Get
			Return Me._NoticeName
		End Get
		Set
			If (String.Equals(Me._NoticeName, value) = false) Then
				Me._NoticeName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeTel", DbType:="VarChar(100)")>  _
	Public Property NoticeTel() As String
		Get
			Return Me._NoticeTel
		End Get
		Set
			If (String.Equals(Me._NoticeTel, value) = false) Then
				Me._NoticeTel = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MailNotifications")>  _
Partial Public Class MailNotification
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Code As String
	
	Private _Name As String
	
	Private _MailFrom As String
	
	Private _MailTo As String
	
	Private _MailCC As String
	
	Private _MailBcc As String
	
	Private _MailSubject As String
	
	Private _MailBody As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _ModifiedDate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnMailFromChanging(value As String)
    End Sub
    Partial Private Sub OnMailFromChanged()
    End Sub
    Partial Private Sub OnMailToChanging(value As String)
    End Sub
    Partial Private Sub OnMailToChanged()
    End Sub
    Partial Private Sub OnMailCCChanging(value As String)
    End Sub
    Partial Private Sub OnMailCCChanged()
    End Sub
    Partial Private Sub OnMailBccChanging(value As String)
    End Sub
    Partial Private Sub OnMailBccChanged()
    End Sub
    Partial Private Sub OnMailSubjectChanging(value As String)
    End Sub
    Partial Private Sub OnMailSubjectChanged()
    End Sub
    Partial Private Sub OnMailBodyChanging(value As String)
    End Sub
    Partial Private Sub OnMailBodyChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnModifiedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailFrom", DbType:="VarChar(MAX)")>  _
	Public Property MailFrom() As String
		Get
			Return Me._MailFrom
		End Get
		Set
			If (String.Equals(Me._MailFrom, value) = false) Then
				Me.OnMailFromChanging(value)
				Me.SendPropertyChanging
				Me._MailFrom = value
				Me.SendPropertyChanged("MailFrom")
				Me.OnMailFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailTo", DbType:="VarChar(MAX)")>  _
	Public Property MailTo() As String
		Get
			Return Me._MailTo
		End Get
		Set
			If (String.Equals(Me._MailTo, value) = false) Then
				Me.OnMailToChanging(value)
				Me.SendPropertyChanging
				Me._MailTo = value
				Me.SendPropertyChanged("MailTo")
				Me.OnMailToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailCC", DbType:="VarChar(MAX)")>  _
	Public Property MailCC() As String
		Get
			Return Me._MailCC
		End Get
		Set
			If (String.Equals(Me._MailCC, value) = false) Then
				Me.OnMailCCChanging(value)
				Me.SendPropertyChanging
				Me._MailCC = value
				Me.SendPropertyChanged("MailCC")
				Me.OnMailCCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailBcc", DbType:="VarChar(MAX)")>  _
	Public Property MailBcc() As String
		Get
			Return Me._MailBcc
		End Get
		Set
			If (String.Equals(Me._MailBcc, value) = false) Then
				Me.OnMailBccChanging(value)
				Me.SendPropertyChanging
				Me._MailBcc = value
				Me.SendPropertyChanged("MailBcc")
				Me.OnMailBccChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailSubject", DbType:="VarChar(MAX)")>  _
	Public Property MailSubject() As String
		Get
			Return Me._MailSubject
		End Get
		Set
			If (String.Equals(Me._MailSubject, value) = false) Then
				Me.OnMailSubjectChanging(value)
				Me.SendPropertyChanging
				Me._MailSubject = value
				Me.SendPropertyChanged("MailSubject")
				Me.OnMailSubjectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailBody", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property MailBody() As String
		Get
			Return Me._MailBody
		End Get
		Set
			If (String.Equals(Me._MailBody, value) = false) Then
				Me.OnMailBodyChanging(value)
				Me.SendPropertyChanging
				Me._MailBody = value
				Me.SendPropertyChanged("MailBody")
				Me.OnMailBodyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDate", DbType:="DateTime")>  _
	Public Property ModifiedDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifiedDate
		End Get
		Set
			If (Me._ModifiedDate.Equals(value) = false) Then
				Me.OnModifiedDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedDate = value
				Me.SendPropertyChanged("ModifiedDate")
				Me.OnModifiedDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClaimDaily_00_Notice_Daily")>  _
Partial Public Class V_ClaimDaily_00_Notice_Daily
	
	Private _App_TempPolicyNo As String
	
	Private _FullCustomerName As String
	
	Private _ChassisNo As String
	
	Private _CarLicense As String
	
	Private _PolicyNo As String
	
	Private _RefNo As String
	
	Private _ClaimNo As String
	
	Private _AccidentDate As String
	
	Private _AccidentTime As String
	
	Private _AccidentPlace As String
	
	Private _InsurerName As String
	
	Private _InsurerCode As String
	
	Private _ShowRoomCode As String
	
	Private _ShowRoomName As String
	
	Private _BranchName As String
	
	Private _DealerName As String
	
	Private _DealerCode As String
	
	Private _TRID As Integer
	
	Private _EffectiveDate As String
	
	Private _ExpiryDate As String
	
	Private _Beneficiary As String
	
	Private _NoticeName As String
	
	Private _NoticeTel As String
	
	Private _SubmitDate As System.Nullable(Of Date)
	
	Private _AgentCode As String
	
	Private _Dealer_Email As String
	
	Private _Status As Boolean
	
	Private _ClaimNoticeDate As String
	
	Private _ClaimNoticeTime As String
	
	Private _CarBrand As String
	
	Private _CarModel As String
	
	Private _CarYear As String
	
	Private _DriverName As String
	
	Private _DriverTel As String
	
	Private _ClaimDamageDetails As String
	
	Private _ClaimType As String
	
	Private _ClaimDetails As String
	
	Private _ClaimResult As String
	
	Private _LaborAmt As System.Nullable(Of Double)
	
	Private _PartsAmt As System.Nullable(Of Double)
	
	Private _OtherAmt As System.Nullable(Of Double)
	
	Private _GarageType As String
	
	Private _GarageName As String
	
	Private _GaragePlace As String
	
	Private _CarRepairDate As String
	
	Private _CarReceiveDate As String
	
	Private _ConsentFormNo As String
	
	Private _PartsDealerName As String
	
	Private _PaymentDetails As String
	
	Private _ClaimStatus As String
	
	Private _IsPost As Boolean
	
	Private _PostDate As System.Nullable(Of Date)
	
	Private _Remark As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_App_TempPolicyNo", DbType:="VarChar(100)")>  _
	Public Property App_TempPolicyNo() As String
		Get
			Return Me._App_TempPolicyNo
		End Get
		Set
			If (String.Equals(Me._App_TempPolicyNo, value) = false) Then
				Me._App_TempPolicyNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullCustomerName", DbType:="VarChar(255)")>  _
	Public Property FullCustomerName() As String
		Get
			Return Me._FullCustomerName
		End Get
		Set
			If (String.Equals(Me._FullCustomerName, value) = false) Then
				Me._FullCustomerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChassisNo", DbType:="VarChar(50)")>  _
	Public Property ChassisNo() As String
		Get
			Return Me._ChassisNo
		End Get
		Set
			If (String.Equals(Me._ChassisNo, value) = false) Then
				Me._ChassisNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarLicense", DbType:="VarChar(50)")>  _
	Public Property CarLicense() As String
		Get
			Return Me._CarLicense
		End Get
		Set
			If (String.Equals(Me._CarLicense, value) = false) Then
				Me._CarLicense = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="VarChar(100)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me._PolicyNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefNo", DbType:="VarChar(100)")>  _
	Public Property RefNo() As String
		Get
			Return Me._RefNo
		End Get
		Set
			If (String.Equals(Me._RefNo, value) = false) Then
				Me._RefNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNo", DbType:="VarChar(100)")>  _
	Public Property ClaimNo() As String
		Get
			Return Me._ClaimNo
		End Get
		Set
			If (String.Equals(Me._ClaimNo, value) = false) Then
				Me._ClaimNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDate", DbType:="VarChar(10)")>  _
	Public Property AccidentDate() As String
		Get
			Return Me._AccidentDate
		End Get
		Set
			If (String.Equals(Me._AccidentDate, value) = false) Then
				Me._AccidentDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentTime", DbType:="VarChar(10)")>  _
	Public Property AccidentTime() As String
		Get
			Return Me._AccidentTime
		End Get
		Set
			If (String.Equals(Me._AccidentTime, value) = false) Then
				Me._AccidentTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace", DbType:="VarChar(8000)")>  _
	Public Property AccidentPlace() As String
		Get
			Return Me._AccidentPlace
		End Get
		Set
			If (String.Equals(Me._AccidentPlace, value) = false) Then
				Me._AccidentPlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerName", DbType:="VarChar(100)")>  _
	Public Property InsurerName() As String
		Get
			Return Me._InsurerName
		End Get
		Set
			If (String.Equals(Me._InsurerName, value) = false) Then
				Me._InsurerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="VarChar(10)")>  _
	Public Property InsurerCode() As String
		Get
			Return Me._InsurerCode
		End Get
		Set
			If (String.Equals(Me._InsurerCode, value) = false) Then
				Me._InsurerCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(50)")>  _
	Public Property ShowRoomCode() As String
		Get
			Return Me._ShowRoomCode
		End Get
		Set
			If (String.Equals(Me._ShowRoomCode, value) = false) Then
				Me._ShowRoomCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomName", DbType:="VarChar(113)")>  _
	Public Property ShowRoomName() As String
		Get
			Return Me._ShowRoomName
		End Get
		Set
			If (String.Equals(Me._ShowRoomName, value) = false) Then
				Me._ShowRoomName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchName", DbType:="VarChar(100)")>  _
	Public Property BranchName() As String
		Get
			Return Me._BranchName
		End Get
		Set
			If (String.Equals(Me._BranchName, value) = false) Then
				Me._BranchName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerName", DbType:="NVarChar(255)")>  _
	Public Property DealerName() As String
		Get
			Return Me._DealerName
		End Get
		Set
			If (String.Equals(Me._DealerName, value) = false) Then
				Me._DealerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerCode", DbType:="VarChar(5)")>  _
	Public Property DealerCode() As String
		Get
			Return Me._DealerCode
		End Get
		Set
			If (String.Equals(Me._DealerCode, value) = false) Then
				Me._DealerCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRID", DbType:="Int NOT NULL")>  _
	Public Property TRID() As Integer
		Get
			Return Me._TRID
		End Get
		Set
			If ((Me._TRID = value)  _
						= false) Then
				Me._TRID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="VarChar(10)")>  _
	Public Property EffectiveDate() As String
		Get
			Return Me._EffectiveDate
		End Get
		Set
			If (String.Equals(Me._EffectiveDate, value) = false) Then
				Me._EffectiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="VarChar(10)")>  _
	Public Property ExpiryDate() As String
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (String.Equals(Me._ExpiryDate, value) = false) Then
				Me._ExpiryDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficiary", DbType:="VarChar(255)")>  _
	Public Property Beneficiary() As String
		Get
			Return Me._Beneficiary
		End Get
		Set
			If (String.Equals(Me._Beneficiary, value) = false) Then
				Me._Beneficiary = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeName", DbType:="VarChar(255)")>  _
	Public Property NoticeName() As String
		Get
			Return Me._NoticeName
		End Get
		Set
			If (String.Equals(Me._NoticeName, value) = false) Then
				Me._NoticeName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeTel", DbType:="VarChar(100)")>  _
	Public Property NoticeTel() As String
		Get
			Return Me._NoticeTel
		End Get
		Set
			If (String.Equals(Me._NoticeTel, value) = false) Then
				Me._NoticeTel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitDate", DbType:="DateTime")>  _
	Public Property SubmitDate() As System.Nullable(Of Date)
		Get
			Return Me._SubmitDate
		End Get
		Set
			If (Me._SubmitDate.Equals(value) = false) Then
				Me._SubmitDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="VarChar(50)")>  _
	Public Property AgentCode() As String
		Get
			Return Me._AgentCode
		End Get
		Set
			If (String.Equals(Me._AgentCode, value) = false) Then
				Me._AgentCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dealer_Email", DbType:="NVarChar(255)")>  _
	Public Property Dealer_Email() As String
		Get
			Return Me._Dealer_Email
		End Get
		Set
			If (String.Equals(Me._Dealer_Email, value) = false) Then
				Me._Dealer_Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit NOT NULL")>  _
	Public Property Status() As Boolean
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeDate", DbType:="VarChar(10)")>  _
	Public Property ClaimNoticeDate() As String
		Get
			Return Me._ClaimNoticeDate
		End Get
		Set
			If (String.Equals(Me._ClaimNoticeDate, value) = false) Then
				Me._ClaimNoticeDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeTime", DbType:="VarChar(10)")>  _
	Public Property ClaimNoticeTime() As String
		Get
			Return Me._ClaimNoticeTime
		End Get
		Set
			If (String.Equals(Me._ClaimNoticeTime, value) = false) Then
				Me._ClaimNoticeTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrand", DbType:="VarChar(50)")>  _
	Public Property CarBrand() As String
		Get
			Return Me._CarBrand
		End Get
		Set
			If (String.Equals(Me._CarBrand, value) = false) Then
				Me._CarBrand = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModel", DbType:="VarChar(100)")>  _
	Public Property CarModel() As String
		Get
			Return Me._CarModel
		End Get
		Set
			If (String.Equals(Me._CarModel, value) = false) Then
				Me._CarModel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarYear", DbType:="VarChar(50)")>  _
	Public Property CarYear() As String
		Get
			Return Me._CarYear
		End Get
		Set
			If (String.Equals(Me._CarYear, value) = false) Then
				Me._CarYear = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverName", DbType:="VarChar(255)")>  _
	Public Property DriverName() As String
		Get
			Return Me._DriverName
		End Get
		Set
			If (String.Equals(Me._DriverName, value) = false) Then
				Me._DriverName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverTel", DbType:="VarChar(100)")>  _
	Public Property DriverTel() As String
		Get
			Return Me._DriverTel
		End Get
		Set
			If (String.Equals(Me._DriverTel, value) = false) Then
				Me._DriverTel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimDamageDetails", DbType:="VarChar(MAX)")>  _
	Public Property ClaimDamageDetails() As String
		Get
			Return Me._ClaimDamageDetails
		End Get
		Set
			If (String.Equals(Me._ClaimDamageDetails, value) = false) Then
				Me._ClaimDamageDetails = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimType", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property ClaimType() As String
		Get
			Return Me._ClaimType
		End Get
		Set
			If (String.Equals(Me._ClaimType, value) = false) Then
				Me._ClaimType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimDetails", DbType:="VarChar(255)")>  _
	Public Property ClaimDetails() As String
		Get
			Return Me._ClaimDetails
		End Get
		Set
			If (String.Equals(Me._ClaimDetails, value) = false) Then
				Me._ClaimDetails = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimResult", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ClaimResult() As String
		Get
			Return Me._ClaimResult
		End Get
		Set
			If (String.Equals(Me._ClaimResult, value) = false) Then
				Me._ClaimResult = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LaborAmt", DbType:="Float")>  _
	Public Property LaborAmt() As System.Nullable(Of Double)
		Get
			Return Me._LaborAmt
		End Get
		Set
			If (Me._LaborAmt.Equals(value) = false) Then
				Me._LaborAmt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartsAmt", DbType:="Float")>  _
	Public Property PartsAmt() As System.Nullable(Of Double)
		Get
			Return Me._PartsAmt
		End Get
		Set
			If (Me._PartsAmt.Equals(value) = false) Then
				Me._PartsAmt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OtherAmt", DbType:="Float")>  _
	Public Property OtherAmt() As System.Nullable(Of Double)
		Get
			Return Me._OtherAmt
		End Get
		Set
			If (Me._OtherAmt.Equals(value) = false) Then
				Me._OtherAmt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property GarageType() As String
		Get
			Return Me._GarageType
		End Get
		Set
			If (String.Equals(Me._GarageType, value) = false) Then
				Me._GarageType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageName", DbType:="VarChar(100)")>  _
	Public Property GarageName() As String
		Get
			Return Me._GarageName
		End Get
		Set
			If (String.Equals(Me._GarageName, value) = false) Then
				Me._GarageName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GaragePlace", DbType:="VarChar(8000)")>  _
	Public Property GaragePlace() As String
		Get
			Return Me._GaragePlace
		End Get
		Set
			If (String.Equals(Me._GaragePlace, value) = false) Then
				Me._GaragePlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarRepairDate", DbType:="VarChar(10)")>  _
	Public Property CarRepairDate() As String
		Get
			Return Me._CarRepairDate
		End Get
		Set
			If (String.Equals(Me._CarRepairDate, value) = false) Then
				Me._CarRepairDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarReceiveDate", DbType:="VarChar(10)")>  _
	Public Property CarReceiveDate() As String
		Get
			Return Me._CarReceiveDate
		End Get
		Set
			If (String.Equals(Me._CarReceiveDate, value) = false) Then
				Me._CarReceiveDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConsentFormNo", DbType:="VarChar(50)")>  _
	Public Property ConsentFormNo() As String
		Get
			Return Me._ConsentFormNo
		End Get
		Set
			If (String.Equals(Me._ConsentFormNo, value) = false) Then
				Me._ConsentFormNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartsDealerName", DbType:="VarChar(255)")>  _
	Public Property PartsDealerName() As String
		Get
			Return Me._PartsDealerName
		End Get
		Set
			If (String.Equals(Me._PartsDealerName, value) = false) Then
				Me._PartsDealerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentDetails", DbType:="VarChar(MAX)")>  _
	Public Property PaymentDetails() As String
		Get
			Return Me._PaymentDetails
		End Get
		Set
			If (String.Equals(Me._PaymentDetails, value) = false) Then
				Me._PaymentDetails = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimStatus", DbType:="VarChar(19) NOT NULL", CanBeNull:=false)>  _
	Public Property ClaimStatus() As String
		Get
			Return Me._ClaimStatus
		End Get
		Set
			If (String.Equals(Me._ClaimStatus, value) = false) Then
				Me._ClaimStatus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsPost", DbType:="Bit NOT NULL")>  _
	Public Property IsPost() As Boolean
		Get
			Return Me._IsPost
		End Get
		Set
			If ((Me._IsPost = value)  _
						= false) Then
				Me._IsPost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostDate", DbType:="DateTime")>  _
	Public Property PostDate() As System.Nullable(Of Date)
		Get
			Return Me._PostDate
		End Get
		Set
			If (Me._PostDate.Equals(value) = false) Then
				Me._PostDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me._Remark = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDealer")>  _
Partial Public Class tblDealer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AgentCode As Integer
	
	Private _DealerNameEN As String
	
	Private _DealerNameTH As String
	
	Private _Email As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAgentCodeChanging(value As Integer)
    End Sub
    Partial Private Sub OnAgentCodeChanged()
    End Sub
    Partial Private Sub OnDealerNameENChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameENChanged()
    End Sub
    Partial Private Sub OnDealerNameTHChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameTHChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property AgentCode() As Integer
		Get
			Return Me._AgentCode
		End Get
		Set
			If ((Me._AgentCode = value)  _
						= false) Then
				Me.OnAgentCodeChanging(value)
				Me.SendPropertyChanging
				Me._AgentCode = value
				Me.SendPropertyChanged("AgentCode")
				Me.OnAgentCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerNameEN", DbType:="NVarChar(255)")>  _
	Public Property DealerNameEN() As String
		Get
			Return Me._DealerNameEN
		End Get
		Set
			If (String.Equals(Me._DealerNameEN, value) = false) Then
				Me.OnDealerNameENChanging(value)
				Me.SendPropertyChanging
				Me._DealerNameEN = value
				Me.SendPropertyChanged("DealerNameEN")
				Me.OnDealerNameENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerNameTH", DbType:="NVarChar(255)")>  _
	Public Property DealerNameTH() As String
		Get
			Return Me._DealerNameTH
		End Get
		Set
			If (String.Equals(Me._DealerNameTH, value) = false) Then
				Me.OnDealerNameTHChanging(value)
				Me.SendPropertyChanging
				Me._DealerNameTH = value
				Me.SendPropertyChanged("DealerNameTH")
				Me.OnDealerNameTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(255)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
