'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="nltdb")>  _
Partial Public Class DataClasses_NLTDBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertApplication(instance As Application)
    End Sub
  Partial Private Sub UpdateApplication(instance As Application)
    End Sub
  Partial Private Sub DeleteApplication(instance As Application)
    End Sub
  Partial Private Sub InsertShowroom(instance As Showroom)
    End Sub
  Partial Private Sub UpdateShowroom(instance As Showroom)
    End Sub
  Partial Private Sub DeleteShowroom(instance As Showroom)
    End Sub
  Partial Private Sub InsertHeadOffice(instance As HeadOffice)
    End Sub
  Partial Private Sub UpdateHeadOffice(instance As HeadOffice)
    End Sub
  Partial Private Sub DeleteHeadOffice(instance As HeadOffice)
    End Sub
  Partial Private Sub InsertInsurerUnique(instance As InsurerUnique)
    End Sub
  Partial Private Sub UpdateInsurerUnique(instance As InsurerUnique)
    End Sub
  Partial Private Sub DeleteInsurerUnique(instance As InsurerUnique)
    End Sub
  Partial Private Sub InsertInsurer(instance As Insurer)
    End Sub
  Partial Private Sub UpdateInsurer(instance As Insurer)
    End Sub
  Partial Private Sub DeleteInsurer(instance As Insurer)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("nltdbConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Applications() As System.Data.Linq.Table(Of Application)
		Get
			Return Me.GetTable(Of Application)
		End Get
	End Property
	
	Public ReadOnly Property Showrooms() As System.Data.Linq.Table(Of Showroom)
		Get
			Return Me.GetTable(Of Showroom)
		End Get
	End Property
	
	Public ReadOnly Property HeadOffices() As System.Data.Linq.Table(Of HeadOffice)
		Get
			Return Me.GetTable(Of HeadOffice)
		End Get
	End Property
	
	Public ReadOnly Property InsurerUniques() As System.Data.Linq.Table(Of InsurerUnique)
		Get
			Return Me.GetTable(Of InsurerUnique)
		End Get
	End Property
	
	Public ReadOnly Property Insurers() As System.Data.Linq.Table(Of Insurer)
		Get
			Return Me.GetTable(Of Insurer)
		End Get
	End Property
	
	Public ReadOnly Property V_Models() As System.Data.Linq.Table(Of V_Model)
		Get
			Return Me.GetTable(Of V_Model)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Application")>  _
Partial Public Class Application
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AID As Integer
	
	Private _QuotationNo As String
	
	Private _PlanID As System.Nullable(Of Integer)
	
	Private _SchemeCode As String
	
	Private _Name As String
	
	Private _SurName As String
	
	Private _IDCardClient As String
	
	Private _LoanContractNo As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _Mobile As String
	
	Private _OfficePhone As String
	
	Private _HomePhone As String
	
	Private _InsurerID As System.Nullable(Of Integer)
	
	Private _TypeOfInsurance As System.Nullable(Of Integer)
	
	Private _TypeOfCar As System.Nullable(Of Integer)
	
	Private _ModelID As System.Nullable(Of Integer)
	
	Private _TypeID As System.Nullable(Of Integer)
	
	Private _YearOfCar As System.Nullable(Of Integer)
	
	Private _CC As System.Nullable(Of Integer)
	
	Private _Seat As System.Nullable(Of Integer)
	
	Private _Weight As System.Nullable(Of Integer)
	
	Private _EngineNo As String
	
	Private _VIN As String
	
	Private _Colour As String
	
	Private _CarNo As String
	
	Private _RegistrationBy As System.Nullable(Of Integer)
	
	Private _ObjectToCarUse As String
	
	Private _SumInsurance As System.Nullable(Of Double)
	
	Private _StartingDate As System.Nullable(Of Date)
	
	Private _GrossPremium As System.Nullable(Of Double)
	
	Private _PremiumIncludeVATDutyStamp As System.Nullable(Of Double)
	
	Private _CompulsoryPremium As System.Nullable(Of Double)
	
	Private _TempID As String
	
	Private _PaymentBy As System.Nullable(Of Integer)
	
	Private _PaymentOther As String
	
	Private _NameSendTo As String
	
	Private _AddressSendTo As String
	
	Private _NotifigationDate As System.Nullable(Of Date)
	
	Private _DealerID As System.Nullable(Of Integer)
	
	Private _ShowroomCode As System.Nullable(Of Integer)
	
	Private _AFWUserCode As System.Nullable(Of Integer)
	
	Private _AFWMakeDate As System.Nullable(Of Date)
	
	Private _PolicyNo As String
	
	Private _PolicyNoDateIn As System.Nullable(Of Date)
	
	Private _ConfirmationStatus As System.Nullable(Of Integer)
	
	Private _ClosingStatus As System.Nullable(Of Integer)
	
	Private _StatmentStatus As System.Nullable(Of Integer)
	
	Private _AssuranceStatus As System.Nullable(Of Integer)
	
	Private _CarUsageType As String
	
	Private _PremiumID As System.Nullable(Of Integer)
	
	Private _Status As Integer
	
	Private _IsActive As System.Nullable(Of Integer)
	
	Private _ApplicationNo As String
	
	Private _ContractDate As System.Nullable(Of Date)
	
	Private _ShowroomContactName As String
	
	Private _Province As String
	
	Private _Zipcode As String
	
	Private _ClientCode As String
	
	Private _CRID As System.Nullable(Of Integer)
	
	Private _DBNumber As String
	
	Private _tid As System.Nullable(Of Integer)
	
	Private _CMIBuyStatus As System.Nullable(Of Integer)
	
	Private _Benefit As String
	
	Private _leasingID As System.Nullable(Of Integer)
	
	Private _ClosingDate As System.Nullable(Of Date)
	
	Private _ClosingUser As System.Nullable(Of Integer)
	
	Private _PolicyDateIn As System.Nullable(Of Date)
	
	Private _PolicyDateOut As System.Nullable(Of Date)
	
	Private _EndorseDateIn As System.Nullable(Of Date)
	
	Private _AgentCode As String
	
	Private _ReciveApp As System.Nullable(Of Boolean)
	
	Private _projID As System.Nullable(Of Integer)
	
	Private _DN As System.Nullable(Of Integer)
	
	Private _TR As System.Nullable(Of Integer)
	
	Private _InterfaceStatus As String
	
	Private _CMIID As String
	
	Private _TempIDOld As System.Nullable(Of Integer)
	
	Private _OtherSendMailStatus As System.Nullable(Of Boolean)
	
	Private _PolicyDateTimeIn As System.Nullable(Of Date)
	
	Private _SendMailDateTime As System.Nullable(Of Date)
	
	Private _tmpOtherPayment As String
	
	Private _Garage As String
	
	Private _CoverageType As String
	
	Private _RemarkCancel As String
	
	Private _Collective As String
	
	Private _CollectiveRemark As String
	
	Private _IM_Refference As String
	
	Private _IM_BatchNo As String
	
	Private _DiscountNote As String
	
	Private _CarAccessories As String
	
	Private _PolicyIssueDate As System.Nullable(Of Date)
	
	Private _UWReceiptNo As String
	
	Private _UWInvoiceNo As String
	
	Private _IsExtend As Boolean
	
	Private _ExtendID As System.Nullable(Of Integer)
	
	Private _EasyPay As String
	
	Private _CMI_EmailSending As Boolean
	
	Private _CarTypeId As Integer
	
	Private _ApplicationChannel As String
	
	Private _NLT_EasyPay As Boolean
	
	Private _NLT_CampaignName As String
	
	Private _NLT_Term As System.Nullable(Of Integer)
	
	Private _AddedByUserId As Integer
	
	Private _AddedDate As System.Nullable(Of Date)
	
	Private _NotifyName As String
	
	Private _NotifyTel As String
	
	Private _AssuTitle As String
	
	Private _AssuIDCardType As String
	
	Private _AssuEmail As String
	
	Private _GarageId As String
	
	Private _WarrantyClass As String
	
	Private _LevelEditing As System.Nullable(Of Byte)
	
	Private _CategoryCarId As String
	
	Private _UsabilityId As String
	
	Private _CMI_PolicyNumber As String
	
	Private _CMI_StickerNumber As String
	
	Private _CMI_CarTypeCode As String
	
	Private _CMI_UsabilityTypeId As String
	
	Private _CMI_PremiumCode As String
	
	Private _CMI_NetPremium As System.Nullable(Of Decimal)
	
	Private _CMI_Stamp As System.Nullable(Of Decimal)
	
	Private _CMI_Vat As System.Nullable(Of Decimal)
	
	Private _CMI_TotalPremium As System.Nullable(Of Decimal)
	
	Private _CMI_PaymentBy As System.Nullable(Of Integer)
	
	Private _Voluntary_NetPremium As Decimal
	
	Private _Voluntary_Stamp As Decimal
	
	Private _Voluntary_Vat As Decimal
	
	Private _Voluntary_TotalPremium As Decimal
	
	Private _ClosingNote As String
	
	Private _FirstStartingDate As System.Nullable(Of Date)
	
	Private _Cancel As Boolean
	
	Private _CancelType As String
	
	Private _CancelDate As System.Nullable(Of Date)
	
	Private _CancelBy As String
	
	Private _NLT_BookingType As String
	
	Private _NLT_BookingId As System.Nullable(Of Integer)
	
	Private _CMI_EffectiveDate As System.Nullable(Of Date)
	
	Private _CMI_ExpiryDate As System.Nullable(Of Date)
	
	Private _VMI_ExpiryDate As System.Nullable(Of Date)
	
	Private _ITRemark As String
	
	Private _ClassOfRiskVMI As String
	
	Private _ClassOfRiskCMI As String
	
	Private _AECode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnAIDChanged()
    End Sub
    Partial Private Sub OnQuotationNoChanging(value As String)
    End Sub
    Partial Private Sub OnQuotationNoChanged()
    End Sub
    Partial Private Sub OnPlanIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPlanIDChanged()
    End Sub
    Partial Private Sub OnSchemeCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSchemeCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnSurNameChanging(value As String)
    End Sub
    Partial Private Sub OnSurNameChanged()
    End Sub
    Partial Private Sub OnIDCardClientChanging(value As String)
    End Sub
    Partial Private Sub OnIDCardClientChanged()
    End Sub
    Partial Private Sub OnLoanContractNoChanging(value As String)
    End Sub
    Partial Private Sub OnLoanContractNoChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnAddress3Changed()
    End Sub
    Partial Private Sub OnMobileChanging(value As String)
    End Sub
    Partial Private Sub OnMobileChanged()
    End Sub
    Partial Private Sub OnOfficePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnOfficePhoneChanged()
    End Sub
    Partial Private Sub OnHomePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnHomePhoneChanged()
    End Sub
    Partial Private Sub OnInsurerIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInsurerIDChanged()
    End Sub
    Partial Private Sub OnTypeOfInsuranceChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTypeOfInsuranceChanged()
    End Sub
    Partial Private Sub OnTypeOfCarChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTypeOfCarChanged()
    End Sub
    Partial Private Sub OnModelIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnModelIDChanged()
    End Sub
    Partial Private Sub OnTypeIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTypeIDChanged()
    End Sub
    Partial Private Sub OnYearOfCarChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYearOfCarChanged()
    End Sub
    Partial Private Sub OnCCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCCChanged()
    End Sub
    Partial Private Sub OnSeatChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSeatChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnEngineNoChanging(value As String)
    End Sub
    Partial Private Sub OnEngineNoChanged()
    End Sub
    Partial Private Sub OnVINChanging(value As String)
    End Sub
    Partial Private Sub OnVINChanged()
    End Sub
    Partial Private Sub OnColourChanging(value As String)
    End Sub
    Partial Private Sub OnColourChanged()
    End Sub
    Partial Private Sub OnCarNoChanging(value As String)
    End Sub
    Partial Private Sub OnCarNoChanged()
    End Sub
    Partial Private Sub OnRegistrationByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRegistrationByChanged()
    End Sub
    Partial Private Sub OnObjectToCarUseChanging(value As String)
    End Sub
    Partial Private Sub OnObjectToCarUseChanged()
    End Sub
    Partial Private Sub OnSumInsuranceChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSumInsuranceChanged()
    End Sub
    Partial Private Sub OnStartingDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartingDateChanged()
    End Sub
    Partial Private Sub OnGrossPremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGrossPremiumChanged()
    End Sub
    Partial Private Sub OnPremiumIncludeVATDutyStampChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPremiumIncludeVATDutyStampChanged()
    End Sub
    Partial Private Sub OnCompulsoryPremiumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCompulsoryPremiumChanged()
    End Sub
    Partial Private Sub OnTempIDChanging(value As String)
    End Sub
    Partial Private Sub OnTempIDChanged()
    End Sub
    Partial Private Sub OnPaymentByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPaymentByChanged()
    End Sub
    Partial Private Sub OnPaymentOtherChanging(value As String)
    End Sub
    Partial Private Sub OnPaymentOtherChanged()
    End Sub
    Partial Private Sub OnNameSendToChanging(value As String)
    End Sub
    Partial Private Sub OnNameSendToChanged()
    End Sub
    Partial Private Sub OnAddressSendToChanging(value As String)
    End Sub
    Partial Private Sub OnAddressSendToChanged()
    End Sub
    Partial Private Sub OnNotifigationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNotifigationDateChanged()
    End Sub
    Partial Private Sub OnDealerIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDealerIDChanged()
    End Sub
    Partial Private Sub OnShowroomCodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnShowroomCodeChanged()
    End Sub
    Partial Private Sub OnAFWUserCodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAFWUserCodeChanged()
    End Sub
    Partial Private Sub OnAFWMakeDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAFWMakeDateChanged()
    End Sub
    Partial Private Sub OnPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyNoChanged()
    End Sub
    Partial Private Sub OnPolicyNoDateInChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPolicyNoDateInChanged()
    End Sub
    Partial Private Sub OnConfirmationStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnConfirmationStatusChanged()
    End Sub
    Partial Private Sub OnClosingStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClosingStatusChanged()
    End Sub
    Partial Private Sub OnStatmentStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatmentStatusChanged()
    End Sub
    Partial Private Sub OnAssuranceStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAssuranceStatusChanged()
    End Sub
    Partial Private Sub OnCarUsageTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCarUsageTypeChanged()
    End Sub
    Partial Private Sub OnPremiumIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPremiumIDChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnApplicationNoChanging(value As String)
    End Sub
    Partial Private Sub OnApplicationNoChanged()
    End Sub
    Partial Private Sub OnContractDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnContractDateChanged()
    End Sub
    Partial Private Sub OnShowroomContactNameChanging(value As String)
    End Sub
    Partial Private Sub OnShowroomContactNameChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnZipcodeChanged()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnCRIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCRIDChanged()
    End Sub
    Partial Private Sub OnDBNumberChanging(value As String)
    End Sub
    Partial Private Sub OnDBNumberChanged()
    End Sub
    Partial Private Sub OntidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntidChanged()
    End Sub
    Partial Private Sub OnCMIBuyStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCMIBuyStatusChanged()
    End Sub
    Partial Private Sub OnBenefitChanging(value As String)
    End Sub
    Partial Private Sub OnBenefitChanged()
    End Sub
    Partial Private Sub OnleasingIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnleasingIDChanged()
    End Sub
    Partial Private Sub OnClosingDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnClosingDateChanged()
    End Sub
    Partial Private Sub OnClosingUserChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClosingUserChanged()
    End Sub
    Partial Private Sub OnPolicyDateInChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPolicyDateInChanged()
    End Sub
    Partial Private Sub OnPolicyDateOutChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPolicyDateOutChanged()
    End Sub
    Partial Private Sub OnEndorseDateInChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndorseDateInChanged()
    End Sub
    Partial Private Sub OnAgentCodeChanging(value As String)
    End Sub
    Partial Private Sub OnAgentCodeChanged()
    End Sub
    Partial Private Sub OnReciveAppChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnReciveAppChanged()
    End Sub
    Partial Private Sub OnprojIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnprojIDChanged()
    End Sub
    Partial Private Sub OnDNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDNChanged()
    End Sub
    Partial Private Sub OnTRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRChanged()
    End Sub
    Partial Private Sub OnInterfaceStatusChanging(value As String)
    End Sub
    Partial Private Sub OnInterfaceStatusChanged()
    End Sub
    Partial Private Sub OnCMIIDChanging(value As String)
    End Sub
    Partial Private Sub OnCMIIDChanged()
    End Sub
    Partial Private Sub OnTempIDOldChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTempIDOldChanged()
    End Sub
    Partial Private Sub OnOtherSendMailStatusChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOtherSendMailStatusChanged()
    End Sub
    Partial Private Sub OnPolicyDateTimeInChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPolicyDateTimeInChanged()
    End Sub
    Partial Private Sub OnSendMailDateTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSendMailDateTimeChanged()
    End Sub
    Partial Private Sub OntmpOtherPaymentChanging(value As String)
    End Sub
    Partial Private Sub OntmpOtherPaymentChanged()
    End Sub
    Partial Private Sub OnGarageChanging(value As String)
    End Sub
    Partial Private Sub OnGarageChanged()
    End Sub
    Partial Private Sub OnCoverageTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCoverageTypeChanged()
    End Sub
    Partial Private Sub OnRemarkCancelChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkCancelChanged()
    End Sub
    Partial Private Sub OnCollectiveChanging(value As String)
    End Sub
    Partial Private Sub OnCollectiveChanged()
    End Sub
    Partial Private Sub OnCollectiveRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnCollectiveRemarkChanged()
    End Sub
    Partial Private Sub OnIM_RefferenceChanging(value As String)
    End Sub
    Partial Private Sub OnIM_RefferenceChanged()
    End Sub
    Partial Private Sub OnIM_BatchNoChanging(value As String)
    End Sub
    Partial Private Sub OnIM_BatchNoChanged()
    End Sub
    Partial Private Sub OnDiscountNoteChanging(value As String)
    End Sub
    Partial Private Sub OnDiscountNoteChanged()
    End Sub
    Partial Private Sub OnCarAccessoriesChanging(value As String)
    End Sub
    Partial Private Sub OnCarAccessoriesChanged()
    End Sub
    Partial Private Sub OnPolicyIssueDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPolicyIssueDateChanged()
    End Sub
    Partial Private Sub OnUWReceiptNoChanging(value As String)
    End Sub
    Partial Private Sub OnUWReceiptNoChanged()
    End Sub
    Partial Private Sub OnUWInvoiceNoChanging(value As String)
    End Sub
    Partial Private Sub OnUWInvoiceNoChanged()
    End Sub
    Partial Private Sub OnIsExtendChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsExtendChanged()
    End Sub
    Partial Private Sub OnExtendIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnExtendIDChanged()
    End Sub
    Partial Private Sub OnEasyPayChanging(value As String)
    End Sub
    Partial Private Sub OnEasyPayChanged()
    End Sub
    Partial Private Sub OnCMI_EmailSendingChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCMI_EmailSendingChanged()
    End Sub
    Partial Private Sub OnCarTypeIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnCarTypeIdChanged()
    End Sub
    Partial Private Sub OnApplicationChannelChanging(value As String)
    End Sub
    Partial Private Sub OnApplicationChannelChanged()
    End Sub
    Partial Private Sub OnNLT_EasyPayChanging(value As Boolean)
    End Sub
    Partial Private Sub OnNLT_EasyPayChanged()
    End Sub
    Partial Private Sub OnNLT_CampaignNameChanging(value As String)
    End Sub
    Partial Private Sub OnNLT_CampaignNameChanged()
    End Sub
    Partial Private Sub OnNLT_TermChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNLT_TermChanged()
    End Sub
    Partial Private Sub OnAddedByUserIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAddedByUserIdChanged()
    End Sub
    Partial Private Sub OnAddedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAddedDateChanged()
    End Sub
    Partial Private Sub OnNotifyNameChanging(value As String)
    End Sub
    Partial Private Sub OnNotifyNameChanged()
    End Sub
    Partial Private Sub OnNotifyTelChanging(value As String)
    End Sub
    Partial Private Sub OnNotifyTelChanged()
    End Sub
    Partial Private Sub OnAssuTitleChanging(value As String)
    End Sub
    Partial Private Sub OnAssuTitleChanged()
    End Sub
    Partial Private Sub OnAssuIDCardTypeChanging(value As String)
    End Sub
    Partial Private Sub OnAssuIDCardTypeChanged()
    End Sub
    Partial Private Sub OnAssuEmailChanging(value As String)
    End Sub
    Partial Private Sub OnAssuEmailChanged()
    End Sub
    Partial Private Sub OnGarageIdChanging(value As String)
    End Sub
    Partial Private Sub OnGarageIdChanged()
    End Sub
    Partial Private Sub OnWarrantyClassChanging(value As String)
    End Sub
    Partial Private Sub OnWarrantyClassChanged()
    End Sub
    Partial Private Sub OnLevelEditingChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnLevelEditingChanged()
    End Sub
    Partial Private Sub OnCategoryCarIdChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryCarIdChanged()
    End Sub
    Partial Private Sub OnUsabilityIdChanging(value As String)
    End Sub
    Partial Private Sub OnUsabilityIdChanged()
    End Sub
    Partial Private Sub OnCMI_PolicyNumberChanging(value As String)
    End Sub
    Partial Private Sub OnCMI_PolicyNumberChanged()
    End Sub
    Partial Private Sub OnCMI_StickerNumberChanging(value As String)
    End Sub
    Partial Private Sub OnCMI_StickerNumberChanged()
    End Sub
    Partial Private Sub OnCMI_CarTypeCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCMI_CarTypeCodeChanged()
    End Sub
    Partial Private Sub OnCMI_UsabilityTypeIdChanging(value As String)
    End Sub
    Partial Private Sub OnCMI_UsabilityTypeIdChanged()
    End Sub
    Partial Private Sub OnCMI_PremiumCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCMI_PremiumCodeChanged()
    End Sub
    Partial Private Sub OnCMI_NetPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCMI_NetPremiumChanged()
    End Sub
    Partial Private Sub OnCMI_StampChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCMI_StampChanged()
    End Sub
    Partial Private Sub OnCMI_VatChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCMI_VatChanged()
    End Sub
    Partial Private Sub OnCMI_TotalPremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCMI_TotalPremiumChanged()
    End Sub
    Partial Private Sub OnCMI_PaymentByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCMI_PaymentByChanged()
    End Sub
    Partial Private Sub OnVoluntary_NetPremiumChanging(value As Decimal)
    End Sub
    Partial Private Sub OnVoluntary_NetPremiumChanged()
    End Sub
    Partial Private Sub OnVoluntary_StampChanging(value As Decimal)
    End Sub
    Partial Private Sub OnVoluntary_StampChanged()
    End Sub
    Partial Private Sub OnVoluntary_VatChanging(value As Decimal)
    End Sub
    Partial Private Sub OnVoluntary_VatChanged()
    End Sub
    Partial Private Sub OnVoluntary_TotalPremiumChanging(value As Decimal)
    End Sub
    Partial Private Sub OnVoluntary_TotalPremiumChanged()
    End Sub
    Partial Private Sub OnClosingNoteChanging(value As String)
    End Sub
    Partial Private Sub OnClosingNoteChanged()
    End Sub
    Partial Private Sub OnFirstStartingDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFirstStartingDateChanged()
    End Sub
    Partial Private Sub OnCancelChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCancelChanged()
    End Sub
    Partial Private Sub OnCancelTypeChanging(value As String)
    End Sub
    Partial Private Sub OnCancelTypeChanged()
    End Sub
    Partial Private Sub OnCancelDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCancelDateChanged()
    End Sub
    Partial Private Sub OnCancelByChanging(value As String)
    End Sub
    Partial Private Sub OnCancelByChanged()
    End Sub
    Partial Private Sub OnNLT_BookingTypeChanging(value As String)
    End Sub
    Partial Private Sub OnNLT_BookingTypeChanged()
    End Sub
    Partial Private Sub OnNLT_BookingIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNLT_BookingIdChanged()
    End Sub
    Partial Private Sub OnCMI_EffectiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCMI_EffectiveDateChanged()
    End Sub
    Partial Private Sub OnCMI_ExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCMI_ExpiryDateChanged()
    End Sub
    Partial Private Sub OnVMI_ExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVMI_ExpiryDateChanged()
    End Sub
    Partial Private Sub OnITRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnITRemarkChanged()
    End Sub
    Partial Private Sub OnClassOfRiskVMIChanging(value As String)
    End Sub
    Partial Private Sub OnClassOfRiskVMIChanged()
    End Sub
    Partial Private Sub OnClassOfRiskCMIChanging(value As String)
    End Sub
    Partial Private Sub OnClassOfRiskCMIChanged()
    End Sub
    Partial Private Sub OnAECodeChanging(value As String)
    End Sub
    Partial Private Sub OnAECodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property AID() As Integer
		Get
			Return Me._AID
		End Get
		Set
			If ((Me._AID = value)  _
						= false) Then
				Me.OnAIDChanging(value)
				Me.SendPropertyChanging
				Me._AID = value
				Me.SendPropertyChanged("AID")
				Me.OnAIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuotationNo", DbType:="NVarChar(50)")>  _
	Public Property QuotationNo() As String
		Get
			Return Me._QuotationNo
		End Get
		Set
			If (String.Equals(Me._QuotationNo, value) = false) Then
				Me.OnQuotationNoChanging(value)
				Me.SendPropertyChanging
				Me._QuotationNo = value
				Me.SendPropertyChanged("QuotationNo")
				Me.OnQuotationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlanID", DbType:="Int")>  _
	Public Property PlanID() As System.Nullable(Of Integer)
		Get
			Return Me._PlanID
		End Get
		Set
			If (Me._PlanID.Equals(value) = false) Then
				Me.OnPlanIDChanging(value)
				Me.SendPropertyChanging
				Me._PlanID = value
				Me.SendPropertyChanged("PlanID")
				Me.OnPlanIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchemeCode", DbType:="NVarChar(50)")>  _
	Public Property SchemeCode() As String
		Get
			Return Me._SchemeCode
		End Get
		Set
			If (String.Equals(Me._SchemeCode, value) = false) Then
				Me.OnSchemeCodeChanging(value)
				Me.SendPropertyChanging
				Me._SchemeCode = value
				Me.SendPropertyChanged("SchemeCode")
				Me.OnSchemeCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SurName", DbType:="VarChar(50)")>  _
	Public Property SurName() As String
		Get
			Return Me._SurName
		End Get
		Set
			If (String.Equals(Me._SurName, value) = false) Then
				Me.OnSurNameChanging(value)
				Me.SendPropertyChanging
				Me._SurName = value
				Me.SendPropertyChanged("SurName")
				Me.OnSurNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCardClient", DbType:="VarChar(50)")>  _
	Public Property IDCardClient() As String
		Get
			Return Me._IDCardClient
		End Get
		Set
			If (String.Equals(Me._IDCardClient, value) = false) Then
				Me.OnIDCardClientChanging(value)
				Me.SendPropertyChanging
				Me._IDCardClient = value
				Me.SendPropertyChanged("IDCardClient")
				Me.OnIDCardClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanContractNo", DbType:="VarChar(50)")>  _
	Public Property LoanContractNo() As String
		Get
			Return Me._LoanContractNo
		End Get
		Set
			If (String.Equals(Me._LoanContractNo, value) = false) Then
				Me.OnLoanContractNoChanging(value)
				Me.SendPropertyChanging
				Me._LoanContractNo = value
				Me.SendPropertyChanged("LoanContractNo")
				Me.OnLoanContractNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="NVarChar(255)")>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="NVarChar(255)")>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="NVarChar(255)")>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me.OnAddress3Changing(value)
				Me.SendPropertyChanging
				Me._Address3 = value
				Me.SendPropertyChanged("Address3")
				Me.OnAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile", DbType:="VarChar(50)")>  _
	Public Property Mobile() As String
		Get
			Return Me._Mobile
		End Get
		Set
			If (String.Equals(Me._Mobile, value) = false) Then
				Me.OnMobileChanging(value)
				Me.SendPropertyChanging
				Me._Mobile = value
				Me.SendPropertyChanged("Mobile")
				Me.OnMobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfficePhone", DbType:="VarChar(50)")>  _
	Public Property OfficePhone() As String
		Get
			Return Me._OfficePhone
		End Get
		Set
			If (String.Equals(Me._OfficePhone, value) = false) Then
				Me.OnOfficePhoneChanging(value)
				Me.SendPropertyChanging
				Me._OfficePhone = value
				Me.SendPropertyChanged("OfficePhone")
				Me.OnOfficePhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HomePhone", DbType:="VarChar(50)")>  _
	Public Property HomePhone() As String
		Get
			Return Me._HomePhone
		End Get
		Set
			If (String.Equals(Me._HomePhone, value) = false) Then
				Me.OnHomePhoneChanging(value)
				Me.SendPropertyChanging
				Me._HomePhone = value
				Me.SendPropertyChanged("HomePhone")
				Me.OnHomePhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerID", DbType:="Int")>  _
	Public Property InsurerID() As System.Nullable(Of Integer)
		Get
			Return Me._InsurerID
		End Get
		Set
			If (Me._InsurerID.Equals(value) = false) Then
				Me.OnInsurerIDChanging(value)
				Me.SendPropertyChanging
				Me._InsurerID = value
				Me.SendPropertyChanged("InsurerID")
				Me.OnInsurerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeOfInsurance", DbType:="Int")>  _
	Public Property TypeOfInsurance() As System.Nullable(Of Integer)
		Get
			Return Me._TypeOfInsurance
		End Get
		Set
			If (Me._TypeOfInsurance.Equals(value) = false) Then
				Me.OnTypeOfInsuranceChanging(value)
				Me.SendPropertyChanging
				Me._TypeOfInsurance = value
				Me.SendPropertyChanged("TypeOfInsurance")
				Me.OnTypeOfInsuranceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeOfCar", DbType:="Int")>  _
	Public Property TypeOfCar() As System.Nullable(Of Integer)
		Get
			Return Me._TypeOfCar
		End Get
		Set
			If (Me._TypeOfCar.Equals(value) = false) Then
				Me.OnTypeOfCarChanging(value)
				Me.SendPropertyChanging
				Me._TypeOfCar = value
				Me.SendPropertyChanged("TypeOfCar")
				Me.OnTypeOfCarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelID", DbType:="Int")>  _
	Public Property ModelID() As System.Nullable(Of Integer)
		Get
			Return Me._ModelID
		End Get
		Set
			If (Me._ModelID.Equals(value) = false) Then
				Me.OnModelIDChanging(value)
				Me.SendPropertyChanging
				Me._ModelID = value
				Me.SendPropertyChanged("ModelID")
				Me.OnModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeID", DbType:="Int")>  _
	Public Property TypeID() As System.Nullable(Of Integer)
		Get
			Return Me._TypeID
		End Get
		Set
			If (Me._TypeID.Equals(value) = false) Then
				Me.OnTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._TypeID = value
				Me.SendPropertyChanged("TypeID")
				Me.OnTypeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YearOfCar", DbType:="Int")>  _
	Public Property YearOfCar() As System.Nullable(Of Integer)
		Get
			Return Me._YearOfCar
		End Get
		Set
			If (Me._YearOfCar.Equals(value) = false) Then
				Me.OnYearOfCarChanging(value)
				Me.SendPropertyChanging
				Me._YearOfCar = value
				Me.SendPropertyChanged("YearOfCar")
				Me.OnYearOfCarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CC", DbType:="Int")>  _
	Public Property CC() As System.Nullable(Of Integer)
		Get
			Return Me._CC
		End Get
		Set
			If (Me._CC.Equals(value) = false) Then
				Me.OnCCChanging(value)
				Me.SendPropertyChanging
				Me._CC = value
				Me.SendPropertyChanged("CC")
				Me.OnCCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seat", DbType:="Int")>  _
	Public Property Seat() As System.Nullable(Of Integer)
		Get
			Return Me._Seat
		End Get
		Set
			If (Me._Seat.Equals(value) = false) Then
				Me.OnSeatChanging(value)
				Me.SendPropertyChanging
				Me._Seat = value
				Me.SendPropertyChanged("Seat")
				Me.OnSeatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Int")>  _
	Public Property Weight() As System.Nullable(Of Integer)
		Get
			Return Me._Weight
		End Get
		Set
			If (Me._Weight.Equals(value) = false) Then
				Me.OnWeightChanging(value)
				Me.SendPropertyChanging
				Me._Weight = value
				Me.SendPropertyChanged("Weight")
				Me.OnWeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EngineNo", DbType:="NVarChar(255)")>  _
	Public Property EngineNo() As String
		Get
			Return Me._EngineNo
		End Get
		Set
			If (String.Equals(Me._EngineNo, value) = false) Then
				Me.OnEngineNoChanging(value)
				Me.SendPropertyChanging
				Me._EngineNo = value
				Me.SendPropertyChanged("EngineNo")
				Me.OnEngineNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIN", DbType:="VarChar(50)")>  _
	Public Property VIN() As String
		Get
			Return Me._VIN
		End Get
		Set
			If (String.Equals(Me._VIN, value) = false) Then
				Me.OnVINChanging(value)
				Me.SendPropertyChanging
				Me._VIN = value
				Me.SendPropertyChanged("VIN")
				Me.OnVINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Colour", DbType:="VarChar(50)")>  _
	Public Property Colour() As String
		Get
			Return Me._Colour
		End Get
		Set
			If (String.Equals(Me._Colour, value) = false) Then
				Me.OnColourChanging(value)
				Me.SendPropertyChanging
				Me._Colour = value
				Me.SendPropertyChanged("Colour")
				Me.OnColourChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarNo", DbType:="NVarChar(255)")>  _
	Public Property CarNo() As String
		Get
			Return Me._CarNo
		End Get
		Set
			If (String.Equals(Me._CarNo, value) = false) Then
				Me.OnCarNoChanging(value)
				Me.SendPropertyChanging
				Me._CarNo = value
				Me.SendPropertyChanged("CarNo")
				Me.OnCarNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegistrationBy", DbType:="Int")>  _
	Public Property RegistrationBy() As System.Nullable(Of Integer)
		Get
			Return Me._RegistrationBy
		End Get
		Set
			If (Me._RegistrationBy.Equals(value) = false) Then
				Me.OnRegistrationByChanging(value)
				Me.SendPropertyChanging
				Me._RegistrationBy = value
				Me.SendPropertyChanged("RegistrationBy")
				Me.OnRegistrationByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObjectToCarUse", DbType:="NVarChar(50)")>  _
	Public Property ObjectToCarUse() As String
		Get
			Return Me._ObjectToCarUse
		End Get
		Set
			If (String.Equals(Me._ObjectToCarUse, value) = false) Then
				Me.OnObjectToCarUseChanging(value)
				Me.SendPropertyChanging
				Me._ObjectToCarUse = value
				Me.SendPropertyChanged("ObjectToCarUse")
				Me.OnObjectToCarUseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsurance", DbType:="Float")>  _
	Public Property SumInsurance() As System.Nullable(Of Double)
		Get
			Return Me._SumInsurance
		End Get
		Set
			If (Me._SumInsurance.Equals(value) = false) Then
				Me.OnSumInsuranceChanging(value)
				Me.SendPropertyChanging
				Me._SumInsurance = value
				Me.SendPropertyChanged("SumInsurance")
				Me.OnSumInsuranceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartingDate", DbType:="DateTime")>  _
	Public Property StartingDate() As System.Nullable(Of Date)
		Get
			Return Me._StartingDate
		End Get
		Set
			If (Me._StartingDate.Equals(value) = false) Then
				Me.OnStartingDateChanging(value)
				Me.SendPropertyChanging
				Me._StartingDate = value
				Me.SendPropertyChanged("StartingDate")
				Me.OnStartingDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossPremium", DbType:="Float")>  _
	Public Property GrossPremium() As System.Nullable(Of Double)
		Get
			Return Me._GrossPremium
		End Get
		Set
			If (Me._GrossPremium.Equals(value) = false) Then
				Me.OnGrossPremiumChanging(value)
				Me.SendPropertyChanging
				Me._GrossPremium = value
				Me.SendPropertyChanged("GrossPremium")
				Me.OnGrossPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumIncludeVATDutyStamp", DbType:="Float")>  _
	Public Property PremiumIncludeVATDutyStamp() As System.Nullable(Of Double)
		Get
			Return Me._PremiumIncludeVATDutyStamp
		End Get
		Set
			If (Me._PremiumIncludeVATDutyStamp.Equals(value) = false) Then
				Me.OnPremiumIncludeVATDutyStampChanging(value)
				Me.SendPropertyChanging
				Me._PremiumIncludeVATDutyStamp = value
				Me.SendPropertyChanged("PremiumIncludeVATDutyStamp")
				Me.OnPremiumIncludeVATDutyStampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompulsoryPremium", DbType:="Float")>  _
	Public Property CompulsoryPremium() As System.Nullable(Of Double)
		Get
			Return Me._CompulsoryPremium
		End Get
		Set
			If (Me._CompulsoryPremium.Equals(value) = false) Then
				Me.OnCompulsoryPremiumChanging(value)
				Me.SendPropertyChanging
				Me._CompulsoryPremium = value
				Me.SendPropertyChanged("CompulsoryPremium")
				Me.OnCompulsoryPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TempID", DbType:="VarChar(50)")>  _
	Public Property TempID() As String
		Get
			Return Me._TempID
		End Get
		Set
			If (String.Equals(Me._TempID, value) = false) Then
				Me.OnTempIDChanging(value)
				Me.SendPropertyChanging
				Me._TempID = value
				Me.SendPropertyChanged("TempID")
				Me.OnTempIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentBy", DbType:="Int")>  _
	Public Property PaymentBy() As System.Nullable(Of Integer)
		Get
			Return Me._PaymentBy
		End Get
		Set
			If (Me._PaymentBy.Equals(value) = false) Then
				Me.OnPaymentByChanging(value)
				Me.SendPropertyChanging
				Me._PaymentBy = value
				Me.SendPropertyChanged("PaymentBy")
				Me.OnPaymentByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentOther", DbType:="NVarChar(2500)")>  _
	Public Property PaymentOther() As String
		Get
			Return Me._PaymentOther
		End Get
		Set
			If (String.Equals(Me._PaymentOther, value) = false) Then
				Me.OnPaymentOtherChanging(value)
				Me.SendPropertyChanging
				Me._PaymentOther = value
				Me.SendPropertyChanged("PaymentOther")
				Me.OnPaymentOtherChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameSendTo", DbType:="VarChar(50)")>  _
	Public Property NameSendTo() As String
		Get
			Return Me._NameSendTo
		End Get
		Set
			If (String.Equals(Me._NameSendTo, value) = false) Then
				Me.OnNameSendToChanging(value)
				Me.SendPropertyChanging
				Me._NameSendTo = value
				Me.SendPropertyChanged("NameSendTo")
				Me.OnNameSendToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddressSendTo", DbType:="NVarChar(255)")>  _
	Public Property AddressSendTo() As String
		Get
			Return Me._AddressSendTo
		End Get
		Set
			If (String.Equals(Me._AddressSendTo, value) = false) Then
				Me.OnAddressSendToChanging(value)
				Me.SendPropertyChanging
				Me._AddressSendTo = value
				Me.SendPropertyChanged("AddressSendTo")
				Me.OnAddressSendToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotifigationDate", DbType:="DateTime")>  _
	Public Property NotifigationDate() As System.Nullable(Of Date)
		Get
			Return Me._NotifigationDate
		End Get
		Set
			If (Me._NotifigationDate.Equals(value) = false) Then
				Me.OnNotifigationDateChanging(value)
				Me.SendPropertyChanging
				Me._NotifigationDate = value
				Me.SendPropertyChanged("NotifigationDate")
				Me.OnNotifigationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerID", DbType:="Int")>  _
	Public Property DealerID() As System.Nullable(Of Integer)
		Get
			Return Me._DealerID
		End Get
		Set
			If (Me._DealerID.Equals(value) = false) Then
				Me.OnDealerIDChanging(value)
				Me.SendPropertyChanging
				Me._DealerID = value
				Me.SendPropertyChanged("DealerID")
				Me.OnDealerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomCode", DbType:="Int")>  _
	Public Property ShowroomCode() As System.Nullable(Of Integer)
		Get
			Return Me._ShowroomCode
		End Get
		Set
			If (Me._ShowroomCode.Equals(value) = false) Then
				Me.OnShowroomCodeChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomCode = value
				Me.SendPropertyChanged("ShowroomCode")
				Me.OnShowroomCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFWUserCode", DbType:="Int")>  _
	Public Property AFWUserCode() As System.Nullable(Of Integer)
		Get
			Return Me._AFWUserCode
		End Get
		Set
			If (Me._AFWUserCode.Equals(value) = false) Then
				Me.OnAFWUserCodeChanging(value)
				Me.SendPropertyChanging
				Me._AFWUserCode = value
				Me.SendPropertyChanged("AFWUserCode")
				Me.OnAFWUserCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFWMakeDate", DbType:="DateTime")>  _
	Public Property AFWMakeDate() As System.Nullable(Of Date)
		Get
			Return Me._AFWMakeDate
		End Get
		Set
			If (Me._AFWMakeDate.Equals(value) = false) Then
				Me.OnAFWMakeDateChanging(value)
				Me.SendPropertyChanging
				Me._AFWMakeDate = value
				Me.SendPropertyChanged("AFWMakeDate")
				Me.OnAFWMakeDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="NVarChar(255)")>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me.OnPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._PolicyNo = value
				Me.SendPropertyChanged("PolicyNo")
				Me.OnPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNoDateIn", DbType:="SmallDateTime")>  _
	Public Property PolicyNoDateIn() As System.Nullable(Of Date)
		Get
			Return Me._PolicyNoDateIn
		End Get
		Set
			If (Me._PolicyNoDateIn.Equals(value) = false) Then
				Me.OnPolicyNoDateInChanging(value)
				Me.SendPropertyChanging
				Me._PolicyNoDateIn = value
				Me.SendPropertyChanged("PolicyNoDateIn")
				Me.OnPolicyNoDateInChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConfirmationStatus", DbType:="Int")>  _
	Public Property ConfirmationStatus() As System.Nullable(Of Integer)
		Get
			Return Me._ConfirmationStatus
		End Get
		Set
			If (Me._ConfirmationStatus.Equals(value) = false) Then
				Me.OnConfirmationStatusChanging(value)
				Me.SendPropertyChanging
				Me._ConfirmationStatus = value
				Me.SendPropertyChanged("ConfirmationStatus")
				Me.OnConfirmationStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingStatus", DbType:="Int")>  _
	Public Property ClosingStatus() As System.Nullable(Of Integer)
		Get
			Return Me._ClosingStatus
		End Get
		Set
			If (Me._ClosingStatus.Equals(value) = false) Then
				Me.OnClosingStatusChanging(value)
				Me.SendPropertyChanging
				Me._ClosingStatus = value
				Me.SendPropertyChanged("ClosingStatus")
				Me.OnClosingStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatmentStatus", DbType:="Int")>  _
	Public Property StatmentStatus() As System.Nullable(Of Integer)
		Get
			Return Me._StatmentStatus
		End Get
		Set
			If (Me._StatmentStatus.Equals(value) = false) Then
				Me.OnStatmentStatusChanging(value)
				Me.SendPropertyChanging
				Me._StatmentStatus = value
				Me.SendPropertyChanged("StatmentStatus")
				Me.OnStatmentStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AssuranceStatus", DbType:="Int")>  _
	Public Property AssuranceStatus() As System.Nullable(Of Integer)
		Get
			Return Me._AssuranceStatus
		End Get
		Set
			If (Me._AssuranceStatus.Equals(value) = false) Then
				Me.OnAssuranceStatusChanging(value)
				Me.SendPropertyChanging
				Me._AssuranceStatus = value
				Me.SendPropertyChanged("AssuranceStatus")
				Me.OnAssuranceStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarUsageType", DbType:="NVarChar(50)")>  _
	Public Property CarUsageType() As String
		Get
			Return Me._CarUsageType
		End Get
		Set
			If (String.Equals(Me._CarUsageType, value) = false) Then
				Me.OnCarUsageTypeChanging(value)
				Me.SendPropertyChanging
				Me._CarUsageType = value
				Me.SendPropertyChanged("CarUsageType")
				Me.OnCarUsageTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumID", DbType:="Int")>  _
	Public Property PremiumID() As System.Nullable(Of Integer)
		Get
			Return Me._PremiumID
		End Get
		Set
			If (Me._PremiumID.Equals(value) = false) Then
				Me.OnPremiumIDChanging(value)
				Me.SendPropertyChanging
				Me._PremiumID = value
				Me.SendPropertyChanged("PremiumID")
				Me.OnPremiumIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL")>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Int")>  _
	Public Property IsActive() As System.Nullable(Of Integer)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationNo", DbType:="NVarChar(50)")>  _
	Public Property ApplicationNo() As String
		Get
			Return Me._ApplicationNo
		End Get
		Set
			If (String.Equals(Me._ApplicationNo, value) = false) Then
				Me.OnApplicationNoChanging(value)
				Me.SendPropertyChanging
				Me._ApplicationNo = value
				Me.SendPropertyChanged("ApplicationNo")
				Me.OnApplicationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContractDate", DbType:="DateTime")>  _
	Public Property ContractDate() As System.Nullable(Of Date)
		Get
			Return Me._ContractDate
		End Get
		Set
			If (Me._ContractDate.Equals(value) = false) Then
				Me.OnContractDateChanging(value)
				Me.SendPropertyChanging
				Me._ContractDate = value
				Me.SendPropertyChanged("ContractDate")
				Me.OnContractDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomContactName", DbType:="NVarChar(50)")>  _
	Public Property ShowroomContactName() As String
		Get
			Return Me._ShowroomContactName
		End Get
		Set
			If (String.Equals(Me._ShowroomContactName, value) = false) Then
				Me.OnShowroomContactNameChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomContactName = value
				Me.SendPropertyChanged("ShowroomContactName")
				Me.OnShowroomContactNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="NVarChar(50)")>  _
	Public Property Province() As String
		Get
			Return Me._Province
		End Get
		Set
			If (String.Equals(Me._Province, value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zipcode", DbType:="NVarChar(50)")>  _
	Public Property Zipcode() As String
		Get
			Return Me._Zipcode
		End Get
		Set
			If (String.Equals(Me._Zipcode, value) = false) Then
				Me.OnZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._Zipcode = value
				Me.SendPropertyChanged("Zipcode")
				Me.OnZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="NVarChar(50)")>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRID", DbType:="Int")>  _
	Public Property CRID() As System.Nullable(Of Integer)
		Get
			Return Me._CRID
		End Get
		Set
			If (Me._CRID.Equals(value) = false) Then
				Me.OnCRIDChanging(value)
				Me.SendPropertyChanging
				Me._CRID = value
				Me.SendPropertyChanged("CRID")
				Me.OnCRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DBNumber", DbType:="NVarChar(50)")>  _
	Public Property DBNumber() As String
		Get
			Return Me._DBNumber
		End Get
		Set
			If (String.Equals(Me._DBNumber, value) = false) Then
				Me.OnDBNumberChanging(value)
				Me.SendPropertyChanging
				Me._DBNumber = value
				Me.SendPropertyChanged("DBNumber")
				Me.OnDBNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tid", DbType:="Int")>  _
	Public Property tid() As System.Nullable(Of Integer)
		Get
			Return Me._tid
		End Get
		Set
			If (Me._tid.Equals(value) = false) Then
				Me.OntidChanging(value)
				Me.SendPropertyChanging
				Me._tid = value
				Me.SendPropertyChanged("tid")
				Me.OntidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIBuyStatus", DbType:="Int")>  _
	Public Property CMIBuyStatus() As System.Nullable(Of Integer)
		Get
			Return Me._CMIBuyStatus
		End Get
		Set
			If (Me._CMIBuyStatus.Equals(value) = false) Then
				Me.OnCMIBuyStatusChanging(value)
				Me.SendPropertyChanging
				Me._CMIBuyStatus = value
				Me.SendPropertyChanged("CMIBuyStatus")
				Me.OnCMIBuyStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Benefit", DbType:="NVarChar(100)")>  _
	Public Property Benefit() As String
		Get
			Return Me._Benefit
		End Get
		Set
			If (String.Equals(Me._Benefit, value) = false) Then
				Me.OnBenefitChanging(value)
				Me.SendPropertyChanging
				Me._Benefit = value
				Me.SendPropertyChanged("Benefit")
				Me.OnBenefitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_leasingID", DbType:="Int")>  _
	Public Property leasingID() As System.Nullable(Of Integer)
		Get
			Return Me._leasingID
		End Get
		Set
			If (Me._leasingID.Equals(value) = false) Then
				Me.OnleasingIDChanging(value)
				Me.SendPropertyChanging
				Me._leasingID = value
				Me.SendPropertyChanged("leasingID")
				Me.OnleasingIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingDate", DbType:="DateTime")>  _
	Public Property ClosingDate() As System.Nullable(Of Date)
		Get
			Return Me._ClosingDate
		End Get
		Set
			If (Me._ClosingDate.Equals(value) = false) Then
				Me.OnClosingDateChanging(value)
				Me.SendPropertyChanging
				Me._ClosingDate = value
				Me.SendPropertyChanged("ClosingDate")
				Me.OnClosingDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingUser", DbType:="Int")>  _
	Public Property ClosingUser() As System.Nullable(Of Integer)
		Get
			Return Me._ClosingUser
		End Get
		Set
			If (Me._ClosingUser.Equals(value) = false) Then
				Me.OnClosingUserChanging(value)
				Me.SendPropertyChanging
				Me._ClosingUser = value
				Me.SendPropertyChanged("ClosingUser")
				Me.OnClosingUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyDateIn", DbType:="DateTime")>  _
	Public Property PolicyDateIn() As System.Nullable(Of Date)
		Get
			Return Me._PolicyDateIn
		End Get
		Set
			If (Me._PolicyDateIn.Equals(value) = false) Then
				Me.OnPolicyDateInChanging(value)
				Me.SendPropertyChanging
				Me._PolicyDateIn = value
				Me.SendPropertyChanged("PolicyDateIn")
				Me.OnPolicyDateInChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyDateOut", DbType:="DateTime")>  _
	Public Property PolicyDateOut() As System.Nullable(Of Date)
		Get
			Return Me._PolicyDateOut
		End Get
		Set
			If (Me._PolicyDateOut.Equals(value) = false) Then
				Me.OnPolicyDateOutChanging(value)
				Me.SendPropertyChanging
				Me._PolicyDateOut = value
				Me.SendPropertyChanged("PolicyDateOut")
				Me.OnPolicyDateOutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndorseDateIn", DbType:="DateTime")>  _
	Public Property EndorseDateIn() As System.Nullable(Of Date)
		Get
			Return Me._EndorseDateIn
		End Get
		Set
			If (Me._EndorseDateIn.Equals(value) = false) Then
				Me.OnEndorseDateInChanging(value)
				Me.SendPropertyChanging
				Me._EndorseDateIn = value
				Me.SendPropertyChanged("EndorseDateIn")
				Me.OnEndorseDateInChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="NChar(10)")>  _
	Public Property AgentCode() As String
		Get
			Return Me._AgentCode
		End Get
		Set
			If (String.Equals(Me._AgentCode, value) = false) Then
				Me.OnAgentCodeChanging(value)
				Me.SendPropertyChanging
				Me._AgentCode = value
				Me.SendPropertyChanged("AgentCode")
				Me.OnAgentCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReciveApp", DbType:="Bit")>  _
	Public Property ReciveApp() As System.Nullable(Of Boolean)
		Get
			Return Me._ReciveApp
		End Get
		Set
			If (Me._ReciveApp.Equals(value) = false) Then
				Me.OnReciveAppChanging(value)
				Me.SendPropertyChanging
				Me._ReciveApp = value
				Me.SendPropertyChanged("ReciveApp")
				Me.OnReciveAppChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_projID", DbType:="Int")>  _
	Public Property projID() As System.Nullable(Of Integer)
		Get
			Return Me._projID
		End Get
		Set
			If (Me._projID.Equals(value) = false) Then
				Me.OnprojIDChanging(value)
				Me.SendPropertyChanging
				Me._projID = value
				Me.SendPropertyChanged("projID")
				Me.OnprojIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DN", DbType:="Int")>  _
	Public Property DN() As System.Nullable(Of Integer)
		Get
			Return Me._DN
		End Get
		Set
			If (Me._DN.Equals(value) = false) Then
				Me.OnDNChanging(value)
				Me.SendPropertyChanging
				Me._DN = value
				Me.SendPropertyChanged("DN")
				Me.OnDNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR", DbType:="Int")>  _
	Public Property TR() As System.Nullable(Of Integer)
		Get
			Return Me._TR
		End Get
		Set
			If (Me._TR.Equals(value) = false) Then
				Me.OnTRChanging(value)
				Me.SendPropertyChanging
				Me._TR = value
				Me.SendPropertyChanged("TR")
				Me.OnTRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InterfaceStatus", DbType:="NChar(50)")>  _
	Public Property InterfaceStatus() As String
		Get
			Return Me._InterfaceStatus
		End Get
		Set
			If (String.Equals(Me._InterfaceStatus, value) = false) Then
				Me.OnInterfaceStatusChanging(value)
				Me.SendPropertyChanging
				Me._InterfaceStatus = value
				Me.SendPropertyChanged("InterfaceStatus")
				Me.OnInterfaceStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIID", DbType:="VarChar(150)")>  _
	Public Property CMIID() As String
		Get
			Return Me._CMIID
		End Get
		Set
			If (String.Equals(Me._CMIID, value) = false) Then
				Me.OnCMIIDChanging(value)
				Me.SendPropertyChanging
				Me._CMIID = value
				Me.SendPropertyChanged("CMIID")
				Me.OnCMIIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TempIDOld", DbType:="Int")>  _
	Public Property TempIDOld() As System.Nullable(Of Integer)
		Get
			Return Me._TempIDOld
		End Get
		Set
			If (Me._TempIDOld.Equals(value) = false) Then
				Me.OnTempIDOldChanging(value)
				Me.SendPropertyChanging
				Me._TempIDOld = value
				Me.SendPropertyChanged("TempIDOld")
				Me.OnTempIDOldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OtherSendMailStatus", DbType:="Bit")>  _
	Public Property OtherSendMailStatus() As System.Nullable(Of Boolean)
		Get
			Return Me._OtherSendMailStatus
		End Get
		Set
			If (Me._OtherSendMailStatus.Equals(value) = false) Then
				Me.OnOtherSendMailStatusChanging(value)
				Me.SendPropertyChanging
				Me._OtherSendMailStatus = value
				Me.SendPropertyChanged("OtherSendMailStatus")
				Me.OnOtherSendMailStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyDateTimeIn", DbType:="DateTime")>  _
	Public Property PolicyDateTimeIn() As System.Nullable(Of Date)
		Get
			Return Me._PolicyDateTimeIn
		End Get
		Set
			If (Me._PolicyDateTimeIn.Equals(value) = false) Then
				Me.OnPolicyDateTimeInChanging(value)
				Me.SendPropertyChanging
				Me._PolicyDateTimeIn = value
				Me.SendPropertyChanged("PolicyDateTimeIn")
				Me.OnPolicyDateTimeInChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendMailDateTime", DbType:="DateTime")>  _
	Public Property SendMailDateTime() As System.Nullable(Of Date)
		Get
			Return Me._SendMailDateTime
		End Get
		Set
			If (Me._SendMailDateTime.Equals(value) = false) Then
				Me.OnSendMailDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._SendMailDateTime = value
				Me.SendPropertyChanged("SendMailDateTime")
				Me.OnSendMailDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tmpOtherPayment", DbType:="VarChar(200)")>  _
	Public Property tmpOtherPayment() As String
		Get
			Return Me._tmpOtherPayment
		End Get
		Set
			If (String.Equals(Me._tmpOtherPayment, value) = false) Then
				Me.OntmpOtherPaymentChanging(value)
				Me.SendPropertyChanging
				Me._tmpOtherPayment = value
				Me.SendPropertyChanged("tmpOtherPayment")
				Me.OntmpOtherPaymentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Garage", DbType:="VarChar(50)")>  _
	Public Property Garage() As String
		Get
			Return Me._Garage
		End Get
		Set
			If (String.Equals(Me._Garage, value) = false) Then
				Me.OnGarageChanging(value)
				Me.SendPropertyChanging
				Me._Garage = value
				Me.SendPropertyChanged("Garage")
				Me.OnGarageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoverageType", DbType:="VarChar(50)")>  _
	Public Property CoverageType() As String
		Get
			Return Me._CoverageType
		End Get
		Set
			If (String.Equals(Me._CoverageType, value) = false) Then
				Me.OnCoverageTypeChanging(value)
				Me.SendPropertyChanging
				Me._CoverageType = value
				Me.SendPropertyChanged("CoverageType")
				Me.OnCoverageTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RemarkCancel", DbType:="VarChar(255)")>  _
	Public Property RemarkCancel() As String
		Get
			Return Me._RemarkCancel
		End Get
		Set
			If (String.Equals(Me._RemarkCancel, value) = false) Then
				Me.OnRemarkCancelChanging(value)
				Me.SendPropertyChanging
				Me._RemarkCancel = value
				Me.SendPropertyChanged("RemarkCancel")
				Me.OnRemarkCancelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Collective", DbType:="VarChar(50)")>  _
	Public Property Collective() As String
		Get
			Return Me._Collective
		End Get
		Set
			If (String.Equals(Me._Collective, value) = false) Then
				Me.OnCollectiveChanging(value)
				Me.SendPropertyChanging
				Me._Collective = value
				Me.SendPropertyChanged("Collective")
				Me.OnCollectiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CollectiveRemark", DbType:="VarChar(255)")>  _
	Public Property CollectiveRemark() As String
		Get
			Return Me._CollectiveRemark
		End Get
		Set
			If (String.Equals(Me._CollectiveRemark, value) = false) Then
				Me.OnCollectiveRemarkChanging(value)
				Me.SendPropertyChanging
				Me._CollectiveRemark = value
				Me.SendPropertyChanged("CollectiveRemark")
				Me.OnCollectiveRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_Refference", DbType:="VarChar(50)")>  _
	Public Property IM_Refference() As String
		Get
			Return Me._IM_Refference
		End Get
		Set
			If (String.Equals(Me._IM_Refference, value) = false) Then
				Me.OnIM_RefferenceChanging(value)
				Me.SendPropertyChanging
				Me._IM_Refference = value
				Me.SendPropertyChanged("IM_Refference")
				Me.OnIM_RefferenceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_BatchNo", DbType:="VarChar(50)")>  _
	Public Property IM_BatchNo() As String
		Get
			Return Me._IM_BatchNo
		End Get
		Set
			If (String.Equals(Me._IM_BatchNo, value) = false) Then
				Me.OnIM_BatchNoChanging(value)
				Me.SendPropertyChanging
				Me._IM_BatchNo = value
				Me.SendPropertyChanged("IM_BatchNo")
				Me.OnIM_BatchNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountNote", DbType:="VarChar(100)")>  _
	Public Property DiscountNote() As String
		Get
			Return Me._DiscountNote
		End Get
		Set
			If (String.Equals(Me._DiscountNote, value) = false) Then
				Me.OnDiscountNoteChanging(value)
				Me.SendPropertyChanging
				Me._DiscountNote = value
				Me.SendPropertyChanged("DiscountNote")
				Me.OnDiscountNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarAccessories", DbType:="VarChar(250)")>  _
	Public Property CarAccessories() As String
		Get
			Return Me._CarAccessories
		End Get
		Set
			If (String.Equals(Me._CarAccessories, value) = false) Then
				Me.OnCarAccessoriesChanging(value)
				Me.SendPropertyChanging
				Me._CarAccessories = value
				Me.SendPropertyChanged("CarAccessories")
				Me.OnCarAccessoriesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyIssueDate", DbType:="DateTime")>  _
	Public Property PolicyIssueDate() As System.Nullable(Of Date)
		Get
			Return Me._PolicyIssueDate
		End Get
		Set
			If (Me._PolicyIssueDate.Equals(value) = false) Then
				Me.OnPolicyIssueDateChanging(value)
				Me.SendPropertyChanging
				Me._PolicyIssueDate = value
				Me.SendPropertyChanged("PolicyIssueDate")
				Me.OnPolicyIssueDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWReceiptNo", DbType:="VarChar(50)")>  _
	Public Property UWReceiptNo() As String
		Get
			Return Me._UWReceiptNo
		End Get
		Set
			If (String.Equals(Me._UWReceiptNo, value) = false) Then
				Me.OnUWReceiptNoChanging(value)
				Me.SendPropertyChanging
				Me._UWReceiptNo = value
				Me.SendPropertyChanged("UWReceiptNo")
				Me.OnUWReceiptNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UWInvoiceNo", DbType:="VarChar(50)")>  _
	Public Property UWInvoiceNo() As String
		Get
			Return Me._UWInvoiceNo
		End Get
		Set
			If (String.Equals(Me._UWInvoiceNo, value) = false) Then
				Me.OnUWInvoiceNoChanging(value)
				Me.SendPropertyChanging
				Me._UWInvoiceNo = value
				Me.SendPropertyChanged("UWInvoiceNo")
				Me.OnUWInvoiceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsExtend", DbType:="Bit NOT NULL")>  _
	Public Property IsExtend() As Boolean
		Get
			Return Me._IsExtend
		End Get
		Set
			If ((Me._IsExtend = value)  _
						= false) Then
				Me.OnIsExtendChanging(value)
				Me.SendPropertyChanging
				Me._IsExtend = value
				Me.SendPropertyChanged("IsExtend")
				Me.OnIsExtendChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExtendID", DbType:="Int")>  _
	Public Property ExtendID() As System.Nullable(Of Integer)
		Get
			Return Me._ExtendID
		End Get
		Set
			If (Me._ExtendID.Equals(value) = false) Then
				Me.OnExtendIDChanging(value)
				Me.SendPropertyChanging
				Me._ExtendID = value
				Me.SendPropertyChanged("ExtendID")
				Me.OnExtendIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EasyPay", DbType:="NVarChar(50)")>  _
	Public Property EasyPay() As String
		Get
			Return Me._EasyPay
		End Get
		Set
			If (String.Equals(Me._EasyPay, value) = false) Then
				Me.OnEasyPayChanging(value)
				Me.SendPropertyChanging
				Me._EasyPay = value
				Me.SendPropertyChanged("EasyPay")
				Me.OnEasyPayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_EmailSending", DbType:="Bit NOT NULL")>  _
	Public Property CMI_EmailSending() As Boolean
		Get
			Return Me._CMI_EmailSending
		End Get
		Set
			If ((Me._CMI_EmailSending = value)  _
						= false) Then
				Me.OnCMI_EmailSendingChanging(value)
				Me.SendPropertyChanging
				Me._CMI_EmailSending = value
				Me.SendPropertyChanged("CMI_EmailSending")
				Me.OnCMI_EmailSendingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarTypeId", DbType:="Int NOT NULL")>  _
	Public Property CarTypeId() As Integer
		Get
			Return Me._CarTypeId
		End Get
		Set
			If ((Me._CarTypeId = value)  _
						= false) Then
				Me.OnCarTypeIdChanging(value)
				Me.SendPropertyChanging
				Me._CarTypeId = value
				Me.SendPropertyChanged("CarTypeId")
				Me.OnCarTypeIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationChannel", DbType:="VarChar(32)")>  _
	Public Property ApplicationChannel() As String
		Get
			Return Me._ApplicationChannel
		End Get
		Set
			If (String.Equals(Me._ApplicationChannel, value) = false) Then
				Me.OnApplicationChannelChanging(value)
				Me.SendPropertyChanging
				Me._ApplicationChannel = value
				Me.SendPropertyChanged("ApplicationChannel")
				Me.OnApplicationChannelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLT_EasyPay", DbType:="Bit NOT NULL")>  _
	Public Property NLT_EasyPay() As Boolean
		Get
			Return Me._NLT_EasyPay
		End Get
		Set
			If ((Me._NLT_EasyPay = value)  _
						= false) Then
				Me.OnNLT_EasyPayChanging(value)
				Me.SendPropertyChanging
				Me._NLT_EasyPay = value
				Me.SendPropertyChanged("NLT_EasyPay")
				Me.OnNLT_EasyPayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLT_CampaignName", DbType:="VarChar(64)")>  _
	Public Property NLT_CampaignName() As String
		Get
			Return Me._NLT_CampaignName
		End Get
		Set
			If (String.Equals(Me._NLT_CampaignName, value) = false) Then
				Me.OnNLT_CampaignNameChanging(value)
				Me.SendPropertyChanging
				Me._NLT_CampaignName = value
				Me.SendPropertyChanged("NLT_CampaignName")
				Me.OnNLT_CampaignNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLT_Term", DbType:="Int")>  _
	Public Property NLT_Term() As System.Nullable(Of Integer)
		Get
			Return Me._NLT_Term
		End Get
		Set
			If (Me._NLT_Term.Equals(value) = false) Then
				Me.OnNLT_TermChanging(value)
				Me.SendPropertyChanging
				Me._NLT_Term = value
				Me.SendPropertyChanged("NLT_Term")
				Me.OnNLT_TermChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddedByUserId", DbType:="Int NOT NULL")>  _
	Public Property AddedByUserId() As Integer
		Get
			Return Me._AddedByUserId
		End Get
		Set
			If ((Me._AddedByUserId = value)  _
						= false) Then
				Me.OnAddedByUserIdChanging(value)
				Me.SendPropertyChanging
				Me._AddedByUserId = value
				Me.SendPropertyChanged("AddedByUserId")
				Me.OnAddedByUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddedDate", DbType:="DateTime")>  _
	Public Property AddedDate() As System.Nullable(Of Date)
		Get
			Return Me._AddedDate
		End Get
		Set
			If (Me._AddedDate.Equals(value) = false) Then
				Me.OnAddedDateChanging(value)
				Me.SendPropertyChanging
				Me._AddedDate = value
				Me.SendPropertyChanged("AddedDate")
				Me.OnAddedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotifyName", DbType:="VarChar(50)")>  _
	Public Property NotifyName() As String
		Get
			Return Me._NotifyName
		End Get
		Set
			If (String.Equals(Me._NotifyName, value) = false) Then
				Me.OnNotifyNameChanging(value)
				Me.SendPropertyChanging
				Me._NotifyName = value
				Me.SendPropertyChanged("NotifyName")
				Me.OnNotifyNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotifyTel", DbType:="VarChar(50)")>  _
	Public Property NotifyTel() As String
		Get
			Return Me._NotifyTel
		End Get
		Set
			If (String.Equals(Me._NotifyTel, value) = false) Then
				Me.OnNotifyTelChanging(value)
				Me.SendPropertyChanging
				Me._NotifyTel = value
				Me.SendPropertyChanged("NotifyTel")
				Me.OnNotifyTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AssuTitle", DbType:="VarChar(32)")>  _
	Public Property AssuTitle() As String
		Get
			Return Me._AssuTitle
		End Get
		Set
			If (String.Equals(Me._AssuTitle, value) = false) Then
				Me.OnAssuTitleChanging(value)
				Me.SendPropertyChanging
				Me._AssuTitle = value
				Me.SendPropertyChanged("AssuTitle")
				Me.OnAssuTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AssuIDCardType", DbType:="Char(3)")>  _
	Public Property AssuIDCardType() As String
		Get
			Return Me._AssuIDCardType
		End Get
		Set
			If (String.Equals(Me._AssuIDCardType, value) = false) Then
				Me.OnAssuIDCardTypeChanging(value)
				Me.SendPropertyChanging
				Me._AssuIDCardType = value
				Me.SendPropertyChanged("AssuIDCardType")
				Me.OnAssuIDCardTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AssuEmail", DbType:="VarChar(128)")>  _
	Public Property AssuEmail() As String
		Get
			Return Me._AssuEmail
		End Get
		Set
			If (String.Equals(Me._AssuEmail, value) = false) Then
				Me.OnAssuEmailChanging(value)
				Me.SendPropertyChanging
				Me._AssuEmail = value
				Me.SendPropertyChanged("AssuEmail")
				Me.OnAssuEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageId", DbType:="Char(2)")>  _
	Public Property GarageId() As String
		Get
			Return Me._GarageId
		End Get
		Set
			If (String.Equals(Me._GarageId, value) = false) Then
				Me.OnGarageIdChanging(value)
				Me.SendPropertyChanging
				Me._GarageId = value
				Me.SendPropertyChanged("GarageId")
				Me.OnGarageIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WarrantyClass", DbType:="VarChar(8)")>  _
	Public Property WarrantyClass() As String
		Get
			Return Me._WarrantyClass
		End Get
		Set
			If (String.Equals(Me._WarrantyClass, value) = false) Then
				Me.OnWarrantyClassChanging(value)
				Me.SendPropertyChanging
				Me._WarrantyClass = value
				Me.SendPropertyChanged("WarrantyClass")
				Me.OnWarrantyClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LevelEditing", DbType:="TinyInt")>  _
	Public Property LevelEditing() As System.Nullable(Of Byte)
		Get
			Return Me._LevelEditing
		End Get
		Set
			If (Me._LevelEditing.Equals(value) = false) Then
				Me.OnLevelEditingChanging(value)
				Me.SendPropertyChanging
				Me._LevelEditing = value
				Me.SendPropertyChanged("LevelEditing")
				Me.OnLevelEditingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryCarId", DbType:="VarChar(8)")>  _
	Public Property CategoryCarId() As String
		Get
			Return Me._CategoryCarId
		End Get
		Set
			If (String.Equals(Me._CategoryCarId, value) = false) Then
				Me.OnCategoryCarIdChanging(value)
				Me.SendPropertyChanging
				Me._CategoryCarId = value
				Me.SendPropertyChanged("CategoryCarId")
				Me.OnCategoryCarIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsabilityId", DbType:="VarChar(8)")>  _
	Public Property UsabilityId() As String
		Get
			Return Me._UsabilityId
		End Get
		Set
			If (String.Equals(Me._UsabilityId, value) = false) Then
				Me.OnUsabilityIdChanging(value)
				Me.SendPropertyChanging
				Me._UsabilityId = value
				Me.SendPropertyChanged("UsabilityId")
				Me.OnUsabilityIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_PolicyNumber", DbType:="VarChar(50)")>  _
	Public Property CMI_PolicyNumber() As String
		Get
			Return Me._CMI_PolicyNumber
		End Get
		Set
			If (String.Equals(Me._CMI_PolicyNumber, value) = false) Then
				Me.OnCMI_PolicyNumberChanging(value)
				Me.SendPropertyChanging
				Me._CMI_PolicyNumber = value
				Me.SendPropertyChanged("CMI_PolicyNumber")
				Me.OnCMI_PolicyNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_StickerNumber", DbType:="VarChar(50)")>  _
	Public Property CMI_StickerNumber() As String
		Get
			Return Me._CMI_StickerNumber
		End Get
		Set
			If (String.Equals(Me._CMI_StickerNumber, value) = false) Then
				Me.OnCMI_StickerNumberChanging(value)
				Me.SendPropertyChanging
				Me._CMI_StickerNumber = value
				Me.SendPropertyChanged("CMI_StickerNumber")
				Me.OnCMI_StickerNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_CarTypeCode", DbType:="VarChar(8)")>  _
	Public Property CMI_CarTypeCode() As String
		Get
			Return Me._CMI_CarTypeCode
		End Get
		Set
			If (String.Equals(Me._CMI_CarTypeCode, value) = false) Then
				Me.OnCMI_CarTypeCodeChanging(value)
				Me.SendPropertyChanging
				Me._CMI_CarTypeCode = value
				Me.SendPropertyChanged("CMI_CarTypeCode")
				Me.OnCMI_CarTypeCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_UsabilityTypeId", DbType:="VarChar(8)")>  _
	Public Property CMI_UsabilityTypeId() As String
		Get
			Return Me._CMI_UsabilityTypeId
		End Get
		Set
			If (String.Equals(Me._CMI_UsabilityTypeId, value) = false) Then
				Me.OnCMI_UsabilityTypeIdChanging(value)
				Me.SendPropertyChanging
				Me._CMI_UsabilityTypeId = value
				Me.SendPropertyChanged("CMI_UsabilityTypeId")
				Me.OnCMI_UsabilityTypeIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_PremiumCode", DbType:="VarChar(8)")>  _
	Public Property CMI_PremiumCode() As String
		Get
			Return Me._CMI_PremiumCode
		End Get
		Set
			If (String.Equals(Me._CMI_PremiumCode, value) = false) Then
				Me.OnCMI_PremiumCodeChanging(value)
				Me.SendPropertyChanging
				Me._CMI_PremiumCode = value
				Me.SendPropertyChanged("CMI_PremiumCode")
				Me.OnCMI_PremiumCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_NetPremium", DbType:="Decimal(18,2)")>  _
	Public Property CMI_NetPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._CMI_NetPremium
		End Get
		Set
			If (Me._CMI_NetPremium.Equals(value) = false) Then
				Me.OnCMI_NetPremiumChanging(value)
				Me.SendPropertyChanging
				Me._CMI_NetPremium = value
				Me.SendPropertyChanged("CMI_NetPremium")
				Me.OnCMI_NetPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_Stamp", DbType:="Decimal(18,2)")>  _
	Public Property CMI_Stamp() As System.Nullable(Of Decimal)
		Get
			Return Me._CMI_Stamp
		End Get
		Set
			If (Me._CMI_Stamp.Equals(value) = false) Then
				Me.OnCMI_StampChanging(value)
				Me.SendPropertyChanging
				Me._CMI_Stamp = value
				Me.SendPropertyChanged("CMI_Stamp")
				Me.OnCMI_StampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_Vat", DbType:="Decimal(18,2)")>  _
	Public Property CMI_Vat() As System.Nullable(Of Decimal)
		Get
			Return Me._CMI_Vat
		End Get
		Set
			If (Me._CMI_Vat.Equals(value) = false) Then
				Me.OnCMI_VatChanging(value)
				Me.SendPropertyChanging
				Me._CMI_Vat = value
				Me.SendPropertyChanged("CMI_Vat")
				Me.OnCMI_VatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_TotalPremium", DbType:="Decimal(18,2)")>  _
	Public Property CMI_TotalPremium() As System.Nullable(Of Decimal)
		Get
			Return Me._CMI_TotalPremium
		End Get
		Set
			If (Me._CMI_TotalPremium.Equals(value) = false) Then
				Me.OnCMI_TotalPremiumChanging(value)
				Me.SendPropertyChanging
				Me._CMI_TotalPremium = value
				Me.SendPropertyChanged("CMI_TotalPremium")
				Me.OnCMI_TotalPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_PaymentBy", DbType:="Int")>  _
	Public Property CMI_PaymentBy() As System.Nullable(Of Integer)
		Get
			Return Me._CMI_PaymentBy
		End Get
		Set
			If (Me._CMI_PaymentBy.Equals(value) = false) Then
				Me.OnCMI_PaymentByChanging(value)
				Me.SendPropertyChanging
				Me._CMI_PaymentBy = value
				Me.SendPropertyChanged("CMI_PaymentBy")
				Me.OnCMI_PaymentByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Voluntary_NetPremium", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property Voluntary_NetPremium() As Decimal
		Get
			Return Me._Voluntary_NetPremium
		End Get
		Set
			If ((Me._Voluntary_NetPremium = value)  _
						= false) Then
				Me.OnVoluntary_NetPremiumChanging(value)
				Me.SendPropertyChanging
				Me._Voluntary_NetPremium = value
				Me.SendPropertyChanged("Voluntary_NetPremium")
				Me.OnVoluntary_NetPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Voluntary_Stamp", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property Voluntary_Stamp() As Decimal
		Get
			Return Me._Voluntary_Stamp
		End Get
		Set
			If ((Me._Voluntary_Stamp = value)  _
						= false) Then
				Me.OnVoluntary_StampChanging(value)
				Me.SendPropertyChanging
				Me._Voluntary_Stamp = value
				Me.SendPropertyChanged("Voluntary_Stamp")
				Me.OnVoluntary_StampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Voluntary_Vat", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property Voluntary_Vat() As Decimal
		Get
			Return Me._Voluntary_Vat
		End Get
		Set
			If ((Me._Voluntary_Vat = value)  _
						= false) Then
				Me.OnVoluntary_VatChanging(value)
				Me.SendPropertyChanging
				Me._Voluntary_Vat = value
				Me.SendPropertyChanged("Voluntary_Vat")
				Me.OnVoluntary_VatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Voluntary_TotalPremium", DbType:="Decimal(18,2) NOT NULL")>  _
	Public Property Voluntary_TotalPremium() As Decimal
		Get
			Return Me._Voluntary_TotalPremium
		End Get
		Set
			If ((Me._Voluntary_TotalPremium = value)  _
						= false) Then
				Me.OnVoluntary_TotalPremiumChanging(value)
				Me.SendPropertyChanging
				Me._Voluntary_TotalPremium = value
				Me.SendPropertyChanged("Voluntary_TotalPremium")
				Me.OnVoluntary_TotalPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingNote", DbType:="VarChar(512)")>  _
	Public Property ClosingNote() As String
		Get
			Return Me._ClosingNote
		End Get
		Set
			If (String.Equals(Me._ClosingNote, value) = false) Then
				Me.OnClosingNoteChanging(value)
				Me.SendPropertyChanging
				Me._ClosingNote = value
				Me.SendPropertyChanged("ClosingNote")
				Me.OnClosingNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstStartingDate", DbType:="DateTime")>  _
	Public Property FirstStartingDate() As System.Nullable(Of Date)
		Get
			Return Me._FirstStartingDate
		End Get
		Set
			If (Me._FirstStartingDate.Equals(value) = false) Then
				Me.OnFirstStartingDateChanging(value)
				Me.SendPropertyChanging
				Me._FirstStartingDate = value
				Me.SendPropertyChanged("FirstStartingDate")
				Me.OnFirstStartingDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cancel", DbType:="Bit NOT NULL")>  _
	Public Property Cancel() As Boolean
		Get
			Return Me._Cancel
		End Get
		Set
			If ((Me._Cancel = value)  _
						= false) Then
				Me.OnCancelChanging(value)
				Me.SendPropertyChanging
				Me._Cancel = value
				Me.SendPropertyChanged("Cancel")
				Me.OnCancelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CancelType", DbType:="VarChar(16)")>  _
	Public Property CancelType() As String
		Get
			Return Me._CancelType
		End Get
		Set
			If (String.Equals(Me._CancelType, value) = false) Then
				Me.OnCancelTypeChanging(value)
				Me.SendPropertyChanging
				Me._CancelType = value
				Me.SendPropertyChanged("CancelType")
				Me.OnCancelTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CancelDate", DbType:="DateTime")>  _
	Public Property CancelDate() As System.Nullable(Of Date)
		Get
			Return Me._CancelDate
		End Get
		Set
			If (Me._CancelDate.Equals(value) = false) Then
				Me.OnCancelDateChanging(value)
				Me.SendPropertyChanging
				Me._CancelDate = value
				Me.SendPropertyChanged("CancelDate")
				Me.OnCancelDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CancelBy", DbType:="VarChar(50)")>  _
	Public Property CancelBy() As String
		Get
			Return Me._CancelBy
		End Get
		Set
			If (String.Equals(Me._CancelBy, value) = false) Then
				Me.OnCancelByChanging(value)
				Me.SendPropertyChanging
				Me._CancelBy = value
				Me.SendPropertyChanged("CancelBy")
				Me.OnCancelByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLT_BookingType", DbType:="VarChar(64)")>  _
	Public Property NLT_BookingType() As String
		Get
			Return Me._NLT_BookingType
		End Get
		Set
			If (String.Equals(Me._NLT_BookingType, value) = false) Then
				Me.OnNLT_BookingTypeChanging(value)
				Me.SendPropertyChanging
				Me._NLT_BookingType = value
				Me.SendPropertyChanged("NLT_BookingType")
				Me.OnNLT_BookingTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLT_BookingId", DbType:="Int")>  _
	Public Property NLT_BookingId() As System.Nullable(Of Integer)
		Get
			Return Me._NLT_BookingId
		End Get
		Set
			If (Me._NLT_BookingId.Equals(value) = false) Then
				Me.OnNLT_BookingIdChanging(value)
				Me.SendPropertyChanging
				Me._NLT_BookingId = value
				Me.SendPropertyChanged("NLT_BookingId")
				Me.OnNLT_BookingIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_EffectiveDate", DbType:="DateTime")>  _
	Public Property CMI_EffectiveDate() As System.Nullable(Of Date)
		Get
			Return Me._CMI_EffectiveDate
		End Get
		Set
			If (Me._CMI_EffectiveDate.Equals(value) = false) Then
				Me.OnCMI_EffectiveDateChanging(value)
				Me.SendPropertyChanging
				Me._CMI_EffectiveDate = value
				Me.SendPropertyChanged("CMI_EffectiveDate")
				Me.OnCMI_EffectiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_ExpiryDate", DbType:="DateTime")>  _
	Public Property CMI_ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._CMI_ExpiryDate
		End Get
		Set
			If (Me._CMI_ExpiryDate.Equals(value) = false) Then
				Me.OnCMI_ExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._CMI_ExpiryDate = value
				Me.SendPropertyChanged("CMI_ExpiryDate")
				Me.OnCMI_ExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VMI_ExpiryDate", DbType:="DateTime")>  _
	Public Property VMI_ExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._VMI_ExpiryDate
		End Get
		Set
			If (Me._VMI_ExpiryDate.Equals(value) = false) Then
				Me.OnVMI_ExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._VMI_ExpiryDate = value
				Me.SendPropertyChanged("VMI_ExpiryDate")
				Me.OnVMI_ExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITRemark", DbType:="VarChar(256)")>  _
	Public Property ITRemark() As String
		Get
			Return Me._ITRemark
		End Get
		Set
			If (String.Equals(Me._ITRemark, value) = false) Then
				Me.OnITRemarkChanging(value)
				Me.SendPropertyChanging
				Me._ITRemark = value
				Me.SendPropertyChanged("ITRemark")
				Me.OnITRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassOfRiskVMI", DbType:="VarChar(16)")>  _
	Public Property ClassOfRiskVMI() As String
		Get
			Return Me._ClassOfRiskVMI
		End Get
		Set
			If (String.Equals(Me._ClassOfRiskVMI, value) = false) Then
				Me.OnClassOfRiskVMIChanging(value)
				Me.SendPropertyChanging
				Me._ClassOfRiskVMI = value
				Me.SendPropertyChanged("ClassOfRiskVMI")
				Me.OnClassOfRiskVMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassOfRiskCMI", DbType:="VarChar(16)")>  _
	Public Property ClassOfRiskCMI() As String
		Get
			Return Me._ClassOfRiskCMI
		End Get
		Set
			If (String.Equals(Me._ClassOfRiskCMI, value) = false) Then
				Me.OnClassOfRiskCMIChanging(value)
				Me.SendPropertyChanging
				Me._ClassOfRiskCMI = value
				Me.SendPropertyChanged("ClassOfRiskCMI")
				Me.OnClassOfRiskCMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AECode", DbType:="VarChar(50)")>  _
	Public Property AECode() As String
		Get
			Return Me._AECode
		End Get
		Set
			If (String.Equals(Me._AECode, value) = false) Then
				Me.OnAECodeChanging(value)
				Me.SendPropertyChanging
				Me._AECode = value
				Me.SendPropertyChanged("AECode")
				Me.OnAECodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Showroom")>  _
Partial Public Class Showroom
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ShowroomID As Integer
	
	Private _ShowroomCode As String
	
	Private _CompanyName As String
	
	Private _Address As String
	
	Private _Phone As String
	
	Private _Fax As String
	
	Private _Email As String
	
	Private _Contactperson As String
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _IsActive As System.Nullable(Of Integer)
	
	Private _DealerID As System.Nullable(Of Integer)
	
	Private _HeadID As System.Nullable(Of Integer)
	
	Private _CompanyNameEN As String
	
	Private _Province As String
	
	Private _ProvinceCode As String
	
	Private _RegionCodeNMT As String
	
	Private _NonNLTH_RenewBy As String
	
	Private _BPShop As String
	
	Private _BranchNameEN As String
	
	Private _ITRemark As String
	
	Private _NissanShowroomType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnShowroomIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnShowroomIDChanged()
    End Sub
    Partial Private Sub OnShowroomCodeChanging(value As String)
    End Sub
    Partial Private Sub OnShowroomCodeChanged()
    End Sub
    Partial Private Sub OnCompanyNameChanging(value As String)
    End Sub
    Partial Private Sub OnCompanyNameChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnContactpersonChanging(value As String)
    End Sub
    Partial Private Sub OnContactpersonChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnDealerIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDealerIDChanged()
    End Sub
    Partial Private Sub OnHeadIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHeadIDChanged()
    End Sub
    Partial Private Sub OnCompanyNameENChanging(value As String)
    End Sub
    Partial Private Sub OnCompanyNameENChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnProvinceCodeChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceCodeChanged()
    End Sub
    Partial Private Sub OnRegionCodeNMTChanging(value As String)
    End Sub
    Partial Private Sub OnRegionCodeNMTChanged()
    End Sub
    Partial Private Sub OnNonNLTH_RenewByChanging(value As String)
    End Sub
    Partial Private Sub OnNonNLTH_RenewByChanged()
    End Sub
    Partial Private Sub OnBPShopChanging(value As String)
    End Sub
    Partial Private Sub OnBPShopChanged()
    End Sub
    Partial Private Sub OnBranchNameENChanging(value As String)
    End Sub
    Partial Private Sub OnBranchNameENChanged()
    End Sub
    Partial Private Sub OnITRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnITRemarkChanged()
    End Sub
    Partial Private Sub OnNissanShowroomTypeChanging(value As String)
    End Sub
    Partial Private Sub OnNissanShowroomTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ShowroomID() As Integer
		Get
			Return Me._ShowroomID
		End Get
		Set
			If ((Me._ShowroomID = value)  _
						= false) Then
				Me.OnShowroomIDChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomID = value
				Me.SendPropertyChanged("ShowroomID")
				Me.OnShowroomIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomCode", DbType:="VarChar(50)")>  _
	Public Property ShowroomCode() As String
		Get
			Return Me._ShowroomCode
		End Get
		Set
			If (String.Equals(Me._ShowroomCode, value) = false) Then
				Me.OnShowroomCodeChanging(value)
				Me.SendPropertyChanging
				Me._ShowroomCode = value
				Me.SendPropertyChanged("ShowroomCode")
				Me.OnShowroomCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompanyName", DbType:="VarChar(150)")>  _
	Public Property CompanyName() As String
		Get
			Return Me._CompanyName
		End Get
		Set
			If (String.Equals(Me._CompanyName, value) = false) Then
				Me.OnCompanyNameChanging(value)
				Me.SendPropertyChanging
				Me._CompanyName = value
				Me.SendPropertyChanged("CompanyName")
				Me.OnCompanyNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(255)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Phone() As String
		Get
			Return Me._Phone
		End Get
		Set
			If (String.Equals(Me._Phone, value) = false) Then
				Me.OnPhoneChanging(value)
				Me.SendPropertyChanging
				Me._Phone = value
				Me.SendPropertyChanged("Phone")
				Me.OnPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Fax() As String
		Get
			Return Me._Fax
		End Get
		Set
			If (String.Equals(Me._Fax, value) = false) Then
				Me.OnFaxChanging(value)
				Me.SendPropertyChanging
				Me._Fax = value
				Me.SendPropertyChanged("Fax")
				Me.OnFaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(128)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contactperson", DbType:="VarChar(128)")>  _
	Public Property Contactperson() As String
		Get
			Return Me._Contactperson
		End Get
		Set
			If (String.Equals(Me._Contactperson, value) = false) Then
				Me.OnContactpersonChanging(value)
				Me.SendPropertyChanging
				Me._Contactperson = value
				Me.SendPropertyChanged("Contactperson")
				Me.OnContactpersonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int")>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Int")>  _
	Public Property IsActive() As System.Nullable(Of Integer)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerID", DbType:="Int")>  _
	Public Property DealerID() As System.Nullable(Of Integer)
		Get
			Return Me._DealerID
		End Get
		Set
			If (Me._DealerID.Equals(value) = false) Then
				Me.OnDealerIDChanging(value)
				Me.SendPropertyChanging
				Me._DealerID = value
				Me.SendPropertyChanged("DealerID")
				Me.OnDealerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HeadID", DbType:="Int")>  _
	Public Property HeadID() As System.Nullable(Of Integer)
		Get
			Return Me._HeadID
		End Get
		Set
			If (Me._HeadID.Equals(value) = false) Then
				Me.OnHeadIDChanging(value)
				Me.SendPropertyChanging
				Me._HeadID = value
				Me.SendPropertyChanged("HeadID")
				Me.OnHeadIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompanyNameEN", DbType:="VarChar(100)")>  _
	Public Property CompanyNameEN() As String
		Get
			Return Me._CompanyNameEN
		End Get
		Set
			If (String.Equals(Me._CompanyNameEN, value) = false) Then
				Me.OnCompanyNameENChanging(value)
				Me.SendPropertyChanging
				Me._CompanyNameEN = value
				Me.SendPropertyChanged("CompanyNameEN")
				Me.OnCompanyNameENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="NVarChar(255)")>  _
	Public Property Province() As String
		Get
			Return Me._Province
		End Get
		Set
			If (String.Equals(Me._Province, value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProvinceCode", DbType:="Char(2)")>  _
	Public Property ProvinceCode() As String
		Get
			Return Me._ProvinceCode
		End Get
		Set
			If (String.Equals(Me._ProvinceCode, value) = false) Then
				Me.OnProvinceCodeChanging(value)
				Me.SendPropertyChanging
				Me._ProvinceCode = value
				Me.SendPropertyChanged("ProvinceCode")
				Me.OnProvinceCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionCodeNMT", DbType:="NVarChar(10)")>  _
	Public Property RegionCodeNMT() As String
		Get
			Return Me._RegionCodeNMT
		End Get
		Set
			If (String.Equals(Me._RegionCodeNMT, value) = false) Then
				Me.OnRegionCodeNMTChanging(value)
				Me.SendPropertyChanging
				Me._RegionCodeNMT = value
				Me.SendPropertyChanged("RegionCodeNMT")
				Me.OnRegionCodeNMTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NonNLTH_RenewBy", DbType:="VarChar(20)")>  _
	Public Property NonNLTH_RenewBy() As String
		Get
			Return Me._NonNLTH_RenewBy
		End Get
		Set
			If (String.Equals(Me._NonNLTH_RenewBy, value) = false) Then
				Me.OnNonNLTH_RenewByChanging(value)
				Me.SendPropertyChanging
				Me._NonNLTH_RenewBy = value
				Me.SendPropertyChanged("NonNLTH_RenewBy")
				Me.OnNonNLTH_RenewByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BPShop", DbType:="NVarChar(50)")>  _
	Public Property BPShop() As String
		Get
			Return Me._BPShop
		End Get
		Set
			If (String.Equals(Me._BPShop, value) = false) Then
				Me.OnBPShopChanging(value)
				Me.SendPropertyChanging
				Me._BPShop = value
				Me.SendPropertyChanged("BPShop")
				Me.OnBPShopChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchNameEN", DbType:="VarChar(150)")>  _
	Public Property BranchNameEN() As String
		Get
			Return Me._BranchNameEN
		End Get
		Set
			If (String.Equals(Me._BranchNameEN, value) = false) Then
				Me.OnBranchNameENChanging(value)
				Me.SendPropertyChanging
				Me._BranchNameEN = value
				Me.SendPropertyChanged("BranchNameEN")
				Me.OnBranchNameENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITRemark", DbType:="VarChar(1000)")>  _
	Public Property ITRemark() As String
		Get
			Return Me._ITRemark
		End Get
		Set
			If (String.Equals(Me._ITRemark, value) = false) Then
				Me.OnITRemarkChanging(value)
				Me.SendPropertyChanging
				Me._ITRemark = value
				Me.SendPropertyChanged("ITRemark")
				Me.OnITRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NissanShowroomType", DbType:="VarChar(50)")>  _
	Public Property NissanShowroomType() As String
		Get
			Return Me._NissanShowroomType
		End Get
		Set
			If (String.Equals(Me._NissanShowroomType, value) = false) Then
				Me.OnNissanShowroomTypeChanging(value)
				Me.SendPropertyChanging
				Me._NissanShowroomType = value
				Me.SendPropertyChanged("NissanShowroomType")
				Me.OnNissanShowroomTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HeadOffice")>  _
Partial Public Class HeadOffice
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _HeadID As Integer
	
	Private _DealerCode As String
	
	Private _DealerName As String
	
	Private _Province As String
	
	Private _ContactPerson1 As String
	
	Private _Phone1 As String
	
	Private _Fax1 As String
	
	Private _ContactPerson2 As String
	
	Private _Phone2 As String
	
	Private _Fax2 As String
	
	Private _IsActive As System.Nullable(Of Integer)
	
	Private _BillingName As String
	
	Private _BillingAddress As String
	
	Private _BillingStatus As System.Nullable(Of Integer)
	
	Private _DealerEmail1 As String
	
	Private _DealerEmail2 As String
	
	Private _ProvinceCode As String
	
	Private _DealerNameEN As String
	
	Private _BPShop As String
	
	Private _NLTDealerCode As String
	
	Private _NLTDealerNameTH As String
	
	Private _NLTDealerNameEN As String
	
	Private _NLTArea As String
	
	Private _AECodeX As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnHeadIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnHeadIDChanged()
    End Sub
    Partial Private Sub OnDealerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDealerCodeChanged()
    End Sub
    Partial Private Sub OnDealerNameChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnContactPerson1Changing(value As String)
    End Sub
    Partial Private Sub OnContactPerson1Changed()
    End Sub
    Partial Private Sub OnPhone1Changing(value As String)
    End Sub
    Partial Private Sub OnPhone1Changed()
    End Sub
    Partial Private Sub OnFax1Changing(value As String)
    End Sub
    Partial Private Sub OnFax1Changed()
    End Sub
    Partial Private Sub OnContactPerson2Changing(value As String)
    End Sub
    Partial Private Sub OnContactPerson2Changed()
    End Sub
    Partial Private Sub OnPhone2Changing(value As String)
    End Sub
    Partial Private Sub OnPhone2Changed()
    End Sub
    Partial Private Sub OnFax2Changing(value As String)
    End Sub
    Partial Private Sub OnFax2Changed()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnBillingNameChanging(value As String)
    End Sub
    Partial Private Sub OnBillingNameChanged()
    End Sub
    Partial Private Sub OnBillingAddressChanging(value As String)
    End Sub
    Partial Private Sub OnBillingAddressChanged()
    End Sub
    Partial Private Sub OnBillingStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBillingStatusChanged()
    End Sub
    Partial Private Sub OnDealerEmail1Changing(value As String)
    End Sub
    Partial Private Sub OnDealerEmail1Changed()
    End Sub
    Partial Private Sub OnDealerEmail2Changing(value As String)
    End Sub
    Partial Private Sub OnDealerEmail2Changed()
    End Sub
    Partial Private Sub OnProvinceCodeChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceCodeChanged()
    End Sub
    Partial Private Sub OnDealerNameENChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameENChanged()
    End Sub
    Partial Private Sub OnBPShopChanging(value As String)
    End Sub
    Partial Private Sub OnBPShopChanged()
    End Sub
    Partial Private Sub OnNLTDealerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnNLTDealerCodeChanged()
    End Sub
    Partial Private Sub OnNLTDealerNameTHChanging(value As String)
    End Sub
    Partial Private Sub OnNLTDealerNameTHChanged()
    End Sub
    Partial Private Sub OnNLTDealerNameENChanging(value As String)
    End Sub
    Partial Private Sub OnNLTDealerNameENChanged()
    End Sub
    Partial Private Sub OnNLTAreaChanging(value As String)
    End Sub
    Partial Private Sub OnNLTAreaChanged()
    End Sub
    Partial Private Sub OnAECodeXChanging(value As String)
    End Sub
    Partial Private Sub OnAECodeXChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HeadID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property HeadID() As Integer
		Get
			Return Me._HeadID
		End Get
		Set
			If ((Me._HeadID = value)  _
						= false) Then
				Me.OnHeadIDChanging(value)
				Me.SendPropertyChanging
				Me._HeadID = value
				Me.SendPropertyChanged("HeadID")
				Me.OnHeadIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerCode", DbType:="VarChar(50)")>  _
	Public Property DealerCode() As String
		Get
			Return Me._DealerCode
		End Get
		Set
			If (String.Equals(Me._DealerCode, value) = false) Then
				Me.OnDealerCodeChanging(value)
				Me.SendPropertyChanging
				Me._DealerCode = value
				Me.SendPropertyChanged("DealerCode")
				Me.OnDealerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerName", DbType:="NVarChar(255)")>  _
	Public Property DealerName() As String
		Get
			Return Me._DealerName
		End Get
		Set
			If (String.Equals(Me._DealerName, value) = false) Then
				Me.OnDealerNameChanging(value)
				Me.SendPropertyChanging
				Me._DealerName = value
				Me.SendPropertyChanged("DealerName")
				Me.OnDealerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="NVarChar(255)")>  _
	Public Property Province() As String
		Get
			Return Me._Province
		End Get
		Set
			If (String.Equals(Me._Province, value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPerson1", DbType:="NVarChar(255)")>  _
	Public Property ContactPerson1() As String
		Get
			Return Me._ContactPerson1
		End Get
		Set
			If (String.Equals(Me._ContactPerson1, value) = false) Then
				Me.OnContactPerson1Changing(value)
				Me.SendPropertyChanging
				Me._ContactPerson1 = value
				Me.SendPropertyChanged("ContactPerson1")
				Me.OnContactPerson1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone1", DbType:="NVarChar(255)")>  _
	Public Property Phone1() As String
		Get
			Return Me._Phone1
		End Get
		Set
			If (String.Equals(Me._Phone1, value) = false) Then
				Me.OnPhone1Changing(value)
				Me.SendPropertyChanging
				Me._Phone1 = value
				Me.SendPropertyChanged("Phone1")
				Me.OnPhone1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax1", DbType:="NVarChar(255)")>  _
	Public Property Fax1() As String
		Get
			Return Me._Fax1
		End Get
		Set
			If (String.Equals(Me._Fax1, value) = false) Then
				Me.OnFax1Changing(value)
				Me.SendPropertyChanging
				Me._Fax1 = value
				Me.SendPropertyChanged("Fax1")
				Me.OnFax1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPerson2", DbType:="NVarChar(255)")>  _
	Public Property ContactPerson2() As String
		Get
			Return Me._ContactPerson2
		End Get
		Set
			If (String.Equals(Me._ContactPerson2, value) = false) Then
				Me.OnContactPerson2Changing(value)
				Me.SendPropertyChanging
				Me._ContactPerson2 = value
				Me.SendPropertyChanged("ContactPerson2")
				Me.OnContactPerson2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone2", DbType:="NVarChar(255)")>  _
	Public Property Phone2() As String
		Get
			Return Me._Phone2
		End Get
		Set
			If (String.Equals(Me._Phone2, value) = false) Then
				Me.OnPhone2Changing(value)
				Me.SendPropertyChanging
				Me._Phone2 = value
				Me.SendPropertyChanged("Phone2")
				Me.OnPhone2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax2", DbType:="NVarChar(255)")>  _
	Public Property Fax2() As String
		Get
			Return Me._Fax2
		End Get
		Set
			If (String.Equals(Me._Fax2, value) = false) Then
				Me.OnFax2Changing(value)
				Me.SendPropertyChanging
				Me._Fax2 = value
				Me.SendPropertyChanged("Fax2")
				Me.OnFax2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Int")>  _
	Public Property IsActive() As System.Nullable(Of Integer)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingName", DbType:="VarChar(250)")>  _
	Public Property BillingName() As String
		Get
			Return Me._BillingName
		End Get
		Set
			If (String.Equals(Me._BillingName, value) = false) Then
				Me.OnBillingNameChanging(value)
				Me.SendPropertyChanging
				Me._BillingName = value
				Me.SendPropertyChanged("BillingName")
				Me.OnBillingNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingAddress", DbType:="NVarChar(255)")>  _
	Public Property BillingAddress() As String
		Get
			Return Me._BillingAddress
		End Get
		Set
			If (String.Equals(Me._BillingAddress, value) = false) Then
				Me.OnBillingAddressChanging(value)
				Me.SendPropertyChanging
				Me._BillingAddress = value
				Me.SendPropertyChanged("BillingAddress")
				Me.OnBillingAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillingStatus", DbType:="Int")>  _
	Public Property BillingStatus() As System.Nullable(Of Integer)
		Get
			Return Me._BillingStatus
		End Get
		Set
			If (Me._BillingStatus.Equals(value) = false) Then
				Me.OnBillingStatusChanging(value)
				Me.SendPropertyChanging
				Me._BillingStatus = value
				Me.SendPropertyChanged("BillingStatus")
				Me.OnBillingStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerEmail1", DbType:="VarChar(250)")>  _
	Public Property DealerEmail1() As String
		Get
			Return Me._DealerEmail1
		End Get
		Set
			If (String.Equals(Me._DealerEmail1, value) = false) Then
				Me.OnDealerEmail1Changing(value)
				Me.SendPropertyChanging
				Me._DealerEmail1 = value
				Me.SendPropertyChanged("DealerEmail1")
				Me.OnDealerEmail1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerEmail2", DbType:="VarChar(250)")>  _
	Public Property DealerEmail2() As String
		Get
			Return Me._DealerEmail2
		End Get
		Set
			If (String.Equals(Me._DealerEmail2, value) = false) Then
				Me.OnDealerEmail2Changing(value)
				Me.SendPropertyChanging
				Me._DealerEmail2 = value
				Me.SendPropertyChanged("DealerEmail2")
				Me.OnDealerEmail2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProvinceCode", DbType:="Char(2)")>  _
	Public Property ProvinceCode() As String
		Get
			Return Me._ProvinceCode
		End Get
		Set
			If (String.Equals(Me._ProvinceCode, value) = false) Then
				Me.OnProvinceCodeChanging(value)
				Me.SendPropertyChanging
				Me._ProvinceCode = value
				Me.SendPropertyChanged("ProvinceCode")
				Me.OnProvinceCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerNameEN", DbType:="VarChar(100)")>  _
	Public Property DealerNameEN() As String
		Get
			Return Me._DealerNameEN
		End Get
		Set
			If (String.Equals(Me._DealerNameEN, value) = false) Then
				Me.OnDealerNameENChanging(value)
				Me.SendPropertyChanging
				Me._DealerNameEN = value
				Me.SendPropertyChanged("DealerNameEN")
				Me.OnDealerNameENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BPShop", DbType:="NVarChar(50)")>  _
	Public Property BPShop() As String
		Get
			Return Me._BPShop
		End Get
		Set
			If (String.Equals(Me._BPShop, value) = false) Then
				Me.OnBPShopChanging(value)
				Me.SendPropertyChanging
				Me._BPShop = value
				Me.SendPropertyChanged("BPShop")
				Me.OnBPShopChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLTDealerCode", DbType:="VarChar(50)")>  _
	Public Property NLTDealerCode() As String
		Get
			Return Me._NLTDealerCode
		End Get
		Set
			If (String.Equals(Me._NLTDealerCode, value) = false) Then
				Me.OnNLTDealerCodeChanging(value)
				Me.SendPropertyChanging
				Me._NLTDealerCode = value
				Me.SendPropertyChanged("NLTDealerCode")
				Me.OnNLTDealerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLTDealerNameTH", DbType:="VarChar(255)")>  _
	Public Property NLTDealerNameTH() As String
		Get
			Return Me._NLTDealerNameTH
		End Get
		Set
			If (String.Equals(Me._NLTDealerNameTH, value) = false) Then
				Me.OnNLTDealerNameTHChanging(value)
				Me.SendPropertyChanging
				Me._NLTDealerNameTH = value
				Me.SendPropertyChanged("NLTDealerNameTH")
				Me.OnNLTDealerNameTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLTDealerNameEN", DbType:="VarChar(255)")>  _
	Public Property NLTDealerNameEN() As String
		Get
			Return Me._NLTDealerNameEN
		End Get
		Set
			If (String.Equals(Me._NLTDealerNameEN, value) = false) Then
				Me.OnNLTDealerNameENChanging(value)
				Me.SendPropertyChanging
				Me._NLTDealerNameEN = value
				Me.SendPropertyChanged("NLTDealerNameEN")
				Me.OnNLTDealerNameENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NLTArea", DbType:="VarChar(50)")>  _
	Public Property NLTArea() As String
		Get
			Return Me._NLTArea
		End Get
		Set
			If (String.Equals(Me._NLTArea, value) = false) Then
				Me.OnNLTAreaChanging(value)
				Me.SendPropertyChanging
				Me._NLTArea = value
				Me.SendPropertyChanged("NLTArea")
				Me.OnNLTAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AECodeX", DbType:="VarChar(50)")>  _
	Public Property AECodeX() As String
		Get
			Return Me._AECodeX
		End Get
		Set
			If (String.Equals(Me._AECodeX, value) = false) Then
				Me.OnAECodeXChanging(value)
				Me.SendPropertyChanging
				Me._AECodeX = value
				Me.SendPropertyChanged("AECodeX")
				Me.OnAECodeXChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.InsurerUnique")>  _
Partial Public Class InsurerUnique
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _InsurerCode As String
	
	Private _InsurerNameThai As String
	
	Private _InsurerNameEng As String
	
	Private _Code1 As String
	
	Private _Code2 As String
	
	Private _CodeMotor1 As String
	
	Private _CodeSibis As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Phone1 As String
	
	Private _Phone2 As String
	
	Private _Fax1 As String
	
	Private _Fax2 As String
	
	Private _ContactPerson1 As String
	
	Private _Email1 As String
	
	Private _ContactPerson2 As String
	
	Private _Email2 As String
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _IsActive As System.Nullable(Of Integer)
	
	Private _Remark As String
	
	Private _CMIPrintFormName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnInsurerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerCodeChanged()
    End Sub
    Partial Private Sub OnInsurerNameThaiChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerNameThaiChanged()
    End Sub
    Partial Private Sub OnInsurerNameEngChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerNameEngChanged()
    End Sub
    Partial Private Sub OnCode1Changing(value As String)
    End Sub
    Partial Private Sub OnCode1Changed()
    End Sub
    Partial Private Sub OnCode2Changing(value As String)
    End Sub
    Partial Private Sub OnCode2Changed()
    End Sub
    Partial Private Sub OnCodeMotor1Changing(value As String)
    End Sub
    Partial Private Sub OnCodeMotor1Changed()
    End Sub
    Partial Private Sub OnCodeSibisChanging(value As String)
    End Sub
    Partial Private Sub OnCodeSibisChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnPhone1Changing(value As String)
    End Sub
    Partial Private Sub OnPhone1Changed()
    End Sub
    Partial Private Sub OnPhone2Changing(value As String)
    End Sub
    Partial Private Sub OnPhone2Changed()
    End Sub
    Partial Private Sub OnFax1Changing(value As String)
    End Sub
    Partial Private Sub OnFax1Changed()
    End Sub
    Partial Private Sub OnFax2Changing(value As String)
    End Sub
    Partial Private Sub OnFax2Changed()
    End Sub
    Partial Private Sub OnContactPerson1Changing(value As String)
    End Sub
    Partial Private Sub OnContactPerson1Changed()
    End Sub
    Partial Private Sub OnEmail1Changing(value As String)
    End Sub
    Partial Private Sub OnEmail1Changed()
    End Sub
    Partial Private Sub OnContactPerson2Changing(value As String)
    End Sub
    Partial Private Sub OnContactPerson2Changed()
    End Sub
    Partial Private Sub OnEmail2Changing(value As String)
    End Sub
    Partial Private Sub OnEmail2Changed()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnCMIPrintFormNameChanging(value As String)
    End Sub
    Partial Private Sub OnCMIPrintFormNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property InsurerCode() As String
		Get
			Return Me._InsurerCode
		End Get
		Set
			If (String.Equals(Me._InsurerCode, value) = false) Then
				Me.OnInsurerCodeChanging(value)
				Me.SendPropertyChanging
				Me._InsurerCode = value
				Me.SendPropertyChanged("InsurerCode")
				Me.OnInsurerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerNameThai", DbType:="NVarChar(255)")>  _
	Public Property InsurerNameThai() As String
		Get
			Return Me._InsurerNameThai
		End Get
		Set
			If (String.Equals(Me._InsurerNameThai, value) = false) Then
				Me.OnInsurerNameThaiChanging(value)
				Me.SendPropertyChanging
				Me._InsurerNameThai = value
				Me.SendPropertyChanged("InsurerNameThai")
				Me.OnInsurerNameThaiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerNameEng", DbType:="NVarChar(255)")>  _
	Public Property InsurerNameEng() As String
		Get
			Return Me._InsurerNameEng
		End Get
		Set
			If (String.Equals(Me._InsurerNameEng, value) = false) Then
				Me.OnInsurerNameEngChanging(value)
				Me.SendPropertyChanging
				Me._InsurerNameEng = value
				Me.SendPropertyChanged("InsurerNameEng")
				Me.OnInsurerNameEngChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code1", DbType:="VarChar(50)")>  _
	Public Property Code1() As String
		Get
			Return Me._Code1
		End Get
		Set
			If (String.Equals(Me._Code1, value) = false) Then
				Me.OnCode1Changing(value)
				Me.SendPropertyChanging
				Me._Code1 = value
				Me.SendPropertyChanged("Code1")
				Me.OnCode1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code2", DbType:="VarChar(50)")>  _
	Public Property Code2() As String
		Get
			Return Me._Code2
		End Get
		Set
			If (String.Equals(Me._Code2, value) = false) Then
				Me.OnCode2Changing(value)
				Me.SendPropertyChanging
				Me._Code2 = value
				Me.SendPropertyChanged("Code2")
				Me.OnCode2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodeMotor1", DbType:="VarChar(50)")>  _
	Public Property CodeMotor1() As String
		Get
			Return Me._CodeMotor1
		End Get
		Set
			If (String.Equals(Me._CodeMotor1, value) = false) Then
				Me.OnCodeMotor1Changing(value)
				Me.SendPropertyChanging
				Me._CodeMotor1 = value
				Me.SendPropertyChanged("CodeMotor1")
				Me.OnCodeMotor1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodeSibis", DbType:="VarChar(50)")>  _
	Public Property CodeSibis() As String
		Get
			Return Me._CodeSibis
		End Get
		Set
			If (String.Equals(Me._CodeSibis, value) = false) Then
				Me.OnCodeSibisChanging(value)
				Me.SendPropertyChanging
				Me._CodeSibis = value
				Me.SendPropertyChanged("CodeSibis")
				Me.OnCodeSibisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="NVarChar(255)")>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="NVarChar(255)")>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone1", DbType:="NVarChar(50)")>  _
	Public Property Phone1() As String
		Get
			Return Me._Phone1
		End Get
		Set
			If (String.Equals(Me._Phone1, value) = false) Then
				Me.OnPhone1Changing(value)
				Me.SendPropertyChanging
				Me._Phone1 = value
				Me.SendPropertyChanged("Phone1")
				Me.OnPhone1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone2", DbType:="NVarChar(50)")>  _
	Public Property Phone2() As String
		Get
			Return Me._Phone2
		End Get
		Set
			If (String.Equals(Me._Phone2, value) = false) Then
				Me.OnPhone2Changing(value)
				Me.SendPropertyChanging
				Me._Phone2 = value
				Me.SendPropertyChanged("Phone2")
				Me.OnPhone2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax1", DbType:="VarChar(255)")>  _
	Public Property Fax1() As String
		Get
			Return Me._Fax1
		End Get
		Set
			If (String.Equals(Me._Fax1, value) = false) Then
				Me.OnFax1Changing(value)
				Me.SendPropertyChanging
				Me._Fax1 = value
				Me.SendPropertyChanged("Fax1")
				Me.OnFax1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax2", DbType:="VarChar(50)")>  _
	Public Property Fax2() As String
		Get
			Return Me._Fax2
		End Get
		Set
			If (String.Equals(Me._Fax2, value) = false) Then
				Me.OnFax2Changing(value)
				Me.SendPropertyChanging
				Me._Fax2 = value
				Me.SendPropertyChanged("Fax2")
				Me.OnFax2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPerson1", DbType:="NVarChar(255)")>  _
	Public Property ContactPerson1() As String
		Get
			Return Me._ContactPerson1
		End Get
		Set
			If (String.Equals(Me._ContactPerson1, value) = false) Then
				Me.OnContactPerson1Changing(value)
				Me.SendPropertyChanging
				Me._ContactPerson1 = value
				Me.SendPropertyChanged("ContactPerson1")
				Me.OnContactPerson1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email1", DbType:="VarChar(50)")>  _
	Public Property Email1() As String
		Get
			Return Me._Email1
		End Get
		Set
			If (String.Equals(Me._Email1, value) = false) Then
				Me.OnEmail1Changing(value)
				Me.SendPropertyChanging
				Me._Email1 = value
				Me.SendPropertyChanged("Email1")
				Me.OnEmail1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPerson2", DbType:="NVarChar(255)")>  _
	Public Property ContactPerson2() As String
		Get
			Return Me._ContactPerson2
		End Get
		Set
			If (String.Equals(Me._ContactPerson2, value) = false) Then
				Me.OnContactPerson2Changing(value)
				Me.SendPropertyChanging
				Me._ContactPerson2 = value
				Me.SendPropertyChanged("ContactPerson2")
				Me.OnContactPerson2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email2", DbType:="VarChar(50)")>  _
	Public Property Email2() As String
		Get
			Return Me._Email2
		End Get
		Set
			If (String.Equals(Me._Email2, value) = false) Then
				Me.OnEmail2Changing(value)
				Me.SendPropertyChanging
				Me._Email2 = value
				Me.SendPropertyChanged("Email2")
				Me.OnEmail2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int")>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Int")>  _
	Public Property IsActive() As System.Nullable(Of Integer)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIPrintFormName", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property CMIPrintFormName() As String
		Get
			Return Me._CMIPrintFormName
		End Get
		Set
			If (String.Equals(Me._CMIPrintFormName, value) = false) Then
				Me.OnCMIPrintFormNameChanging(value)
				Me.SendPropertyChanging
				Me._CMIPrintFormName = value
				Me.SendPropertyChanged("CMIPrintFormName")
				Me.OnCMIPrintFormNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Insurer")>  _
Partial Public Class Insurer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _InsurerID As Integer
	
	Private _InsurerNameThai As String
	
	Private _InsurerNameEng As String
	
	Private _InsurerCode As String
	
	Private _InsurerPrefix As String
	
	Private _CarcareCode As System.Nullable(Of Integer)
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Phone1 As String
	
	Private _Phone2 As String
	
	Private _Fax1 As String
	
	Private _Fax2 As String
	
	Private _ContactPerson1 As String
	
	Private _Email1 As String
	
	Private _ContactPerson2 As String
	
	Private _Email2 As String
	
	Private _CMIPolicyStatus As System.Nullable(Of Integer)
	
	Private _CMIStickerStatus As System.Nullable(Of Integer)
	
	Private _TempolicyStatus As System.Nullable(Of Integer)
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _IsActive As System.Nullable(Of Integer)
	
	Private _Remark As String
	
	Private _CMIUsing As System.Nullable(Of Integer)
	
	Private _CMI_InsurerID As Integer
	
	Private _ITRemark As String
	
	Private _LeasingCompany As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnInsurerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnInsurerIDChanged()
    End Sub
    Partial Private Sub OnInsurerNameThaiChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerNameThaiChanged()
    End Sub
    Partial Private Sub OnInsurerNameEngChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerNameEngChanged()
    End Sub
    Partial Private Sub OnInsurerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerCodeChanged()
    End Sub
    Partial Private Sub OnInsurerPrefixChanging(value As String)
    End Sub
    Partial Private Sub OnInsurerPrefixChanged()
    End Sub
    Partial Private Sub OnCarcareCodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCarcareCodeChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnPhone1Changing(value As String)
    End Sub
    Partial Private Sub OnPhone1Changed()
    End Sub
    Partial Private Sub OnPhone2Changing(value As String)
    End Sub
    Partial Private Sub OnPhone2Changed()
    End Sub
    Partial Private Sub OnFax1Changing(value As String)
    End Sub
    Partial Private Sub OnFax1Changed()
    End Sub
    Partial Private Sub OnFax2Changing(value As String)
    End Sub
    Partial Private Sub OnFax2Changed()
    End Sub
    Partial Private Sub OnContactPerson1Changing(value As String)
    End Sub
    Partial Private Sub OnContactPerson1Changed()
    End Sub
    Partial Private Sub OnEmail1Changing(value As String)
    End Sub
    Partial Private Sub OnEmail1Changed()
    End Sub
    Partial Private Sub OnContactPerson2Changing(value As String)
    End Sub
    Partial Private Sub OnContactPerson2Changed()
    End Sub
    Partial Private Sub OnEmail2Changing(value As String)
    End Sub
    Partial Private Sub OnEmail2Changed()
    End Sub
    Partial Private Sub OnCMIPolicyStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCMIPolicyStatusChanged()
    End Sub
    Partial Private Sub OnCMIStickerStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCMIStickerStatusChanged()
    End Sub
    Partial Private Sub OnTempolicyStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTempolicyStatusChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    Partial Private Sub OnCMIUsingChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCMIUsingChanged()
    End Sub
    Partial Private Sub OnCMI_InsurerIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCMI_InsurerIDChanged()
    End Sub
    Partial Private Sub OnITRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnITRemarkChanged()
    End Sub
    Partial Private Sub OnLeasingCompanyChanging(value As Integer)
    End Sub
    Partial Private Sub OnLeasingCompanyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property InsurerID() As Integer
		Get
			Return Me._InsurerID
		End Get
		Set
			If ((Me._InsurerID = value)  _
						= false) Then
				Me.OnInsurerIDChanging(value)
				Me.SendPropertyChanging
				Me._InsurerID = value
				Me.SendPropertyChanged("InsurerID")
				Me.OnInsurerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerNameThai", DbType:="NVarChar(255)")>  _
	Public Property InsurerNameThai() As String
		Get
			Return Me._InsurerNameThai
		End Get
		Set
			If (String.Equals(Me._InsurerNameThai, value) = false) Then
				Me.OnInsurerNameThaiChanging(value)
				Me.SendPropertyChanging
				Me._InsurerNameThai = value
				Me.SendPropertyChanged("InsurerNameThai")
				Me.OnInsurerNameThaiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerNameEng", DbType:="NVarChar(255)")>  _
	Public Property InsurerNameEng() As String
		Get
			Return Me._InsurerNameEng
		End Get
		Set
			If (String.Equals(Me._InsurerNameEng, value) = false) Then
				Me.OnInsurerNameEngChanging(value)
				Me.SendPropertyChanging
				Me._InsurerNameEng = value
				Me.SendPropertyChanged("InsurerNameEng")
				Me.OnInsurerNameEngChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="VarChar(50)")>  _
	Public Property InsurerCode() As String
		Get
			Return Me._InsurerCode
		End Get
		Set
			If (String.Equals(Me._InsurerCode, value) = false) Then
				Me.OnInsurerCodeChanging(value)
				Me.SendPropertyChanging
				Me._InsurerCode = value
				Me.SendPropertyChanged("InsurerCode")
				Me.OnInsurerCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerPrefix", DbType:="VarChar(50)")>  _
	Public Property InsurerPrefix() As String
		Get
			Return Me._InsurerPrefix
		End Get
		Set
			If (String.Equals(Me._InsurerPrefix, value) = false) Then
				Me.OnInsurerPrefixChanging(value)
				Me.SendPropertyChanging
				Me._InsurerPrefix = value
				Me.SendPropertyChanged("InsurerPrefix")
				Me.OnInsurerPrefixChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarcareCode", DbType:="Int")>  _
	Public Property CarcareCode() As System.Nullable(Of Integer)
		Get
			Return Me._CarcareCode
		End Get
		Set
			If (Me._CarcareCode.Equals(value) = false) Then
				Me.OnCarcareCodeChanging(value)
				Me.SendPropertyChanging
				Me._CarcareCode = value
				Me.SendPropertyChanged("CarcareCode")
				Me.OnCarcareCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="NVarChar(255)")>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="NVarChar(255)")>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone1", DbType:="NVarChar(50)")>  _
	Public Property Phone1() As String
		Get
			Return Me._Phone1
		End Get
		Set
			If (String.Equals(Me._Phone1, value) = false) Then
				Me.OnPhone1Changing(value)
				Me.SendPropertyChanging
				Me._Phone1 = value
				Me.SendPropertyChanged("Phone1")
				Me.OnPhone1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone2", DbType:="NVarChar(50)")>  _
	Public Property Phone2() As String
		Get
			Return Me._Phone2
		End Get
		Set
			If (String.Equals(Me._Phone2, value) = false) Then
				Me.OnPhone2Changing(value)
				Me.SendPropertyChanging
				Me._Phone2 = value
				Me.SendPropertyChanged("Phone2")
				Me.OnPhone2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax1", DbType:="VarChar(255)")>  _
	Public Property Fax1() As String
		Get
			Return Me._Fax1
		End Get
		Set
			If (String.Equals(Me._Fax1, value) = false) Then
				Me.OnFax1Changing(value)
				Me.SendPropertyChanging
				Me._Fax1 = value
				Me.SendPropertyChanged("Fax1")
				Me.OnFax1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax2", DbType:="VarChar(50)")>  _
	Public Property Fax2() As String
		Get
			Return Me._Fax2
		End Get
		Set
			If (String.Equals(Me._Fax2, value) = false) Then
				Me.OnFax2Changing(value)
				Me.SendPropertyChanging
				Me._Fax2 = value
				Me.SendPropertyChanged("Fax2")
				Me.OnFax2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPerson1", DbType:="NVarChar(255)")>  _
	Public Property ContactPerson1() As String
		Get
			Return Me._ContactPerson1
		End Get
		Set
			If (String.Equals(Me._ContactPerson1, value) = false) Then
				Me.OnContactPerson1Changing(value)
				Me.SendPropertyChanging
				Me._ContactPerson1 = value
				Me.SendPropertyChanged("ContactPerson1")
				Me.OnContactPerson1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email1", DbType:="VarChar(50)")>  _
	Public Property Email1() As String
		Get
			Return Me._Email1
		End Get
		Set
			If (String.Equals(Me._Email1, value) = false) Then
				Me.OnEmail1Changing(value)
				Me.SendPropertyChanging
				Me._Email1 = value
				Me.SendPropertyChanged("Email1")
				Me.OnEmail1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPerson2", DbType:="NVarChar(255)")>  _
	Public Property ContactPerson2() As String
		Get
			Return Me._ContactPerson2
		End Get
		Set
			If (String.Equals(Me._ContactPerson2, value) = false) Then
				Me.OnContactPerson2Changing(value)
				Me.SendPropertyChanging
				Me._ContactPerson2 = value
				Me.SendPropertyChanged("ContactPerson2")
				Me.OnContactPerson2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email2", DbType:="VarChar(50)")>  _
	Public Property Email2() As String
		Get
			Return Me._Email2
		End Get
		Set
			If (String.Equals(Me._Email2, value) = false) Then
				Me.OnEmail2Changing(value)
				Me.SendPropertyChanging
				Me._Email2 = value
				Me.SendPropertyChanged("Email2")
				Me.OnEmail2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIPolicyStatus", DbType:="Int")>  _
	Public Property CMIPolicyStatus() As System.Nullable(Of Integer)
		Get
			Return Me._CMIPolicyStatus
		End Get
		Set
			If (Me._CMIPolicyStatus.Equals(value) = false) Then
				Me.OnCMIPolicyStatusChanging(value)
				Me.SendPropertyChanging
				Me._CMIPolicyStatus = value
				Me.SendPropertyChanged("CMIPolicyStatus")
				Me.OnCMIPolicyStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIStickerStatus", DbType:="Int")>  _
	Public Property CMIStickerStatus() As System.Nullable(Of Integer)
		Get
			Return Me._CMIStickerStatus
		End Get
		Set
			If (Me._CMIStickerStatus.Equals(value) = false) Then
				Me.OnCMIStickerStatusChanging(value)
				Me.SendPropertyChanging
				Me._CMIStickerStatus = value
				Me.SendPropertyChanged("CMIStickerStatus")
				Me.OnCMIStickerStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TempolicyStatus", DbType:="Int")>  _
	Public Property TempolicyStatus() As System.Nullable(Of Integer)
		Get
			Return Me._TempolicyStatus
		End Get
		Set
			If (Me._TempolicyStatus.Equals(value) = false) Then
				Me.OnTempolicyStatusChanging(value)
				Me.SendPropertyChanging
				Me._TempolicyStatus = value
				Me.SendPropertyChanged("TempolicyStatus")
				Me.OnTempolicyStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int")>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Int")>  _
	Public Property IsActive() As System.Nullable(Of Integer)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(255)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMIUsing", DbType:="Int")>  _
	Public Property CMIUsing() As System.Nullable(Of Integer)
		Get
			Return Me._CMIUsing
		End Get
		Set
			If (Me._CMIUsing.Equals(value) = false) Then
				Me.OnCMIUsingChanging(value)
				Me.SendPropertyChanging
				Me._CMIUsing = value
				Me.SendPropertyChanged("CMIUsing")
				Me.OnCMIUsingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMI_InsurerID", DbType:="Int NOT NULL")>  _
	Public Property CMI_InsurerID() As Integer
		Get
			Return Me._CMI_InsurerID
		End Get
		Set
			If ((Me._CMI_InsurerID = value)  _
						= false) Then
				Me.OnCMI_InsurerIDChanging(value)
				Me.SendPropertyChanging
				Me._CMI_InsurerID = value
				Me.SendPropertyChanged("CMI_InsurerID")
				Me.OnCMI_InsurerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITRemark", DbType:="VarChar(500)")>  _
	Public Property ITRemark() As String
		Get
			Return Me._ITRemark
		End Get
		Set
			If (String.Equals(Me._ITRemark, value) = false) Then
				Me.OnITRemarkChanging(value)
				Me.SendPropertyChanging
				Me._ITRemark = value
				Me.SendPropertyChanged("ITRemark")
				Me.OnITRemarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeasingCompany", DbType:="Int NOT NULL")>  _
	Public Property LeasingCompany() As Integer
		Get
			Return Me._LeasingCompany
		End Get
		Set
			If ((Me._LeasingCompany = value)  _
						= false) Then
				Me.OnLeasingCompanyChanging(value)
				Me.SendPropertyChanging
				Me._LeasingCompany = value
				Me.SendPropertyChanged("LeasingCompany")
				Me.OnLeasingCompanyChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Model")>  _
Partial Public Class V_Model
	
	Private _Rank As System.Nullable(Of Long)
	
	Private _TypeName As String
	
	Private _ModelName As String
	
	Private _ModelCode As String
	
	Private _CarPrice As System.Nullable(Of Double)
	
	Private _GroupCodeID As Integer
	
	Private _Model As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rank", DbType:="BigInt")>  _
	Public Property Rank() As System.Nullable(Of Long)
		Get
			Return Me._Rank
		End Get
		Set
			If (Me._Rank.Equals(value) = false) Then
				Me._Rank = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property TypeName() As String
		Get
			Return Me._TypeName
		End Get
		Set
			If (String.Equals(Me._TypeName, value) = false) Then
				Me._TypeName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property ModelName() As String
		Get
			Return Me._ModelName
		End Get
		Set
			If (String.Equals(Me._ModelName, value) = false) Then
				Me._ModelName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModelCode", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ModelCode() As String
		Get
			Return Me._ModelCode
		End Get
		Set
			If (String.Equals(Me._ModelCode, value) = false) Then
				Me._ModelCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarPrice", DbType:="Float")>  _
	Public Property CarPrice() As System.Nullable(Of Double)
		Get
			Return Me._CarPrice
		End Get
		Set
			If (Me._CarPrice.Equals(value) = false) Then
				Me._CarPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupCodeID", DbType:="Int NOT NULL")>  _
	Public Property GroupCodeID() As Integer
		Get
			Return Me._GroupCodeID
		End Get
		Set
			If ((Me._GroupCodeID = value)  _
						= false) Then
				Me._GroupCodeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="NVarChar(566)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me._Model = value
			End If
		End Set
	End Property
End Class
