'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SIBISDB")>  _
Partial Public Class DataClasses_SIBISDBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAgent(instance As Agent)
    End Sub
  Partial Private Sub UpdateAgent(instance As Agent)
    End Sub
  Partial Private Sub DeleteAgent(instance As Agent)
    End Sub
  Partial Private Sub InsertClient(instance As Client)
    End Sub
  Partial Private Sub UpdateClient(instance As Client)
    End Sub
  Partial Private Sub DeleteClient(instance As Client)
    End Sub
  Partial Private Sub InsertContactPerson(instance As ContactPerson)
    End Sub
  Partial Private Sub UpdateContactPerson(instance As ContactPerson)
    End Sub
  Partial Private Sub DeleteContactPerson(instance As ContactPerson)
    End Sub
  Partial Private Sub InsertPolicy(instance As Policy)
    End Sub
  Partial Private Sub UpdatePolicy(instance As Policy)
    End Sub
  Partial Private Sub DeletePolicy(instance As Policy)
    End Sub
  Partial Private Sub InsertUnderwriter(instance As Underwriter)
    End Sub
  Partial Private Sub UpdateUnderwriter(instance As Underwriter)
    End Sub
  Partial Private Sub DeleteUnderwriter(instance As Underwriter)
    End Sub
  Partial Private Sub InsertAccountExecutive(instance As AccountExecutive)
    End Sub
  Partial Private Sub UpdateAccountExecutive(instance As AccountExecutive)
    End Sub
  Partial Private Sub DeleteAccountExecutive(instance As AccountExecutive)
    End Sub
  Partial Private Sub InsertClassOfRisk(instance As ClassOfRisk)
    End Sub
  Partial Private Sub UpdateClassOfRisk(instance As ClassOfRisk)
    End Sub
  Partial Private Sub DeleteClassOfRisk(instance As ClassOfRisk)
    End Sub
  Partial Private Sub InsertAgentRiskComm(instance As AgentRiskComm)
    End Sub
  Partial Private Sub UpdateAgentRiskComm(instance As AgentRiskComm)
    End Sub
  Partial Private Sub DeleteAgentRiskComm(instance As AgentRiskComm)
    End Sub
  Partial Private Sub InsertRiskUwriter(instance As RiskUwriter)
    End Sub
  Partial Private Sub UpdateRiskUwriter(instance As RiskUwriter)
    End Sub
  Partial Private Sub DeleteRiskUwriter(instance As RiskUwriter)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SIBISDBConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Agents() As System.Data.Linq.Table(Of Agent)
		Get
			Return Me.GetTable(Of Agent)
		End Get
	End Property
	
	Public ReadOnly Property Clients() As System.Data.Linq.Table(Of Client)
		Get
			Return Me.GetTable(Of Client)
		End Get
	End Property
	
	Public ReadOnly Property ContactPersons() As System.Data.Linq.Table(Of ContactPerson)
		Get
			Return Me.GetTable(Of ContactPerson)
		End Get
	End Property
	
	Public ReadOnly Property Policies() As System.Data.Linq.Table(Of Policy)
		Get
			Return Me.GetTable(Of Policy)
		End Get
	End Property
	
	Public ReadOnly Property Underwriters() As System.Data.Linq.Table(Of Underwriter)
		Get
			Return Me.GetTable(Of Underwriter)
		End Get
	End Property
	
	Public ReadOnly Property AccountExecutives() As System.Data.Linq.Table(Of AccountExecutive)
		Get
			Return Me.GetTable(Of AccountExecutive)
		End Get
	End Property
	
	Public ReadOnly Property ClassOfRisks() As System.Data.Linq.Table(Of ClassOfRisk)
		Get
			Return Me.GetTable(Of ClassOfRisk)
		End Get
	End Property
	
	Public ReadOnly Property AgentRiskComms() As System.Data.Linq.Table(Of AgentRiskComm)
		Get
			Return Me.GetTable(Of AgentRiskComm)
		End Get
	End Property
	
	Public ReadOnly Property RiskUwriters() As System.Data.Linq.Table(Of RiskUwriter)
		Get
			Return Me.GetTable(Of RiskUwriter)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agents")>  _
Partial Public Class Agent
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Agent As String
	
	Private _Name As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _PostCode As String
	
	Private _City As String
	
	Private _PhoneBusiness As String
	
	Private _PhoneHome As String
	
	Private _ContactPerson As String
	
	Private _Addressee As String
	
	Private _Salutation As String
	
	Private _Occupation As String
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
	Private _IsSubAgent As Boolean
	
	Private _InternetAddress As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAgentChanging(value As String)
    End Sub
    Partial Private Sub OnAgentChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnAddress3Changed()
    End Sub
    Partial Private Sub OnPostCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostCodeChanged()
    End Sub
    Partial Private Sub OnCityChanging(value As String)
    End Sub
    Partial Private Sub OnCityChanged()
    End Sub
    Partial Private Sub OnPhoneBusinessChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneBusinessChanged()
    End Sub
    Partial Private Sub OnPhoneHomeChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneHomeChanged()
    End Sub
    Partial Private Sub OnContactPersonChanging(value As String)
    End Sub
    Partial Private Sub OnContactPersonChanged()
    End Sub
    Partial Private Sub OnAddresseeChanging(value As String)
    End Sub
    Partial Private Sub OnAddresseeChanged()
    End Sub
    Partial Private Sub OnSalutationChanging(value As String)
    End Sub
    Partial Private Sub OnSalutationChanged()
    End Sub
    Partial Private Sub OnOccupationChanging(value As String)
    End Sub
    Partial Private Sub OnOccupationChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnIsSubAgentChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSubAgentChanged()
    End Sub
    Partial Private Sub OnInternetAddressChanging(value As String)
    End Sub
    Partial Private Sub OnInternetAddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me.OnAgentChanging(value)
				Me.SendPropertyChanging
				Me._Agent = value
				Me.SendPropertyChanged("Agent")
				Me.OnAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="Char(40) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me.OnAddress3Changing(value)
				Me.SendPropertyChanging
				Me._Address3 = value
				Me.SendPropertyChanged("Address3")
				Me.OnAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostCode", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property PostCode() As String
		Get
			Return Me._PostCode
		End Get
		Set
			If (String.Equals(Me._PostCode, value) = false) Then
				Me.OnPostCodeChanging(value)
				Me.SendPropertyChanging
				Me._PostCode = value
				Me.SendPropertyChanged("PostCode")
				Me.OnPostCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me.OnCityChanging(value)
				Me.SendPropertyChanging
				Me._City = value
				Me.SendPropertyChanged("City")
				Me.OnCityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneBusiness", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneBusiness() As String
		Get
			Return Me._PhoneBusiness
		End Get
		Set
			If (String.Equals(Me._PhoneBusiness, value) = false) Then
				Me.OnPhoneBusinessChanging(value)
				Me.SendPropertyChanging
				Me._PhoneBusiness = value
				Me.SendPropertyChanged("PhoneBusiness")
				Me.OnPhoneBusinessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me.OnPhoneHomeChanging(value)
				Me.SendPropertyChanging
				Me._PhoneHome = value
				Me.SendPropertyChanged("PhoneHome")
				Me.OnPhoneHomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactPerson", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property ContactPerson() As String
		Get
			Return Me._ContactPerson
		End Get
		Set
			If (String.Equals(Me._ContactPerson, value) = false) Then
				Me.OnContactPersonChanging(value)
				Me.SendPropertyChanging
				Me._ContactPerson = value
				Me.SendPropertyChanged("ContactPerson")
				Me.OnContactPersonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Addressee", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Addressee() As String
		Get
			Return Me._Addressee
		End Get
		Set
			If (String.Equals(Me._Addressee, value) = false) Then
				Me.OnAddresseeChanging(value)
				Me.SendPropertyChanging
				Me._Addressee = value
				Me.SendPropertyChanged("Addressee")
				Me.OnAddresseeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salutation", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Salutation() As String
		Get
			Return Me._Salutation
		End Get
		Set
			If (String.Equals(Me._Salutation, value) = false) Then
				Me.OnSalutationChanging(value)
				Me.SendPropertyChanging
				Me._Salutation = value
				Me.SendPropertyChanged("Salutation")
				Me.OnSalutationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Occupation", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Occupation() As String
		Get
			Return Me._Occupation
		End Get
		Set
			If (String.Equals(Me._Occupation, value) = false) Then
				Me.OnOccupationChanging(value)
				Me.SendPropertyChanging
				Me._Occupation = value
				Me.SendPropertyChanged("Occupation")
				Me.OnOccupationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSubAgent", DbType:="Bit NOT NULL")>  _
	Public Property IsSubAgent() As Boolean
		Get
			Return Me._IsSubAgent
		End Get
		Set
			If ((Me._IsSubAgent = value)  _
						= false) Then
				Me.OnIsSubAgentChanging(value)
				Me.SendPropertyChanging
				Me._IsSubAgent = value
				Me.SendPropertyChanged("IsSubAgent")
				Me.OnIsSubAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternetAddress", DbType:="Char(40) NOT NULL", CanBeNull:=false)>  _
	Public Property InternetAddress() As String
		Get
			Return Me._InternetAddress
		End Get
		Set
			If (String.Equals(Me._InternetAddress, value) = false) Then
				Me.OnInternetAddressChanging(value)
				Me.SendPropertyChanging
				Me._InternetAddress = value
				Me.SendPropertyChanged("InternetAddress")
				Me.OnInternetAddressChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Clients")>  _
Partial Public Class Client
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Client As String
	
	Private _CrossRef As String
	
	Private _Name As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _PostCode As String
	
	Private _City As String
	
	Private _Area As String
	
	Private _Industry As String
	
	Private _PhoneBusiness As String
	
	Private _PhoneHome As String
	
	Private _Facsimile As String
	
	Private _AccountContact As String
	
	Private _Addressee As String
	
	Private _Salutation As String
	
	Private _Occupation As String
	
	Private _DateofBirth As Date
	
	Private _AccountExecutive As String
	
	Private _AccountAgent As String
	
	Private _ClientGroup As String
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
	Private _ClientCategory As String
	
	Private _ClientType As String
	
	Private _OtherName As String
	
	Private _CreationDate As Date
	
	Private _HistoryCategory As String
	
	Private _NewClient As String
	
	Private _InternetAddress As String
	
	Private _ShortName As String
	
	Private _RunningNumber As String
	
	Private _ContactFinance As String
	
	Private _PhoneFinance As String
	
	Private _FaxFinance As String
	
	Private _TaxName As String
	
	Private _TaxAddress1 As String
	
	Private _TaxAddress2 As String
	
	Private _TaxAddress3 As String
	
	Private _TaxIDNO As String
	
	Private _SourceOfBiz_Code As String
	
	Private _IDCardNo As String
	
	Private _MobileNo As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClientChanging(value As String)
    End Sub
    Partial Private Sub OnClientChanged()
    End Sub
    Partial Private Sub OnCrossRefChanging(value As String)
    End Sub
    Partial Private Sub OnCrossRefChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnAddress3Changed()
    End Sub
    Partial Private Sub OnPostCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostCodeChanged()
    End Sub
    Partial Private Sub OnCityChanging(value As String)
    End Sub
    Partial Private Sub OnCityChanged()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnIndustryChanging(value As String)
    End Sub
    Partial Private Sub OnIndustryChanged()
    End Sub
    Partial Private Sub OnPhoneBusinessChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneBusinessChanged()
    End Sub
    Partial Private Sub OnPhoneHomeChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneHomeChanged()
    End Sub
    Partial Private Sub OnFacsimileChanging(value As String)
    End Sub
    Partial Private Sub OnFacsimileChanged()
    End Sub
    Partial Private Sub OnAccountContactChanging(value As String)
    End Sub
    Partial Private Sub OnAccountContactChanged()
    End Sub
    Partial Private Sub OnAddresseeChanging(value As String)
    End Sub
    Partial Private Sub OnAddresseeChanged()
    End Sub
    Partial Private Sub OnSalutationChanging(value As String)
    End Sub
    Partial Private Sub OnSalutationChanged()
    End Sub
    Partial Private Sub OnOccupationChanging(value As String)
    End Sub
    Partial Private Sub OnOccupationChanged()
    End Sub
    Partial Private Sub OnDateofBirthChanging(value As Date)
    End Sub
    Partial Private Sub OnDateofBirthChanged()
    End Sub
    Partial Private Sub OnAccountExecutiveChanging(value As String)
    End Sub
    Partial Private Sub OnAccountExecutiveChanged()
    End Sub
    Partial Private Sub OnAccountAgentChanging(value As String)
    End Sub
    Partial Private Sub OnAccountAgentChanged()
    End Sub
    Partial Private Sub OnClientGroupChanging(value As String)
    End Sub
    Partial Private Sub OnClientGroupChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnClientCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnClientCategoryChanged()
    End Sub
    Partial Private Sub OnClientTypeChanging(value As String)
    End Sub
    Partial Private Sub OnClientTypeChanged()
    End Sub
    Partial Private Sub OnOtherNameChanging(value As String)
    End Sub
    Partial Private Sub OnOtherNameChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As Date)
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnHistoryCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnHistoryCategoryChanged()
    End Sub
    Partial Private Sub OnNewClientChanging(value As String)
    End Sub
    Partial Private Sub OnNewClientChanged()
    End Sub
    Partial Private Sub OnInternetAddressChanging(value As String)
    End Sub
    Partial Private Sub OnInternetAddressChanged()
    End Sub
    Partial Private Sub OnShortNameChanging(value As String)
    End Sub
    Partial Private Sub OnShortNameChanged()
    End Sub
    Partial Private Sub OnRunningNumberChanging(value As String)
    End Sub
    Partial Private Sub OnRunningNumberChanged()
    End Sub
    Partial Private Sub OnContactFinanceChanging(value As String)
    End Sub
    Partial Private Sub OnContactFinanceChanged()
    End Sub
    Partial Private Sub OnPhoneFinanceChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneFinanceChanged()
    End Sub
    Partial Private Sub OnFaxFinanceChanging(value As String)
    End Sub
    Partial Private Sub OnFaxFinanceChanged()
    End Sub
    Partial Private Sub OnTaxNameChanging(value As String)
    End Sub
    Partial Private Sub OnTaxNameChanged()
    End Sub
    Partial Private Sub OnTaxAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnTaxAddress1Changed()
    End Sub
    Partial Private Sub OnTaxAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnTaxAddress2Changed()
    End Sub
    Partial Private Sub OnTaxAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnTaxAddress3Changed()
    End Sub
    Partial Private Sub OnTaxIDNOChanging(value As String)
    End Sub
    Partial Private Sub OnTaxIDNOChanged()
    End Sub
    Partial Private Sub OnSourceOfBiz_CodeChanging(value As String)
    End Sub
    Partial Private Sub OnSourceOfBiz_CodeChanged()
    End Sub
    Partial Private Sub OnIDCardNoChanging(value As String)
    End Sub
    Partial Private Sub OnIDCardNoChanged()
    End Sub
    Partial Private Sub OnMobileNoChanging(value As String)
    End Sub
    Partial Private Sub OnMobileNoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Client", DbType:="Char(12) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Client() As String
		Get
			Return Me._Client
		End Get
		Set
			If (String.Equals(Me._Client, value) = false) Then
				Me.OnClientChanging(value)
				Me.SendPropertyChanging
				Me._Client = value
				Me.SendPropertyChanged("Client")
				Me.OnClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CrossRef", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property CrossRef() As String
		Get
			Return Me._CrossRef
		End Get
		Set
			If (String.Equals(Me._CrossRef, value) = false) Then
				Me.OnCrossRefChanging(value)
				Me.SendPropertyChanging
				Me._CrossRef = value
				Me.SendPropertyChanged("CrossRef")
				Me.OnCrossRefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="Char(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me.OnAddress3Changing(value)
				Me.SendPropertyChanging
				Me._Address3 = value
				Me.SendPropertyChanged("Address3")
				Me.OnAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostCode", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property PostCode() As String
		Get
			Return Me._PostCode
		End Get
		Set
			If (String.Equals(Me._PostCode, value) = false) Then
				Me.OnPostCodeChanging(value)
				Me.SendPropertyChanging
				Me._PostCode = value
				Me.SendPropertyChanged("PostCode")
				Me.OnPostCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me.OnCityChanging(value)
				Me.SendPropertyChanging
				Me._City = value
				Me.SendPropertyChanged("City")
				Me.OnCityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Area() As String
		Get
			Return Me._Area
		End Get
		Set
			If (String.Equals(Me._Area, value) = false) Then
				Me.OnAreaChanging(value)
				Me.SendPropertyChanging
				Me._Area = value
				Me.SendPropertyChanged("Area")
				Me.OnAreaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Industry", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Industry() As String
		Get
			Return Me._Industry
		End Get
		Set
			If (String.Equals(Me._Industry, value) = false) Then
				Me.OnIndustryChanging(value)
				Me.SendPropertyChanging
				Me._Industry = value
				Me.SendPropertyChanged("Industry")
				Me.OnIndustryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneBusiness", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneBusiness() As String
		Get
			Return Me._PhoneBusiness
		End Get
		Set
			If (String.Equals(Me._PhoneBusiness, value) = false) Then
				Me.OnPhoneBusinessChanging(value)
				Me.SendPropertyChanging
				Me._PhoneBusiness = value
				Me.SendPropertyChanged("PhoneBusiness")
				Me.OnPhoneBusinessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me.OnPhoneHomeChanging(value)
				Me.SendPropertyChanging
				Me._PhoneHome = value
				Me.SendPropertyChanged("PhoneHome")
				Me.OnPhoneHomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facsimile", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Facsimile() As String
		Get
			Return Me._Facsimile
		End Get
		Set
			If (String.Equals(Me._Facsimile, value) = false) Then
				Me.OnFacsimileChanging(value)
				Me.SendPropertyChanging
				Me._Facsimile = value
				Me.SendPropertyChanged("Facsimile")
				Me.OnFacsimileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountContact", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property AccountContact() As String
		Get
			Return Me._AccountContact
		End Get
		Set
			If (String.Equals(Me._AccountContact, value) = false) Then
				Me.OnAccountContactChanging(value)
				Me.SendPropertyChanging
				Me._AccountContact = value
				Me.SendPropertyChanged("AccountContact")
				Me.OnAccountContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Addressee", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Addressee() As String
		Get
			Return Me._Addressee
		End Get
		Set
			If (String.Equals(Me._Addressee, value) = false) Then
				Me.OnAddresseeChanging(value)
				Me.SendPropertyChanging
				Me._Addressee = value
				Me.SendPropertyChanged("Addressee")
				Me.OnAddresseeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salutation", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Salutation() As String
		Get
			Return Me._Salutation
		End Get
		Set
			If (String.Equals(Me._Salutation, value) = false) Then
				Me.OnSalutationChanging(value)
				Me.SendPropertyChanging
				Me._Salutation = value
				Me.SendPropertyChanged("Salutation")
				Me.OnSalutationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Occupation", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Occupation() As String
		Get
			Return Me._Occupation
		End Get
		Set
			If (String.Equals(Me._Occupation, value) = false) Then
				Me.OnOccupationChanging(value)
				Me.SendPropertyChanging
				Me._Occupation = value
				Me.SendPropertyChanged("Occupation")
				Me.OnOccupationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateofBirth", DbType:="DateTime NOT NULL")>  _
	Public Property DateofBirth() As Date
		Get
			Return Me._DateofBirth
		End Get
		Set
			If ((Me._DateofBirth = value)  _
						= false) Then
				Me.OnDateofBirthChanging(value)
				Me.SendPropertyChanging
				Me._DateofBirth = value
				Me.SendPropertyChanged("DateofBirth")
				Me.OnDateofBirthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountExecutive", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property AccountExecutive() As String
		Get
			Return Me._AccountExecutive
		End Get
		Set
			If (String.Equals(Me._AccountExecutive, value) = false) Then
				Me.OnAccountExecutiveChanging(value)
				Me.SendPropertyChanging
				Me._AccountExecutive = value
				Me.SendPropertyChanged("AccountExecutive")
				Me.OnAccountExecutiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountAgent", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property AccountAgent() As String
		Get
			Return Me._AccountAgent
		End Get
		Set
			If (String.Equals(Me._AccountAgent, value) = false) Then
				Me.OnAccountAgentChanging(value)
				Me.SendPropertyChanging
				Me._AccountAgent = value
				Me.SendPropertyChanged("AccountAgent")
				Me.OnAccountAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientGroup", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property ClientGroup() As String
		Get
			Return Me._ClientGroup
		End Get
		Set
			If (String.Equals(Me._ClientGroup, value) = false) Then
				Me.OnClientGroupChanging(value)
				Me.SendPropertyChanging
				Me._ClientGroup = value
				Me.SendPropertyChanged("ClientGroup")
				Me.OnClientGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCategory", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property ClientCategory() As String
		Get
			Return Me._ClientCategory
		End Get
		Set
			If (String.Equals(Me._ClientCategory, value) = false) Then
				Me.OnClientCategoryChanging(value)
				Me.SendPropertyChanging
				Me._ClientCategory = value
				Me.SendPropertyChanged("ClientCategory")
				Me.OnClientCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientType", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property ClientType() As String
		Get
			Return Me._ClientType
		End Get
		Set
			If (String.Equals(Me._ClientType, value) = false) Then
				Me.OnClientTypeChanging(value)
				Me.SendPropertyChanging
				Me._ClientType = value
				Me.SendPropertyChanged("ClientType")
				Me.OnClientTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OtherName", DbType:="Char(100) NOT NULL", CanBeNull:=false)>  _
	Public Property OtherName() As String
		Get
			Return Me._OtherName
		End Get
		Set
			If (String.Equals(Me._OtherName, value) = false) Then
				Me.OnOtherNameChanging(value)
				Me.SendPropertyChanging
				Me._OtherName = value
				Me.SendPropertyChanged("OtherName")
				Me.OnOtherNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime NOT NULL")>  _
	Public Property CreationDate() As Date
		Get
			Return Me._CreationDate
		End Get
		Set
			If ((Me._CreationDate = value)  _
						= false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HistoryCategory", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property HistoryCategory() As String
		Get
			Return Me._HistoryCategory
		End Get
		Set
			If (String.Equals(Me._HistoryCategory, value) = false) Then
				Me.OnHistoryCategoryChanging(value)
				Me.SendPropertyChanging
				Me._HistoryCategory = value
				Me.SendPropertyChanged("HistoryCategory")
				Me.OnHistoryCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewClient", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property NewClient() As String
		Get
			Return Me._NewClient
		End Get
		Set
			If (String.Equals(Me._NewClient, value) = false) Then
				Me.OnNewClientChanging(value)
				Me.SendPropertyChanging
				Me._NewClient = value
				Me.SendPropertyChanged("NewClient")
				Me.OnNewClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternetAddress", DbType:="Char(40) NOT NULL", CanBeNull:=false)>  _
	Public Property InternetAddress() As String
		Get
			Return Me._InternetAddress
		End Get
		Set
			If (String.Equals(Me._InternetAddress, value) = false) Then
				Me.OnInternetAddressChanging(value)
				Me.SendPropertyChanging
				Me._InternetAddress = value
				Me.SendPropertyChanged("InternetAddress")
				Me.OnInternetAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShortName", DbType:="Char(5) NOT NULL", CanBeNull:=false)>  _
	Public Property ShortName() As String
		Get
			Return Me._ShortName
		End Get
		Set
			If (String.Equals(Me._ShortName, value) = false) Then
				Me.OnShortNameChanging(value)
				Me.SendPropertyChanging
				Me._ShortName = value
				Me.SendPropertyChanged("ShortName")
				Me.OnShortNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunningNumber", DbType:="Char(7) NOT NULL", CanBeNull:=false)>  _
	Public Property RunningNumber() As String
		Get
			Return Me._RunningNumber
		End Get
		Set
			If (String.Equals(Me._RunningNumber, value) = false) Then
				Me.OnRunningNumberChanging(value)
				Me.SendPropertyChanging
				Me._RunningNumber = value
				Me.SendPropertyChanged("RunningNumber")
				Me.OnRunningNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContactFinance", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property ContactFinance() As String
		Get
			Return Me._ContactFinance
		End Get
		Set
			If (String.Equals(Me._ContactFinance, value) = false) Then
				Me.OnContactFinanceChanging(value)
				Me.SendPropertyChanging
				Me._ContactFinance = value
				Me.SendPropertyChanged("ContactFinance")
				Me.OnContactFinanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneFinance", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneFinance() As String
		Get
			Return Me._PhoneFinance
		End Get
		Set
			If (String.Equals(Me._PhoneFinance, value) = false) Then
				Me.OnPhoneFinanceChanging(value)
				Me.SendPropertyChanging
				Me._PhoneFinance = value
				Me.SendPropertyChanged("PhoneFinance")
				Me.OnPhoneFinanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxFinance", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property FaxFinance() As String
		Get
			Return Me._FaxFinance
		End Get
		Set
			If (String.Equals(Me._FaxFinance, value) = false) Then
				Me.OnFaxFinanceChanging(value)
				Me.SendPropertyChanging
				Me._FaxFinance = value
				Me.SendPropertyChanged("FaxFinance")
				Me.OnFaxFinanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaxName", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property TaxName() As String
		Get
			Return Me._TaxName
		End Get
		Set
			If (String.Equals(Me._TaxName, value) = false) Then
				Me.OnTaxNameChanging(value)
				Me.SendPropertyChanging
				Me._TaxName = value
				Me.SendPropertyChanged("TaxName")
				Me.OnTaxNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaxAddress1", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property TaxAddress1() As String
		Get
			Return Me._TaxAddress1
		End Get
		Set
			If (String.Equals(Me._TaxAddress1, value) = false) Then
				Me.OnTaxAddress1Changing(value)
				Me.SendPropertyChanging
				Me._TaxAddress1 = value
				Me.SendPropertyChanged("TaxAddress1")
				Me.OnTaxAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaxAddress2", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property TaxAddress2() As String
		Get
			Return Me._TaxAddress2
		End Get
		Set
			If (String.Equals(Me._TaxAddress2, value) = false) Then
				Me.OnTaxAddress2Changing(value)
				Me.SendPropertyChanging
				Me._TaxAddress2 = value
				Me.SendPropertyChanged("TaxAddress2")
				Me.OnTaxAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaxAddress3", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property TaxAddress3() As String
		Get
			Return Me._TaxAddress3
		End Get
		Set
			If (String.Equals(Me._TaxAddress3, value) = false) Then
				Me.OnTaxAddress3Changing(value)
				Me.SendPropertyChanging
				Me._TaxAddress3 = value
				Me.SendPropertyChanged("TaxAddress3")
				Me.OnTaxAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaxIDNO", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property TaxIDNO() As String
		Get
			Return Me._TaxIDNO
		End Get
		Set
			If (String.Equals(Me._TaxIDNO, value) = false) Then
				Me.OnTaxIDNOChanging(value)
				Me.SendPropertyChanging
				Me._TaxIDNO = value
				Me.SendPropertyChanged("TaxIDNO")
				Me.OnTaxIDNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SourceOfBiz_Code", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property SourceOfBiz_Code() As String
		Get
			Return Me._SourceOfBiz_Code
		End Get
		Set
			If (String.Equals(Me._SourceOfBiz_Code, value) = false) Then
				Me.OnSourceOfBiz_CodeChanging(value)
				Me.SendPropertyChanging
				Me._SourceOfBiz_Code = value
				Me.SendPropertyChanged("SourceOfBiz_Code")
				Me.OnSourceOfBiz_CodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCardNo", DbType:="Char(13) NOT NULL", CanBeNull:=false)>  _
	Public Property IDCardNo() As String
		Get
			Return Me._IDCardNo
		End Get
		Set
			If (String.Equals(Me._IDCardNo, value) = false) Then
				Me.OnIDCardNoChanging(value)
				Me.SendPropertyChanging
				Me._IDCardNo = value
				Me.SendPropertyChanged("IDCardNo")
				Me.OnIDCardNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobileNo", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property MobileNo() As String
		Get
			Return Me._MobileNo
		End Get
		Set
			If (String.Equals(Me._MobileNo, value) = false) Then
				Me.OnMobileNoChanging(value)
				Me.SendPropertyChanging
				Me._MobileNo = value
				Me.SendPropertyChanged("MobileNo")
				Me.OnMobileNoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ContactPerson")>  _
Partial Public Class ContactPerson
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ClientCode As String
	
	Private _ContractPerson As String
	
	Private _RelationToClient As String
	
	Private _Sex As String
	
	Private _BirthDate As Date
	
	Private _IDCardNO As String
	
	Private _MailType As String
	
	Private _AddressName As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _Address4 As String
	
	Private _Province As String
	
	Private _Country As String
	
	Private _Zipcode As String
	
	Private _BusinessTelephone As String
	
	Private _HomeTelephone As String
	
	Private _MobilePhone As String
	
	Private _Fax As String
	
	Private _EmailAddress As String
	
	Private _WebSite As String
	
	Private _Note As String
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClientCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClientCodeChanged()
    End Sub
    Partial Private Sub OnContractPersonChanging(value As String)
    End Sub
    Partial Private Sub OnContractPersonChanged()
    End Sub
    Partial Private Sub OnRelationToClientChanging(value As String)
    End Sub
    Partial Private Sub OnRelationToClientChanged()
    End Sub
    Partial Private Sub OnSexChanging(value As String)
    End Sub
    Partial Private Sub OnSexChanged()
    End Sub
    Partial Private Sub OnBirthDateChanging(value As Date)
    End Sub
    Partial Private Sub OnBirthDateChanged()
    End Sub
    Partial Private Sub OnIDCardNOChanging(value As String)
    End Sub
    Partial Private Sub OnIDCardNOChanged()
    End Sub
    Partial Private Sub OnMailTypeChanging(value As String)
    End Sub
    Partial Private Sub OnMailTypeChanged()
    End Sub
    Partial Private Sub OnAddressNameChanging(value As String)
    End Sub
    Partial Private Sub OnAddressNameChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnAddress3Changed()
    End Sub
    Partial Private Sub OnAddress4Changing(value As String)
    End Sub
    Partial Private Sub OnAddress4Changed()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnCountryChanging(value As String)
    End Sub
    Partial Private Sub OnCountryChanged()
    End Sub
    Partial Private Sub OnZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnZipcodeChanged()
    End Sub
    Partial Private Sub OnBusinessTelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnBusinessTelephoneChanged()
    End Sub
    Partial Private Sub OnHomeTelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnHomeTelephoneChanged()
    End Sub
    Partial Private Sub OnMobilePhoneChanging(value As String)
    End Sub
    Partial Private Sub OnMobilePhoneChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnEmailAddressChanging(value As String)
    End Sub
    Partial Private Sub OnEmailAddressChanged()
    End Sub
    Partial Private Sub OnWebSiteChanging(value As String)
    End Sub
    Partial Private Sub OnWebSiteChanged()
    End Sub
    Partial Private Sub OnNoteChanging(value As String)
    End Sub
    Partial Private Sub OnNoteChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientCode", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ClientCode() As String
		Get
			Return Me._ClientCode
		End Get
		Set
			If (String.Equals(Me._ClientCode, value) = false) Then
				Me.OnClientCodeChanging(value)
				Me.SendPropertyChanging
				Me._ClientCode = value
				Me.SendPropertyChanged("ClientCode")
				Me.OnClientCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContractPerson", DbType:="Char(70) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ContractPerson() As String
		Get
			Return Me._ContractPerson
		End Get
		Set
			If (String.Equals(Me._ContractPerson, value) = false) Then
				Me.OnContractPersonChanging(value)
				Me.SendPropertyChanging
				Me._ContractPerson = value
				Me.SendPropertyChanged("ContractPerson")
				Me.OnContractPersonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RelationToClient", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property RelationToClient() As String
		Get
			Return Me._RelationToClient
		End Get
		Set
			If (String.Equals(Me._RelationToClient, value) = false) Then
				Me.OnRelationToClientChanging(value)
				Me.SendPropertyChanging
				Me._RelationToClient = value
				Me.SendPropertyChanged("RelationToClient")
				Me.OnRelationToClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sex", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
	Public Property Sex() As String
		Get
			Return Me._Sex
		End Get
		Set
			If (String.Equals(Me._Sex, value) = false) Then
				Me.OnSexChanging(value)
				Me.SendPropertyChanging
				Me._Sex = value
				Me.SendPropertyChanged("Sex")
				Me.OnSexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDate", DbType:="DateTime NOT NULL")>  _
	Public Property BirthDate() As Date
		Get
			Return Me._BirthDate
		End Get
		Set
			If ((Me._BirthDate = value)  _
						= false) Then
				Me.OnBirthDateChanging(value)
				Me.SendPropertyChanging
				Me._BirthDate = value
				Me.SendPropertyChanged("BirthDate")
				Me.OnBirthDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCardNO", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property IDCardNO() As String
		Get
			Return Me._IDCardNO
		End Get
		Set
			If (String.Equals(Me._IDCardNO, value) = false) Then
				Me.OnIDCardNOChanging(value)
				Me.SendPropertyChanging
				Me._IDCardNO = value
				Me.SendPropertyChanged("IDCardNO")
				Me.OnIDCardNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailType", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MailType() As String
		Get
			Return Me._MailType
		End Get
		Set
			If (String.Equals(Me._MailType, value) = false) Then
				Me.OnMailTypeChanging(value)
				Me.SendPropertyChanging
				Me._MailType = value
				Me.SendPropertyChanged("MailType")
				Me.OnMailTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddressName", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AddressName() As String
		Get
			Return Me._AddressName
		End Get
		Set
			If (String.Equals(Me._AddressName, value) = false) Then
				Me.OnAddressNameChanging(value)
				Me.SendPropertyChanging
				Me._AddressName = value
				Me.SendPropertyChanged("AddressName")
				Me.OnAddressNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me.OnAddress3Changing(value)
				Me.SendPropertyChanging
				Me._Address3 = value
				Me.SendPropertyChanged("Address3")
				Me.OnAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address4", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Address4() As String
		Get
			Return Me._Address4
		End Get
		Set
			If (String.Equals(Me._Address4, value) = false) Then
				Me.OnAddress4Changing(value)
				Me.SendPropertyChanging
				Me._Address4 = value
				Me.SendPropertyChanged("Address4")
				Me.OnAddress4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Province() As String
		Get
			Return Me._Province
		End Get
		Set
			If (String.Equals(Me._Province, value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Country", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Country() As String
		Get
			Return Me._Country
		End Get
		Set
			If (String.Equals(Me._Country, value) = false) Then
				Me.OnCountryChanging(value)
				Me.SendPropertyChanging
				Me._Country = value
				Me.SendPropertyChanged("Country")
				Me.OnCountryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zipcode", DbType:="Char(5) NOT NULL", CanBeNull:=false)>  _
	Public Property Zipcode() As String
		Get
			Return Me._Zipcode
		End Get
		Set
			If (String.Equals(Me._Zipcode, value) = false) Then
				Me.OnZipcodeChanging(value)
				Me.SendPropertyChanging
				Me._Zipcode = value
				Me.SendPropertyChanged("Zipcode")
				Me.OnZipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BusinessTelephone", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property BusinessTelephone() As String
		Get
			Return Me._BusinessTelephone
		End Get
		Set
			If (String.Equals(Me._BusinessTelephone, value) = false) Then
				Me.OnBusinessTelephoneChanging(value)
				Me.SendPropertyChanging
				Me._BusinessTelephone = value
				Me.SendPropertyChanged("BusinessTelephone")
				Me.OnBusinessTelephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HomeTelephone", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property HomeTelephone() As String
		Get
			Return Me._HomeTelephone
		End Get
		Set
			If (String.Equals(Me._HomeTelephone, value) = false) Then
				Me.OnHomeTelephoneChanging(value)
				Me.SendPropertyChanging
				Me._HomeTelephone = value
				Me.SendPropertyChanged("HomeTelephone")
				Me.OnHomeTelephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilePhone", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property MobilePhone() As String
		Get
			Return Me._MobilePhone
		End Get
		Set
			If (String.Equals(Me._MobilePhone, value) = false) Then
				Me.OnMobilePhoneChanging(value)
				Me.SendPropertyChanging
				Me._MobilePhone = value
				Me.SendPropertyChanged("MobilePhone")
				Me.OnMobilePhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Fax() As String
		Get
			Return Me._Fax
		End Get
		Set
			If (String.Equals(Me._Fax, value) = false) Then
				Me.OnFaxChanging(value)
				Me.SendPropertyChanging
				Me._Fax = value
				Me.SendPropertyChanged("Fax")
				Me.OnFaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailAddress", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property EmailAddress() As String
		Get
			Return Me._EmailAddress
		End Get
		Set
			If (String.Equals(Me._EmailAddress, value) = false) Then
				Me.OnEmailAddressChanging(value)
				Me.SendPropertyChanging
				Me._EmailAddress = value
				Me.SendPropertyChanged("EmailAddress")
				Me.OnEmailAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebSite", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property WebSite() As String
		Get
			Return Me._WebSite
		End Get
		Set
			If (String.Equals(Me._WebSite, value) = false) Then
				Me.OnWebSiteChanging(value)
				Me.SendPropertyChanging
				Me._WebSite = value
				Me.SendPropertyChanged("WebSite")
				Me.OnWebSiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Note", DbType:="Char(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Note() As String
		Get
			Return Me._Note
		End Get
		Set
			If (String.Equals(Me._Note, value) = false) Then
				Me.OnNoteChanging(value)
				Me.SendPropertyChanging
				Me._Note = value
				Me.SendPropertyChanged("Note")
				Me.OnNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Policy")>  _
Partial Public Class Policy
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Client As String
	
	Private _Class As String
	
	Private _Folio As Integer
	
	Private _Year As Integer
	
	Private _Version As Integer
	
	Private _Status As String
	
	Private _ChangeStatus As Char
	
	Private _PolicyType As Char
	
	Private _Underwriter As String
	
	Private _PeriodFrom As Date
	
	Private _PeriodTo As Date
	
	Private _Attachment As Date
	
	Private _CoverNoteNo As String
	
	Private _PolicyNo As String
	
	Private _Insured As String
	
	Private _Location As String
	
	Private _BriefDescription As String
	
	Private _BusinessCategory As String
	
	Private _AExec As String
	
	Private _PaymentTerm As String
	
	Private _NoInstallment As Short
	
	Private _SumInsured As Decimal
	
	Private _PercentRate As Double
	
	Private _Premium As Double
	
	Private _AdminCostLevy As Double
	
	Private _StampDuty As Double
	
	Private _OthersFee As Double
	
	Private _BrokerageComm As Double
	
	Private _CommissionOut As Double
	
	Private _VAT As Double
	
	Private _VATPaidByInsured As Boolean
	
	Private _Currency As String
	
	Private _ExchangeRate As Double
	
	Private _ClosingDate As Date
	
	Private _ClientReceivedAmount As Double
	
	Private _ClientReceivedDate As Date
	
	Private _PaidAmounttoUwriter As Double
	
	Private _PaidDatetoUwriter As Date
	
	Private _ReInsuranceInfo As String
	
	Private _CoInsuranceNo As Integer
	
	Private _InvoiceNo As Integer
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
	Private _Remarks As String
	
	Private _DiscountPercent As Double
	
	Private _DiscountAmount As Double
	
	Private _DateText As String
	
	Private _RenewalFlag As Char
	
	Private _ORCommissionPercent As Double
	
	Private _ORCommissionAmount As Double
	
	Private _UpdateBy As String
	
	Private _UpdateDate As Date
	
	Private _OROutRate As Double
	
	Private _OROutAmount As Double
	
	Private _AdminFeeIn1 As Double
	
	Private _AdminFeeIn2 As Double
	
	Private _AdminFeeOut1 As Double
	
	Private _AdminFeeOut2 As Double
	
	Private _DiscountBrok As Double
	
	Private _DiscountBrokAmt As Double
	
	Private _DiscountORIn As Double
	
	Private _DiscountORInAmt As Double
	
	Private _DiscountAdmin1 As Double
	
	Private _DiscountAdmin2 As Double
	
	Private _BriefII As String
	
	Private _BriefIII As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClientChanging(value As String)
    End Sub
    Partial Private Sub OnClientChanged()
    End Sub
    Partial Private Sub OnClassChanging(value As String)
    End Sub
    Partial Private Sub OnClassChanged()
    End Sub
    Partial Private Sub OnFolioChanging(value As Integer)
    End Sub
    Partial Private Sub OnFolioChanged()
    End Sub
    Partial Private Sub OnYearChanging(value As Integer)
    End Sub
    Partial Private Sub OnYearChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As Integer)
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnChangeStatusChanging(value As Char)
    End Sub
    Partial Private Sub OnChangeStatusChanged()
    End Sub
    Partial Private Sub OnPolicyTypeChanging(value As Char)
    End Sub
    Partial Private Sub OnPolicyTypeChanged()
    End Sub
    Partial Private Sub OnUnderwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUnderwriterChanged()
    End Sub
    Partial Private Sub OnPeriodFromChanging(value As Date)
    End Sub
    Partial Private Sub OnPeriodFromChanged()
    End Sub
    Partial Private Sub OnPeriodToChanging(value As Date)
    End Sub
    Partial Private Sub OnPeriodToChanged()
    End Sub
    Partial Private Sub OnAttachmentChanging(value As Date)
    End Sub
    Partial Private Sub OnAttachmentChanged()
    End Sub
    Partial Private Sub OnCoverNoteNoChanging(value As String)
    End Sub
    Partial Private Sub OnCoverNoteNoChanged()
    End Sub
    Partial Private Sub OnPolicyNoChanging(value As String)
    End Sub
    Partial Private Sub OnPolicyNoChanged()
    End Sub
    Partial Private Sub OnInsuredChanging(value As String)
    End Sub
    Partial Private Sub OnInsuredChanged()
    End Sub
    Partial Private Sub OnLocationChanging(value As String)
    End Sub
    Partial Private Sub OnLocationChanged()
    End Sub
    Partial Private Sub OnBriefDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnBriefDescriptionChanged()
    End Sub
    Partial Private Sub OnBusinessCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnBusinessCategoryChanged()
    End Sub
    Partial Private Sub OnAExecChanging(value As String)
    End Sub
    Partial Private Sub OnAExecChanged()
    End Sub
    Partial Private Sub OnPaymentTermChanging(value As String)
    End Sub
    Partial Private Sub OnPaymentTermChanged()
    End Sub
    Partial Private Sub OnNoInstallmentChanging(value As Short)
    End Sub
    Partial Private Sub OnNoInstallmentChanged()
    End Sub
    Partial Private Sub OnSumInsuredChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSumInsuredChanged()
    End Sub
    Partial Private Sub OnPercentRateChanging(value As Double)
    End Sub
    Partial Private Sub OnPercentRateChanged()
    End Sub
    Partial Private Sub OnPremiumChanging(value As Double)
    End Sub
    Partial Private Sub OnPremiumChanged()
    End Sub
    Partial Private Sub OnAdminCostLevyChanging(value As Double)
    End Sub
    Partial Private Sub OnAdminCostLevyChanged()
    End Sub
    Partial Private Sub OnStampDutyChanging(value As Double)
    End Sub
    Partial Private Sub OnStampDutyChanged()
    End Sub
    Partial Private Sub OnOthersFeeChanging(value As Double)
    End Sub
    Partial Private Sub OnOthersFeeChanged()
    End Sub
    Partial Private Sub OnBrokerageCommChanging(value As Double)
    End Sub
    Partial Private Sub OnBrokerageCommChanged()
    End Sub
    Partial Private Sub OnCommissionOutChanging(value As Double)
    End Sub
    Partial Private Sub OnCommissionOutChanged()
    End Sub
    Partial Private Sub OnVATChanging(value As Double)
    End Sub
    Partial Private Sub OnVATChanged()
    End Sub
    Partial Private Sub OnVATPaidByInsuredChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVATPaidByInsuredChanged()
    End Sub
    Partial Private Sub OnCurrencyChanging(value As String)
    End Sub
    Partial Private Sub OnCurrencyChanged()
    End Sub
    Partial Private Sub OnExchangeRateChanging(value As Double)
    End Sub
    Partial Private Sub OnExchangeRateChanged()
    End Sub
    Partial Private Sub OnClosingDateChanging(value As Date)
    End Sub
    Partial Private Sub OnClosingDateChanged()
    End Sub
    Partial Private Sub OnClientReceivedAmountChanging(value As Double)
    End Sub
    Partial Private Sub OnClientReceivedAmountChanged()
    End Sub
    Partial Private Sub OnClientReceivedDateChanging(value As Date)
    End Sub
    Partial Private Sub OnClientReceivedDateChanged()
    End Sub
    Partial Private Sub OnPaidAmounttoUwriterChanging(value As Double)
    End Sub
    Partial Private Sub OnPaidAmounttoUwriterChanged()
    End Sub
    Partial Private Sub OnPaidDatetoUwriterChanging(value As Date)
    End Sub
    Partial Private Sub OnPaidDatetoUwriterChanged()
    End Sub
    Partial Private Sub OnReInsuranceInfoChanging(value As String)
    End Sub
    Partial Private Sub OnReInsuranceInfoChanged()
    End Sub
    Partial Private Sub OnCoInsuranceNoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCoInsuranceNoChanged()
    End Sub
    Partial Private Sub OnInvoiceNoChanging(value As Integer)
    End Sub
    Partial Private Sub OnInvoiceNoChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnRemarksChanged()
    End Sub
    Partial Private Sub OnDiscountPercentChanging(value As Double)
    End Sub
    Partial Private Sub OnDiscountPercentChanged()
    End Sub
    Partial Private Sub OnDiscountAmountChanging(value As Double)
    End Sub
    Partial Private Sub OnDiscountAmountChanged()
    End Sub
    Partial Private Sub OnDateTextChanging(value As String)
    End Sub
    Partial Private Sub OnDateTextChanged()
    End Sub
    Partial Private Sub OnRenewalFlagChanging(value As Char)
    End Sub
    Partial Private Sub OnRenewalFlagChanged()
    End Sub
    Partial Private Sub OnORCommissionPercentChanging(value As Double)
    End Sub
    Partial Private Sub OnORCommissionPercentChanged()
    End Sub
    Partial Private Sub OnORCommissionAmountChanging(value As Double)
    End Sub
    Partial Private Sub OnORCommissionAmountChanged()
    End Sub
    Partial Private Sub OnUpdateByChanging(value As String)
    End Sub
    Partial Private Sub OnUpdateByChanged()
    End Sub
    Partial Private Sub OnUpdateDateChanging(value As Date)
    End Sub
    Partial Private Sub OnUpdateDateChanged()
    End Sub
    Partial Private Sub OnOROutRateChanging(value As Double)
    End Sub
    Partial Private Sub OnOROutRateChanged()
    End Sub
    Partial Private Sub OnOROutAmountChanging(value As Double)
    End Sub
    Partial Private Sub OnOROutAmountChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn1Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminFeeIn1Changed()
    End Sub
    Partial Private Sub OnAdminFeeIn2Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminFeeIn2Changed()
    End Sub
    Partial Private Sub OnAdminFeeOut1Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminFeeOut1Changed()
    End Sub
    Partial Private Sub OnAdminFeeOut2Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminFeeOut2Changed()
    End Sub
    Partial Private Sub OnDiscountBrokChanging(value As Double)
    End Sub
    Partial Private Sub OnDiscountBrokChanged()
    End Sub
    Partial Private Sub OnDiscountBrokAmtChanging(value As Double)
    End Sub
    Partial Private Sub OnDiscountBrokAmtChanged()
    End Sub
    Partial Private Sub OnDiscountORInChanging(value As Double)
    End Sub
    Partial Private Sub OnDiscountORInChanged()
    End Sub
    Partial Private Sub OnDiscountORInAmtChanging(value As Double)
    End Sub
    Partial Private Sub OnDiscountORInAmtChanged()
    End Sub
    Partial Private Sub OnDiscountAdmin1Changing(value As Double)
    End Sub
    Partial Private Sub OnDiscountAdmin1Changed()
    End Sub
    Partial Private Sub OnDiscountAdmin2Changing(value As Double)
    End Sub
    Partial Private Sub OnDiscountAdmin2Changed()
    End Sub
    Partial Private Sub OnBriefIIChanging(value As String)
    End Sub
    Partial Private Sub OnBriefIIChanged()
    End Sub
    Partial Private Sub OnBriefIIIChanging(value As String)
    End Sub
    Partial Private Sub OnBriefIIIChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Client", DbType:="Char(12) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Client() As String
		Get
			Return Me._Client
		End Get
		Set
			If (String.Equals(Me._Client, value) = false) Then
				Me.OnClientChanging(value)
				Me.SendPropertyChanging
				Me._Client = value
				Me.SendPropertyChanged("Client")
				Me.OnClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Class", Storage:="_Class", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property [Class]() As String
		Get
			Return Me._Class
		End Get
		Set
			If (String.Equals(Me._Class, value) = false) Then
				Me.OnClassChanging(value)
				Me.SendPropertyChanging
				Me._Class = value
				Me.SendPropertyChanged("[Class]")
				Me.OnClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Folio", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Folio() As Integer
		Get
			Return Me._Folio
		End Get
		Set
			If ((Me._Folio = value)  _
						= false) Then
				Me.OnFolioChanging(value)
				Me.SendPropertyChanging
				Me._Folio = value
				Me.SendPropertyChanged("Folio")
				Me.OnFolioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Year() As Integer
		Get
			Return Me._Year
		End Get
		Set
			If ((Me._Year = value)  _
						= false) Then
				Me.OnYearChanging(value)
				Me.SendPropertyChanging
				Me._Year = value
				Me.SendPropertyChanged("Year")
				Me.OnYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Version() As Integer
		Get
			Return Me._Version
		End Get
		Set
			If ((Me._Version = value)  _
						= false) Then
				Me.OnVersionChanging(value)
				Me.SendPropertyChanging
				Me._Version = value
				Me.SendPropertyChanged("Version")
				Me.OnVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Char(3) NOT NULL", CanBeNull:=false)>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChangeStatus", DbType:="Char(1) NOT NULL")>  _
	Public Property ChangeStatus() As Char
		Get
			Return Me._ChangeStatus
		End Get
		Set
			If ((Me._ChangeStatus = value)  _
						= false) Then
				Me.OnChangeStatusChanging(value)
				Me.SendPropertyChanging
				Me._ChangeStatus = value
				Me.SendPropertyChanged("ChangeStatus")
				Me.OnChangeStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyType", DbType:="Char(1) NOT NULL")>  _
	Public Property PolicyType() As Char
		Get
			Return Me._PolicyType
		End Get
		Set
			If ((Me._PolicyType = value)  _
						= false) Then
				Me.OnPolicyTypeChanging(value)
				Me.SendPropertyChanging
				Me._PolicyType = value
				Me.SendPropertyChanged("PolicyType")
				Me.OnPolicyTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me.OnUnderwriterChanging(value)
				Me.SendPropertyChanging
				Me._Underwriter = value
				Me.SendPropertyChanged("Underwriter")
				Me.OnUnderwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodFrom", DbType:="DateTime NOT NULL")>  _
	Public Property PeriodFrom() As Date
		Get
			Return Me._PeriodFrom
		End Get
		Set
			If ((Me._PeriodFrom = value)  _
						= false) Then
				Me.OnPeriodFromChanging(value)
				Me.SendPropertyChanging
				Me._PeriodFrom = value
				Me.SendPropertyChanged("PeriodFrom")
				Me.OnPeriodFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodTo", DbType:="DateTime NOT NULL")>  _
	Public Property PeriodTo() As Date
		Get
			Return Me._PeriodTo
		End Get
		Set
			If ((Me._PeriodTo = value)  _
						= false) Then
				Me.OnPeriodToChanging(value)
				Me.SendPropertyChanging
				Me._PeriodTo = value
				Me.SendPropertyChanged("PeriodTo")
				Me.OnPeriodToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Attachment", DbType:="DateTime NOT NULL")>  _
	Public Property Attachment() As Date
		Get
			Return Me._Attachment
		End Get
		Set
			If ((Me._Attachment = value)  _
						= false) Then
				Me.OnAttachmentChanging(value)
				Me.SendPropertyChanging
				Me._Attachment = value
				Me.SendPropertyChanged("Attachment")
				Me.OnAttachmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoverNoteNo", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property CoverNoteNo() As String
		Get
			Return Me._CoverNoteNo
		End Get
		Set
			If (String.Equals(Me._CoverNoteNo, value) = false) Then
				Me.OnCoverNoteNoChanging(value)
				Me.SendPropertyChanging
				Me._CoverNoteNo = value
				Me.SendPropertyChanged("CoverNoteNo")
				Me.OnCoverNoteNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="Char(70) NOT NULL", CanBeNull:=false)>  _
	Public Property PolicyNo() As String
		Get
			Return Me._PolicyNo
		End Get
		Set
			If (String.Equals(Me._PolicyNo, value) = false) Then
				Me.OnPolicyNoChanging(value)
				Me.SendPropertyChanging
				Me._PolicyNo = value
				Me.SendPropertyChanged("PolicyNo")
				Me.OnPolicyNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insured", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Insured() As String
		Get
			Return Me._Insured
		End Get
		Set
			If (String.Equals(Me._Insured, value) = false) Then
				Me.OnInsuredChanging(value)
				Me.SendPropertyChanging
				Me._Insured = value
				Me.SendPropertyChanged("Insured")
				Me.OnInsuredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location", DbType:="Char(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Location() As String
		Get
			Return Me._Location
		End Get
		Set
			If (String.Equals(Me._Location, value) = false) Then
				Me.OnLocationChanging(value)
				Me.SendPropertyChanging
				Me._Location = value
				Me.SendPropertyChanged("Location")
				Me.OnLocationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BriefDescription", DbType:="Char(80) NOT NULL", CanBeNull:=false)>  _
	Public Property BriefDescription() As String
		Get
			Return Me._BriefDescription
		End Get
		Set
			If (String.Equals(Me._BriefDescription, value) = false) Then
				Me.OnBriefDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._BriefDescription = value
				Me.SendPropertyChanged("BriefDescription")
				Me.OnBriefDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BusinessCategory", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property BusinessCategory() As String
		Get
			Return Me._BusinessCategory
		End Get
		Set
			If (String.Equals(Me._BusinessCategory, value) = false) Then
				Me.OnBusinessCategoryChanging(value)
				Me.SendPropertyChanging
				Me._BusinessCategory = value
				Me.SendPropertyChanged("BusinessCategory")
				Me.OnBusinessCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AExec", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property AExec() As String
		Get
			Return Me._AExec
		End Get
		Set
			If (String.Equals(Me._AExec, value) = false) Then
				Me.OnAExecChanging(value)
				Me.SendPropertyChanging
				Me._AExec = value
				Me.SendPropertyChanged("AExec")
				Me.OnAExecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentTerm", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property PaymentTerm() As String
		Get
			Return Me._PaymentTerm
		End Get
		Set
			If (String.Equals(Me._PaymentTerm, value) = false) Then
				Me.OnPaymentTermChanging(value)
				Me.SendPropertyChanging
				Me._PaymentTerm = value
				Me.SendPropertyChanged("PaymentTerm")
				Me.OnPaymentTermChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoInstallment", DbType:="SmallInt NOT NULL")>  _
	Public Property NoInstallment() As Short
		Get
			Return Me._NoInstallment
		End Get
		Set
			If ((Me._NoInstallment = value)  _
						= false) Then
				Me.OnNoInstallmentChanging(value)
				Me.SendPropertyChanging
				Me._NoInstallment = value
				Me.SendPropertyChanged("NoInstallment")
				Me.OnNoInstallmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SumInsured", DbType:="Decimal(17,2) NOT NULL")>  _
	Public Property SumInsured() As Decimal
		Get
			Return Me._SumInsured
		End Get
		Set
			If ((Me._SumInsured = value)  _
						= false) Then
				Me.OnSumInsuredChanging(value)
				Me.SendPropertyChanging
				Me._SumInsured = value
				Me.SendPropertyChanged("SumInsured")
				Me.OnSumInsuredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PercentRate", DbType:="Float NOT NULL")>  _
	Public Property PercentRate() As Double
		Get
			Return Me._PercentRate
		End Get
		Set
			If ((Me._PercentRate = value)  _
						= false) Then
				Me.OnPercentRateChanging(value)
				Me.SendPropertyChanging
				Me._PercentRate = value
				Me.SendPropertyChanged("PercentRate")
				Me.OnPercentRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Premium", DbType:="Float NOT NULL")>  _
	Public Property Premium() As Double
		Get
			Return Me._Premium
		End Get
		Set
			If ((Me._Premium = value)  _
						= false) Then
				Me.OnPremiumChanging(value)
				Me.SendPropertyChanging
				Me._Premium = value
				Me.SendPropertyChanged("Premium")
				Me.OnPremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminCostLevy", DbType:="Float NOT NULL")>  _
	Public Property AdminCostLevy() As Double
		Get
			Return Me._AdminCostLevy
		End Get
		Set
			If ((Me._AdminCostLevy = value)  _
						= false) Then
				Me.OnAdminCostLevyChanging(value)
				Me.SendPropertyChanging
				Me._AdminCostLevy = value
				Me.SendPropertyChanged("AdminCostLevy")
				Me.OnAdminCostLevyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StampDuty", DbType:="Float NOT NULL")>  _
	Public Property StampDuty() As Double
		Get
			Return Me._StampDuty
		End Get
		Set
			If ((Me._StampDuty = value)  _
						= false) Then
				Me.OnStampDutyChanging(value)
				Me.SendPropertyChanging
				Me._StampDuty = value
				Me.SendPropertyChanged("StampDuty")
				Me.OnStampDutyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OthersFee", DbType:="Float NOT NULL")>  _
	Public Property OthersFee() As Double
		Get
			Return Me._OthersFee
		End Get
		Set
			If ((Me._OthersFee = value)  _
						= false) Then
				Me.OnOthersFeeChanging(value)
				Me.SendPropertyChanging
				Me._OthersFee = value
				Me.SendPropertyChanged("OthersFee")
				Me.OnOthersFeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrokerageComm", DbType:="Float NOT NULL")>  _
	Public Property BrokerageComm() As Double
		Get
			Return Me._BrokerageComm
		End Get
		Set
			If ((Me._BrokerageComm = value)  _
						= false) Then
				Me.OnBrokerageCommChanging(value)
				Me.SendPropertyChanging
				Me._BrokerageComm = value
				Me.SendPropertyChanged("BrokerageComm")
				Me.OnBrokerageCommChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut", DbType:="Float NOT NULL")>  _
	Public Property CommissionOut() As Double
		Get
			Return Me._CommissionOut
		End Get
		Set
			If ((Me._CommissionOut = value)  _
						= false) Then
				Me.OnCommissionOutChanging(value)
				Me.SendPropertyChanging
				Me._CommissionOut = value
				Me.SendPropertyChanged("CommissionOut")
				Me.OnCommissionOutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT", DbType:="Float NOT NULL")>  _
	Public Property VAT() As Double
		Get
			Return Me._VAT
		End Get
		Set
			If ((Me._VAT = value)  _
						= false) Then
				Me.OnVATChanging(value)
				Me.SendPropertyChanging
				Me._VAT = value
				Me.SendPropertyChanged("VAT")
				Me.OnVATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATPaidByInsured", DbType:="Bit NOT NULL")>  _
	Public Property VATPaidByInsured() As Boolean
		Get
			Return Me._VATPaidByInsured
		End Get
		Set
			If ((Me._VATPaidByInsured = value)  _
						= false) Then
				Me.OnVATPaidByInsuredChanging(value)
				Me.SendPropertyChanging
				Me._VATPaidByInsured = value
				Me.SendPropertyChanged("VATPaidByInsured")
				Me.OnVATPaidByInsuredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Currency", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Currency() As String
		Get
			Return Me._Currency
		End Get
		Set
			If (String.Equals(Me._Currency, value) = false) Then
				Me.OnCurrencyChanging(value)
				Me.SendPropertyChanging
				Me._Currency = value
				Me.SendPropertyChanged("Currency")
				Me.OnCurrencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExchangeRate", DbType:="Float NOT NULL")>  _
	Public Property ExchangeRate() As Double
		Get
			Return Me._ExchangeRate
		End Get
		Set
			If ((Me._ExchangeRate = value)  _
						= false) Then
				Me.OnExchangeRateChanging(value)
				Me.SendPropertyChanging
				Me._ExchangeRate = value
				Me.SendPropertyChanged("ExchangeRate")
				Me.OnExchangeRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClosingDate", DbType:="DateTime NOT NULL")>  _
	Public Property ClosingDate() As Date
		Get
			Return Me._ClosingDate
		End Get
		Set
			If ((Me._ClosingDate = value)  _
						= false) Then
				Me.OnClosingDateChanging(value)
				Me.SendPropertyChanging
				Me._ClosingDate = value
				Me.SendPropertyChanged("ClosingDate")
				Me.OnClosingDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientReceivedAmount", DbType:="Float NOT NULL")>  _
	Public Property ClientReceivedAmount() As Double
		Get
			Return Me._ClientReceivedAmount
		End Get
		Set
			If ((Me._ClientReceivedAmount = value)  _
						= false) Then
				Me.OnClientReceivedAmountChanging(value)
				Me.SendPropertyChanging
				Me._ClientReceivedAmount = value
				Me.SendPropertyChanged("ClientReceivedAmount")
				Me.OnClientReceivedAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientReceivedDate", DbType:="DateTime NOT NULL")>  _
	Public Property ClientReceivedDate() As Date
		Get
			Return Me._ClientReceivedDate
		End Get
		Set
			If ((Me._ClientReceivedDate = value)  _
						= false) Then
				Me.OnClientReceivedDateChanging(value)
				Me.SendPropertyChanging
				Me._ClientReceivedDate = value
				Me.SendPropertyChanged("ClientReceivedDate")
				Me.OnClientReceivedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaidAmounttoUwriter", DbType:="Float NOT NULL")>  _
	Public Property PaidAmounttoUwriter() As Double
		Get
			Return Me._PaidAmounttoUwriter
		End Get
		Set
			If ((Me._PaidAmounttoUwriter = value)  _
						= false) Then
				Me.OnPaidAmounttoUwriterChanging(value)
				Me.SendPropertyChanging
				Me._PaidAmounttoUwriter = value
				Me.SendPropertyChanged("PaidAmounttoUwriter")
				Me.OnPaidAmounttoUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaidDatetoUwriter", DbType:="DateTime NOT NULL")>  _
	Public Property PaidDatetoUwriter() As Date
		Get
			Return Me._PaidDatetoUwriter
		End Get
		Set
			If ((Me._PaidDatetoUwriter = value)  _
						= false) Then
				Me.OnPaidDatetoUwriterChanging(value)
				Me.SendPropertyChanging
				Me._PaidDatetoUwriter = value
				Me.SendPropertyChanged("PaidDatetoUwriter")
				Me.OnPaidDatetoUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReInsuranceInfo", DbType:="Char(100) NOT NULL", CanBeNull:=false)>  _
	Public Property ReInsuranceInfo() As String
		Get
			Return Me._ReInsuranceInfo
		End Get
		Set
			If (String.Equals(Me._ReInsuranceInfo, value) = false) Then
				Me.OnReInsuranceInfoChanging(value)
				Me.SendPropertyChanging
				Me._ReInsuranceInfo = value
				Me.SendPropertyChanged("ReInsuranceInfo")
				Me.OnReInsuranceInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoInsuranceNo", DbType:="Int NOT NULL")>  _
	Public Property CoInsuranceNo() As Integer
		Get
			Return Me._CoInsuranceNo
		End Get
		Set
			If ((Me._CoInsuranceNo = value)  _
						= false) Then
				Me.OnCoInsuranceNoChanging(value)
				Me.SendPropertyChanging
				Me._CoInsuranceNo = value
				Me.SendPropertyChanged("CoInsuranceNo")
				Me.OnCoInsuranceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InvoiceNo", DbType:="Int NOT NULL")>  _
	Public Property InvoiceNo() As Integer
		Get
			Return Me._InvoiceNo
		End Get
		Set
			If ((Me._InvoiceNo = value)  _
						= false) Then
				Me.OnInvoiceNoChanging(value)
				Me.SendPropertyChanging
				Me._InvoiceNo = value
				Me.SendPropertyChanged("InvoiceNo")
				Me.OnInvoiceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remarks", DbType:="Char(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Remarks() As String
		Get
			Return Me._Remarks
		End Get
		Set
			If (String.Equals(Me._Remarks, value) = false) Then
				Me.OnRemarksChanging(value)
				Me.SendPropertyChanging
				Me._Remarks = value
				Me.SendPropertyChanged("Remarks")
				Me.OnRemarksChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountPercent", DbType:="Float NOT NULL")>  _
	Public Property DiscountPercent() As Double
		Get
			Return Me._DiscountPercent
		End Get
		Set
			If ((Me._DiscountPercent = value)  _
						= false) Then
				Me.OnDiscountPercentChanging(value)
				Me.SendPropertyChanging
				Me._DiscountPercent = value
				Me.SendPropertyChanged("DiscountPercent")
				Me.OnDiscountPercentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountAmount", DbType:="Float NOT NULL")>  _
	Public Property DiscountAmount() As Double
		Get
			Return Me._DiscountAmount
		End Get
		Set
			If ((Me._DiscountAmount = value)  _
						= false) Then
				Me.OnDiscountAmountChanging(value)
				Me.SendPropertyChanging
				Me._DiscountAmount = value
				Me.SendPropertyChanged("DiscountAmount")
				Me.OnDiscountAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateText", DbType:="Char(80) NOT NULL", CanBeNull:=false)>  _
	Public Property DateText() As String
		Get
			Return Me._DateText
		End Get
		Set
			If (String.Equals(Me._DateText, value) = false) Then
				Me.OnDateTextChanging(value)
				Me.SendPropertyChanging
				Me._DateText = value
				Me.SendPropertyChanged("DateText")
				Me.OnDateTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenewalFlag", DbType:="Char(1) NOT NULL")>  _
	Public Property RenewalFlag() As Char
		Get
			Return Me._RenewalFlag
		End Get
		Set
			If ((Me._RenewalFlag = value)  _
						= false) Then
				Me.OnRenewalFlagChanging(value)
				Me.SendPropertyChanging
				Me._RenewalFlag = value
				Me.SendPropertyChanged("RenewalFlag")
				Me.OnRenewalFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent", DbType:="Float NOT NULL")>  _
	Public Property ORCommissionPercent() As Double
		Get
			Return Me._ORCommissionPercent
		End Get
		Set
			If ((Me._ORCommissionPercent = value)  _
						= false) Then
				Me.OnORCommissionPercentChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionPercent = value
				Me.SendPropertyChanged("ORCommissionPercent")
				Me.OnORCommissionPercentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionAmount", DbType:="Float NOT NULL")>  _
	Public Property ORCommissionAmount() As Double
		Get
			Return Me._ORCommissionAmount
		End Get
		Set
			If ((Me._ORCommissionAmount = value)  _
						= false) Then
				Me.OnORCommissionAmountChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionAmount = value
				Me.SendPropertyChanged("ORCommissionAmount")
				Me.OnORCommissionAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateBy", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property UpdateBy() As String
		Get
			Return Me._UpdateBy
		End Get
		Set
			If (String.Equals(Me._UpdateBy, value) = false) Then
				Me.OnUpdateByChanging(value)
				Me.SendPropertyChanging
				Me._UpdateBy = value
				Me.SendPropertyChanged("UpdateBy")
				Me.OnUpdateByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateDate", DbType:="DateTime NOT NULL")>  _
	Public Property UpdateDate() As Date
		Get
			Return Me._UpdateDate
		End Get
		Set
			If ((Me._UpdateDate = value)  _
						= false) Then
				Me.OnUpdateDateChanging(value)
				Me.SendPropertyChanging
				Me._UpdateDate = value
				Me.SendPropertyChanged("UpdateDate")
				Me.OnUpdateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutRate", DbType:="Float NOT NULL")>  _
	Public Property OROutRate() As Double
		Get
			Return Me._OROutRate
		End Get
		Set
			If ((Me._OROutRate = value)  _
						= false) Then
				Me.OnOROutRateChanging(value)
				Me.SendPropertyChanging
				Me._OROutRate = value
				Me.SendPropertyChanged("OROutRate")
				Me.OnOROutRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutAmount", DbType:="Float NOT NULL")>  _
	Public Property OROutAmount() As Double
		Get
			Return Me._OROutAmount
		End Get
		Set
			If ((Me._OROutAmount = value)  _
						= false) Then
				Me.OnOROutAmountChanging(value)
				Me.SendPropertyChanging
				Me._OROutAmount = value
				Me.SendPropertyChanged("OROutAmount")
				Me.OnOROutAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeIn1() As Double
		Get
			Return Me._AdminFeeIn1
		End Get
		Set
			If ((Me._AdminFeeIn1 = value)  _
						= false) Then
				Me.OnAdminFeeIn1Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1 = value
				Me.SendPropertyChanged("AdminFeeIn1")
				Me.OnAdminFeeIn1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeIn2() As Double
		Get
			Return Me._AdminFeeIn2
		End Get
		Set
			If ((Me._AdminFeeIn2 = value)  _
						= false) Then
				Me.OnAdminFeeIn2Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2 = value
				Me.SendPropertyChanged("AdminFeeIn2")
				Me.OnAdminFeeIn2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeOut1", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeOut1() As Double
		Get
			Return Me._AdminFeeOut1
		End Get
		Set
			If ((Me._AdminFeeOut1 = value)  _
						= false) Then
				Me.OnAdminFeeOut1Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeOut1 = value
				Me.SendPropertyChanged("AdminFeeOut1")
				Me.OnAdminFeeOut1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeOut2", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeOut2() As Double
		Get
			Return Me._AdminFeeOut2
		End Get
		Set
			If ((Me._AdminFeeOut2 = value)  _
						= false) Then
				Me.OnAdminFeeOut2Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeOut2 = value
				Me.SendPropertyChanged("AdminFeeOut2")
				Me.OnAdminFeeOut2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountBrok", DbType:="Float NOT NULL")>  _
	Public Property DiscountBrok() As Double
		Get
			Return Me._DiscountBrok
		End Get
		Set
			If ((Me._DiscountBrok = value)  _
						= false) Then
				Me.OnDiscountBrokChanging(value)
				Me.SendPropertyChanging
				Me._DiscountBrok = value
				Me.SendPropertyChanged("DiscountBrok")
				Me.OnDiscountBrokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountBrokAmt", DbType:="Float NOT NULL")>  _
	Public Property DiscountBrokAmt() As Double
		Get
			Return Me._DiscountBrokAmt
		End Get
		Set
			If ((Me._DiscountBrokAmt = value)  _
						= false) Then
				Me.OnDiscountBrokAmtChanging(value)
				Me.SendPropertyChanging
				Me._DiscountBrokAmt = value
				Me.SendPropertyChanged("DiscountBrokAmt")
				Me.OnDiscountBrokAmtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountORIn", DbType:="Float NOT NULL")>  _
	Public Property DiscountORIn() As Double
		Get
			Return Me._DiscountORIn
		End Get
		Set
			If ((Me._DiscountORIn = value)  _
						= false) Then
				Me.OnDiscountORInChanging(value)
				Me.SendPropertyChanging
				Me._DiscountORIn = value
				Me.SendPropertyChanged("DiscountORIn")
				Me.OnDiscountORInChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountORInAmt", DbType:="Float NOT NULL")>  _
	Public Property DiscountORInAmt() As Double
		Get
			Return Me._DiscountORInAmt
		End Get
		Set
			If ((Me._DiscountORInAmt = value)  _
						= false) Then
				Me.OnDiscountORInAmtChanging(value)
				Me.SendPropertyChanging
				Me._DiscountORInAmt = value
				Me.SendPropertyChanged("DiscountORInAmt")
				Me.OnDiscountORInAmtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountAdmin1", DbType:="Float NOT NULL")>  _
	Public Property DiscountAdmin1() As Double
		Get
			Return Me._DiscountAdmin1
		End Get
		Set
			If ((Me._DiscountAdmin1 = value)  _
						= false) Then
				Me.OnDiscountAdmin1Changing(value)
				Me.SendPropertyChanging
				Me._DiscountAdmin1 = value
				Me.SendPropertyChanged("DiscountAdmin1")
				Me.OnDiscountAdmin1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountAdmin2", DbType:="Float NOT NULL")>  _
	Public Property DiscountAdmin2() As Double
		Get
			Return Me._DiscountAdmin2
		End Get
		Set
			If ((Me._DiscountAdmin2 = value)  _
						= false) Then
				Me.OnDiscountAdmin2Changing(value)
				Me.SendPropertyChanging
				Me._DiscountAdmin2 = value
				Me.SendPropertyChanged("DiscountAdmin2")
				Me.OnDiscountAdmin2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BriefII", DbType:="Char(80) NOT NULL", CanBeNull:=false)>  _
	Public Property BriefII() As String
		Get
			Return Me._BriefII
		End Get
		Set
			If (String.Equals(Me._BriefII, value) = false) Then
				Me.OnBriefIIChanging(value)
				Me.SendPropertyChanging
				Me._BriefII = value
				Me.SendPropertyChanged("BriefII")
				Me.OnBriefIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BriefIII", DbType:="Char(80) NOT NULL", CanBeNull:=false)>  _
	Public Property BriefIII() As String
		Get
			Return Me._BriefIII
		End Get
		Set
			If (String.Equals(Me._BriefIII, value) = false) Then
				Me.OnBriefIIIChanging(value)
				Me.SendPropertyChanging
				Me._BriefIII = value
				Me.SendPropertyChanged("BriefIII")
				Me.OnBriefIIIChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Underwriter")>  _
Partial Public Class Underwriter
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Underwriter As String
	
	Private _CrossReference As String
	
	Private _Name As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _PostCode As String
	
	Private _City As String
	
	Private _PhoneBusiness As String
	
	Private _PhoneHome As String
	
	Private _Facsimile As String
	
	Private _AccountContact As String
	
	Private _Addressee As String
	
	Private _Salutation As String
	
	Private _DaysCredit As Short
	
	Private _TrueUnderwriter As Boolean
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
	Private _FinanceContact As String
	
	Private _GeneralClaimContact As String
	
	Private _Type As Char
	
	Private _InsuranceLine As Char
	
	Private _VATPayType As Char
	
	Private _PhoneFinance As String
	
	Private _PhoneClaims As String
	
	Private _FaxFinance As String
	
	Private _FaxClaims As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUnderwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUnderwriterChanged()
    End Sub
    Partial Private Sub OnCrossReferenceChanging(value As String)
    End Sub
    Partial Private Sub OnCrossReferenceChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnAddress3Changed()
    End Sub
    Partial Private Sub OnPostCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostCodeChanged()
    End Sub
    Partial Private Sub OnCityChanging(value As String)
    End Sub
    Partial Private Sub OnCityChanged()
    End Sub
    Partial Private Sub OnPhoneBusinessChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneBusinessChanged()
    End Sub
    Partial Private Sub OnPhoneHomeChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneHomeChanged()
    End Sub
    Partial Private Sub OnFacsimileChanging(value As String)
    End Sub
    Partial Private Sub OnFacsimileChanged()
    End Sub
    Partial Private Sub OnAccountContactChanging(value As String)
    End Sub
    Partial Private Sub OnAccountContactChanged()
    End Sub
    Partial Private Sub OnAddresseeChanging(value As String)
    End Sub
    Partial Private Sub OnAddresseeChanged()
    End Sub
    Partial Private Sub OnSalutationChanging(value As String)
    End Sub
    Partial Private Sub OnSalutationChanged()
    End Sub
    Partial Private Sub OnDaysCreditChanging(value As Short)
    End Sub
    Partial Private Sub OnDaysCreditChanged()
    End Sub
    Partial Private Sub OnTrueUnderwriterChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTrueUnderwriterChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnFinanceContactChanging(value As String)
    End Sub
    Partial Private Sub OnFinanceContactChanged()
    End Sub
    Partial Private Sub OnGeneralClaimContactChanging(value As String)
    End Sub
    Partial Private Sub OnGeneralClaimContactChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As Char)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnInsuranceLineChanging(value As Char)
    End Sub
    Partial Private Sub OnInsuranceLineChanged()
    End Sub
    Partial Private Sub OnVATPayTypeChanging(value As Char)
    End Sub
    Partial Private Sub OnVATPayTypeChanged()
    End Sub
    Partial Private Sub OnPhoneFinanceChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneFinanceChanged()
    End Sub
    Partial Private Sub OnPhoneClaimsChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneClaimsChanged()
    End Sub
    Partial Private Sub OnFaxFinanceChanging(value As String)
    End Sub
    Partial Private Sub OnFaxFinanceChanged()
    End Sub
    Partial Private Sub OnFaxClaimsChanging(value As String)
    End Sub
    Partial Private Sub OnFaxClaimsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Underwriter", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Underwriter() As String
		Get
			Return Me._Underwriter
		End Get
		Set
			If (String.Equals(Me._Underwriter, value) = false) Then
				Me.OnUnderwriterChanging(value)
				Me.SendPropertyChanging
				Me._Underwriter = value
				Me.SendPropertyChanged("Underwriter")
				Me.OnUnderwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CrossReference", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property CrossReference() As String
		Get
			Return Me._CrossReference
		End Get
		Set
			If (String.Equals(Me._CrossReference, value) = false) Then
				Me.OnCrossReferenceChanging(value)
				Me.SendPropertyChanging
				Me._CrossReference = value
				Me.SendPropertyChanged("CrossReference")
				Me.OnCrossReferenceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="Char(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me.OnAddress3Changing(value)
				Me.SendPropertyChanging
				Me._Address3 = value
				Me.SendPropertyChanged("Address3")
				Me.OnAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostCode", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property PostCode() As String
		Get
			Return Me._PostCode
		End Get
		Set
			If (String.Equals(Me._PostCode, value) = false) Then
				Me.OnPostCodeChanging(value)
				Me.SendPropertyChanging
				Me._PostCode = value
				Me.SendPropertyChanged("PostCode")
				Me.OnPostCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me.OnCityChanging(value)
				Me.SendPropertyChanging
				Me._City = value
				Me.SendPropertyChanged("City")
				Me.OnCityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneBusiness", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneBusiness() As String
		Get
			Return Me._PhoneBusiness
		End Get
		Set
			If (String.Equals(Me._PhoneBusiness, value) = false) Then
				Me.OnPhoneBusinessChanging(value)
				Me.SendPropertyChanging
				Me._PhoneBusiness = value
				Me.SendPropertyChanged("PhoneBusiness")
				Me.OnPhoneBusinessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me.OnPhoneHomeChanging(value)
				Me.SendPropertyChanging
				Me._PhoneHome = value
				Me.SendPropertyChanged("PhoneHome")
				Me.OnPhoneHomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facsimile", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Facsimile() As String
		Get
			Return Me._Facsimile
		End Get
		Set
			If (String.Equals(Me._Facsimile, value) = false) Then
				Me.OnFacsimileChanging(value)
				Me.SendPropertyChanging
				Me._Facsimile = value
				Me.SendPropertyChanged("Facsimile")
				Me.OnFacsimileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountContact", DbType:="Char(70) NOT NULL", CanBeNull:=false)>  _
	Public Property AccountContact() As String
		Get
			Return Me._AccountContact
		End Get
		Set
			If (String.Equals(Me._AccountContact, value) = false) Then
				Me.OnAccountContactChanging(value)
				Me.SendPropertyChanging
				Me._AccountContact = value
				Me.SendPropertyChanged("AccountContact")
				Me.OnAccountContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Addressee", DbType:="Char(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Addressee() As String
		Get
			Return Me._Addressee
		End Get
		Set
			If (String.Equals(Me._Addressee, value) = false) Then
				Me.OnAddresseeChanging(value)
				Me.SendPropertyChanging
				Me._Addressee = value
				Me.SendPropertyChanged("Addressee")
				Me.OnAddresseeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salutation", DbType:="Char(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Salutation() As String
		Get
			Return Me._Salutation
		End Get
		Set
			If (String.Equals(Me._Salutation, value) = false) Then
				Me.OnSalutationChanging(value)
				Me.SendPropertyChanging
				Me._Salutation = value
				Me.SendPropertyChanged("Salutation")
				Me.OnSalutationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DaysCredit", DbType:="SmallInt NOT NULL")>  _
	Public Property DaysCredit() As Short
		Get
			Return Me._DaysCredit
		End Get
		Set
			If ((Me._DaysCredit = value)  _
						= false) Then
				Me.OnDaysCreditChanging(value)
				Me.SendPropertyChanging
				Me._DaysCredit = value
				Me.SendPropertyChanged("DaysCredit")
				Me.OnDaysCreditChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrueUnderwriter", DbType:="Bit NOT NULL")>  _
	Public Property TrueUnderwriter() As Boolean
		Get
			Return Me._TrueUnderwriter
		End Get
		Set
			If ((Me._TrueUnderwriter = value)  _
						= false) Then
				Me.OnTrueUnderwriterChanging(value)
				Me.SendPropertyChanging
				Me._TrueUnderwriter = value
				Me.SendPropertyChanged("TrueUnderwriter")
				Me.OnTrueUnderwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinanceContact", DbType:="Char(70) NOT NULL", CanBeNull:=false)>  _
	Public Property FinanceContact() As String
		Get
			Return Me._FinanceContact
		End Get
		Set
			If (String.Equals(Me._FinanceContact, value) = false) Then
				Me.OnFinanceContactChanging(value)
				Me.SendPropertyChanging
				Me._FinanceContact = value
				Me.SendPropertyChanged("FinanceContact")
				Me.OnFinanceContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GeneralClaimContact", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property GeneralClaimContact() As String
		Get
			Return Me._GeneralClaimContact
		End Get
		Set
			If (String.Equals(Me._GeneralClaimContact, value) = false) Then
				Me.OnGeneralClaimContactChanging(value)
				Me.SendPropertyChanging
				Me._GeneralClaimContact = value
				Me.SendPropertyChanged("GeneralClaimContact")
				Me.OnGeneralClaimContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="Char(1) NOT NULL")>  _
	Public Property Type() As Char
		Get
			Return Me._Type
		End Get
		Set
			If ((Me._Type = value)  _
						= false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceLine", DbType:="Char(1) NOT NULL")>  _
	Public Property InsuranceLine() As Char
		Get
			Return Me._InsuranceLine
		End Get
		Set
			If ((Me._InsuranceLine = value)  _
						= false) Then
				Me.OnInsuranceLineChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceLine = value
				Me.SendPropertyChanged("InsuranceLine")
				Me.OnInsuranceLineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATPayType", DbType:="Char(1) NOT NULL")>  _
	Public Property VATPayType() As Char
		Get
			Return Me._VATPayType
		End Get
		Set
			If ((Me._VATPayType = value)  _
						= false) Then
				Me.OnVATPayTypeChanging(value)
				Me.SendPropertyChanging
				Me._VATPayType = value
				Me.SendPropertyChanged("VATPayType")
				Me.OnVATPayTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneFinance", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneFinance() As String
		Get
			Return Me._PhoneFinance
		End Get
		Set
			If (String.Equals(Me._PhoneFinance, value) = false) Then
				Me.OnPhoneFinanceChanging(value)
				Me.SendPropertyChanging
				Me._PhoneFinance = value
				Me.SendPropertyChanged("PhoneFinance")
				Me.OnPhoneFinanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneClaims", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneClaims() As String
		Get
			Return Me._PhoneClaims
		End Get
		Set
			If (String.Equals(Me._PhoneClaims, value) = false) Then
				Me.OnPhoneClaimsChanging(value)
				Me.SendPropertyChanging
				Me._PhoneClaims = value
				Me.SendPropertyChanged("PhoneClaims")
				Me.OnPhoneClaimsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxFinance", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property FaxFinance() As String
		Get
			Return Me._FaxFinance
		End Get
		Set
			If (String.Equals(Me._FaxFinance, value) = false) Then
				Me.OnFaxFinanceChanging(value)
				Me.SendPropertyChanging
				Me._FaxFinance = value
				Me.SendPropertyChanged("FaxFinance")
				Me.OnFaxFinanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxClaims", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property FaxClaims() As String
		Get
			Return Me._FaxClaims
		End Get
		Set
			If (String.Equals(Me._FaxClaims, value) = false) Then
				Me.OnFaxClaimsChanging(value)
				Me.SendPropertyChanging
				Me._FaxClaims = value
				Me.SendPropertyChanged("FaxClaims")
				Me.OnFaxClaimsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AccountExecutive")>  _
Partial Public Class AccountExecutive
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AccountExecutive As String
	
	Private _Name As String
	
	Private _Address1 As String
	
	Private _Address2 As String
	
	Private _Address3 As String
	
	Private _PostCode As String
	
	Private _City As String
	
	Private _PhoneBusiness As String
	
	Private _PhoneHome As String
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
	Private _Unit As String
	
	Private _Title As String
	
	Private _Internet_Address As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAccountExecutiveChanging(value As String)
    End Sub
    Partial Private Sub OnAccountExecutiveChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnAddress3Changed()
    End Sub
    Partial Private Sub OnPostCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostCodeChanged()
    End Sub
    Partial Private Sub OnCityChanging(value As String)
    End Sub
    Partial Private Sub OnCityChanged()
    End Sub
    Partial Private Sub OnPhoneBusinessChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneBusinessChanged()
    End Sub
    Partial Private Sub OnPhoneHomeChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneHomeChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnUnitChanging(value As String)
    End Sub
    Partial Private Sub OnUnitChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnInternet_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnInternet_AddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountExecutive", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property AccountExecutive() As String
		Get
			Return Me._AccountExecutive
		End Get
		Set
			If (String.Equals(Me._AccountExecutive, value) = false) Then
				Me.OnAccountExecutiveChanging(value)
				Me.SendPropertyChanging
				Me._AccountExecutive = value
				Me.SendPropertyChanged("AccountExecutive")
				Me.OnAccountExecutiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="Char(40) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address1() As String
		Get
			Return Me._Address1
		End Get
		Set
			If (String.Equals(Me._Address1, value) = false) Then
				Me.OnAddress1Changing(value)
				Me.SendPropertyChanging
				Me._Address1 = value
				Me.SendPropertyChanged("Address1")
				Me.OnAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address2() As String
		Get
			Return Me._Address2
		End Get
		Set
			If (String.Equals(Me._Address2, value) = false) Then
				Me.OnAddress2Changing(value)
				Me.SendPropertyChanging
				Me._Address2 = value
				Me.SendPropertyChanged("Address2")
				Me.OnAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address3", DbType:="Char(35) NOT NULL", CanBeNull:=false)>  _
	Public Property Address3() As String
		Get
			Return Me._Address3
		End Get
		Set
			If (String.Equals(Me._Address3, value) = false) Then
				Me.OnAddress3Changing(value)
				Me.SendPropertyChanging
				Me._Address3 = value
				Me.SendPropertyChanged("Address3")
				Me.OnAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostCode", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property PostCode() As String
		Get
			Return Me._PostCode
		End Get
		Set
			If (String.Equals(Me._PostCode, value) = false) Then
				Me.OnPostCodeChanging(value)
				Me.SendPropertyChanging
				Me._PostCode = value
				Me.SendPropertyChanged("PostCode")
				Me.OnPostCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me.OnCityChanging(value)
				Me.SendPropertyChanging
				Me._City = value
				Me.SendPropertyChanged("City")
				Me.OnCityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneBusiness", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneBusiness() As String
		Get
			Return Me._PhoneBusiness
		End Get
		Set
			If (String.Equals(Me._PhoneBusiness, value) = false) Then
				Me.OnPhoneBusinessChanging(value)
				Me.SendPropertyChanging
				Me._PhoneBusiness = value
				Me.SendPropertyChanged("PhoneBusiness")
				Me.OnPhoneBusinessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="Char(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me.OnPhoneHomeChanging(value)
				Me.SendPropertyChanging
				Me._PhoneHome = value
				Me.SendPropertyChanged("PhoneHome")
				Me.OnPhoneHomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unit", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Unit() As String
		Get
			Return Me._Unit
		End Get
		Set
			If (String.Equals(Me._Unit, value) = false) Then
				Me.OnUnitChanging(value)
				Me.SendPropertyChanging
				Me._Unit = value
				Me.SendPropertyChanged("Unit")
				Me.OnUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="Char(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Internet_Address", DbType:="Char(40) NOT NULL", CanBeNull:=false)>  _
	Public Property Internet_Address() As String
		Get
			Return Me._Internet_Address
		End Get
		Set
			If (String.Equals(Me._Internet_Address, value) = false) Then
				Me.OnInternet_AddressChanging(value)
				Me.SendPropertyChanging
				Me._Internet_Address = value
				Me.SendPropertyChanged("Internet_Address")
				Me.OnInternet_AddressChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ClassOfRisk")>  _
Partial Public Class ClassOfRisk
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Risk As String
	
	Private _Description As String
	
	Private _RiskGroupI As String
	
	Private _RiskGroupII As String
	
	Private _RiskShortDesc As String
	
	Private _RiskGovernment As String
	
	Private _Department As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnRiskGroupIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIChanged()
    End Sub
    Partial Private Sub OnRiskGroupIIChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGroupIIChanged()
    End Sub
    Partial Private Sub OnRiskShortDescChanging(value As String)
    End Sub
    Partial Private Sub OnRiskShortDescChanged()
    End Sub
    Partial Private Sub OnRiskGovernmentChanging(value As String)
    End Sub
    Partial Private Sub OnRiskGovernmentChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="Char(40) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupI", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property RiskGroupI() As String
		Get
			Return Me._RiskGroupI
		End Get
		Set
			If (String.Equals(Me._RiskGroupI, value) = false) Then
				Me.OnRiskGroupIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupI = value
				Me.SendPropertyChanged("RiskGroupI")
				Me.OnRiskGroupIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGroupII", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property RiskGroupII() As String
		Get
			Return Me._RiskGroupII
		End Get
		Set
			If (String.Equals(Me._RiskGroupII, value) = false) Then
				Me.OnRiskGroupIIChanging(value)
				Me.SendPropertyChanging
				Me._RiskGroupII = value
				Me.SendPropertyChanged("RiskGroupII")
				Me.OnRiskGroupIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskShortDesc", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
	Public Property RiskShortDesc() As String
		Get
			Return Me._RiskShortDesc
		End Get
		Set
			If (String.Equals(Me._RiskShortDesc, value) = false) Then
				Me.OnRiskShortDescChanging(value)
				Me.SendPropertyChanging
				Me._RiskShortDesc = value
				Me.SendPropertyChanged("RiskShortDesc")
				Me.OnRiskShortDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RiskGovernment", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property RiskGovernment() As String
		Get
			Return Me._RiskGovernment
		End Get
		Set
			If (String.Equals(Me._RiskGovernment, value) = false) Then
				Me.OnRiskGovernmentChanging(value)
				Me.SendPropertyChanging
				Me._RiskGovernment = value
				Me.SendPropertyChanged("RiskGovernment")
				Me.OnRiskGovernmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="Char(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AgentRiskComm")>  _
Partial Public Class AgentRiskComm
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Agent As String
	
	Private _Risk As String
	
	Private _CommissionOut As Double
	
	Private _OROut As Double
	
	Private _OROutCalFrom As Char
	
	Private _AdminOut1 As Double
	
	Private _AdminOut1Cal As Char
	
	Private _AdminOut2 As Double
	
	Private _AdminOut2Cal As Char
	
	Private _EntryBy As String
	
	Private _EntryDate As Date
	
	Private _CommOutCal As Char
	
	Private _OROutCal As Char
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAgentChanging(value As String)
    End Sub
    Partial Private Sub OnAgentChanged()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnCommissionOutChanging(value As Double)
    End Sub
    Partial Private Sub OnCommissionOutChanged()
    End Sub
    Partial Private Sub OnOROutChanging(value As Double)
    End Sub
    Partial Private Sub OnOROutChanged()
    End Sub
    Partial Private Sub OnOROutCalFromChanging(value As Char)
    End Sub
    Partial Private Sub OnOROutCalFromChanged()
    End Sub
    Partial Private Sub OnAdminOut1Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminOut1Changed()
    End Sub
    Partial Private Sub OnAdminOut1CalChanging(value As Char)
    End Sub
    Partial Private Sub OnAdminOut1CalChanged()
    End Sub
    Partial Private Sub OnAdminOut2Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminOut2Changed()
    End Sub
    Partial Private Sub OnAdminOut2CalChanging(value As Char)
    End Sub
    Partial Private Sub OnAdminOut2CalChanged()
    End Sub
    Partial Private Sub OnEntryByChanging(value As String)
    End Sub
    Partial Private Sub OnEntryByChanged()
    End Sub
    Partial Private Sub OnEntryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEntryDateChanged()
    End Sub
    Partial Private Sub OnCommOutCalChanging(value As Char)
    End Sub
    Partial Private Sub OnCommOutCalChanged()
    End Sub
    Partial Private Sub OnOROutCalChanging(value As Char)
    End Sub
    Partial Private Sub OnOROutCalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Agent", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Agent() As String
		Get
			Return Me._Agent
		End Get
		Set
			If (String.Equals(Me._Agent, value) = false) Then
				Me.OnAgentChanging(value)
				Me.SendPropertyChanging
				Me._Agent = value
				Me.SendPropertyChanged("Agent")
				Me.OnAgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommissionOut", DbType:="Float NOT NULL")>  _
	Public Property CommissionOut() As Double
		Get
			Return Me._CommissionOut
		End Get
		Set
			If ((Me._CommissionOut = value)  _
						= false) Then
				Me.OnCommissionOutChanging(value)
				Me.SendPropertyChanging
				Me._CommissionOut = value
				Me.SendPropertyChanged("CommissionOut")
				Me.OnCommissionOutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROut", DbType:="Float NOT NULL")>  _
	Public Property OROut() As Double
		Get
			Return Me._OROut
		End Get
		Set
			If ((Me._OROut = value)  _
						= false) Then
				Me.OnOROutChanging(value)
				Me.SendPropertyChanging
				Me._OROut = value
				Me.SendPropertyChanged("OROut")
				Me.OnOROutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCalFrom", DbType:="Char(1) NOT NULL")>  _
	Public Property OROutCalFrom() As Char
		Get
			Return Me._OROutCalFrom
		End Get
		Set
			If ((Me._OROutCalFrom = value)  _
						= false) Then
				Me.OnOROutCalFromChanging(value)
				Me.SendPropertyChanging
				Me._OROutCalFrom = value
				Me.SendPropertyChanged("OROutCalFrom")
				Me.OnOROutCalFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1", DbType:="Float NOT NULL")>  _
	Public Property AdminOut1() As Double
		Get
			Return Me._AdminOut1
		End Get
		Set
			If ((Me._AdminOut1 = value)  _
						= false) Then
				Me.OnAdminOut1Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut1 = value
				Me.SendPropertyChanged("AdminOut1")
				Me.OnAdminOut1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut1Cal", DbType:="Char(1) NOT NULL")>  _
	Public Property AdminOut1Cal() As Char
		Get
			Return Me._AdminOut1Cal
		End Get
		Set
			If ((Me._AdminOut1Cal = value)  _
						= false) Then
				Me.OnAdminOut1CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminOut1Cal = value
				Me.SendPropertyChanged("AdminOut1Cal")
				Me.OnAdminOut1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2", DbType:="Float NOT NULL")>  _
	Public Property AdminOut2() As Double
		Get
			Return Me._AdminOut2
		End Get
		Set
			If ((Me._AdminOut2 = value)  _
						= false) Then
				Me.OnAdminOut2Changing(value)
				Me.SendPropertyChanging
				Me._AdminOut2 = value
				Me.SendPropertyChanged("AdminOut2")
				Me.OnAdminOut2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminOut2Cal", DbType:="Char(1) NOT NULL")>  _
	Public Property AdminOut2Cal() As Char
		Get
			Return Me._AdminOut2Cal
		End Get
		Set
			If ((Me._AdminOut2Cal = value)  _
						= false) Then
				Me.OnAdminOut2CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminOut2Cal = value
				Me.SendPropertyChanged("AdminOut2Cal")
				Me.OnAdminOut2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryBy", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EntryBy() As String
		Get
			Return Me._EntryBy
		End Get
		Set
			If (String.Equals(Me._EntryBy, value) = false) Then
				Me.OnEntryByChanging(value)
				Me.SendPropertyChanging
				Me._EntryBy = value
				Me.SendPropertyChanged("EntryBy")
				Me.OnEntryByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EntryDate", DbType:="DateTime NOT NULL")>  _
	Public Property EntryDate() As Date
		Get
			Return Me._EntryDate
		End Get
		Set
			If ((Me._EntryDate = value)  _
						= false) Then
				Me.OnEntryDateChanging(value)
				Me.SendPropertyChanging
				Me._EntryDate = value
				Me.SendPropertyChanged("EntryDate")
				Me.OnEntryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommOutCal", DbType:="Char(1) NOT NULL")>  _
	Public Property CommOutCal() As Char
		Get
			Return Me._CommOutCal
		End Get
		Set
			If ((Me._CommOutCal = value)  _
						= false) Then
				Me.OnCommOutCalChanging(value)
				Me.SendPropertyChanging
				Me._CommOutCal = value
				Me.SendPropertyChanged("CommOutCal")
				Me.OnCommOutCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutCal", DbType:="Char(1) NOT NULL")>  _
	Public Property OROutCal() As Char
		Get
			Return Me._OROutCal
		End Get
		Set
			If ((Me._OROutCal = value)  _
						= false) Then
				Me.OnOROutCalChanging(value)
				Me.SendPropertyChanging
				Me._OROutCal = value
				Me.SendPropertyChanged("OROutCal")
				Me.OnOROutCalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RiskUwriter")>  _
Partial Public Class RiskUwriter
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Risk As String
	
	Private _Uwriter As String
	
	Private _Description As String
	
	Private _Brokerage As Single
	
	Private _AgentCommission As Single
	
	Private _PremiumWarantydays As Short
	
	Private _NewRenewaldays As Short
	
	Private _NewNewBusdays As Short
	
	Private _RenRenewaldays As Short
	
	Private _RenNewBusdays As Short
	
	Private _AutoCalculation As Boolean
	
	Private _ORCommissionPercent As Double
	
	Private _OROutRate As Double
	
	Private _AdminFeeIn1 As Double
	
	Private _AdminFeeIn1Cal As Char
	
	Private _AdminFeeIn2 As Double
	
	Private _AdminFeeIn2Cal As Char
	
	Private _ORCalFrom As Char
	
	Private _OffsetORFlag As Boolean
	
	Private _OffsetAdm1Flag As Boolean
	
	Private _OffsetAdm2Flag As Boolean
	
	Private _BrokerageCal As Char
	
	Private _ORInCal As Char
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRiskChanging(value As String)
    End Sub
    Partial Private Sub OnRiskChanged()
    End Sub
    Partial Private Sub OnUwriterChanging(value As String)
    End Sub
    Partial Private Sub OnUwriterChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnBrokerageChanging(value As Single)
    End Sub
    Partial Private Sub OnBrokerageChanged()
    End Sub
    Partial Private Sub OnAgentCommissionChanging(value As Single)
    End Sub
    Partial Private Sub OnAgentCommissionChanged()
    End Sub
    Partial Private Sub OnPremiumWarantydaysChanging(value As Short)
    End Sub
    Partial Private Sub OnPremiumWarantydaysChanged()
    End Sub
    Partial Private Sub OnNewRenewaldaysChanging(value As Short)
    End Sub
    Partial Private Sub OnNewRenewaldaysChanged()
    End Sub
    Partial Private Sub OnNewNewBusdaysChanging(value As Short)
    End Sub
    Partial Private Sub OnNewNewBusdaysChanged()
    End Sub
    Partial Private Sub OnRenRenewaldaysChanging(value As Short)
    End Sub
    Partial Private Sub OnRenRenewaldaysChanged()
    End Sub
    Partial Private Sub OnRenNewBusdaysChanging(value As Short)
    End Sub
    Partial Private Sub OnRenNewBusdaysChanged()
    End Sub
    Partial Private Sub OnAutoCalculationChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAutoCalculationChanged()
    End Sub
    Partial Private Sub OnORCommissionPercentChanging(value As Double)
    End Sub
    Partial Private Sub OnORCommissionPercentChanged()
    End Sub
    Partial Private Sub OnOROutRateChanging(value As Double)
    End Sub
    Partial Private Sub OnOROutRateChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn1Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminFeeIn1Changed()
    End Sub
    Partial Private Sub OnAdminFeeIn1CalChanging(value As Char)
    End Sub
    Partial Private Sub OnAdminFeeIn1CalChanged()
    End Sub
    Partial Private Sub OnAdminFeeIn2Changing(value As Double)
    End Sub
    Partial Private Sub OnAdminFeeIn2Changed()
    End Sub
    Partial Private Sub OnAdminFeeIn2CalChanging(value As Char)
    End Sub
    Partial Private Sub OnAdminFeeIn2CalChanged()
    End Sub
    Partial Private Sub OnORCalFromChanging(value As Char)
    End Sub
    Partial Private Sub OnORCalFromChanged()
    End Sub
    Partial Private Sub OnOffsetORFlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOffsetORFlagChanged()
    End Sub
    Partial Private Sub OnOffsetAdm1FlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOffsetAdm1FlagChanged()
    End Sub
    Partial Private Sub OnOffsetAdm2FlagChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOffsetAdm2FlagChanged()
    End Sub
    Partial Private Sub OnBrokerageCalChanging(value As Char)
    End Sub
    Partial Private Sub OnBrokerageCalChanged()
    End Sub
    Partial Private Sub OnORInCalChanging(value As Char)
    End Sub
    Partial Private Sub OnORInCalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Risk", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Risk() As String
		Get
			Return Me._Risk
		End Get
		Set
			If (String.Equals(Me._Risk, value) = false) Then
				Me.OnRiskChanging(value)
				Me.SendPropertyChanging
				Me._Risk = value
				Me.SendPropertyChanged("Risk")
				Me.OnRiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Uwriter", DbType:="Char(8) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Uwriter() As String
		Get
			Return Me._Uwriter
		End Get
		Set
			If (String.Equals(Me._Uwriter, value) = false) Then
				Me.OnUwriterChanging(value)
				Me.SendPropertyChanging
				Me._Uwriter = value
				Me.SendPropertyChanged("Uwriter")
				Me.OnUwriterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="Char(40) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brokerage", DbType:="Real NOT NULL")>  _
	Public Property Brokerage() As Single
		Get
			Return Me._Brokerage
		End Get
		Set
			If ((Me._Brokerage = value)  _
						= false) Then
				Me.OnBrokerageChanging(value)
				Me.SendPropertyChanging
				Me._Brokerage = value
				Me.SendPropertyChanged("Brokerage")
				Me.OnBrokerageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCommission", DbType:="Real NOT NULL")>  _
	Public Property AgentCommission() As Single
		Get
			Return Me._AgentCommission
		End Get
		Set
			If ((Me._AgentCommission = value)  _
						= false) Then
				Me.OnAgentCommissionChanging(value)
				Me.SendPropertyChanging
				Me._AgentCommission = value
				Me.SendPropertyChanged("AgentCommission")
				Me.OnAgentCommissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PremiumWarantydays", DbType:="SmallInt NOT NULL")>  _
	Public Property PremiumWarantydays() As Short
		Get
			Return Me._PremiumWarantydays
		End Get
		Set
			If ((Me._PremiumWarantydays = value)  _
						= false) Then
				Me.OnPremiumWarantydaysChanging(value)
				Me.SendPropertyChanging
				Me._PremiumWarantydays = value
				Me.SendPropertyChanged("PremiumWarantydays")
				Me.OnPremiumWarantydaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewRenewaldays", DbType:="SmallInt NOT NULL")>  _
	Public Property NewRenewaldays() As Short
		Get
			Return Me._NewRenewaldays
		End Get
		Set
			If ((Me._NewRenewaldays = value)  _
						= false) Then
				Me.OnNewRenewaldaysChanging(value)
				Me.SendPropertyChanging
				Me._NewRenewaldays = value
				Me.SendPropertyChanged("NewRenewaldays")
				Me.OnNewRenewaldaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewNewBusdays", DbType:="SmallInt NOT NULL")>  _
	Public Property NewNewBusdays() As Short
		Get
			Return Me._NewNewBusdays
		End Get
		Set
			If ((Me._NewNewBusdays = value)  _
						= false) Then
				Me.OnNewNewBusdaysChanging(value)
				Me.SendPropertyChanging
				Me._NewNewBusdays = value
				Me.SendPropertyChanged("NewNewBusdays")
				Me.OnNewNewBusdaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenRenewaldays", DbType:="SmallInt NOT NULL")>  _
	Public Property RenRenewaldays() As Short
		Get
			Return Me._RenRenewaldays
		End Get
		Set
			If ((Me._RenRenewaldays = value)  _
						= false) Then
				Me.OnRenRenewaldaysChanging(value)
				Me.SendPropertyChanging
				Me._RenRenewaldays = value
				Me.SendPropertyChanged("RenRenewaldays")
				Me.OnRenRenewaldaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RenNewBusdays", DbType:="SmallInt NOT NULL")>  _
	Public Property RenNewBusdays() As Short
		Get
			Return Me._RenNewBusdays
		End Get
		Set
			If ((Me._RenNewBusdays = value)  _
						= false) Then
				Me.OnRenNewBusdaysChanging(value)
				Me.SendPropertyChanging
				Me._RenNewBusdays = value
				Me.SendPropertyChanged("RenNewBusdays")
				Me.OnRenNewBusdaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AutoCalculation", DbType:="Bit NOT NULL")>  _
	Public Property AutoCalculation() As Boolean
		Get
			Return Me._AutoCalculation
		End Get
		Set
			If ((Me._AutoCalculation = value)  _
						= false) Then
				Me.OnAutoCalculationChanging(value)
				Me.SendPropertyChanging
				Me._AutoCalculation = value
				Me.SendPropertyChanged("AutoCalculation")
				Me.OnAutoCalculationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCommissionPercent", DbType:="Float NOT NULL")>  _
	Public Property ORCommissionPercent() As Double
		Get
			Return Me._ORCommissionPercent
		End Get
		Set
			If ((Me._ORCommissionPercent = value)  _
						= false) Then
				Me.OnORCommissionPercentChanging(value)
				Me.SendPropertyChanging
				Me._ORCommissionPercent = value
				Me.SendPropertyChanged("ORCommissionPercent")
				Me.OnORCommissionPercentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OROutRate", DbType:="Float NOT NULL")>  _
	Public Property OROutRate() As Double
		Get
			Return Me._OROutRate
		End Get
		Set
			If ((Me._OROutRate = value)  _
						= false) Then
				Me.OnOROutRateChanging(value)
				Me.SendPropertyChanging
				Me._OROutRate = value
				Me.SendPropertyChanged("OROutRate")
				Me.OnOROutRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeIn1() As Double
		Get
			Return Me._AdminFeeIn1
		End Get
		Set
			If ((Me._AdminFeeIn1 = value)  _
						= false) Then
				Me.OnAdminFeeIn1Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1 = value
				Me.SendPropertyChanged("AdminFeeIn1")
				Me.OnAdminFeeIn1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn1Cal", DbType:="Char(1) NOT NULL")>  _
	Public Property AdminFeeIn1Cal() As Char
		Get
			Return Me._AdminFeeIn1Cal
		End Get
		Set
			If ((Me._AdminFeeIn1Cal = value)  _
						= false) Then
				Me.OnAdminFeeIn1CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn1Cal = value
				Me.SendPropertyChanged("AdminFeeIn1Cal")
				Me.OnAdminFeeIn1CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2", DbType:="Float NOT NULL")>  _
	Public Property AdminFeeIn2() As Double
		Get
			Return Me._AdminFeeIn2
		End Get
		Set
			If ((Me._AdminFeeIn2 = value)  _
						= false) Then
				Me.OnAdminFeeIn2Changing(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2 = value
				Me.SendPropertyChanged("AdminFeeIn2")
				Me.OnAdminFeeIn2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminFeeIn2Cal", DbType:="Char(1) NOT NULL")>  _
	Public Property AdminFeeIn2Cal() As Char
		Get
			Return Me._AdminFeeIn2Cal
		End Get
		Set
			If ((Me._AdminFeeIn2Cal = value)  _
						= false) Then
				Me.OnAdminFeeIn2CalChanging(value)
				Me.SendPropertyChanging
				Me._AdminFeeIn2Cal = value
				Me.SendPropertyChanged("AdminFeeIn2Cal")
				Me.OnAdminFeeIn2CalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORCalFrom", DbType:="Char(1) NOT NULL")>  _
	Public Property ORCalFrom() As Char
		Get
			Return Me._ORCalFrom
		End Get
		Set
			If ((Me._ORCalFrom = value)  _
						= false) Then
				Me.OnORCalFromChanging(value)
				Me.SendPropertyChanging
				Me._ORCalFrom = value
				Me.SendPropertyChanged("ORCalFrom")
				Me.OnORCalFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetORFlag", DbType:="Bit NOT NULL")>  _
	Public Property OffsetORFlag() As Boolean
		Get
			Return Me._OffsetORFlag
		End Get
		Set
			If ((Me._OffsetORFlag = value)  _
						= false) Then
				Me.OnOffsetORFlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetORFlag = value
				Me.SendPropertyChanged("OffsetORFlag")
				Me.OnOffsetORFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm1Flag", DbType:="Bit NOT NULL")>  _
	Public Property OffsetAdm1Flag() As Boolean
		Get
			Return Me._OffsetAdm1Flag
		End Get
		Set
			If ((Me._OffsetAdm1Flag = value)  _
						= false) Then
				Me.OnOffsetAdm1FlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetAdm1Flag = value
				Me.SendPropertyChanged("OffsetAdm1Flag")
				Me.OnOffsetAdm1FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OffsetAdm2Flag", DbType:="Bit NOT NULL")>  _
	Public Property OffsetAdm2Flag() As Boolean
		Get
			Return Me._OffsetAdm2Flag
		End Get
		Set
			If ((Me._OffsetAdm2Flag = value)  _
						= false) Then
				Me.OnOffsetAdm2FlagChanging(value)
				Me.SendPropertyChanging
				Me._OffsetAdm2Flag = value
				Me.SendPropertyChanged("OffsetAdm2Flag")
				Me.OnOffsetAdm2FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BrokerageCal", DbType:="Char(1) NOT NULL")>  _
	Public Property BrokerageCal() As Char
		Get
			Return Me._BrokerageCal
		End Get
		Set
			If ((Me._BrokerageCal = value)  _
						= false) Then
				Me.OnBrokerageCalChanging(value)
				Me.SendPropertyChanging
				Me._BrokerageCal = value
				Me.SendPropertyChanged("BrokerageCal")
				Me.OnBrokerageCalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORInCal", DbType:="Char(1) NOT NULL")>  _
	Public Property ORInCal() As Char
		Get
			Return Me._ORInCal
		End Get
		Set
			If ((Me._ORInCal = value)  _
						= false) Then
				Me.OnORInCalChanging(value)
				Me.SendPropertyChanging
				Me._ORInCal = value
				Me.SendPropertyChanged("ORInCal")
				Me.OnORInCalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
