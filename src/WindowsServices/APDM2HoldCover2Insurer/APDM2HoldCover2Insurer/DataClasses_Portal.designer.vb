'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Portal")>  _
Partial Public Class DataClasses_PortalDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMailNotification(instance As MailNotification)
    End Sub
  Partial Private Sub UpdateMailNotification(instance As MailNotification)
    End Sub
  Partial Private Sub DeleteMailNotification(instance As MailNotification)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.APDM2HoldCover2Insurer.My.MySettings.Default.PortalConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property v_ads_actives() As System.Data.Linq.Table(Of v_ads_active)
		Get
			Return Me.GetTable(Of v_ads_active)
		End Get
	End Property
	
	Public ReadOnly Property MailNotifications() As System.Data.Linq.Table(Of MailNotification)
		Get
			Return Me.GetTable(Of MailNotification)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.v_ads_active")>  _
Partial Public Class v_ads_active
	
	Private _objectGUID As System.Data.Linq.Binary
	
	Private _lastLogon As String
	
	Private _accountExpires As String
	
	Private _givenname As String
	
	Private _physicalDeliveryOfficeName As String
	
	Private _department As String
	
	Private _facsimileTelephoneNumber As String
	
	Private _mobile As String
	
	Private _ou As String
	
	Private _mail As String
	
	Private _sAMAccountName As String
	
	Private _telephoneNumber As String
	
	Private _displayName As String
	
	Private _title As String
	
	Private _company As String
	
	Private _pager As String
	
	Private _streetaddress As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_objectGUID", DbType:="VarBinary(4000)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property objectGUID() As System.Data.Linq.Binary
		Get
			Return Me._objectGUID
		End Get
		Set
			If (Object.Equals(Me._objectGUID, value) = false) Then
				Me._objectGUID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lastLogon", DbType:="NVarChar(4000)")>  _
	Public Property lastLogon() As String
		Get
			Return Me._lastLogon
		End Get
		Set
			If (String.Equals(Me._lastLogon, value) = false) Then
				Me._lastLogon = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_accountExpires", DbType:="NVarChar(4000)")>  _
	Public Property accountExpires() As String
		Get
			Return Me._accountExpires
		End Get
		Set
			If (String.Equals(Me._accountExpires, value) = false) Then
				Me._accountExpires = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_givenname", DbType:="NVarChar(4000)")>  _
	Public Property givenname() As String
		Get
			Return Me._givenname
		End Get
		Set
			If (String.Equals(Me._givenname, value) = false) Then
				Me._givenname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_physicalDeliveryOfficeName", DbType:="NVarChar(4000)")>  _
	Public Property physicalDeliveryOfficeName() As String
		Get
			Return Me._physicalDeliveryOfficeName
		End Get
		Set
			If (String.Equals(Me._physicalDeliveryOfficeName, value) = false) Then
				Me._physicalDeliveryOfficeName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_department", DbType:="NVarChar(4000)")>  _
	Public Property department() As String
		Get
			Return Me._department
		End Get
		Set
			If (String.Equals(Me._department, value) = false) Then
				Me._department = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_facsimileTelephoneNumber", DbType:="NVarChar(4000)")>  _
	Public Property facsimileTelephoneNumber() As String
		Get
			Return Me._facsimileTelephoneNumber
		End Get
		Set
			If (String.Equals(Me._facsimileTelephoneNumber, value) = false) Then
				Me._facsimileTelephoneNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mobile", DbType:="NVarChar(4000)")>  _
	Public Property mobile() As String
		Get
			Return Me._mobile
		End Get
		Set
			If (String.Equals(Me._mobile, value) = false) Then
				Me._mobile = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ou", DbType:="NVarChar(4000)")>  _
	Public Property ou() As String
		Get
			Return Me._ou
		End Get
		Set
			If (String.Equals(Me._ou, value) = false) Then
				Me._ou = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mail", DbType:="NVarChar(4000)")>  _
	Public Property mail() As String
		Get
			Return Me._mail
		End Get
		Set
			If (String.Equals(Me._mail, value) = false) Then
				Me._mail = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sAMAccountName", DbType:="NVarChar(4000)")>  _
	Public Property sAMAccountName() As String
		Get
			Return Me._sAMAccountName
		End Get
		Set
			If (String.Equals(Me._sAMAccountName, value) = false) Then
				Me._sAMAccountName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telephoneNumber", DbType:="NVarChar(4000)")>  _
	Public Property telephoneNumber() As String
		Get
			Return Me._telephoneNumber
		End Get
		Set
			If (String.Equals(Me._telephoneNumber, value) = false) Then
				Me._telephoneNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_displayName", DbType:="NVarChar(4000)")>  _
	Public Property displayName() As String
		Get
			Return Me._displayName
		End Get
		Set
			If (String.Equals(Me._displayName, value) = false) Then
				Me._displayName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_title", DbType:="NVarChar(4000)")>  _
	Public Property title() As String
		Get
			Return Me._title
		End Get
		Set
			If (String.Equals(Me._title, value) = false) Then
				Me._title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_company", DbType:="NVarChar(4000)")>  _
	Public Property company() As String
		Get
			Return Me._company
		End Get
		Set
			If (String.Equals(Me._company, value) = false) Then
				Me._company = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pager", DbType:="NVarChar(4000)")>  _
	Public Property pager() As String
		Get
			Return Me._pager
		End Get
		Set
			If (String.Equals(Me._pager, value) = false) Then
				Me._pager = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_streetaddress", DbType:="NVarChar(4000)")>  _
	Public Property streetaddress() As String
		Get
			Return Me._streetaddress
		End Get
		Set
			If (String.Equals(Me._streetaddress, value) = false) Then
				Me._streetaddress = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MailNotifications")>  _
Partial Public Class MailNotification
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Code As String
	
	Private _Name As String
	
	Private _MailFrom As String
	
	Private _MailTo As String
	
	Private _MailCC As String
	
	Private _MailBcc As String
	
	Private _MailSubject As String
	
	Private _MailBody As String
	
	Private _IsActive As System.Nullable(Of Boolean)
	
	Private _CreationDate As System.Nullable(Of Date)
	
	Private _ModifiedDate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnMailFromChanging(value As String)
    End Sub
    Partial Private Sub OnMailFromChanged()
    End Sub
    Partial Private Sub OnMailToChanging(value As String)
    End Sub
    Partial Private Sub OnMailToChanged()
    End Sub
    Partial Private Sub OnMailCCChanging(value As String)
    End Sub
    Partial Private Sub OnMailCCChanged()
    End Sub
    Partial Private Sub OnMailBccChanging(value As String)
    End Sub
    Partial Private Sub OnMailBccChanged()
    End Sub
    Partial Private Sub OnMailSubjectChanging(value As String)
    End Sub
    Partial Private Sub OnMailSubjectChanged()
    End Sub
    Partial Private Sub OnMailBodyChanging(value As String)
    End Sub
    Partial Private Sub OnMailBodyChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnModifiedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailFrom", DbType:="VarChar(MAX)")>  _
	Public Property MailFrom() As String
		Get
			Return Me._MailFrom
		End Get
		Set
			If (String.Equals(Me._MailFrom, value) = false) Then
				Me.OnMailFromChanging(value)
				Me.SendPropertyChanging
				Me._MailFrom = value
				Me.SendPropertyChanged("MailFrom")
				Me.OnMailFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailTo", DbType:="VarChar(MAX)")>  _
	Public Property MailTo() As String
		Get
			Return Me._MailTo
		End Get
		Set
			If (String.Equals(Me._MailTo, value) = false) Then
				Me.OnMailToChanging(value)
				Me.SendPropertyChanging
				Me._MailTo = value
				Me.SendPropertyChanged("MailTo")
				Me.OnMailToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailCC", DbType:="VarChar(MAX)")>  _
	Public Property MailCC() As String
		Get
			Return Me._MailCC
		End Get
		Set
			If (String.Equals(Me._MailCC, value) = false) Then
				Me.OnMailCCChanging(value)
				Me.SendPropertyChanging
				Me._MailCC = value
				Me.SendPropertyChanged("MailCC")
				Me.OnMailCCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailBcc", DbType:="VarChar(MAX)")>  _
	Public Property MailBcc() As String
		Get
			Return Me._MailBcc
		End Get
		Set
			If (String.Equals(Me._MailBcc, value) = false) Then
				Me.OnMailBccChanging(value)
				Me.SendPropertyChanging
				Me._MailBcc = value
				Me.SendPropertyChanged("MailBcc")
				Me.OnMailBccChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailSubject", DbType:="VarChar(MAX)")>  _
	Public Property MailSubject() As String
		Get
			Return Me._MailSubject
		End Get
		Set
			If (String.Equals(Me._MailSubject, value) = false) Then
				Me.OnMailSubjectChanging(value)
				Me.SendPropertyChanging
				Me._MailSubject = value
				Me.SendPropertyChanged("MailSubject")
				Me.OnMailSubjectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailBody", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property MailBody() As String
		Get
			Return Me._MailBody
		End Get
		Set
			If (String.Equals(Me._MailBody, value) = false) Then
				Me.OnMailBodyChanging(value)
				Me.SendPropertyChanging
				Me._MailBody = value
				Me.SendPropertyChanged("MailBody")
				Me.OnMailBodyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")>  _
	Public Property IsActive() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActive
		End Get
		Set
			If (Me._IsActive.Equals(value) = false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")>  _
	Public Property CreationDate() As System.Nullable(Of Date)
		Get
			Return Me._CreationDate
		End Get
		Set
			If (Me._CreationDate.Equals(value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDate", DbType:="DateTime")>  _
	Public Property ModifiedDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifiedDate
		End Get
		Set
			If (Me._ModifiedDate.Equals(value) = false) Then
				Me.OnModifiedDateChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedDate = value
				Me.SendPropertyChanged("ModifiedDate")
				Me.OnModifiedDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
