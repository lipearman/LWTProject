'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="MotorClaim")>  _
Partial Public Class DataClasses_MotorClaimDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblShowRoom(instance As tblShowRoom)
    End Sub
  Partial Private Sub UpdatetblShowRoom(instance As tblShowRoom)
    End Sub
  Partial Private Sub DeletetblShowRoom(instance As tblShowRoom)
    End Sub
  Partial Private Sub InsertMailNotification(instance As MailNotification)
    End Sub
  Partial Private Sub UpdateMailNotification(instance As MailNotification)
    End Sub
  Partial Private Sub DeleteMailNotification(instance As MailNotification)
    End Sub
    Partial Private Sub InserttblDealer(instance As tblDealer)
    End Sub
    Partial Private Sub UpdatetblDealer(instance As tblDealer)
    End Sub
    Partial Private Sub DeletetblDealer(instance As tblDealer)
    End Sub
#End Region

    Public Sub New()
        MyBase.New(Global.APDMotorClaimNotificationVB.My.MySettings.Default.MotorClaimConnectionString, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property tblShowRooms() As System.Data.Linq.Table(Of tblShowRoom)
        Get
            Return Me.GetTable(Of tblShowRoom)()
        End Get
    End Property

    Public ReadOnly Property MailNotifications() As System.Data.Linq.Table(Of MailNotification)
        Get
            Return Me.GetTable(Of MailNotification)()
        End Get
    End Property

    Public ReadOnly Property V_ClaimDaily_00_Notice_Dailies() As System.Data.Linq.Table(Of V_ClaimDaily_00_Notice_Daily)
        Get
            Return Me.GetTable(Of V_ClaimDaily_00_Notice_Daily)()
        End Get
    End Property

    Public ReadOnly Property tblDealers() As System.Data.Linq.Table(Of tblDealer)
        Get
            Return Me.GetTable(Of tblDealer)()
        End Get
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblShowRoom")> _
Partial Public Class tblShowRoom
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Integer

    Private _ShowRoomCode As String

    Private _DealerCode As String

    Private _BranchCode As String

    Private _PartsOrderCode As String

    Private _ShowRoomName As String

    Private _BranchName As String

    Private _Address As String

    Private _Province As String

    Private _Zipcode As String

    Private _TelCode As String

    Private _TelNo As String

    Private _FaxNo As String

    Private _Email As String

    Private _ShowRoomNameEN As String

    Private _BranchNameEN As String

    Private _AddressEN As String

    Private _ProvinceEN As String

    Private _Region As String

    Private _SalesArea As String

    Private _Type As String

    Private _BP As String

    Private _Longitude As System.Nullable(Of Double)

    Private _Latitude As System.Nullable(Of Double)

    Private _SPDeptCode As String

    Private _IsActive As System.Nullable(Of Boolean)

    Private _CreationDate As System.Nullable(Of Date)

    Private _CreationBy As String

    Private _ModifyBy As String

    Private _ModifyDate As System.Nullable(Of Date)

    Private _ShowroomID As System.Nullable(Of Integer)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnShowRoomCodeChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomCodeChanged()
    End Sub
    Partial Private Sub OnDealerCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDealerCodeChanged()
    End Sub
    Partial Private Sub OnBranchCodeChanging(value As String)
    End Sub
    Partial Private Sub OnBranchCodeChanged()
    End Sub
    Partial Private Sub OnPartsOrderCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPartsOrderCodeChanged()
    End Sub
    Partial Private Sub OnShowRoomNameChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomNameChanged()
    End Sub
    Partial Private Sub OnBranchNameChanging(value As String)
    End Sub
    Partial Private Sub OnBranchNameChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnZipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnZipcodeChanged()
    End Sub
    Partial Private Sub OnTelCodeChanging(value As String)
    End Sub
    Partial Private Sub OnTelCodeChanged()
    End Sub
    Partial Private Sub OnTelNoChanging(value As String)
    End Sub
    Partial Private Sub OnTelNoChanged()
    End Sub
    Partial Private Sub OnFaxNoChanging(value As String)
    End Sub
    Partial Private Sub OnFaxNoChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnShowRoomNameENChanging(value As String)
    End Sub
    Partial Private Sub OnShowRoomNameENChanged()
    End Sub
    Partial Private Sub OnBranchNameENChanging(value As String)
    End Sub
    Partial Private Sub OnBranchNameENChanged()
    End Sub
    Partial Private Sub OnAddressENChanging(value As String)
    End Sub
    Partial Private Sub OnAddressENChanged()
    End Sub
    Partial Private Sub OnProvinceENChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceENChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnSalesAreaChanging(value As String)
    End Sub
    Partial Private Sub OnSalesAreaChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnBPChanging(value As String)
    End Sub
    Partial Private Sub OnBPChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    Partial Private Sub OnSPDeptCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSPDeptCodeChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationByChanging(value As String)
    End Sub
    Partial Private Sub OnCreationByChanged()
    End Sub
    Partial Private Sub OnModifyByChanging(value As String)
    End Sub
    Partial Private Sub OnModifyByChanged()
    End Sub
    Partial Private Sub OnModifyDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifyDateChanged()
    End Sub
    Partial Private Sub OnShowroomIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnShowroomIDChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
    Public Property ID() As Integer
        Get
            Return Me._ID
        End Get
        Set(value As Integer)
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging()
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(50)")> _
    Public Property ShowRoomCode() As String
        Get
            Return Me._ShowRoomCode
        End Get
        Set(value As String)
            If (String.Equals(Me._ShowRoomCode, value) = False) Then
                Me.OnShowRoomCodeChanging(value)
                Me.SendPropertyChanging()
                Me._ShowRoomCode = value
                Me.SendPropertyChanged("ShowRoomCode")
                Me.OnShowRoomCodeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerCode", DbType:="VarChar(50)")> _
    Public Property DealerCode() As String
        Get
            Return Me._DealerCode
        End Get
        Set(value As String)
            If (String.Equals(Me._DealerCode, value) = False) Then
                Me.OnDealerCodeChanging(value)
                Me.SendPropertyChanging()
                Me._DealerCode = value
                Me.SendPropertyChanged("DealerCode")
                Me.OnDealerCodeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchCode", DbType:="VarChar(50)")> _
    Public Property BranchCode() As String
        Get
            Return Me._BranchCode
        End Get
        Set(value As String)
            If (String.Equals(Me._BranchCode, value) = False) Then
                Me.OnBranchCodeChanging(value)
                Me.SendPropertyChanging()
                Me._BranchCode = value
                Me.SendPropertyChanged("BranchCode")
                Me.OnBranchCodeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartsOrderCode", DbType:="VarChar(50)")> _
    Public Property PartsOrderCode() As String
        Get
            Return Me._PartsOrderCode
        End Get
        Set(value As String)
            If (String.Equals(Me._PartsOrderCode, value) = False) Then
                Me.OnPartsOrderCodeChanging(value)
                Me.SendPropertyChanging()
                Me._PartsOrderCode = value
                Me.SendPropertyChanged("PartsOrderCode")
                Me.OnPartsOrderCodeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomName", DbType:="VarChar(100)")> _
    Public Property ShowRoomName() As String
        Get
            Return Me._ShowRoomName
        End Get
        Set(value As String)
            If (String.Equals(Me._ShowRoomName, value) = False) Then
                Me.OnShowRoomNameChanging(value)
                Me.SendPropertyChanging()
                Me._ShowRoomName = value
                Me.SendPropertyChanged("ShowRoomName")
                Me.OnShowRoomNameChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchName", DbType:="VarChar(100)")> _
    Public Property BranchName() As String
        Get
            Return Me._BranchName
        End Get
        Set(value As String)
            If (String.Equals(Me._BranchName, value) = False) Then
                Me.OnBranchNameChanging(value)
                Me.SendPropertyChanging()
                Me._BranchName = value
                Me.SendPropertyChanged("BranchName")
                Me.OnBranchNameChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="VarChar(255)")> _
    Public Property Address() As String
        Get
            Return Me._Address
        End Get
        Set(value As String)
            If (String.Equals(Me._Address, value) = False) Then
                Me.OnAddressChanging(value)
                Me.SendPropertyChanging()
                Me._Address = value
                Me.SendPropertyChanged("Address")
                Me.OnAddressChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="VarChar(50)")> _
    Public Property Province() As String
        Get
            Return Me._Province
        End Get
        Set(value As String)
            If (String.Equals(Me._Province, value) = False) Then
                Me.OnProvinceChanging(value)
                Me.SendPropertyChanging()
                Me._Province = value
                Me.SendPropertyChanged("Province")
                Me.OnProvinceChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zipcode", DbType:="VarChar(5)")> _
    Public Property Zipcode() As String
        Get
            Return Me._Zipcode
        End Get
        Set(value As String)
            If (String.Equals(Me._Zipcode, value) = False) Then
                Me.OnZipcodeChanging(value)
                Me.SendPropertyChanging()
                Me._Zipcode = value
                Me.SendPropertyChanged("Zipcode")
                Me.OnZipcodeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelCode", DbType:="VarChar(10)")> _
    Public Property TelCode() As String
        Get
            Return Me._TelCode
        End Get
        Set(value As String)
            If (String.Equals(Me._TelCode, value) = False) Then
                Me.OnTelCodeChanging(value)
                Me.SendPropertyChanging()
                Me._TelCode = value
                Me.SendPropertyChanged("TelCode")
                Me.OnTelCodeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelNo", DbType:="VarChar(100)")> _
    Public Property TelNo() As String
        Get
            Return Me._TelNo
        End Get
        Set(value As String)
            If (String.Equals(Me._TelNo, value) = False) Then
                Me.OnTelNoChanging(value)
                Me.SendPropertyChanging()
                Me._TelNo = value
                Me.SendPropertyChanged("TelNo")
                Me.OnTelNoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FaxNo", DbType:="VarChar(100)")> _
    Public Property FaxNo() As String
        Get
            Return Me._FaxNo
        End Get
        Set(value As String)
            If (String.Equals(Me._FaxNo, value) = False) Then
                Me.OnFaxNoChanging(value)
                Me.SendPropertyChanging()
                Me._FaxNo = value
                Me.SendPropertyChanged("FaxNo")
                Me.OnFaxNoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)")> _
    Public Property Email() As String
        Get
            Return Me._Email
        End Get
        Set(value As String)
            If (String.Equals(Me._Email, value) = False) Then
                Me.OnEmailChanging(value)
                Me.SendPropertyChanging()
                Me._Email = value
                Me.SendPropertyChanged("Email")
                Me.OnEmailChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomNameEN", DbType:="VarChar(100)")> _
    Public Property ShowRoomNameEN() As String
        Get
            Return Me._ShowRoomNameEN
        End Get
        Set(value As String)
            If (String.Equals(Me._ShowRoomNameEN, value) = False) Then
                Me.OnShowRoomNameENChanging(value)
                Me.SendPropertyChanging()
                Me._ShowRoomNameEN = value
                Me.SendPropertyChanged("ShowRoomNameEN")
                Me.OnShowRoomNameENChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchNameEN", DbType:="VarChar(100)")> _
    Public Property BranchNameEN() As String
        Get
            Return Me._BranchNameEN
        End Get
        Set(value As String)
            If (String.Equals(Me._BranchNameEN, value) = False) Then
                Me.OnBranchNameENChanging(value)
                Me.SendPropertyChanging()
                Me._BranchNameEN = value
                Me.SendPropertyChanged("BranchNameEN")
                Me.OnBranchNameENChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddressEN", DbType:="VarChar(255)")> _
    Public Property AddressEN() As String
        Get
            Return Me._AddressEN
        End Get
        Set(value As String)
            If (String.Equals(Me._AddressEN, value) = False) Then
                Me.OnAddressENChanging(value)
                Me.SendPropertyChanging()
                Me._AddressEN = value
                Me.SendPropertyChanged("AddressEN")
                Me.OnAddressENChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProvinceEN", DbType:="VarChar(50)")> _
    Public Property ProvinceEN() As String
        Get
            Return Me._ProvinceEN
        End Get
        Set(value As String)
            If (String.Equals(Me._ProvinceEN, value) = False) Then
                Me.OnProvinceENChanging(value)
                Me.SendPropertyChanging()
                Me._ProvinceEN = value
                Me.SendPropertyChanged("ProvinceEN")
                Me.OnProvinceENChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="VarChar(50)")> _
    Public Property Region() As String
        Get
            Return Me._Region
        End Get
        Set(value As String)
            If (String.Equals(Me._Region, value) = False) Then
                Me.OnRegionChanging(value)
                Me.SendPropertyChanging()
                Me._Region = value
                Me.SendPropertyChanged("Region")
                Me.OnRegionChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalesArea", DbType:="VarChar(50)")> _
    Public Property SalesArea() As String
        Get
            Return Me._SalesArea
        End Get
        Set(value As String)
            If (String.Equals(Me._SalesArea, value) = False) Then
                Me.OnSalesAreaChanging(value)
                Me.SendPropertyChanging()
                Me._SalesArea = value
                Me.SendPropertyChanged("SalesArea")
                Me.OnSalesAreaChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="VarChar(5)")> _
    Public Property Type() As String
        Get
            Return Me._Type
        End Get
        Set(value As String)
            If (String.Equals(Me._Type, value) = False) Then
                Me.OnTypeChanging(value)
                Me.SendPropertyChanging()
                Me._Type = value
                Me.SendPropertyChanged("Type")
                Me.OnTypeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BP", DbType:="VarChar(5)")> _
    Public Property BP() As String
        Get
            Return Me._BP
        End Get
        Set(value As String)
            If (String.Equals(Me._BP, value) = False) Then
                Me.OnBPChanging(value)
                Me.SendPropertyChanging()
                Me._BP = value
                Me.SendPropertyChanged("BP")
                Me.OnBPChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")> _
    Public Property Longitude() As System.Nullable(Of Double)
        Get
            Return Me._Longitude
        End Get
        Set(value As System.Nullable(Of Double))
            If (Me._Longitude.Equals(value) = False) Then
                Me.OnLongitudeChanging(value)
                Me.SendPropertyChanging()
                Me._Longitude = value
                Me.SendPropertyChanged("Longitude")
                Me.OnLongitudeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")> _
    Public Property Latitude() As System.Nullable(Of Double)
        Get
            Return Me._Latitude
        End Get
        Set(value As System.Nullable(Of Double))
            If (Me._Latitude.Equals(value) = False) Then
                Me.OnLatitudeChanging(value)
                Me.SendPropertyChanging()
                Me._Latitude = value
                Me.SendPropertyChanged("Latitude")
                Me.OnLatitudeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPDeptCode", DbType:="VarChar(10)")> _
    Public Property SPDeptCode() As String
        Get
            Return Me._SPDeptCode
        End Get
        Set(value As String)
            If (String.Equals(Me._SPDeptCode, value) = False) Then
                Me.OnSPDeptCodeChanging(value)
                Me.SendPropertyChanging()
                Me._SPDeptCode = value
                Me.SendPropertyChanged("SPDeptCode")
                Me.OnSPDeptCodeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")> _
    Public Property IsActive() As System.Nullable(Of Boolean)
        Get
            Return Me._IsActive
        End Get
        Set(value As System.Nullable(Of Boolean))
            If (Me._IsActive.Equals(value) = False) Then
                Me.OnIsActiveChanging(value)
                Me.SendPropertyChanging()
                Me._IsActive = value
                Me.SendPropertyChanged("IsActive")
                Me.OnIsActiveChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")> _
    Public Property CreationDate() As System.Nullable(Of Date)
        Get
            Return Me._CreationDate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._CreationDate.Equals(value) = False) Then
                Me.OnCreationDateChanging(value)
                Me.SendPropertyChanging()
                Me._CreationDate = value
                Me.SendPropertyChanged("CreationDate")
                Me.OnCreationDateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationBy", DbType:="VarChar(50)")> _
    Public Property CreationBy() As String
        Get
            Return Me._CreationBy
        End Get
        Set(value As String)
            If (String.Equals(Me._CreationBy, value) = False) Then
                Me.OnCreationByChanging(value)
                Me.SendPropertyChanging()
                Me._CreationBy = value
                Me.SendPropertyChanged("CreationBy")
                Me.OnCreationByChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyBy", DbType:="VarChar(50)")> _
    Public Property ModifyBy() As String
        Get
            Return Me._ModifyBy
        End Get
        Set(value As String)
            If (String.Equals(Me._ModifyBy, value) = False) Then
                Me.OnModifyByChanging(value)
                Me.SendPropertyChanging()
                Me._ModifyBy = value
                Me.SendPropertyChanged("ModifyBy")
                Me.OnModifyByChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")> _
    Public Property ModifyDate() As System.Nullable(Of Date)
        Get
            Return Me._ModifyDate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._ModifyDate.Equals(value) = False) Then
                Me.OnModifyDateChanging(value)
                Me.SendPropertyChanging()
                Me._ModifyDate = value
                Me.SendPropertyChanged("ModifyDate")
                Me.OnModifyDateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowroomID", DbType:="Int")> _
    Public Property ShowroomID() As System.Nullable(Of Integer)
        Get
            Return Me._ShowroomID
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._ShowroomID.Equals(value) = False) Then
                Me.OnShowroomIDChanging(value)
                Me.SendPropertyChanging()
                Me._ShowroomID = value
                Me.SendPropertyChanged("ShowroomID")
                Me.OnShowroomIDChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MailNotifications")> _
Partial Public Class MailNotification
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Integer

    Private _Code As String

    Private _Name As String

    Private _MailFrom As String

    Private _MailTo As String

    Private _MailCC As String

    Private _MailBcc As String

    Private _MailSubject As String

    Private _MailBody As String

    Private _IsActive As System.Nullable(Of Boolean)

    Private _CreationDate As System.Nullable(Of Date)

    Private _ModifiedDate As System.Nullable(Of Date)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnMailFromChanging(value As String)
    End Sub
    Partial Private Sub OnMailFromChanged()
    End Sub
    Partial Private Sub OnMailToChanging(value As String)
    End Sub
    Partial Private Sub OnMailToChanged()
    End Sub
    Partial Private Sub OnMailCCChanging(value As String)
    End Sub
    Partial Private Sub OnMailCCChanged()
    End Sub
    Partial Private Sub OnMailBccChanging(value As String)
    End Sub
    Partial Private Sub OnMailBccChanged()
    End Sub
    Partial Private Sub OnMailSubjectChanging(value As String)
    End Sub
    Partial Private Sub OnMailSubjectChanged()
    End Sub
    Partial Private Sub OnMailBodyChanging(value As String)
    End Sub
    Partial Private Sub OnMailBodyChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnModifiedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnModifiedDateChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
    Public Property ID() As Integer
        Get
            Return Me._ID
        End Get
        Set(value As Integer)
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging()
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="VarChar(8)")> _
    Public Property Code() As String
        Get
            Return Me._Code
        End Get
        Set(value As String)
            If (String.Equals(Me._Code, value) = False) Then
                Me.OnCodeChanging(value)
                Me.SendPropertyChanging()
                Me._Code = value
                Me.SendPropertyChanged("Code")
                Me.OnCodeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(255)")> _
    Public Property Name() As String
        Get
            Return Me._Name
        End Get
        Set(value As String)
            If (String.Equals(Me._Name, value) = False) Then
                Me.OnNameChanging(value)
                Me.SendPropertyChanging()
                Me._Name = value
                Me.SendPropertyChanged("Name")
                Me.OnNameChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailFrom", DbType:="VarChar(MAX)")> _
    Public Property MailFrom() As String
        Get
            Return Me._MailFrom
        End Get
        Set(value As String)
            If (String.Equals(Me._MailFrom, value) = False) Then
                Me.OnMailFromChanging(value)
                Me.SendPropertyChanging()
                Me._MailFrom = value
                Me.SendPropertyChanged("MailFrom")
                Me.OnMailFromChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailTo", DbType:="VarChar(MAX)")> _
    Public Property MailTo() As String
        Get
            Return Me._MailTo
        End Get
        Set(value As String)
            If (String.Equals(Me._MailTo, value) = False) Then
                Me.OnMailToChanging(value)
                Me.SendPropertyChanging()
                Me._MailTo = value
                Me.SendPropertyChanged("MailTo")
                Me.OnMailToChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailCC", DbType:="VarChar(MAX)")> _
    Public Property MailCC() As String
        Get
            Return Me._MailCC
        End Get
        Set(value As String)
            If (String.Equals(Me._MailCC, value) = False) Then
                Me.OnMailCCChanging(value)
                Me.SendPropertyChanging()
                Me._MailCC = value
                Me.SendPropertyChanged("MailCC")
                Me.OnMailCCChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailBcc", DbType:="VarChar(MAX)")> _
    Public Property MailBcc() As String
        Get
            Return Me._MailBcc
        End Get
        Set(value As String)
            If (String.Equals(Me._MailBcc, value) = False) Then
                Me.OnMailBccChanging(value)
                Me.SendPropertyChanging()
                Me._MailBcc = value
                Me.SendPropertyChanged("MailBcc")
                Me.OnMailBccChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailSubject", DbType:="VarChar(MAX)")> _
    Public Property MailSubject() As String
        Get
            Return Me._MailSubject
        End Get
        Set(value As String)
            If (String.Equals(Me._MailSubject, value) = False) Then
                Me.OnMailSubjectChanging(value)
                Me.SendPropertyChanging()
                Me._MailSubject = value
                Me.SendPropertyChanged("MailSubject")
                Me.OnMailSubjectChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailBody", DbType:="NText", UpdateCheck:=UpdateCheck.Never)> _
    Public Property MailBody() As String
        Get
            Return Me._MailBody
        End Get
        Set(value As String)
            If (String.Equals(Me._MailBody, value) = False) Then
                Me.OnMailBodyChanging(value)
                Me.SendPropertyChanging()
                Me._MailBody = value
                Me.SendPropertyChanged("MailBody")
                Me.OnMailBodyChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit")> _
    Public Property IsActive() As System.Nullable(Of Boolean)
        Get
            Return Me._IsActive
        End Get
        Set(value As System.Nullable(Of Boolean))
            If (Me._IsActive.Equals(value) = False) Then
                Me.OnIsActiveChanging(value)
                Me.SendPropertyChanging()
                Me._IsActive = value
                Me.SendPropertyChanged("IsActive")
                Me.OnIsActiveChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="DateTime")> _
    Public Property CreationDate() As System.Nullable(Of Date)
        Get
            Return Me._CreationDate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._CreationDate.Equals(value) = False) Then
                Me.OnCreationDateChanging(value)
                Me.SendPropertyChanging()
                Me._CreationDate = value
                Me.SendPropertyChanged("CreationDate")
                Me.OnCreationDateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDate", DbType:="DateTime")> _
    Public Property ModifiedDate() As System.Nullable(Of Date)
        Get
            Return Me._ModifiedDate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._ModifiedDate.Equals(value) = False) Then
                Me.OnModifiedDateChanging(value)
                Me.SendPropertyChanging()
                Me._ModifiedDate = value
                Me.SendPropertyChanged("ModifiedDate")
                Me.OnModifiedDateChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClaimDaily_00_Notice_Daily")> _
Partial Public Class V_ClaimDaily_00_Notice_Daily

    Private _App_TempPolicyNo As String

    Private _FullCustomerName As String

    Private _ChassisNo As String

    Private _CarLicense As String

    Private _PolicyNo As String

    Private _RefNo As String

    Private _ClaimNo As String

    Private _AccidentDate As String

    Private _AccidentTime As String

    Private _AccidentPlace As String

    Private _InsurerName As String

    Private _InsurerCode As String

    Private _ShowRoomCode As String

    Private _ShowRoomName As String

    Private _BranchName As String

    Private _DealerName As String

    Private _DealerCode As String

    Private _TRID As Integer

    Private _EffectiveDate As String

    Private _ExpiryDate As String

    Private _Beneficiary As String

    Private _NoticeName As String

    Private _NoticeTel As String

    Private _SubmitDate As System.Nullable(Of Date)

    Private _AgentCode As String

    Private _Dealer_Email As String

    Private _Status As Boolean

    Private _ClaimNoticeDate As String

    Private _ClaimNoticeTime As String

    Private _CarBrand As String

    Private _CarModel As String

    Private _CarYear As String

    Private _DriverName As String

    Private _DriverTel As String

    Private _ClaimDamageDetails As String

    Private _ClaimType As String

    Private _ClaimDetails As String

    Private _ClaimResult As String

    Private _LaborAmt As System.Nullable(Of Double)

    Private _PartsAmt As System.Nullable(Of Double)

    Private _OtherAmt As System.Nullable(Of Double)

    Private _GarageType As String

    Private _GarageName As String

    Private _GaragePlace As String

    Private _CarRepairDate As String

    Private _CarReceiveDate As String

    Private _ConsentFormNo As String

    Private _PartsDealerName As String

    Private _PaymentDetails As String

    Private _ClaimStatus As String

    Private _IsPost As Boolean

    Private _PostDate As System.Nullable(Of Date)

    Private _Remark As String

    Public Sub New()
        MyBase.New()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_App_TempPolicyNo", DbType:="VarChar(100)")> _
    Public Property App_TempPolicyNo() As String
        Get
            Return Me._App_TempPolicyNo
        End Get
        Set(value As String)
            If (String.Equals(Me._App_TempPolicyNo, value) = False) Then
                Me._App_TempPolicyNo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullCustomerName", DbType:="VarChar(255)")> _
    Public Property FullCustomerName() As String
        Get
            Return Me._FullCustomerName
        End Get
        Set(value As String)
            If (String.Equals(Me._FullCustomerName, value) = False) Then
                Me._FullCustomerName = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChassisNo", DbType:="VarChar(50)")> _
    Public Property ChassisNo() As String
        Get
            Return Me._ChassisNo
        End Get
        Set(value As String)
            If (String.Equals(Me._ChassisNo, value) = False) Then
                Me._ChassisNo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarLicense", DbType:="VarChar(50)")> _
    Public Property CarLicense() As String
        Get
            Return Me._CarLicense
        End Get
        Set(value As String)
            If (String.Equals(Me._CarLicense, value) = False) Then
                Me._CarLicense = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PolicyNo", DbType:="VarChar(100)")> _
    Public Property PolicyNo() As String
        Get
            Return Me._PolicyNo
        End Get
        Set(value As String)
            If (String.Equals(Me._PolicyNo, value) = False) Then
                Me._PolicyNo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefNo", DbType:="VarChar(100)")> _
    Public Property RefNo() As String
        Get
            Return Me._RefNo
        End Get
        Set(value As String)
            If (String.Equals(Me._RefNo, value) = False) Then
                Me._RefNo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNo", DbType:="VarChar(100)")> _
    Public Property ClaimNo() As String
        Get
            Return Me._ClaimNo
        End Get
        Set(value As String)
            If (String.Equals(Me._ClaimNo, value) = False) Then
                Me._ClaimNo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentDate", DbType:="VarChar(10)")> _
    Public Property AccidentDate() As String
        Get
            Return Me._AccidentDate
        End Get
        Set(value As String)
            If (String.Equals(Me._AccidentDate, value) = False) Then
                Me._AccidentDate = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentTime", DbType:="VarChar(10)")> _
    Public Property AccidentTime() As String
        Get
            Return Me._AccidentTime
        End Get
        Set(value As String)
            If (String.Equals(Me._AccidentTime, value) = False) Then
                Me._AccidentTime = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccidentPlace", DbType:="VarChar(8000)")> _
    Public Property AccidentPlace() As String
        Get
            Return Me._AccidentPlace
        End Get
        Set(value As String)
            If (String.Equals(Me._AccidentPlace, value) = False) Then
                Me._AccidentPlace = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerName", DbType:="VarChar(100)")> _
    Public Property InsurerName() As String
        Get
            Return Me._InsurerName
        End Get
        Set(value As String)
            If (String.Equals(Me._InsurerName, value) = False) Then
                Me._InsurerName = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsurerCode", DbType:="VarChar(10)")> _
    Public Property InsurerCode() As String
        Get
            Return Me._InsurerCode
        End Get
        Set(value As String)
            If (String.Equals(Me._InsurerCode, value) = False) Then
                Me._InsurerCode = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomCode", DbType:="VarChar(50)")> _
    Public Property ShowRoomCode() As String
        Get
            Return Me._ShowRoomCode
        End Get
        Set(value As String)
            If (String.Equals(Me._ShowRoomCode, value) = False) Then
                Me._ShowRoomCode = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShowRoomName", DbType:="VarChar(113)")> _
    Public Property ShowRoomName() As String
        Get
            Return Me._ShowRoomName
        End Get
        Set(value As String)
            If (String.Equals(Me._ShowRoomName, value) = False) Then
                Me._ShowRoomName = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BranchName", DbType:="VarChar(100)")> _
    Public Property BranchName() As String
        Get
            Return Me._BranchName
        End Get
        Set(value As String)
            If (String.Equals(Me._BranchName, value) = False) Then
                Me._BranchName = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerName", DbType:="NVarChar(255)")> _
    Public Property DealerName() As String
        Get
            Return Me._DealerName
        End Get
        Set(value As String)
            If (String.Equals(Me._DealerName, value) = False) Then
                Me._DealerName = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerCode", DbType:="VarChar(5)")> _
    Public Property DealerCode() As String
        Get
            Return Me._DealerCode
        End Get
        Set(value As String)
            If (String.Equals(Me._DealerCode, value) = False) Then
                Me._DealerCode = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRID", DbType:="Int NOT NULL")> _
    Public Property TRID() As Integer
        Get
            Return Me._TRID
        End Get
        Set(value As Integer)
            If ((Me._TRID = value) _
                        = False) Then
                Me._TRID = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EffectiveDate", DbType:="VarChar(10)")> _
    Public Property EffectiveDate() As String
        Get
            Return Me._EffectiveDate
        End Get
        Set(value As String)
            If (String.Equals(Me._EffectiveDate, value) = False) Then
                Me._EffectiveDate = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="VarChar(10)")> _
    Public Property ExpiryDate() As String
        Get
            Return Me._ExpiryDate
        End Get
        Set(value As String)
            If (String.Equals(Me._ExpiryDate, value) = False) Then
                Me._ExpiryDate = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficiary", DbType:="VarChar(255)")> _
    Public Property Beneficiary() As String
        Get
            Return Me._Beneficiary
        End Get
        Set(value As String)
            If (String.Equals(Me._Beneficiary, value) = False) Then
                Me._Beneficiary = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeName", DbType:="VarChar(255)")> _
    Public Property NoticeName() As String
        Get
            Return Me._NoticeName
        End Get
        Set(value As String)
            If (String.Equals(Me._NoticeName, value) = False) Then
                Me._NoticeName = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoticeTel", DbType:="VarChar(100)")> _
    Public Property NoticeTel() As String
        Get
            Return Me._NoticeTel
        End Get
        Set(value As String)
            If (String.Equals(Me._NoticeTel, value) = False) Then
                Me._NoticeTel = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmitDate", DbType:="DateTime")> _
    Public Property SubmitDate() As System.Nullable(Of Date)
        Get
            Return Me._SubmitDate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._SubmitDate.Equals(value) = False) Then
                Me._SubmitDate = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="VarChar(50)")> _
    Public Property AgentCode() As String
        Get
            Return Me._AgentCode
        End Get
        Set(value As String)
            If (String.Equals(Me._AgentCode, value) = False) Then
                Me._AgentCode = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dealer_Email", DbType:="NVarChar(255)")> _
    Public Property Dealer_Email() As String
        Get
            Return Me._Dealer_Email
        End Get
        Set(value As String)
            If (String.Equals(Me._Dealer_Email, value) = False) Then
                Me._Dealer_Email = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit NOT NULL")> _
    Public Property Status() As Boolean
        Get
            Return Me._Status
        End Get
        Set(value As Boolean)
            If ((Me._Status = value) _
                        = False) Then
                Me._Status = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeDate", DbType:="VarChar(10)")> _
    Public Property ClaimNoticeDate() As String
        Get
            Return Me._ClaimNoticeDate
        End Get
        Set(value As String)
            If (String.Equals(Me._ClaimNoticeDate, value) = False) Then
                Me._ClaimNoticeDate = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimNoticeTime", DbType:="VarChar(10)")> _
    Public Property ClaimNoticeTime() As String
        Get
            Return Me._ClaimNoticeTime
        End Get
        Set(value As String)
            If (String.Equals(Me._ClaimNoticeTime, value) = False) Then
                Me._ClaimNoticeTime = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarBrand", DbType:="VarChar(50)")> _
    Public Property CarBrand() As String
        Get
            Return Me._CarBrand
        End Get
        Set(value As String)
            If (String.Equals(Me._CarBrand, value) = False) Then
                Me._CarBrand = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarModel", DbType:="VarChar(100)")> _
    Public Property CarModel() As String
        Get
            Return Me._CarModel
        End Get
        Set(value As String)
            If (String.Equals(Me._CarModel, value) = False) Then
                Me._CarModel = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarYear", DbType:="VarChar(50)")> _
    Public Property CarYear() As String
        Get
            Return Me._CarYear
        End Get
        Set(value As String)
            If (String.Equals(Me._CarYear, value) = False) Then
                Me._CarYear = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverName", DbType:="VarChar(255)")> _
    Public Property DriverName() As String
        Get
            Return Me._DriverName
        End Get
        Set(value As String)
            If (String.Equals(Me._DriverName, value) = False) Then
                Me._DriverName = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DriverTel", DbType:="VarChar(100)")> _
    Public Property DriverTel() As String
        Get
            Return Me._DriverTel
        End Get
        Set(value As String)
            If (String.Equals(Me._DriverTel, value) = False) Then
                Me._DriverTel = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimDamageDetails", DbType:="VarChar(MAX)")> _
    Public Property ClaimDamageDetails() As String
        Get
            Return Me._ClaimDamageDetails
        End Get
        Set(value As String)
            If (String.Equals(Me._ClaimDamageDetails, value) = False) Then
                Me._ClaimDamageDetails = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimType", DbType:="VarChar(8) NOT NULL", CanBeNull:=False)> _
    Public Property ClaimType() As String
        Get
            Return Me._ClaimType
        End Get
        Set(value As String)
            If (String.Equals(Me._ClaimType, value) = False) Then
                Me._ClaimType = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimDetails", DbType:="VarChar(255)")> _
    Public Property ClaimDetails() As String
        Get
            Return Me._ClaimDetails
        End Get
        Set(value As String)
            If (String.Equals(Me._ClaimDetails, value) = False) Then
                Me._ClaimDetails = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimResult", DbType:="VarChar(10) NOT NULL", CanBeNull:=False)> _
    Public Property ClaimResult() As String
        Get
            Return Me._ClaimResult
        End Get
        Set(value As String)
            If (String.Equals(Me._ClaimResult, value) = False) Then
                Me._ClaimResult = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LaborAmt", DbType:="Float")> _
    Public Property LaborAmt() As System.Nullable(Of Double)
        Get
            Return Me._LaborAmt
        End Get
        Set(value As System.Nullable(Of Double))
            If (Me._LaborAmt.Equals(value) = False) Then
                Me._LaborAmt = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartsAmt", DbType:="Float")> _
    Public Property PartsAmt() As System.Nullable(Of Double)
        Get
            Return Me._PartsAmt
        End Get
        Set(value As System.Nullable(Of Double))
            If (Me._PartsAmt.Equals(value) = False) Then
                Me._PartsAmt = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OtherAmt", DbType:="Float")> _
    Public Property OtherAmt() As System.Nullable(Of Double)
        Get
            Return Me._OtherAmt
        End Get
        Set(value As System.Nullable(Of Double))
            If (Me._OtherAmt.Equals(value) = False) Then
                Me._OtherAmt = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageType", DbType:="VarChar(10) NOT NULL", CanBeNull:=False)> _
    Public Property GarageType() As String
        Get
            Return Me._GarageType
        End Get
        Set(value As String)
            If (String.Equals(Me._GarageType, value) = False) Then
                Me._GarageType = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GarageName", DbType:="VarChar(100)")> _
    Public Property GarageName() As String
        Get
            Return Me._GarageName
        End Get
        Set(value As String)
            If (String.Equals(Me._GarageName, value) = False) Then
                Me._GarageName = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GaragePlace", DbType:="VarChar(8000)")> _
    Public Property GaragePlace() As String
        Get
            Return Me._GaragePlace
        End Get
        Set(value As String)
            If (String.Equals(Me._GaragePlace, value) = False) Then
                Me._GaragePlace = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarRepairDate", DbType:="VarChar(10)")> _
    Public Property CarRepairDate() As String
        Get
            Return Me._CarRepairDate
        End Get
        Set(value As String)
            If (String.Equals(Me._CarRepairDate, value) = False) Then
                Me._CarRepairDate = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarReceiveDate", DbType:="VarChar(10)")> _
    Public Property CarReceiveDate() As String
        Get
            Return Me._CarReceiveDate
        End Get
        Set(value As String)
            If (String.Equals(Me._CarReceiveDate, value) = False) Then
                Me._CarReceiveDate = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConsentFormNo", DbType:="VarChar(50)")> _
    Public Property ConsentFormNo() As String
        Get
            Return Me._ConsentFormNo
        End Get
        Set(value As String)
            If (String.Equals(Me._ConsentFormNo, value) = False) Then
                Me._ConsentFormNo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartsDealerName", DbType:="VarChar(255)")> _
    Public Property PartsDealerName() As String
        Get
            Return Me._PartsDealerName
        End Get
        Set(value As String)
            If (String.Equals(Me._PartsDealerName, value) = False) Then
                Me._PartsDealerName = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentDetails", DbType:="VarChar(MAX)")> _
    Public Property PaymentDetails() As String
        Get
            Return Me._PaymentDetails
        End Get
        Set(value As String)
            If (String.Equals(Me._PaymentDetails, value) = False) Then
                Me._PaymentDetails = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClaimStatus", DbType:="VarChar(19) NOT NULL", CanBeNull:=False)> _
    Public Property ClaimStatus() As String
        Get
            Return Me._ClaimStatus
        End Get
        Set(value As String)
            If (String.Equals(Me._ClaimStatus, value) = False) Then
                Me._ClaimStatus = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsPost", DbType:="Bit NOT NULL")> _
    Public Property IsPost() As Boolean
        Get
            Return Me._IsPost
        End Get
        Set(value As Boolean)
            If ((Me._IsPost = value) _
                        = False) Then
                Me._IsPost = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostDate", DbType:="DateTime")> _
    Public Property PostDate() As System.Nullable(Of Date)
        Get
            Return Me._PostDate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._PostDate.Equals(value) = False) Then
                Me._PostDate = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="VarChar(255)")> _
    Public Property Remark() As String
        Get
            Return Me._Remark
        End Get
        Set(value As String)
            If (String.Equals(Me._Remark, value) = False) Then
                Me._Remark = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblDealer")> _
Partial Public Class tblDealer
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _AgentCode As Integer

    Private _DealerNameEN As String

    Private _DealerNameTH As String

    Private _Email As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAgentCodeChanging(value As Integer)
    End Sub
    Partial Private Sub OnAgentCodeChanged()
    End Sub
    Partial Private Sub OnDealerNameENChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameENChanged()
    End Sub
    Partial Private Sub OnDealerNameTHChanging(value As String)
    End Sub
    Partial Private Sub OnDealerNameTHChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgentCode", DbType:="Int NOT NULL", IsPrimaryKey:=True)> _
    Public Property AgentCode() As Integer
        Get
            Return Me._AgentCode
        End Get
        Set(value As Integer)
            If ((Me._AgentCode = value) _
                        = False) Then
                Me.OnAgentCodeChanging(value)
                Me.SendPropertyChanging()
                Me._AgentCode = value
                Me.SendPropertyChanged("AgentCode")
                Me.OnAgentCodeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerNameEN", DbType:="NVarChar(255)")> _
    Public Property DealerNameEN() As String
        Get
            Return Me._DealerNameEN
        End Get
        Set(value As String)
            If (String.Equals(Me._DealerNameEN, value) = False) Then
                Me.OnDealerNameENChanging(value)
                Me.SendPropertyChanging()
                Me._DealerNameEN = value
                Me.SendPropertyChanged("DealerNameEN")
                Me.OnDealerNameENChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DealerNameTH", DbType:="NVarChar(255)")> _
    Public Property DealerNameTH() As String
        Get
            Return Me._DealerNameTH
        End Get
        Set(value As String)
            If (String.Equals(Me._DealerNameTH, value) = False) Then
                Me.OnDealerNameTHChanging(value)
                Me.SendPropertyChanging()
                Me._DealerNameTH = value
                Me.SendPropertyChanged("DealerNameTH")
                Me.OnDealerNameTHChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(255)")> _
    Public Property Email() As String
        Get
            Return Me._Email
        End Get
        Set(value As String)
            If (String.Equals(Me._Email, value) = False) Then
                Me.OnEmailChanging(value)
                Me.SendPropertyChanging()
                Me._Email = value
                Me.SendPropertyChanged("Email")
                Me.OnEmailChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class
